Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Reindex to upgrade
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								Elasticsearch is able to use indices created in the previous major version only. For instance, Elasticsearch 5.x can use indices created in Elasticsearch 2.x, but not those created in Elasticsearch 1.x or before.
						Node:
						(type) c
						(layer)2
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								Elasticsearch 5.x nodes will fail to start in the presence of too old indices.
						Node:
						(type) c
						(layer)2
							Element:p
								If you are running an Elasticsearch 2.x cluster which contains indices that were created before 2.x, you will either need to delete those old indices or to reindex them before upgrading to 5.x. See
							Element:a
								Reindex in place
								.
						Node:
						(type) c
						(layer)2
							Element:p
								If you are running an Elasticsearch 1.x cluster, you have two options:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								First upgrade to Elasticsearch 2.4.x, reindex the old indices, then upgrade to 5.x. See
							Element:a
								Reindex in place
								.
							Element:li
								Create a new 5.x cluster and use reindex-from-remote to import indices directly from the 1.x cluster. See
							Element:a
								Upgrading with reindex-from-remote
								.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Time-based indices and retention periods
						Node:
						(type) c
						(layer)2
							Element:p
								For many use cases with time-based indices, you will not need to worry about carrying old 1.x indices with you to 5.x. Data in time-based indices usually becomes less interesting as time passes. Old indices can be deleted once they fall outside of your retention period.
						Node:
						(type) c
						(layer)2
							Element:p
								Users in this position can continue to use 2.x until all old 1.x indices have been deleted, then upgrade to 5.x directly.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Reindex in place
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The easiest way to reindex old (1.x) indices in place is to use the
										Element:a
											Elasticsearch Migration Plugin
											. You will need to upgrade to Elasticsearch 2.3.x or 2.4.x first.
									Node:
									(type) c
									(layer)3
										Element:p
											The reindex utility provided in the migration plugin does the following:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Creates a new index with the Elasticsearch version appended to the old index name (e.g.
										Element:code
											my_index-2.4.1
											), copying the mappings and settings from the old index. Refresh is disabled on the new index and the number of replicas is set to
										Element:code
											0
											for efficient reindexing.
										Element:li
											Sets the old index to read only to ensure that no data is written to the old index.
										Element:li
											Reindexes all documents from the old index to the new index.
										Element:li
											Resets the
										Element:code
											refresh_interval
											and
										Element:code
											number_of_replicas
											to the values used in the old index, and waits for the index to become green.
										Element:li
											Adds any aliases that existed on the old index to the new index.
										Element:li
											Deletes the old index.
										Element:li
											Adds an alias to the new index with the old index name, e.g. alias
										Element:code
											my_index
											points to index
										Element:code
											my_index-2.4.1
											.
									Node:
									(type) c
									(layer)3
										Element:p
											At the end of this process, you will have a new 2.x index which can be used by an Elasticsearch 5.x cluster.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Upgrading with reindex-from-remote
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											If you are running a 1.x cluster and would like to migrate directly to 5.x without first migrating to 2.x, you can do so using
										Element:a
											reindex-from-remote
											.
									Node:
									(type) c
									(layer)3
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											Elasticsearch includes backwards compatibility code that allows indices from the previous major version to be upgraded to the current major version. By moving directly from Elasticsearch 1.x to 5.x, you will have to solve any backwards compatibility issues yourself.
									Node:
									(type) c
									(layer)3
										Element:p
											You will need to set up a 5.x cluster alongside your existing 1.x cluster. The 5.x cluster needs to have access to the REST API of the 1.x cluster.
									Node:
									(type) c
									(layer)3
										Element:p
											For each 1.x index that you want to transfer to the 5.x cluster, you will need to:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Create a new index in 5.x with the appropriate mappings and settings. Set the
										Element:code
											refresh_interval
											to
										Element:code
											-1
											and set
										Element:code
											number_of_replicas
											to
										Element:code
											0
											for faster reindexing.
										Element:li
											Use
										Element:a
											reindex-from-remote
											to pull documents from the 1.x index into the new 5.x index.
										Element:li
											If you run the reindex job in the background (with
										Element:code
											wait_for_completion
											set to
										Element:code
											false
											), the reindex request will return a
										Element:code
											task_id
											which can be used to monitor progress of the reindex job in the
										Element:a
											task API
											:
										Element:code
											GET _tasks/TASK_ID
											.
										Element:li
											Once reindex has completed, set the
										Element:code
											refresh_interval
											and
										Element:code
											number_of_replicas
											to the desired values (the defaults are
										Element:code
											30s
											and
										Element:code
											1
											respectively).
										Element:li
											Once the new index has finished replication, you can delete the old index.
									Node:
									(type) c
									(layer)3
										Element:p
											The 5.x cluster can start out small, and you can gradually move nodes from the 1.x cluster to the 5.x cluster as you migrate indices across.
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											« Full cluster restart upgrade
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											Stopping Elasticsearch »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
