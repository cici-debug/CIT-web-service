Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Geo-point datatype
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								Fields of type
							Element:code
								geo_point
								accept latitude-longitude pairs, which can be used:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								to find geo-points within a
							Element:a
								bounding box
								, within a certain
							Element:a
								distance
								of a central point, or within a
							Element:a
								polygon
								.
							Element:li
								to aggregate documents by
							Element:a
								geographically
								or by
							Element:a
								distance
								from a central point.
							Element:li
								to integrate distance into a document’s
							Element:a
								relevance score
								.
							Element:li
								to
							Element:a
								sort
								documents by distance.
						Node:
						(type) c
						(layer)2
							Element:p
								There are four ways that a geo-point may be specified, as demonstrated below:
						Node:
						(type) c
						(layer)2
							Element:pre
								PUT my_index { "mappings": { "my_type": { "properties": { "location": { "type": "geo_point" } } } } } PUT my_index/my_type/1 { "text": "Geo-point as an object", "location": {
							Element:a
							Element:span
								"lat": 41.12, "lon": -71.34 } } PUT my_index/my_type/2 { "text": "Geo-point as a string", "location": "41.12,-71.34"
							Element:img
							Element:a
							Element:span
								} PUT my_index/my_type/3 { "text": "Geo-point as a geohash", "location": "drm3btev3e86"
							Element:img
							Element:a
							Element:span
								} PUT my_index/my_type/4 { "text": "Geo-point as an array", "location": [ -71.34, 41.12 ]
							Element:img
							Element:a
							Element:span
								} GET my_index/_search { "query": { "geo_bounding_box": {
							Element:img
							Element:a
							Element:span
								"location": { "top_left": { "lat": 42, "lon": -72 }, "bottom_right": { "lat": 40, "lon": -74 } } } } }
							Element:img
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								Geo-point expressed as an object, with
							Element:code
								lat
								and
							Element:code
								lon
								keys.
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								Geo-point expressed as a string with the format:
							Element:code
								"lat,lon"
								.
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								Geo-point expressed as a geohash.
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								Geo-point expressed as an array with the format: [
							Element:code
								lon
								,
							Element:code
								lat
								]
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								A geo-bounding box query which finds all geo-points that fall inside the box.
						Node:
						(type) c
						(layer)2
							Element:img
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Geo-points expressed as an array or string
									Node:
									(type) c
									(layer)3
										Element:p
											Please note that string geo-points are ordered as
										Element:code
											lat,lon
											, while array geo-points are ordered as the reverse:
										Element:code
											lon,lat
											.
									Node:
									(type) c
									(layer)3
										Element:p
											Originally,
										Element:code
											lat,lon
											was used for both array and string, but the array format was changed early on to conform to the format used by GeoJSON.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Parameters for
										Element:code
											geo_point
											fields
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The following parameters are accepted by
										Element:code
											geo_point
											fields:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:tbody
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:code
											ignore_malformed
										Element:td
										Element:p
											If
										Element:code
											true
											, malformed geo-points are ignored. If
										Element:code
											false
											(default), malformed geo-points throw an exception and reject the whole document.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Using geo-points in scripts
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											When accessing the value of a geo-point in a script, the value is returned as a
										Element:code
											GeoPoint
											object, which allows access to the
										Element:code
											.lat
											and
										Element:code
											.lon
											values respectively:
									Node:
									(type) c
									(layer)3
										Element:pre
											geopoint = doc['location'].value; lat = geopoint.lat; lon = geopoint.lon;
									Node:
									(type) c
									(layer)3
										Element:p
											For performance reasons, it is better to access the lat/lon values directly:
									Node:
									(type) c
									(layer)3
										Element:pre
											lat = doc['location'].lat; lon = doc['location'].lon;
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											« Date datatype
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											Geo-Shape datatype »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
