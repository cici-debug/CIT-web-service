Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Painless Debugging
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:img
								The Painless scripting language is new and is still marked as experimental. The syntax or API may be changed in the future in non-backwards compatible ways if required.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Debug.Explain
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											Painless doesn’t have a
										Element:a
											REPL
											and while it’d be nice for it to have one one day, it wouldn’t tell you the whole story around debugging painless scripts embedded in Elasticsearch because the data that the scripts have access to or "context" is so important. For now the best way to debug embedded scripts is by throwing exceptions at choice places. While you can throw your own exceptions (
										Element:code
											throw new Exception('whatever')
											), Painless’s sandbox prevents you from accessing useful information like the type of an object. So Painless has a utility method,
										Element:code
											Debug.explain
											which throws the exception for you. For example, you can use the
										Element:a
											to explore the context available to a
										Element:em
											Explain API
										Element:a
											Script Query
											.
									Node:
									(type) c
									(layer)3
										Element:pre
											PUT /hockey/player/1?refresh {"first":"johnny","last":"gaudreau","goals":[9,27,1],"assists":[17,46,0],"gp":[26,82,1]} POST /hockey/player/1/_explain { "query": { "script": { "script": "Debug.explain(doc.goals)" } } }
									Node:
									(type) c
									(layer)3
										Element:p
											Which shows that the class of
										Element:code
											doc.first
											is
										Element:code
											org.elasticsearch.index.fielddata.ScriptDocValues$Longs
											by responding with:
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "error": { "type": "script_exception", "class": "org.elasticsearch.index.fielddata.ScriptDocValues$Longs", "to_string": "[1, 9, 27]", ... }, "status": 500 }
									Node:
									(type) c
									(layer)3
										Element:p
											You can use the same trick to see that
										Element:code
											_source
											is a
										Element:code
											java.util.LinkedHashMap
											in the
										Element:code
											_update
											API:
									Node:
									(type) c
									(layer)3
										Element:pre
											POST /hockey/player/1/_update { "script": "Debug.explain(ctx._source)" }
									Node:
									(type) c
									(layer)3
										Element:p
											The response looks like:
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "error" : { "root_cause": ..., "type": "illegal_argument_exception", "reason": "failed to execute script", "caused_by": { "type": "script_exception", "class": "java.util.LinkedHashMap", "to_string": "{gp=[26, 82, 1], last=gaudreau, assists=[17, 46, 0], first=johnny, goals=[9, 27, 1]}", ... } }, "status": 400 }
									Node:
									(type) c
									(layer)3
										Element:p
											Once you have the class of an object you can go
										Element:a
											here
											and check the available methods. Painless uses a strict whitelist to prevent scripts that don’t work well with Elasticsearch and all whitelisted methods are listed in a file named after the package of the object (everything before the last
										Element:code
											.
											). So
										Element:code
											java.util.Map
											is listed in a file named
										Element:code
											java.util.txt
											starting on the line that looks like
										Element:code
											class Map -> java.util.Map {
											.
									Node:
									(type) c
									(layer)3
										Element:p
											With the list of whitelisted methods in hand you can turn to either
										Element:a
											Javadoc
											,
										Element:a
											Elasticsearch’s source tree
											or, for whitelisted methods ending in
										Element:code
											*
											, the
										Element:a
											Augmentation
											class.
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											« Painless Syntax
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											Lucene Expressions Language »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
