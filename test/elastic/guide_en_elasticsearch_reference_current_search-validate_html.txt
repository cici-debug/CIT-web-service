Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Validate API
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								The validate API allows a user to validate a potentially expensive query without executing it. We’ll use the following test data to explain _validate:
						Node:
						(type) c
						(layer)2
							Element:pre
								PUT twitter/tweet/_bulk?refresh {"index":{"_id":1}} {"user" : "kimchy", "post_date" : "2009-11-15T14:12:12", "message" : "trying out Elasticsearch"} {"index":{"_id":2}} {"user" : "kimchi", "post_date" : "2009-11-15T14:12:13", "message" : "My username is similar to @kimchy!"}
						Node:
						(type) c
						(layer)2
							Element:p
								When sent a valid query:
						Node:
						(type) c
						(layer)2
							Element:pre
								GET twitter/_validate/query?q=user:foo
						Node:
						(type) c
						(layer)2
							Element:p
								The response contains
							Element:code
								valid:true
								:
						Node:
						(type) c
						(layer)2
							Element:pre
								{"valid":true,"_shards":{"total":1,"successful":1,"failed":0}}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Request Parameters
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											When executing exists using the query parameter
										Element:code
											q
											, the query passed is a query string using Lucene query parser. There are additional parameters that can be passed:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:p
										Element:code
											df
										Element:td
										Element:p
											The default field to use when no field prefix is defined within the query.
										Element:tr
										Element:td
										Element:p
										Element:code
											analyzer
										Element:td
										Element:p
											The analyzer name to be used when analyzing the query string.
										Element:tr
										Element:td
										Element:p
										Element:code
											default_operator
										Element:td
										Element:p
											The default operator to be used, can be
										Element:code
											AND
											or
										Element:code
											OR
											. Defaults to
										Element:code
											OR
											.
										Element:tr
										Element:td
										Element:p
										Element:code
											lenient
										Element:td
										Element:p
											If set to true will cause format based failures (like providing text to a numeric field) to be ignored. Defaults to false.
										Element:tr
										Element:td
										Element:p
										Element:code
											analyze_wildcard
										Element:td
										Element:p
											Should wildcard and prefix queries be analyzed or not. Defaults to
										Element:code
											false
											.
									Node:
									(type) c
									(layer)3
										Element:p
											The query may also be sent in the request body:
									Node:
									(type) c
									(layer)3
										Element:pre
											GET twitter/tweet/_validate/query { "query" : { "bool" : { "must" : { "query_string" : { "query" : "*:*" } }, "filter" : { "term" : { "user" : "kimchy" } } } } }
									Node:
									(type) c
									(layer)3
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											The query being sent in the body must be nested in a
										Element:code
											query
											key, same as the
										Element:a
											search api
											works
									Node:
									(type) c
									(layer)3
										Element:p
											If the query is invalid,
										Element:code
											valid
											will be
										Element:code
											false
											. Here the query is invalid because Elasticsearch knows the post_date field should be a date due to dynamic mapping, and
										Element:span
											does not correctly parse into a date:
										Element:em
											foo
									Node:
									(type) c
									(layer)3
										Element:pre
											GET twitter/tweet/_validate/query?q=post_date:foo
									Node:
									(type) c
									(layer)3
										Element:pre
											{"valid":false,"_shards":{"total":1,"successful":1,"failed":0}}
									Node:
									(type) c
									(layer)3
										Element:p
											An
										Element:code
											explain
											parameter can be specified to get more detailed information about why a query failed:
									Node:
									(type) c
									(layer)3
										Element:pre
											GET twitter/tweet/_validate/query?q=post_date:foo&explain=true
									Node:
									(type) c
									(layer)3
										Element:p
											responds with:
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "valid" : false, "_shards" : { "total" : 1, "successful" : 1, "failed" : 0 }, "explanations" : [ { "index" : "twitter", "valid" : false, "error" : "twitter/IAEc2nIXSSunQA_suI0MLw] QueryShardException[failed to create query:...failed to parse date field [foo]" } ] }
									Node:
									(type) c
									(layer)3
										Element:p
											When the query is valid, the explanation defaults to the string representation of that query. With
										Element:code
											rewrite
											set to
										Element:code
											true
											, the explanation is more detailed showing the actual Lucene query that will be executed.
									Node:
									(type) c
									(layer)3
										Element:p
											For Fuzzy Queries:
									Node:
									(type) c
									(layer)3
										Element:pre
											GET twitter/tweet/_validate/query?rewrite=true { "query": { "match": { "user": { "query": "kimchy", "fuzziness": "auto" } } } }
									Node:
									(type) c
									(layer)3
										Element:p
											Response:
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "valid": true, "_shards": { "total": 1, "successful": 1, "failed": 0 }, "explanations": [ { "index": "twitter", "valid": true, "explanation": "+user:kimchy +user:kimchi^0.75 #(ConstantScore(_type:tweet))^0.0" } ] }
									Node:
									(type) c
									(layer)3
										Element:p
											For More Like This:
									Node:
									(type) c
									(layer)3
										Element:pre
											GET twitter/tweet/_validate/query?rewrite=true { "query": { "more_like_this": { "like": { "_id": "2" }, "boost_terms": 1 } } }
									Node:
									(type) c
									(layer)3
										Element:p
											Response:
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "valid": true, "_shards": { "total": 1, "successful": 1, "failed": 0 }, "explanations": [ { "index": "twitter", "valid": true, "explanation": "((user:terminator^3.71334 plot:future^2.763601 plot:human^2.8415773 plot:sarah^3.4193945 plot:kyle^3.8244398 plot:cyborg^3.9177752 plot:connor^4.040236 plot:reese^4.7133346 ... )~6) -ConstantScore(_uid:tweet#2)) #(ConstantScore(_type:tweet))^0.0" } ] }
									Node:
									(type) c
									(layer)3
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											The request is executed on a single shard only, which is randomly selected. The detailed explanation of the query may depend on which shard is being hit, and therefore may vary from one request to another.
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											« Count API
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											Explain API »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
