Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Disable swapping
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								Most operating systems try to use as much memory as possible for file system caches and eagerly swap out unused application memory. This can result in parts of the JVM heap being swapped out to disk.
						Node:
						(type) c
						(layer)2
							Element:p
								Swapping is very bad for performance and for node stability and should be avoided at all costs. It can cause garbage collections to last for
							Element:span
								instead of milliseconds and can cause nodes to respond slowly or even to disconnect from the cluster.
							Element:strong
								minutes
						Node:
						(type) c
						(layer)2
							Element:p
								There are three approaches to disabling swapping:
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Enable
										Element:code
											bootstrap.memory_lock
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The first option is to use
										Element:a
											mlockall
											on Linux/Unix systems, or
										Element:a
											VirtualLock
											on Windows, to try to lock the process address space into RAM, preventing any Elasticsearch memory from being swapped out. This can be done, by adding this line to the
										Element:code
											config/elasticsearch.yml
											file:
									Node:
									(type) c
									(layer)3
										Element:pre
											bootstrap.memory_lock: true
									Node:
									(type) c
									(layer)3
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
										Element:code
											mlockall
											might cause the JVM or shell session to exit if it tries to allocate more memory than is available!
									Node:
									(type) c
									(layer)3
										Element:p
											After starting Elasticsearch, you can see whether this setting was applied successfully by checking the value of
										Element:code
											mlockall
											in the output from this request:
									Node:
									(type) c
									(layer)3
										Element:pre
											GET _nodes?filter_path=**.mlockall
									Node:
									(type) c
									(layer)3
										Element:p
											If you see that
										Element:code
											mlockall
											is
										Element:code
											false
											, then it means that the
										Element:code
											mlockall
											request has failed. You will also see a line with more information in the logs with the words
										Element:code
											Unable to lock JVM Memory
											.
									Node:
									(type) c
									(layer)3
										Element:p
											The most probable reason, on Linux/Unix systems, is that the user running Elasticsearch doesn’t have permission to lock memory. This can be granted as follows:
									Node:
									(type) c
									(layer)3
										Element:dl
										Element:dt
										Element:span
										Element:code
											.zip
											and
										Element:code
											.tar.gz
										Element:dd
											Set
										Element:a
											as root before starting Elasticsearch, or set
										Element:code
											ulimit -l unlimited
										Element:code
											memlock
											to
										Element:code
											unlimited
											in
										Element:a
											.
										Element:code
											/etc/security/limits.conf
										Element:dt
										Element:span
											RPM and Debian
										Element:dd
											Set
										Element:code
											MAX_LOCKED_MEMORY
											to
										Element:code
											unlimited
											in the
										Element:a
											system configuration file
											(or see below for systems using
										Element:code
											systemd
											).
										Element:dt
										Element:span
											Systems using
										Element:code
											systemd
										Element:dd
											Set
										Element:code
											LimitMEMLOCK
											to
										Element:code
											infinity
											in the
										Element:a
											systemd configuration
											.
									Node:
									(type) c
									(layer)3
										Element:p
											Another possible reason why
										Element:code
											mlockall
											can fail is that the temporary directory (usually
										Element:code
											/tmp
											) is mounted with the
										Element:code
											noexec
											option. This can be solved by specifying a new temp directory using the
										Element:code
											ES_JAVA_OPTS
											environment variable:
									Node:
									(type) c
									(layer)3
										Element:pre
											export ES_JAVA_OPTS="$ES_JAVA_OPTS -Djava.io.tmpdir=/path/to/temp/dir" ./bin/elasticsearch
									Node:
									(type) c
									(layer)3
										Element:p
											or setting this JVM flag in the jvm.options configuration file.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Disable all swap files
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The second option is to completely disable swap. Usually Elasticsearch is the only service running on a box, and its memory usage is controlled by the JVM options. There should be no need to have swap enabled.
									Node:
									(type) c
									(layer)3
										Element:p
											On Linux systems, you can disable swap temporarily by running:
										Element:code
											sudo swapoff -a
											. To disable it permanently, you will need to edit the
										Element:code
											/etc/fstab
											file and comment out any lines that contain the word
										Element:code
											swap
											.
									Node:
									(type) c
									(layer)3
										Element:p
											On Windows, the equivalent can be achieved by disabling the paging file entirely via
										Element:code
											System Properties → Advanced → Performance → Advanced → Virtual memory
											.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Configure
										Element:code
											swappiness
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											Another option available on Linux systems is to ensure that the sysctl value
										Element:code
											vm.swappiness
											is set to
										Element:code
											1
											. This reduces the kernel’s tendency to swap and should not lead to swapping under normal circumstances, while still allowing the whole system to swap in emergency conditions.
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											« Set JVM heap size via jvm.options
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											File Descriptors »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
