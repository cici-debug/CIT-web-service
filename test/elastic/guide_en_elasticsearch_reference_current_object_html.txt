Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Object datatype
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								JSON documents are hierarchical in nature: the document may contain inner objects which, in turn, may contain inner objects themselves:
						Node:
						(type) c
						(layer)2
							Element:pre
								PUT my_index/my_type/1 {
							Element:a
							Element:span
								"region": "US", "manager": {
							Element:img
							Element:a
							Element:span
								"age": 30, "name": {
							Element:img
							Element:a
							Element:span
								"first": "John", "last": "Smith" } } }
							Element:img
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								The outer document is also a JSON object.
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								It contains an inner object called
							Element:code
								manager
								.
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								Which in turn contains an inner object called
							Element:code
								name
								.
						Node:
						(type) c
						(layer)2
							Element:p
								Internally, this document is indexed as a simple, flat list of key-value pairs, something like this:
						Node:
						(type) c
						(layer)2
							Element:pre
								{ "region": "US", "manager.age": 30, "manager.name.first": "John", "manager.name.last": "Smith" }
						Node:
						(type) c
						(layer)2
							Element:p
								An explicit mapping for the above document could look like this:
						Node:
						(type) c
						(layer)2
							Element:pre
								PUT my_index { "mappings": { "my_type": {
							Element:a
							Element:span
								"properties": { "region": { "type": "keyword" }, "manager": {
							Element:img
							Element:a
							Element:span
								"properties": { "age": { "type": "integer" }, "name": {
							Element:img
							Element:a
							Element:span
								"properties": { "first": { "type": "text" }, "last": { "type": "text" } } } } } } } } }
							Element:img
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								The mapping type is a type of object, and has a
							Element:code
								properties
								field.
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								The
							Element:code
								manager
								field is an inner
							Element:code
								object
								field.
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								The
							Element:code
								manager.name
								field is an inner
							Element:code
								object
								field within the
							Element:code
								manager
								field.
						Node:
						(type) c
						(layer)2
							Element:p
								You are not required to set the field
							Element:code
								type
								to
							Element:code
								object
								explicitly, as this is the default value.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Parameters for
										Element:code
											object
											fields
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The following parameters are accepted by
										Element:code
											object
											fields:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:tbody
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:code
											dynamic
										Element:td
										Element:p
											Whether or not new
										Element:code
											properties
											should be added dynamically to an existing object. Accepts
										Element:code
											true
											(default),
										Element:code
											false
											and
										Element:code
											strict
											.
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:code
											enabled
										Element:td
										Element:p
											Whether the JSON value given for the object field should be parsed and indexed (
										Element:code
											true
											, default) or completely ignored (
										Element:code
											false
											).
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:code
											include_in_all
										Element:td
										Element:p
											Sets the default
										Element:code
											include_in_all
											value for all the
										Element:code
											properties
											within the object. The object itself is not added to the
										Element:code
											_all
											field.
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:code
											properties
										Element:td
										Element:p
											The fields within the object, which can be of any
										Element:a
											datatype
											, including
										Element:code
											object
											. New properties may be added to an existing object.
									Node:
									(type) c
									(layer)3
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											If you need to index arrays of objects instead of single objects, read
										Element:a
											Nested datatype
											first.
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											« Numeric datatypes
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											String datatype »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
