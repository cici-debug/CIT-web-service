Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Translog
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								Changes to Lucene are only persisted to disk during a Lucene commit, which is a relatively heavy operation and so cannot be performed after every index or delete operation. Changes that happen after one commit and before another will be lost in the event of process exit or HW failure.
						Node:
						(type) c
						(layer)2
							Element:p
								To prevent this data loss, each shard has a
							Element:span
								or write ahead log associated with it. Any index or delete operation is written to the translog after being processed by the internal Lucene index.
							Element:em
								transaction log
						Node:
						(type) c
						(layer)2
							Element:p
								In the event of a crash, recent transactions can be replayed from the transaction log when the shard recovers.
						Node:
						(type) c
						(layer)2
							Element:p
								An Elasticsearch flush is the process of performing a Lucene commit and starting a new translog. It is done automatically in the background in order to make sure the transaction log doesn’t grow too large, which would make replaying its operations take a considerable amount of time during recovery. It is also exposed through an API, though its rarely needed to be performed manually.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Flush settings
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The following
										Element:a
											dynamically updatable
											settings control how often the in-memory buffer is flushed to disk:
									Node:
									(type) c
									(layer)3
										Element:dl
										Element:dt
										Element:span
										Element:code
											index.translog.flush_threshold_size
										Element:dd
											Once the translog hits this size, a flush will happen. Defaults to
										Element:code
											512mb
											.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Translog settings
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The data in the transaction log is only persisted to disk when the translog is
										Element:code
											fsync
											ed and committed. In the event of hardware failure, any data written since the previous translog commit will be lost.
									Node:
									(type) c
									(layer)3
										Element:p
											By default, Elasticsearch
										Element:code
											fsync
											s and commits the translog every 5 seconds if
										Element:code
											index.translog.durability
											is set to
										Element:code
											async
											or if set to
										Element:code
											request
											(default) at the end of every
										Element:a
											index
											,
										Element:a
											delete
											,
										Element:a
											update
											, or
										Element:a
											bulk
											request. In fact, Elasticsearch will only report success of an index, delete, update, or bulk request to the client after the transaction log has been successfully
										Element:code
											fsync
											ed and committed on the primary and on every allocated replica.
									Node:
									(type) c
									(layer)3
										Element:p
											The following
										Element:a
											dynamically updatable
											per-index settings control the behaviour of the transaction log:
									Node:
									(type) c
									(layer)3
										Element:dl
										Element:dt
										Element:span
										Element:code
											index.translog.sync_interval
										Element:dd
											How often the translog is
										Element:code
											fsync
											ed to disk and committed, regardless of write operations. Defaults to
										Element:code
											5s
											. Values less than
										Element:code
											100ms
											are not allowed.
										Element:dt
										Element:span
										Element:code
											index.translog.durability
										Element:dd
										Element:p
											Whether or not to
										Element:code
											fsync
											and commit the translog after every index, delete, update, or bulk request. This setting accepts the following parameters:
										Element:dl
										Element:dt
										Element:span
										Element:code
											request
										Element:dd
											(default)
										Element:code
											fsync
											and commit after every request. In the event of hardware failure, all acknowledged writes will already have been committed to disk.
										Element:dt
										Element:span
										Element:code
											async
										Element:dd
										Element:code
											fsync
											and commit in the background every
										Element:code
											sync_interval
											. In the event of hardware failure, all acknowledged writes since the last automatic commit will be discarded.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											What to do if the translog becomes corrupted?
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											In some cases (a bad drive, user error) the translog can become corrupted. When this corruption is detected by Elasticsearch due to mismatching checksums, Elasticsearch will fail the shard and refuse to allocate that copy of the data to the node, recovering from a replica if available.
									Node:
									(type) c
									(layer)3
										Element:p
											If there is no copy of the data from which Elasticsearch can recover successfully, a user may want to recover the data that is part of the shard at the cost of losing the data that is currently contained in the translog. We provide a command-line tool for this,
										Element:code
											elasticsearch-translog
											.
									Node:
									(type) c
									(layer)3
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											The
										Element:code
											elasticsearch-translog
											tool should
										Element:span
											be run while Elasticsearch is running, and you will permanently lose the documents that were contained only in the translog!
										Element:strong
											not
									Node:
									(type) c
									(layer)3
										Element:p
											In order to run the
										Element:code
											elasticsearch-translog
											tool, specify the
										Element:code
											truncate
											subcommand as well as the directory for the corrupted translog with the
										Element:code
											-d
											option:
									Node:
									(type) c
									(layer)3
										Element:pre
											$ bin/elasticsearch-translog truncate -d /var/lib/elasticsearchdata/nodes/0/indices/P45vf_YQRhqjfwLMUvSqDw/0/translog/ Checking existing translog files !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ! WARNING: Elasticsearch MUST be stopped before running this tool ! ! ! ! WARNING: Documents inside of translog files will be lost ! ! ! ! WARNING: The following files will be DELETED! ! !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! --> data/nodes/0/indices/P45vf_YQRhqjfwLMUvSqDw/0/translog/translog-41.ckp --> data/nodes/0/indices/P45vf_YQRhqjfwLMUvSqDw/0/translog/translog-6.ckp --> data/nodes/0/indices/P45vf_YQRhqjfwLMUvSqDw/0/translog/translog-37.ckp --> data/nodes/0/indices/P45vf_YQRhqjfwLMUvSqDw/0/translog/translog-24.ckp --> data/nodes/0/indices/P45vf_YQRhqjfwLMUvSqDw/0/translog/translog-11.ckp Continue and DELETE files? [y/N] y Reading translog UUID information from Lucene commit from shard at [data/nodes/0/indices/P45vf_YQRhqjfwLMUvSqDw/0/index] Translog Generation: 3 Translog UUID : AxqC4rocTC6e0fwsljAh-Q Removing existing translog files Creating new empty checkpoint at [data/nodes/0/indices/P45vf_YQRhqjfwLMUvSqDw/0/translog/translog.ckp] Creating new empty translog at [data/nodes/0/indices/P45vf_YQRhqjfwLMUvSqDw/0/translog/translog-3.tlog] Done.
									Node:
									(type) c
									(layer)3
										Element:p
											You can also use the
										Element:code
											-h
											option to get a list of all options and parameters that the
										Element:code
											elasticsearch-translog
											tool supports.
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											« Pre-loading data into the file system cache
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											Ingest Node »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
