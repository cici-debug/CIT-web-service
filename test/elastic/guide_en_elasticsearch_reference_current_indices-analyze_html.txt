Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Analyze
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								Performs the analysis process on a text and return the tokens breakdown of the text.
						Node:
						(type) c
						(layer)2
							Element:p
								Can be used without specifying an index against one of the many built in analyzers:
						Node:
						(type) c
						(layer)2
							Element:pre
								curl -XGET 'localhost:9200/_analyze' -d ' { "analyzer" : "standard", "text" : "this is a test" }'
						Node:
						(type) c
						(layer)2
							Element:p
								If text parameter is provided as array of strings, it is analyzed as a multi-valued field.
						Node:
						(type) c
						(layer)2
							Element:pre
								curl -XGET 'localhost:9200/_analyze' -d ' { "analyzer" : "standard", "text" : ["this is a test", "the second text"] }'
						Node:
						(type) c
						(layer)2
							Element:p
								Or by building a custom transient analyzer out of tokenizers, token filters and char filters. Token filters can use the shorter
							Element:span
								parameter name:
							Element:em
								filter
						Node:
						(type) c
						(layer)2
							Element:pre
								curl -XGET 'localhost:9200/_analyze' -d ' { "tokenizer" : "keyword", "filter" : ["lowercase"], "text" : "this is a test" }' curl -XGET 'localhost:9200/_analyze' -d ' { "tokenizer" : "keyword", "filter" : ["lowercase"], "char_filter" : ["html_strip"], "text" : "this is a <b>test</b>" }'
						Node:
						(type) c
						(layer)2
							Element:img
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Deprecated in 5.0.0.
											Use filter/char_filter instead of filters/char_filters and token_filters has been removed
									Node:
									(type) c
									(layer)3
										Element:p
											Custom tokenizers, token filters, and character filters can be specified in the request body as follows:
									Node:
									(type) c
									(layer)3
										Element:pre
											curl -XGET 'localhost:9200/_analyze' -d ' { "tokenizer" : "whitespace", "filter" : ["lowercase", {"type": "stop", "stopwords": ["a", "is", "this"]}], "text" : "this is a test" }'
									Node:
									(type) c
									(layer)3
										Element:p
											It can also run against a specific index:
									Node:
									(type) c
									(layer)3
										Element:pre
											curl -XGET 'localhost:9200/test/_analyze' -d ' { "text" : "this is a test" }'
									Node:
									(type) c
									(layer)3
										Element:p
											The above will run an analysis on the "this is a test" text, using the default index analyzer associated with the
										Element:code
											test
											index. An
										Element:code
											analyzer
											can also be provided to use a different analyzer:
									Node:
									(type) c
									(layer)3
										Element:pre
											curl -XGET 'localhost:9200/test/_analyze' -d ' { "analyzer" : "whitespace", "text" : "this is a test" }'
									Node:
									(type) c
									(layer)3
										Element:p
											Also, the analyzer can be derived based on a field mapping, for example:
									Node:
									(type) c
									(layer)3
										Element:pre
											curl -XGET 'localhost:9200/test/_analyze' -d ' { "field" : "obj1.field1", "text" : "this is a test" }'
									Node:
									(type) c
									(layer)3
										Element:p
											Will cause the analysis to happen based on the analyzer configured in the mapping for
										Element:code
											obj1.field1
											(and if not, the default index analyzer).
									Node:
									(type) c
									(layer)3
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											Deprecated in 5.1.0 request parameters are deprecated and will be removed in the next major release. please use JSON params instead of request params.
									Node:
									(type) c
									(layer)3
										Element:p
											All parameters can also supplied as request parameters. For example:
									Node:
									(type) c
									(layer)3
										Element:pre
											curl -XGET 'localhost:9200/_analyze?tokenizer=keyword&filter=lowercase&text=this+is+a+test'
									Node:
									(type) c
									(layer)3
										Element:p
											For backwards compatibility, we also accept the text parameter as the body of the request, provided it doesn’t start with
										Element:code
											{
											:
									Node:
									(type) c
									(layer)3
										Element:pre
											curl -XGET 'localhost:9200/_analyze?tokenizer=keyword&filter=lowercase&char_filter=html_strip' -d 'this is a <b>test</b>'
									Node:
									(type) c
									(layer)3
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											Deprecated in 5.1.0 the text parameter as the body of the request are deprecated and this feature will be removed in the next major release. please use JSON text param.
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											« Get Settings
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											Explain Analyze »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
