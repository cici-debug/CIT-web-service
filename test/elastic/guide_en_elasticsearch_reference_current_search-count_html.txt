Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Count API
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								The count API allows to easily execute a query and get the number of matches for that query. It can be executed across one or more indices and across one or more types. The query can either be provided using a simple query string as a parameter, or using the
							Element:a
								Query DSL
								defined within the request body. Here is an example:
						Node:
						(type) c
						(layer)2
							Element:pre
								PUT /twitter/tweet/1?refresh { "user": "kimchy" } GET /twitter/tweet/_count?q=user:kimchy GET /twitter/tweet/_count { "query" : { "term" : { "user" : "kimchy" } } }
						Node:
						(type) c
						(layer)2
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								The query being sent in the body must be nested in a
							Element:code
								query
								key, same as the
							Element:a
								search api
								works
						Node:
						(type) c
						(layer)2
							Element:p
								Both examples above do the same thing, which is count the number of tweets from the twitter index for a certain user. The result is:
						Node:
						(type) c
						(layer)2
							Element:pre
								{ "count" : 1, "_shards" : { "total" : 5, "successful" : 5, "failed" : 0 } }
						Node:
						(type) c
						(layer)2
							Element:p
								The query is optional, and when not provided, it will use
							Element:code
								match_all
								to count all the docs.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Multi index, Multi type
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The count API can be applied to
										Element:a
											multiple types in multiple indices
											.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Request Parameters
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											When executing count using the query parameter
										Element:code
											q
											, the query passed is a query string using Lucene query parser. There are additional parameters that can be passed:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:p
										Element:code
											df
										Element:td
										Element:p
											The default field to use when no field prefix is defined within the query.
										Element:tr
										Element:td
										Element:p
										Element:code
											analyzer
										Element:td
										Element:p
											The analyzer name to be used when analyzing the query string.
										Element:tr
										Element:td
										Element:p
										Element:code
											default_operator
										Element:td
										Element:p
											The default operator to be used, can be
										Element:code
											AND
											or
										Element:code
											OR
											. Defaults to
										Element:code
											OR
											.
										Element:tr
										Element:td
										Element:p
										Element:code
											lenient
										Element:td
										Element:p
											If set to true will cause format based failures (like providing text to a numeric field) to be ignored. Defaults to false.
										Element:tr
										Element:td
										Element:p
										Element:code
											analyze_wildcard
										Element:td
										Element:p
											Should wildcard and prefix queries be analyzed or not. Defaults to
										Element:code
											false
											.
										Element:tr
										Element:td
										Element:p
										Element:code
											terminate_after
										Element:td
										Element:p
											The maximum count for each shard, upon reaching which the query execution will terminate early. If set, the response will have a boolean field
										Element:code
											terminated_early
											to indicate whether the query execution has actually terminated_early. Defaults to no terminate_after.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Request Body
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The count can use the
										Element:a
											Query DSL
											within its body in order to express the query that should be executed. The body content can also be passed as a REST parameter named
										Element:code
											source
											.
									Node:
									(type) c
									(layer)3
										Element:p
											Both HTTP GET and HTTP POST can be used to execute count with body. Since not all clients support GET with body, POST is allowed as well.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Distributed
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The count operation is broadcast across all shards. For each shard id group, a replica is chosen and executed against it. This means that replicas increase the scalability of count.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Routing
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The routing value (a comma separated list of the routing values) can be specified to control which shards the count request will be executed on.
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											« Multi Search API
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											Validate API »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
