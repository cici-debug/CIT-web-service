Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Configuring Elasticsearch
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								Elasticsearch ships with good defaults and requires very little configuration. Most settings can be changed on a running cluster using the
							Element:a
								API.
							Element:em
								Cluster Update Settings
						Node:
						(type) c
						(layer)2
							Element:p
								The configuration files should contain settings which are node-specific (such as
							Element:code
								node.name
								and paths), or settings which a node requires in order to be able to join a cluster, such as
							Element:code
								cluster.name
								and
							Element:code
								network.host
								.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Config file location
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											Elasticsearch has two configuration files:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:code
											elasticsearch.yml
											for configuring Elasticsearch, and
										Element:li
										Element:code
											log4j2.properties
											for configuring Elasticsearch logging.
									Node:
									(type) c
									(layer)3
										Element:p
											These files are located in the config directory, whose location defaults to
										Element:code
											$ES_HOME/config/
											. The Debian and RPM packages set the config directory location to
										Element:code
											/etc/elasticsearch/
											.
									Node:
									(type) c
									(layer)3
										Element:p
											The location of the config directory can be changed with the
										Element:code
											path.conf
											setting, as follows:
									Node:
									(type) c
									(layer)3
										Element:pre
											./bin/elasticsearch -Epath.conf=/path/to/my/config/
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Config file format
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The configuration format is
										Element:a
											YAML
											. Here is an example of changing the path of the data and logs directories:
									Node:
									(type) c
									(layer)3
										Element:pre
											path: data: /var/lib/elasticsearch logs: /var/log/elasticsearch
									Node:
									(type) c
									(layer)3
										Element:p
											Settings can also be flattened as follows:
									Node:
									(type) c
									(layer)3
										Element:pre
											path.data: /var/lib/elasticsearch path.logs: /var/log/elasticsearch
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Environment variable subsitution
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											Environment variables referenced with the
										Element:code
											${...}
											notation within the configuration file will be replaced with the value of the environment variable, for instance:
									Node:
									(type) c
									(layer)3
										Element:pre
											node.name: ${HOSTNAME} network.host: ${ES_NETWORK_HOST}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Prompting for settings
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											For settings that you do not wish to store in the configuration file, you can use the value
										Element:code
											${prompt.text}
											or
										Element:code
											${prompt.secret}
											and start Elasticsearch in the foreground.
										Element:code
											${prompt.secret}
											has echoing disabled so that the value entered will not be shown in your terminal;
										Element:code
											${prompt.text}
											will allow you to see the value as you type it in. For example:
									Node:
									(type) c
									(layer)3
										Element:pre
											node: name: ${prompt.text}
									Node:
									(type) c
									(layer)3
										Element:p
											When starting Elasticsearch, you will be prompted to enter the actual value like so:
									Node:
									(type) c
									(layer)3
										Element:pre
											Enter value for [node.name]:
									Node:
									(type) c
									(layer)3
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											Elasticsearch will not start if
										Element:code
											${prompt.text}
											or
										Element:code
											${prompt.secret}
											is used in the settings and the process is run as a service or in the background.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Setting default settings
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											New default settings may be specified on the command line using the
										Element:code
											default.
											prefix. This will specify a value that will be used by default unless another value is specified in the config file.
									Node:
									(type) c
									(layer)3
										Element:p
											For instance, if Elasticsearch is started as follows:
									Node:
									(type) c
									(layer)3
										Element:pre
											./bin/elasticsearch -Edefault.node.name=My_Node
									Node:
									(type) c
									(layer)3
										Element:p
											the value for
										Element:code
											node.name
											will be
										Element:code
											My_Node
											, unless it is overwritten on the command line with
										Element:code
											es.node.name
											or in the config file with
										Element:code
											node.name
											.
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Logging configuration
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								Elasticsearch uses
							Element:a
								Log4j 2
								for logging. Log4j 2 can be configured using the log4j2.properties file. Elasticsearch exposes a single property
							Element:code
								${sys:es.logs}
								that can be referenced in the configuration file to determine the location of the log files; this will resolve to a prefix for the Elasticsearch log file at runtime.
						Node:
						(type) c
						(layer)2
							Element:p
								For example, if your log directory (
							Element:code
								path.logs
								) is
							Element:code
								/var/log/elasticsearch
								and your cluster is named
							Element:code
								production
								then
							Element:code
								${sys:es.logs}
								will resolve to
							Element:code
								/var/log/elasticsearch/production
								.
						Node:
						(type) c
						(layer)2
							Element:pre
								appender.rolling.type = RollingFile
							Element:a
							Element:span
								appender.rolling.name = rolling appender.rolling.fileName = ${sys:es.logs}.log
							Element:img
							Element:a
							Element:span
								appender.rolling.layout.type = PatternLayout appender.rolling.layout.pattern = [%d{ISO8601}][%-5p][%-25c] %.10000m%n appender.rolling.filePattern = ${sys:es.logs}-%d{yyyy-MM-dd}.log
							Element:img
							Element:a
							Element:span
								appender.rolling.policies.type = Policies appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
							Element:img
							Element:a
							Element:span
								appender.rolling.policies.time.interval = 1
							Element:img
							Element:a
							Element:span
								appender.rolling.policies.time.modulate = true
							Element:img
							Element:a
							Element:span
							Element:img
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								Configure the
							Element:code
								RollingFile
								appender
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								Log to
							Element:code
								/var/log/elasticsearch/production.log
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								Roll logs to
							Element:code
								/var/log/elasticsearch/production-yyyy-MM-dd.log
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								Using a time-based roll policy
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								Roll logs on a daily basis
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								Align rolls on the day boundary (as opposed to rolling every twenty-four hours)
						Node:
						(type) c
						(layer)2
							Element:p
								If you append
							Element:code
								.gz
								or
							Element:code
								.zip
								to
							Element:code
								appender.rolling.filePattern
								, then the logs will be compressed as they are rolled.
						Node:
						(type) c
						(layer)2
							Element:p
								Multiple configuration files can be loaded (in which case they will get merged) as long as they are named
							Element:code
								log4j2.properties
								and have the Elasticsearch config directory as an ancestor; this is useful for plugins that expose additional loggers. The logger section contains the java packages and their corresponding log level. The appender section contains the destinations for the logs. Extensive information on how to customize logging and all the supported appenders can be found on the
							Element:a
								Log4j documentation
								.
						Node:
						(type) c
						(layer)2
							Element:h3
							Element:a
								Deprecation logging
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								In addition to regular logging, Elasticsearch allows you to enable logging of deprecated actions. For example this allows you to determine early, if you need to migrate certain functionality in the future. By default, deprecation logging is enabled at the WARN level, the level at which all deprecation log messages will be emitted.
						Node:
						(type) c
						(layer)2
							Element:pre
								logger.deprecation.level = warn
						Node:
						(type) c
						(layer)2
							Element:p
								This will create a daily rolling deprecation log file in your log directory. Check this file regularly, especially when you intend to upgrade to a new major version.
						Node:
						(type) c
						(layer)2
							Element:p
								The default logging configuration has set the roll policy for the deprecation logs to roll and compress after 1 GB, and to preserve a maximum of five log files (four rolled logs, and the active log).
						Node:
						(type) c
						(layer)2
							Element:p
								You can disable it in the
							Element:code
								config/log4j2.properties
								file by setting the deprecation log level to
							Element:code
								error
								.
						Node:
						(type) c
						(layer)2
							Element:span
							Element:a
								« Install Elasticsearch with Docker
						Node:
						(type) c
						(layer)2
							Element:span
							Element:a
								Important Elasticsearch configuration »
						Node:
						(type) c
						(layer)2
							Element:h3
								Top Videos
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Elasticsearch Demo
							Element:li
							Element:a
								Kibana 101
							Element:li
							Element:a
								Logstash Primer
						Node:
						(type) c
						(layer)2
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
															Node:
															(type) c
															(layer)5
																Element:footer
																Element:h3
																Element:a
																	Products >
																Element:ul
																Element:li
																Element:a
																	Elasticsearch
																Element:li
																Element:a
																	Kibana
																Element:li
																Element:a
																	Beats
																Element:li
																Element:a
																	Logstash
																Element:li
																Element:a
																	X-Pack
																Element:li
																Element:a
																	Elastic Cloud
																Element:li
																Element:a
																	Security (formerly Shield)
																Element:li
																Element:a
																	Alerting (via Watcher)
																Element:li
																Element:a
																	Monitoring (formerly Marvel)
																Element:li
																Element:a
																	Graph
																Element:li
																Element:a
																	Reporting
																Element:li
																Element:a
																	Machine Learning
																Element:li
																Element:a
																	ES-Hadoop
																Element:h3
																	Resources
																Element:ul
																Element:li
																Element:a
																	Blog
																Element:li
																Element:a
																	Cloud Status
																Element:li
																Element:a
																	Community
																Element:li
																Element:a
																	Customers & Use Cases
																Element:li
																Element:a
																	Documentation
																Element:li
																Element:a
																	Elastic{ON} Events
																Element:li
																Element:a
																	Forums
																Element:li
																Element:a
																	Meetups
																Element:li
																Element:a
																	Subscriptions
																Element:li
																Element:a
																	Support Portal
																Element:li
																Element:a
																	Videos & Webinars
																Element:li
																Element:a
																	Training
																Element:h3
																Element:a
																	About >
																Element:ul
																Element:li
																Element:a
																	Careers/Jobs
																Element:li
																Element:a
																	Contact
																Element:li
																Element:a
																	Leadership
																Element:li
																Element:a
																	Partners
																Element:li
																Element:a
																	Press
																Element:h3
																	Language
																Element:ul
																Element:li
																Element:a
																	English
																Element:li
																Element:a
																	Français
																Element:li
																Element:a
																	Deutsch
																Element:li
																Element:a
																	日本語
																Element:li
																Element:a
																	한국어
																Element:p
																	FOLLOW US
																Element:ul
																Element:li
																Element:a
																Element:li
																Element:a
																Element:li
																Element:a
																Element:li
																Element:a
																Element:li
																Element:a
																Element:ul
																Element:li
																Element:a
																	Trademarks
																Element:li
																Element:a
																	Terms of Use
																Element:li
																Element:a
																	Privacy
																Element:li
																Element:a
																	Cookie Policy
																Element:li
																Element:a
																	Brand
																Element:a
																Element:img
																Element:p
																	© 2017. All Rights Reserved - Elasticsearch
																Element:p
																	Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
																Element:p
																	Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
																Element:a
																	Apache Software Foundation
																	in the United States and/or other countries.
