Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
							Element:code
								_parent
								field
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								A parent-child relationship can be established between documents in the same index by making one mapping type the parent of another:
						Node:
						(type) c
						(layer)2
							Element:pre
								PUT my_index { "mappings": { "my_parent": {}, "my_child": { "_parent": { "type": "my_parent"
							Element:a
							Element:span
								} } } } PUT my_index/my_parent/1
							Element:img
							Element:a
							Element:span
								{ "text": "This is a parent document" } PUT my_index/my_child/2?parent=1
							Element:img
							Element:a
							Element:span
								{ "text": "This is a child document" } PUT my_index/my_child/3?parent=1&refresh=true
							Element:img
							Element:a
							Element:span
								{ "text": "This is another child document" } GET my_index/my_parent/_search { "query": { "has_child": {
							Element:img
							Element:a
							Element:span
								"type": "my_child", "query": { "match": { "text": "child document" } } } } }
							Element:img
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								The
							Element:code
								my_parent
								type is parent to the
							Element:code
								my_child
								type.
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								Index a parent document.
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								Index two child documents, specifying the parent document’s ID.
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								Find all parent documents that have children which match the query.
						Node:
						(type) c
						(layer)2
							Element:p
								See the
							Element:a
								and
							Element:code
								has_child
							Element:a
								queries, the
							Element:code
								has_parent
							Element:a
								aggregation, and
							Element:code
								children
							Element:a
								inner hits
								for more information.
						Node:
						(type) c
						(layer)2
							Element:p
								The value of the
							Element:code
								_parent
								field is accessible in aggregations and scripts, and may be queried with the
							Element:a
								:
							Element:code
								parent_id
								query
						Node:
						(type) c
						(layer)2
							Element:pre
								GET my_index/_search { "query": { "parent_id": {
							Element:a
							Element:span
								"type": "my_child", "id": "1" } }, "aggs": { "parents": { "terms": { "field": "_parent",
							Element:img
							Element:a
							Element:span
								"size": 10 } } }, "script_fields": { "parent": { "script": { "inline": "doc['_parent']"
							Element:img
							Element:a
							Element:span
								} } } }
							Element:img
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								Querying the id of the
							Element:code
								_parent
								field (also see the
							Element:a
								and the
							Element:code
								has_parent
								query
							Element:a
								)
							Element:code
								has_child
								query
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								Aggregating on the
							Element:code
								_parent
								field (also see the
							Element:a
								aggregation)
							Element:code
								children
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								Accessing the
							Element:code
								_parent
								field in scripts
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Parent-child restrictions
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											The parent and child types must be different — parent-child relationships cannot be established between documents of the same type.
										Element:li
											The
										Element:code
											_parent.type
											setting can only point to a type that doesn’t exist yet. This means that a type cannot become a parent type after it has been created.
										Element:li
											Parent and child documents must be indexed on the same shard. The
										Element:code
											parent
											ID is used as the
										Element:a
											routing
											value for the child, to ensure that the child is indexed on the same shard as the parent. This means that the same
										Element:code
											parent
											value needs to be provided when
										Element:a
											getting
											,
										Element:a
											deleting
											, or
										Element:a
											updating
											a child document.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Global ordinals
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											Parent-child uses
										Element:a
											global ordinals
											to speed up joins. Global ordinals need to be rebuilt after any change to a shard. The more parent id values are stored in a shard, the longer it takes to rebuild the global ordinals for the
										Element:code
											_parent
											field.
									Node:
									(type) c
									(layer)3
										Element:p
											Global ordinals, by default, are built eagerly: if the index has changed, global ordinals for the
										Element:code
											_parent
											field will be rebuilt as part of the refresh. This can add significant time the refresh. However most of the times this is the right trade-off, otherwise global ordinals are rebuilt when the first parent-child query or aggregation is used. This can introduce a significant latency spike for your users and usually this is worse as multiple global ordinals for the
										Element:code
											_parent
											field may be attempt rebuilt within a single refresh interval when many writes are occurring.
									Node:
									(type) c
									(layer)3
										Element:p
											When the parent/child is used infrequently and writes occur frequently it may make sense to disable eager loading:
									Node:
									(type) c
									(layer)3
										Element:pre
											PUT my_index { "mappings": { "my_parent": {}, "my_child": { "_parent": { "type": "my_parent", "eager_global_ordinals": false } } } }
									Node:
									(type) c
									(layer)3
										Element:p
											The amount of heap used by global ordinals can be checked as follows:
									Node:
									(type) c
									(layer)3
										Element:pre
											# Per-index GET _stats/fielddata?human&fields=_parent # Per-node per-index GET _nodes/stats/indices/fielddata?human&fields=_parent
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											«
										Element:code
											_meta
											field
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
										Element:code
											_routing
											field »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
