Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								The Search API
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								Now let’s start with some simple searches. There are two basic ways to run searches: one is by sending search parameters through the
							Element:a
								REST request URI
								and the other by sending them through the
							Element:a
								REST request body
								. The request body method allows you to be more expressive and also to define your searches in a more readable JSON format. We’ll try one example of the request URI method but for the remainder of this tutorial, we will exclusively be using the request body method.
						Node:
						(type) c
						(layer)2
							Element:p
								The REST API for search is accessible from the
							Element:code
								_search
								endpoint. This example returns all documents in the bank index:
						Node:
						(type) c
						(layer)2
							Element:pre
								GET /bank/_search?q=*&sort=account_number:asc&pretty
						Node:
						(type) c
						(layer)2
							Element:p
								Let’s first dissect the search call. We are searching (
							Element:code
								_search
								endpoint) in the bank index, and the
							Element:code
								q=*
								parameter instructs Elasticsearch to match all documents in the index. The
							Element:code
								sort=account_number:asc
								parameter indicates to sort the results using the
							Element:code
								account_number
								field of each document in an ascending order. The
							Element:code
								pretty
								parameter, again, just tells Elasticsearch to return pretty-printed JSON results.
						Node:
						(type) c
						(layer)2
							Element:p
								And the response (partially shown):
						Node:
						(type) c
						(layer)2
							Element:pre
								{ "took" : 63, "timed_out" : false, "_shards" : { "total" : 5, "successful" : 5, "failed" : 0 }, "hits" : { "total" : 1000, "max_score" : null, "hits" : [ { "_index" : "bank", "_type" : "account", "_id" : "0", "sort": [0], "_score" : null, "_source" : {"account_number":0,"balance":16623,"firstname":"Bradshaw","lastname":"Mckenzie","age":29,"gender":"F","address":"244 Columbus Place","employer":"Euron","email":"bradshawmckenzie@euron.com","city":"Hobucken","state":"CO"} }, { "_index" : "bank", "_type" : "account", "_id" : "1", "sort": [1], "_score" : null, "_source" : {"account_number":1,"balance":39225,"firstname":"Amber","lastname":"Duke","age":32,"gender":"M","address":"880 Holmes Lane","employer":"Pyrami","email":"amberduke@pyrami.com","city":"Brogan","state":"IL"} }, ... ] } }
						Node:
						(type) c
						(layer)2
							Element:p
								As for the response, we see the following parts:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:code
								took
								– time in milliseconds for Elasticsearch to execute the search
							Element:li
							Element:code
								timed_out
								– tells us if the search timed out or not
							Element:li
							Element:code
								_shards
								– tells us how many shards were searched, as well as a count of the successful/failed searched shards
							Element:li
							Element:code
								hits
								– search results
							Element:li
							Element:code
								hits.total
								– total number of documents matching our search criteria
							Element:li
							Element:code
								hits.hits
								– actual array of search results (defaults to first 10 documents)
							Element:li
							Element:code
								hits.sort
								- sort key for results (missing if sorting by score)
							Element:li
							Element:code
								hits._score
								and
							Element:code
								max_score
								- ignore these fields for now
						Node:
						(type) c
						(layer)2
							Element:p
								Here is the same exact search above using the alternative request body method:
						Node:
						(type) c
						(layer)2
							Element:pre
								GET /bank/_search { "query": { "match_all": {} }, "sort": [ { "account_number": "asc" } ] }
						Node:
						(type) c
						(layer)2
							Element:p
								The difference here is that instead of passing
							Element:code
								q=*
								in the URI, we POST a JSON-style query request body to the
							Element:code
								_search
								API. We’ll discuss this JSON query in the next section.
						Node:
						(type) c
						(layer)2
							Element:p
								It is important to understand that once you get your search results back, Elasticsearch is completely done with the request and does not maintain any kind of server-side resources or open cursors into your results. This is in stark contrast to many other platforms such as SQL wherein you may initially get a partial subset of your query results up-front and then you have to continuously go back to the server if you want to fetch (or page through) the rest of the results using some kind of stateful server-side cursor.
						Node:
						(type) c
						(layer)2
							Element:span
							Element:a
								« Exploring Your Data
						Node:
						(type) c
						(layer)2
							Element:span
							Element:a
								Introducing the Query Language »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
