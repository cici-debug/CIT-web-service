Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Create Index
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								The create index API allows to instantiate an index. Elasticsearch provides support for multiple indices, including executing operations across several indices.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Index Settings
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											Each index created can have specific settings associated with it.
									Node:
									(type) c
									(layer)3
										Element:pre
											PUT twitter { "settings" : { "index" : { "number_of_shards" : 3,
										Element:a
										Element:span
											"number_of_replicas" : 2
										Element:img
										Element:a
										Element:span
											} } }
										Element:img
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:span
										Element:img
										Element:td
										Element:p
											Default for
										Element:code
											number_of_shards
											is 5
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:span
										Element:img
										Element:td
										Element:p
											Default for
										Element:code
											number_of_replicas
											is 1 (ie one replica for each primary shard)
									Node:
									(type) c
									(layer)3
										Element:p
											The above second curl example shows how an index called
										Element:code
											twitter
											can be created with specific settings for it using
										Element:a
											YAML
											. In this case, creating an index with 3 shards, each with 2 replicas. The index settings can also be defined with
										Element:a
											JSON
											:
									Node:
									(type) c
									(layer)3
										Element:pre
											PUT twitter { "settings" : { "index" : { "number_of_shards" : 3, "number_of_replicas" : 2 } } }
									Node:
									(type) c
									(layer)3
										Element:p
											or more simplified
									Node:
									(type) c
									(layer)3
										Element:pre
											PUT twitter { "settings" : { "number_of_shards" : 3, "number_of_replicas" : 2 } }
									Node:
									(type) c
									(layer)3
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											You do not have to explicitly specify
										Element:code
											index
											section inside the
										Element:code
											settings
											section.
									Node:
									(type) c
									(layer)3
										Element:p
											For more information regarding all the different index level settings that can be set when creating an index, please check the
										Element:a
											index modules
											section.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Mappings
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The create index API allows to provide a set of one or more mappings:
									Node:
									(type) c
									(layer)3
										Element:pre
											PUT test { "settings" : { "number_of_shards" : 1 }, "mappings" : { "type1" : { "properties" : { "field1" : { "type" : "text" } } } } }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Aliases
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The create index API allows also to provide a set of
										Element:a
											aliases
											:
									Node:
									(type) c
									(layer)3
										Element:pre
											PUT test { "aliases" : { "alias_1" : {}, "alias_2" : { "filter" : { "term" : {"user" : "kimchy" } }, "routing" : "kimchy" } } }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Wait For Active Shards
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											By default, index creation will only return a response to the client when the primary copies of each shard have been started, or the request times out. The index creation response will indicate what happened:
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "acknowledged": true, "shards_acknowledged": true }
									Node:
									(type) c
									(layer)3
										Element:p
										Element:code
											acknowledged
											indicates whether the index was successfully created in the cluster, while
										Element:code
											shards_acknowledged
											indicates whether the requisite number of shard copies were started for each shard in the index before timing out. Note that it is still possible for either
										Element:code
											acknowledged
											or
										Element:code
											shards_acknowledged
											to be
										Element:code
											false
											, but the index creation was successful. These values simply indicate whether the operation completed before the timeout. If
										Element:code
											acknowledged
											is
										Element:code
											false
											, then we timed out before the cluster state was updated with the newly created index, but it probably will be created sometime soon. If
										Element:code
											shards_acknowledged
											is
										Element:code
											false
											, then we timed out before the requisite number of shards were started (by default just the primaries), even if the cluster state was successfully updated to reflect the newly created index (i.e.
										Element:code
											acknowledged=true
											).
									Node:
									(type) c
									(layer)3
										Element:p
											We can change the default of only waiting for the primary shards to start through the index setting
										Element:code
											index.write.wait_for_active_shards
											(note that changing this setting will also affect the
										Element:code
											wait_for_active_shards
											value on all subsequent write operations):
									Node:
									(type) c
									(layer)3
										Element:pre
											PUT test { "settings": { "index.write.wait_for_active_shards": "2" } }
									Node:
									(type) c
									(layer)3
										Element:p
											or through the request parameter
										Element:code
											wait_for_active_shards
											:
									Node:
									(type) c
									(layer)3
										Element:pre
											PUT test?wait_for_active_shards=2
									Node:
									(type) c
									(layer)3
										Element:p
											A detailed explanation of
										Element:code
											wait_for_active_shards
											and its possible values can be found
										Element:a
											here
											.
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											« Indices APIs
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											Delete Index »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
