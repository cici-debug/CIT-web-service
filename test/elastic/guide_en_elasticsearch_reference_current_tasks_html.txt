Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Task Management API
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:img
								The Task Management API is new and should still be considered experimental. The API may change in ways that are not backwards compatible
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Current Tasks Information
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The task management API allows to retrieve information about the tasks currently executing on one or more nodes in the cluster.
									Node:
									(type) c
									(layer)3
										Element:pre
											GET _tasks
										Element:a
										Element:span
											GET _tasks?nodes=nodeId1,nodeId2
										Element:img
										Element:a
										Element:span
											GET _tasks?nodes=nodeId1,nodeId2&actions=cluster:*
										Element:img
										Element:a
										Element:span
										Element:img
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:span
										Element:img
										Element:td
										Element:p
											Retrieves all tasks currently running on all nodes in the cluster.
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:span
										Element:img
										Element:td
										Element:p
											Retrieves all tasks running on nodes
										Element:code
											nodeId1
											and
										Element:code
											nodeId2
											. See
										Element:a
											the section called “Node specification
										Element:a
											edit
											” for more info about how to select individual nodes.
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:span
										Element:img
										Element:td
										Element:p
											Retrieves all cluster-related tasks running on nodes
										Element:code
											nodeId1
											and
										Element:code
											nodeId2
											.
									Node:
									(type) c
									(layer)3
										Element:p
											The result will look similar to the following:
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "nodes" : { "oTUltX4IQMOUUVeiohTt8A" : { "name" : "H5dfFeA", "transport_address" : "127.0.0.1:9300", "host" : "127.0.0.1", "ip" : "127.0.0.1:9300", "tasks" : { "oTUltX4IQMOUUVeiohTt8A:124" : { "node" : "oTUltX4IQMOUUVeiohTt8A", "id" : 124, "type" : "direct", "action" : "cluster:monitor/tasks/lists[n]", "start_time_in_millis" : 1458585884904, "running_time_in_nanos" : 47402, "cancellable" : false, "parent_task_id" : "oTUltX4IQMOUUVeiohTt8A:123" }, "oTUltX4IQMOUUVeiohTt8A:123" : { "node" : "oTUltX4IQMOUUVeiohTt8A", "id" : 123, "type" : "transport", "action" : "cluster:monitor/tasks/lists", "start_time_in_millis" : 1458585884904, "running_time_in_nanos" : 236042, "cancellable" : false } } } } }
									Node:
									(type) c
									(layer)3
										Element:p
											It is also possible to retrieve information for a particular task:
									Node:
									(type) c
									(layer)3
										Element:pre
											GET _tasks/task_id:1
										Element:a
										Element:span
										Element:img
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:span
										Element:img
										Element:td
										Element:p
											This will return a 404 if the task isn’t found.
									Node:
									(type) c
									(layer)3
										Element:p
											Or to retrieve all children of a particular task:
									Node:
									(type) c
									(layer)3
										Element:pre
											GET _tasks?parent_task_id=parentTaskId:1
										Element:a
										Element:span
										Element:img
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:span
										Element:img
										Element:td
										Element:p
											This won’t return a 404 if the parent isn’t found.
									Node:
									(type) c
									(layer)3
										Element:p
											You can also use the
										Element:code
											detailed
											request parameter to get more information about the running tasks. This is useful for telling one task from another but is more costly to execute. For example, fetching all searches using the
										Element:code
											detailed
											request parameter:
									Node:
									(type) c
									(layer)3
										Element:pre
											GET _tasks?actions=*search&detailed
									Node:
									(type) c
									(layer)3
										Element:p
											might look like:
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "nodes" : { "oTUltX4IQMOUUVeiohTt8A" : { "name" : "H5dfFeA", "transport_address" : "127.0.0.1:9300", "host" : "127.0.0.1", "ip" : "127.0.0.1:9300", "tasks" : { "oTUltX4IQMOUUVeiohTt8A:464" : { "node" : "oTUltX4IQMOUUVeiohTt8A", "id" : 464, "type" : "transport", "action" : "indices:data/read/search", "description" : "indices[test], types[test], search_type[QUERY_THEN_FETCH], source[{\"query\":...}]", "start_time_in_millis" : 1483478610008, "running_time_in_nanos" : 13991383, "cancellable" : true } } } } }
									Node:
									(type) c
									(layer)3
										Element:p
											The new
										Element:code
											description
											field contains human readable text that identifies the particular request that the task is performing such as identifying the search request being performed by a search task like the example above. Other kinds of task have have different descriptions, like
										Element:a
											which has the search and the destination, or
										Element:code
											_reindex
										Element:a
											which just has the number of requests and the destination indices. Many requests will only have an empty description because more detailed information about the request is not easily available or particularly helpful in identifying the request.
										Element:code
											_bulk
									Node:
									(type) c
									(layer)3
										Element:p
											The task API can also be used to wait for completion of a particular task. The following call will block for 10 seconds or until the task with id
										Element:code
											oTUltX4IQMOUUVeiohTt8A:12345
											is completed.
									Node:
									(type) c
									(layer)3
										Element:pre
											GET _tasks/oTUltX4IQMOUUVeiohTt8A:12345?wait_for_completion=true&timeout=10s
									Node:
									(type) c
									(layer)3
										Element:p
											You can also wait for all tasks for certain action types to finish. This command will wait for all
										Element:code
											reindex
											tasks to finish:
									Node:
									(type) c
									(layer)3
										Element:pre
											GET _tasks?actions=*reindex&wait_for_completion=true&timeout=10s
									Node:
									(type) c
									(layer)3
										Element:p
											Tasks can be also listed using _cat version of the list tasks command, which accepts the same arguments as the standard list tasks command.
									Node:
									(type) c
									(layer)3
										Element:pre
											GET _cat/tasks GET _cat/tasks?detailed
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Task Cancellation
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											If a long-running task supports cancellation, it can be cancelled by the following command:
									Node:
									(type) c
									(layer)3
										Element:pre
											POST _tasks/task_id:1/_cancel
									Node:
									(type) c
									(layer)3
										Element:p
											The task cancellation command supports the same task selection parameters as the list tasks command, so multiple tasks can be cancelled at the same time. For example, the following command will cancel all reindex tasks running on the nodes
										Element:code
											nodeId1
											and
										Element:code
											nodeId2
											.
									Node:
									(type) c
									(layer)3
										Element:pre
											POST _tasks/_cancel?nodes=nodeId1,nodeId2&actions=*reindex
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Task Grouping
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The task lists returned by task API commands can be grouped either by nodes (default) or by parent tasks using the
										Element:code
											group_by
											parameter. The following command will change the grouping to parent tasks:
									Node:
									(type) c
									(layer)3
										Element:pre
											GET _tasks?group_by=parents
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											« Nodes Info
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											Nodes hot_threads »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
