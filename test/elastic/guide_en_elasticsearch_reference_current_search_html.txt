Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
				Element:a
					Search APIs
				Element:a
					edit
			Node:
			(type) c
			(layer)1
				Element:p
					Most search APIs are
				Element:a
					multi-index, multi-type
					, with the exception of the
				Element:a
					endpoints.
				Element:em
					Explain API
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Routing
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								When executing a search, it will be broadcast to all the index/indices shards (round robin between replicas). Which shards will be searched on can be controlled by providing the
							Element:code
								routing
								parameter. For example, when indexing tweets, the routing value can be the user name:
						Node:
						(type) c
						(layer)2
							Element:pre
								POST /twitter/tweet?routing=kimchy { "user" : "kimchy", "postDate" : "2009-11-15T14:12:12", "message" : "trying out Elasticsearch" }
						Node:
						(type) c
						(layer)2
							Element:p
								In such a case, if we want to search only on the tweets for a specific user, we can specify it as the routing, resulting in the search hitting only the relevant shard:
						Node:
						(type) c
						(layer)2
							Element:pre
								POST /twitter/tweet/_search?routing=kimchy { "query": { "bool" : { "must" : { "query_string" : { "query" : "some query string here" } }, "filter" : { "term" : { "user" : "kimchy" } } } } }
						Node:
						(type) c
						(layer)2
							Element:p
								The routing parameter can be multi valued represented as a comma separated string. This will result in hitting the relevant shards where the routing values match to.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Stats Groups
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								A search can be associated with stats groups, which maintains a statistics aggregation per group. It can later be retrieved using the
							Element:a
								indices stats
								API specifically. For example, here is a search body request that associate the request with two different groups:
						Node:
						(type) c
						(layer)2
							Element:pre
								POST /_search { "query" : { "match_all" : {} }, "stats" : ["group1", "group2"] }
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Global Search Timeout
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								Individual searches can have a timeout as part of the
							Element:a
								. Since search requests can originate from many sources, Elasticsearch has a dynamic cluster-level setting for a global search timeout that applies to all search requests that do not set a timeout in the
							Element:em
								Request Body Search
							Element:a
								. The default value is no global timeout. The setting key is
							Element:em
								Request Body Search
							Element:code
								search.default_search_timeout
								and can be set using the
							Element:a
								endpoints. Setting this value to
							Element:em
								Cluster Update Settings
							Element:code
								-1
								resets the global search timeout to no timeout.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Search Cancellation
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								Searches can be cancelled using standard
							Element:a
								task cancellation
								mechanism. By default, a running search only checks if it is cancelled or not on segment boundaries, therefore the cancellation can be delayed by large segments. The search cancellation responsiveness can be improved by setting the dynamic cluster-level setting
							Element:code
								search.low_level_cancellation
								to
							Element:code
								true
								. However, it comes with an additional overhead of more frequent cancellation checks that can be noticeable on large fast running search queries. Changing this setting only affects the searches that start after the change is made.
						Node:
						(type) c
						(layer)2
							Element:span
							Element:a
								«
							Element:code
								?refresh
						Node:
						(type) c
						(layer)2
							Element:span
							Element:a
								Search »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
