Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Terms Query
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								Filters documents that have fields that match any of the provided terms (
							Element:span
								). For example:
							Element:strong
								not analyzed
						Node:
						(type) c
						(layer)2
							Element:pre
								GET /_search { "query": { "constant_score" : { "filter" : { "terms" : { "user" : ["kimchy", "elasticsearch"]} } } } }
						Node:
						(type) c
						(layer)2
							Element:p
								The
							Element:code
								terms
								query is also aliased with
							Element:code
								in
								as the filter name for simpler usage
							Element:span
								[
								.
							Element:span
								5.0.0
								]
							Element:span
								Deprecated in 5.0.0. use
							Element:code
								terms
								instead
						Node:
						(type) c
						(layer)2
															Node:
															(type) c
															(layer)5
																Element:h5
																Element:a
																	Terms lookup mechanism
																Element:a
																	edit
															Node:
															(type) c
															(layer)5
																Element:p
																	When it’s needed to specify a
																Element:code
																	terms
																	filter with a lot of terms it can be beneficial to fetch those term values from a document in an index. A concrete example would be to filter tweets tweeted by your followers. Potentially the amount of user ids specified in the terms filter can be a lot. In this scenario it makes sense to use the terms filter’s terms lookup mechanism.
															Node:
															(type) c
															(layer)5
																Element:p
																	The terms lookup mechanism supports the following options:
															Node:
															(type) c
															(layer)5
																Element:table
																Element:colgroup
																Element:col
																Element:col
																Element:tbody
																Element:tr
																Element:td
																Element:p
																Element:code
																	index
																Element:td
																Element:p
																	The index to fetch the term values from. Defaults to the current index.
																Element:tr
																Element:td
																Element:p
																Element:code
																	type
																Element:td
																Element:p
																	The type to fetch the term values from.
																Element:tr
																Element:td
																Element:p
																Element:code
																	id
																Element:td
																Element:p
																	The id of the document to fetch the term values from.
																Element:tr
																Element:td
																Element:p
																Element:code
																	path
																Element:td
																Element:p
																	The field specified as path to fetch the actual values for the
																Element:code
																	terms
																	filter.
																Element:tr
																Element:td
																Element:p
																Element:code
																	routing
																Element:td
																Element:p
																	A custom routing value to be used when retrieving the external terms doc.
															Node:
															(type) c
															(layer)5
																Element:p
																	The values for the
																Element:code
																	terms
																	filter will be fetched from a field in a document with the specified id in the specified type and index. Internally a get request is executed to fetch the values from the specified path. At the moment for this feature to work the
																Element:code
																	_source
																	needs to be stored.
															Node:
															(type) c
															(layer)5
																Element:p
																	Also, consider using an index with a single shard and fully replicated across all nodes if the "reference" terms data is not large. The lookup terms filter will prefer to execute the get request on a local node if possible, reducing the need for networking.
						Node:
						(type) c
						(layer)2
															Node:
															(type) c
															(layer)5
																Element:h5
																Element:a
																	Terms lookup twitter example
																Element:a
																	edit
															Node:
															(type) c
															(layer)5
																Element:p
																	At first we index the information for user with id 2, specifically, its followers, then index a tweet from user with id 1. Finally we search on all the tweets that match the followers of user 2.
															Node:
															(type) c
															(layer)5
																Element:pre
																	PUT /users/user/2 { "followers" : ["1", "3"] } PUT /tweets/tweet/1 { "user" : "1" } GET /tweets/_search { "query" : { "terms" : { "user" : { "index" : "users", "type" : "user", "id" : "2", "path" : "followers" } } } }
															Node:
															(type) c
															(layer)5
																Element:p
																	The structure of the external terms document can also include array of inner objects, for example:
															Node:
															(type) c
															(layer)5
																Element:pre
																	curl -XPUT localhost:9200/users/user/2 -d '{ "followers" : [ { "id" : "1" }, { "id" : "2" } ] }'
															Node:
															(type) c
															(layer)5
																Element:p
																	In which case, the lookup path will be
																Element:code
																	followers.id
																	.
															Node:
															(type) c
															(layer)5
																Element:span
																Element:a
																	« Term Query
															Node:
															(type) c
															(layer)5
																Element:span
																Element:a
																	Range Query »
															Node:
															(type) c
															(layer)5
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
										Element:h5
											Be in the know with the latest and greatest from Elastic.
									Node:
									(type) c
									(layer)3
										Element:p
											Thanks for subscribing! We'll keep you updated with new releases.
															Node:
															(type) c
															(layer)5
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
