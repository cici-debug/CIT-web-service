Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Explain API
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								The explain api computes a score explanation for a query and a specific document. This can give useful feedback whether a document matches or didn’t match a specific query.
						Node:
						(type) c
						(layer)2
							Element:p
								The
							Element:code
								index
								and
							Element:code
								type
								parameters expect a single index and a single type respectively.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Usage
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											Full query example:
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /twitter/tweet/0/_explain { "query" : { "match" : { "message" : "elasticsearch" } } }
									Node:
									(type) c
									(layer)3
										Element:p
											This will yield the following result:
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "_index": "twitter", "_type": "tweet", "_id": "0", "matched": true, "explanation": { "value": 1.55077, "description": "sum of:", "details": [ { "value": 1.55077, "description": "weight(message:elasticsearch in 0) [PerFieldSimilarity], result of:", "details": [ { "value": 1.55077, "description": "score(doc=0,freq=1.0 = termFreq=1.0\n), product of:", "details": [ { "value": 1.3862944, "description": "idf, computed as log(1 + (docCount - docFreq + 0.5) / (docFreq + 0.5)) from:", "details": [ { "value": 1.0, "description": "docFreq", "details": [] }, { "value": 5.0, "description": "docCount", "details": [] } ] }, { "value": 1.1186441, "description": "tfNorm, computed as (freq * (k1 + 1)) / (freq + k1 * (1 - b + b * fieldLength / avgFieldLength)) from:", "details": [ { "value": 1.0, "description": "termFreq=1.0", "details": [] }, { "value": 1.2, "description": "parameter k1", "details": [] }, { "value": 0.75, "description": "parameter b", "details": [] }, { "value": 5.4, "description": "avgFieldLength", "details": [] }, { "value": 4.0, "description": "fieldLength", "details": [] } ] } ] } ] }, { "value": 0.0, "description": "match on required clause, product of:", "details": [ { "value": 0.0, "description": "# clause", "details": [] }, { "value": 1.0, "description": "*:*, product of:", "details": [ { "value": 1.0, "description": "boost", "details": [] }, { "value": 1.0, "description": "queryNorm", "details": [] } ] } ] } ] } }
									Node:
									(type) c
									(layer)3
										Element:p
											There is also a simpler way of specifying the query via the
										Element:code
											q
											parameter. The specified
										Element:code
											q
											parameter value is then parsed as if the
										Element:code
											query_string
											query was used. Example usage of the
										Element:code
											q
											parameter in the explain api:
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /twitter/tweet/0/_explain?q=message:search
									Node:
									(type) c
									(layer)3
										Element:p
											This will yield the same result as the previous request.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											All parameters:
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:tbody
										Element:tr
										Element:td
										Element:p
										Element:code
											_source
										Element:td
										Element:p
											Set to
										Element:code
											true
											to retrieve the
										Element:code
											_source
											of the document explained. You can also retrieve part of the document by using
										Element:code
											_source_include
											&
										Element:code
											_source_exclude
											(see
										Element:a
											Get API
											for more details)
										Element:tr
										Element:td
										Element:p
										Element:code
											stored_fields
										Element:td
										Element:p
											Allows to control which stored fields to return as part of the document explained.
										Element:tr
										Element:td
										Element:p
										Element:code
											routing
										Element:td
										Element:p
											Controls the routing in the case the routing was used during indexing.
										Element:tr
										Element:td
										Element:p
										Element:code
											parent
										Element:td
										Element:p
											Same effect as setting the routing parameter.
										Element:tr
										Element:td
										Element:p
										Element:code
											preference
										Element:td
										Element:p
											Controls on which shard the explain is executed.
										Element:tr
										Element:td
										Element:p
										Element:code
											source
										Element:td
										Element:p
											Allows the data of the request to be put in the query string of the url.
										Element:tr
										Element:td
										Element:p
										Element:code
											q
										Element:td
										Element:p
											The query string (maps to the query_string query).
										Element:tr
										Element:td
										Element:p
										Element:code
											df
										Element:td
										Element:p
											The default field to use when no field prefix is defined within the query. Defaults to _all field.
										Element:tr
										Element:td
										Element:p
										Element:code
											analyzer
										Element:td
										Element:p
											The analyzer name to be used when analyzing the query string. Defaults to the analyzer of the _all field.
										Element:tr
										Element:td
										Element:p
										Element:code
											analyze_wildcard
										Element:td
										Element:p
											Should wildcard and prefix queries be analyzed or not. Defaults to false.
										Element:tr
										Element:td
										Element:p
										Element:code
											lenient
										Element:td
										Element:p
											If set to true will cause format based failures (like providing text to a numeric field) to be ignored. Defaults to false.
										Element:tr
										Element:td
										Element:p
										Element:code
											default_operator
										Element:td
										Element:p
											The default operator to be used, can be AND or OR. Defaults to OR.
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											« Validate API
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											Profile API »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
