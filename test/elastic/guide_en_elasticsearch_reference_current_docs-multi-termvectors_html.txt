Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Multi termvectors API
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								Multi termvectors API allows to get multiple termvectors at once. The documents from which to retrieve the term vectors are specified by an index, type and id. But the documents could also be artificially provided in the request itself.
						Node:
						(type) c
						(layer)2
							Element:p
								The response includes a
							Element:code
								docs
								array with all the fetched termvectors, each element having the structure provided by the
							Element:a
								termvectors
								API. Here is an example:
						Node:
						(type) c
						(layer)2
							Element:pre
								curl 'localhost:9200/_mtermvectors' -d '{ "docs": [ { "_index": "testidx", "_type": "test", "_id": "2", "term_statistics": true }, { "_index": "testidx", "_type": "test", "_id": "1", "fields": [ "text" ] } ] }'
						Node:
						(type) c
						(layer)2
							Element:p
								See the
							Element:a
								termvectors
								API for a description of possible parameters.
						Node:
						(type) c
						(layer)2
							Element:p
								The
							Element:code
								_mtermvectors
								endpoint can also be used against an index (in which case it is not required in the body):
						Node:
						(type) c
						(layer)2
							Element:pre
								curl 'localhost:9200/testidx/_mtermvectors' -d '{ "docs": [ { "_type": "test", "_id": "2", "fields": [ "text" ], "term_statistics": true }, { "_type": "test", "_id": "1" } ] }'
						Node:
						(type) c
						(layer)2
							Element:p
								And type:
						Node:
						(type) c
						(layer)2
							Element:pre
								curl 'localhost:9200/testidx/test/_mtermvectors' -d '{ "docs": [ { "_id": "2", "fields": [ "text" ], "term_statistics": true }, { "_id": "1" } ] }'
						Node:
						(type) c
						(layer)2
							Element:p
								If all requested documents are on same index and have same type and also the parameters are the same, the request can be simplified:
						Node:
						(type) c
						(layer)2
							Element:pre
								curl 'localhost:9200/testidx/test/_mtermvectors' -d '{ "ids" : ["1", "2"], "parameters": { "fields": [ "text" ], "term_statistics": true, … } }'
						Node:
						(type) c
						(layer)2
							Element:p
								Additionally, just like for the
							Element:a
								termvectors
								API, term vectors could be generated for user provided documents. The mapping used is determined by
							Element:code
								_index
								and
							Element:code
								_type
								.
						Node:
						(type) c
						(layer)2
							Element:pre
								curl 'localhost:9200/_mtermvectors' -d '{ "docs": [ { "_index": "testidx", "_type": "test", "doc" : { "fullname" : "John Doe", "text" : "twitter test test test" } }, { "_index": "testidx", "_type": "test", "doc" : { "fullname" : "Jane Doe", "text" : "Another twitter test ..." } } ] }'
						Node:
						(type) c
						(layer)2
							Element:span
							Element:a
								« Term Vectors
						Node:
						(type) c
						(layer)2
							Element:span
							Element:a
							Element:code
								?refresh
								»
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
