Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Avg Aggregation
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								A
							Element:code
								single-value
								metrics aggregation that computes the average of numeric values that are extracted from the aggregated documents. These values can be extracted either from specific numeric fields in the documents, or be generated by a provided script.
						Node:
						(type) c
						(layer)2
							Element:p
								Assuming the data consists of documents representing exams grades (between 0 and 100) of students
						Node:
						(type) c
						(layer)2
							Element:pre
								{ "aggs" : { "avg_grade" : { "avg" : { "field" : "grade" } } } }
						Node:
						(type) c
						(layer)2
							Element:p
								The above aggregation computes the average grade over all documents. The aggregation type is
							Element:code
								avg
								and the
							Element:code
								field
								setting defines the numeric field of the documents the average will be computed on. The above will return the following:
						Node:
						(type) c
						(layer)2
							Element:pre
								{ ... "aggregations": { "avg_grade": { "value": 75 } } }
						Node:
						(type) c
						(layer)2
							Element:p
								The name of the aggregation (
							Element:code
								avg_grade
								above) also serves as the key by which the aggregation result can be retrieved from the returned response.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Script
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											Computing the average grade based on a script:
									Node:
									(type) c
									(layer)3
										Element:pre
											{ ..., "aggs" : { "avg_grade" : { "avg" : { "script" : { "inline" : "doc['grade'].value", "lang" : "painless" } } } } }
									Node:
									(type) c
									(layer)3
										Element:p
											This will interpret the
										Element:code
											script
											parameter as an
										Element:code
											inline
											script with the
										Element:code
											painless
											script language and no script parameters. To use a file script use the following syntax:
									Node:
									(type) c
									(layer)3
										Element:pre
											{ ..., "aggs" : { "avg_grade" : { "avg" : { "script" : { "file": "my_script", "params": { "field": "grade" } } } } } }
									Node:
									(type) c
									(layer)3
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											for indexed scripts replace the
										Element:code
											file
											parameter with an
										Element:code
											id
											parameter.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:a
														Value Script
													Element:a
														edit
												Node:
												(type) c
												(layer)4
													Element:p
														It turned out that the exam was way above the level of the students and a grade correction needs to be applied. We can use value script to get the new average:
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "aggs" : { ... "aggs" : { "avg_corrected_grade" : { "avg" : { "field" : "grade", "script" : { "lang": "painless", "inline": "_value * params.correction", "params" : { "correction" : 1.2 } } } } } } }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Missing value
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The
										Element:code
											missing
											parameter defines how documents that are missing a value should be treated. By default they will be ignored but it is also possible to treat them as if they had a value.
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "aggs" : { "grade_avg" : { "avg" : { "field" : "grade", "missing": 10
										Element:a
										Element:span
											} } } }
										Element:img
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:span
										Element:img
										Element:td
										Element:p
											Documents without a value in the
										Element:code
											grade
											field will fall into the same bucket as documents that have the value
										Element:code
											10
											.
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											« Metrics Aggregations
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											Cardinality Aggregation »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
