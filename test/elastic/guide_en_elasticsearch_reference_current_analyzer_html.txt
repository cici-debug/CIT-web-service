Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
							Element:code
								analyzer
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								The values of
							Element:a
								string fields are passed through an
							Element:code
								analyzed
							Element:a
								analyzer
								to convert the string into a stream of
							Element:span
								or
							Element:em
								tokens
							Element:span
								. For instance, the string
							Element:em
								terms
							Element:code
								"The quick Brown Foxes."
								may, depending on which analyzer is used, be analyzed to the tokens:
							Element:code
								quick
								,
							Element:code
								brown
								,
							Element:code
								fox
								. These are the actual terms that are indexed for the field, which makes it possible to search efficiently for individual words
							Element:span
								big blobs of text.
							Element:em
								within
						Node:
						(type) c
						(layer)2
							Element:p
								This analysis process needs to happen not just at index time, but also at query time: the query string needs to be passed through the same (or a similar) analyzer so that the terms that it tries to find are in the same format as those that exist in the index.
						Node:
						(type) c
						(layer)2
							Element:p
								Elasticsearch ships with a number of
							Element:a
								pre-defined analyzers
								, which can be used without further configuration. It also ships with many
							Element:a
								character filters
								,
							Element:a
								tokenizers
								, and
							Element:a
								which can be combined to configure custom analyzers per index.
							Element:em
								Token Filters
						Node:
						(type) c
						(layer)2
							Element:p
								Analyzers can be specified per-query, per-field or per-index. At index time, Elasticsearch will look for an analyzer in this order:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								The
							Element:code
								analyzer
								defined in the field mapping.
							Element:li
								An analyzer named
							Element:code
								default
								in the index settings.
							Element:li
								The
							Element:a
								analyzer.
							Element:code
								standard
						Node:
						(type) c
						(layer)2
							Element:p
								At query time, there are a few more layers:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								The
							Element:code
								analyzer
								defined in a
							Element:a
								full-text query
								.
							Element:li
								The
							Element:code
								search_analyzer
								defined in the field mapping.
							Element:li
								The
							Element:code
								analyzer
								defined in the field mapping.
							Element:li
								An analyzer named
							Element:code
								default_search
								in the index settings.
							Element:li
								An analyzer named
							Element:code
								default
								in the index settings.
							Element:li
								The
							Element:a
								analyzer.
							Element:code
								standard
						Node:
						(type) c
						(layer)2
							Element:p
								The easiest way to specify an analyzer for a particular field is to define it in the field mapping, as follows:
						Node:
						(type) c
						(layer)2
							Element:pre
								PUT /my_index { "mappings": { "my_type": { "properties": { "text": {
							Element:a
							Element:span
								"type": "text", "fields": { "english": {
							Element:img
							Element:a
							Element:span
								"type": "text", "analyzer": "english" } } } } } } } GET my_index/_analyze
							Element:img
							Element:a
							Element:span
								{ "field": "text", "text": "The quick Brown Foxes." } GET my_index/_analyze
							Element:img
							Element:a
							Element:span
								{ "field": "text.english", "text": "The quick Brown Foxes." }
							Element:img
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								The
							Element:code
								text
								field uses the default
							Element:code
								standard
								analyzer`.
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								The
							Element:code
								text.english
							Element:a
								multi-field
								uses the
							Element:code
								english
								analyzer, which removes stop words and applies stemming.
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								This returns the tokens: [
							Element:code
								the
								,
							Element:code
								quick
								,
							Element:code
								brown
								,
							Element:code
								foxes
								].
							Element:tr
							Element:td
							Element:p
							Element:a
							Element:span
							Element:img
							Element:td
							Element:p
								This returns the tokens: [
							Element:code
								quick
								,
							Element:code
								brown
								,
							Element:code
								fox
								].
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
										Element:code
											search_quote_analyzer
										Element:a
											edit
									Node:
									(type) c
									(layer)3
										Element:p
											The
										Element:code
											search_quote_analyzer
											setting allows you to specify an analyzer for phrases, this is particularly useful when dealing with disabling stop words for phrase queries.
									Node:
									(type) c
									(layer)3
										Element:p
											To disable stop words for phrases a field utilising three analyzer settings will be required:
									Node:
									(type) c
									(layer)3
										Element:ol
										Element:li
											An
										Element:code
											analyzer
											setting for indexing all terms including stop words
										Element:li
											A
										Element:code
											search_analyzer
											setting for non-phrase queries that will remove stop words
										Element:li
											A
										Element:code
											search_quote_analyzer
											setting for phrase queries that will not remove stop words
									Node:
									(type) c
									(layer)3
										Element:pre
											PUT my_index { "settings":{ "analysis":{ "analyzer":{ "my_analyzer":{
										Element:a
										Element:span
											"type":"custom", "tokenizer":"standard", "filter":[ "lowercase" ] }, "my_stop_analyzer":{
										Element:img
										Element:a
										Element:span
											"type":"custom", "tokenizer":"standard", "filter":[ "lowercase", "english_stop" ] } }, "filter":{ "english_stop":{ "type":"stop", "stopwords":"_english_" } } } }, "mappings":{ "my_type":{ "properties":{ "title": { "type":"text", "analyzer":"my_analyzer",
										Element:img
										Element:a
										Element:span
											"search_analyzer":"my_stop_analyzer",
										Element:img
										Element:a
										Element:span
											"search_quote_analyzer":"my_analyzer"
										Element:img
										Element:a
										Element:span
											} } } } }
										Element:img
									Node:
									(type) c
									(layer)3
										Element:pre
											PUT my_index/my_type/1 { "title":"The Quick Brown Fox" } PUT my_index/my_type/2 { "title":"A Quick Brown Fox" } GET my_index/my_type/_search { "query":{ "query_string":{ "query":"\"the quick brown fox\""
										Element:a
										Element:span
											} } }
										Element:img
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:span
										Element:img
										Element:td
										Element:p
										Element:code
											my_analyzer
											analyzer which tokens all terms including stop words
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:span
										Element:img
										Element:td
										Element:p
										Element:code
											my_stop_analyzer
											analyzer which removes stop words
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:span
										Element:img
										Element:td
										Element:p
										Element:code
											analyzer
											setting that points to the
										Element:code
											my_analyzer
											analyzer which will be used at index time
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:span
										Element:img
										Element:td
										Element:p
										Element:code
											search_analyzer
											setting that points to the
										Element:code
											my_stop_analyzer
											and removes stop words for non-phrase queries
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:span
										Element:img
										Element:td
										Element:p
										Element:code
											search_quote_analyzer
											setting that points to the
										Element:code
											my_analyzer
											analyzer and ensures that stop words are not removed from phrase queries
										Element:tr
										Element:td
										Element:p
										Element:a
										Element:span
										Element:img
										Element:td
										Element:p
											Since the query is wrapped in quotes it is detected as a phrase query therefore the
										Element:code
											search_quote_analyzer
											kicks in and ensures the stop words are not removed from the query. The
										Element:code
											my_analyzer
											analyzer will then return the following tokens [
										Element:code
											the
											,
										Element:code
											quick
											,
										Element:code
											brown
											,
										Element:code
											fox
											] which will match one of the documents. Meanwhile term queries will be analyzed with the
										Element:code
											my_stop_analyzer
											analyzer which will filter out stop words. So a search for either
										Element:code
											The quick brown fox
											or
										Element:code
											A quick brown fox
											will return both documents since both documents contain the following tokens [
										Element:code
											quick
											,
										Element:code
											brown
											,
										Element:code
											fox
											]. Without the
										Element:code
											search_quote_analyzer
											it would not be possible to do exact matches for phrase queries as the stop words from phrase queries would be removed resulting in both documents matching.
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
											« Mapping parameters
									Node:
									(type) c
									(layer)3
										Element:span
										Element:a
										Element:code
											normalizer
											»
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
