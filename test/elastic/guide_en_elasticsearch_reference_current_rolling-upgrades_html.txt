Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Rolling upgrades
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								A rolling upgrade allows the Elasticsearch cluster to be upgraded one node at a time, with no downtime for end users. Running multiple versions of Elasticsearch in the same cluster for any length of time beyond that required for an upgrade is not supported, as shards will not be replicated from the more recent version to the older version.
						Node:
						(type) c
						(layer)2
							Element:p
								Consult this
							Element:a
								table
								to verify that rolling upgrades are supported for your version of Elasticsearch.
						Node:
						(type) c
						(layer)2
							Element:p
								To perform a rolling upgrade:
						Node:
						(type) c
						(layer)2
							Element:ol
							Element:li
							Element:p
							Element:span
							Element:strong
								Disable shard allocation
							Element:p
								When you shut down a node, the allocation process will wait for one minute before starting to replicate the shards that were on that node to other nodes in the cluster, causing a lot of wasted I/O. This can be avoided by disabling allocation before shutting down a node:
							Element:pre
								PUT _cluster/settings { "transient": { "cluster.routing.allocation.enable": "none" } }
							Element:li
							Element:p
							Element:span
							Element:strong
								Stop non-essential indexing and perform a synced flush (Optional)
							Element:p
								You may happily continue indexing during the upgrade. However, shard recovery will be much faster if you temporarily stop non-essential indexing and issue a
							Element:a
								synced-flush
								request:
							Element:pre
								POST _flush/synced
							Element:p
								A synced flush request is a “best effort” operation. It will fail if there are any pending indexing operations, but it is safe to reissue the request multiple times if necessary.
							Element:li
							Element:p
							Element:a
							Element:span
							Element:strong
								Stop and upgrade a single node
							Element:p
								Shut down one of the nodes in the cluster
							Element:span
								starting the upgrade.
							Element:strong
								before
							Element:img
							Element:p
								When using the zip or tarball packages, the
							Element:code
								config
								,
							Element:code
								data
								,
							Element:code
								logs
								and
							Element:code
								plugins
								directories are placed within the Elasticsearch home directory by default.
							Element:p
								It is a good idea to place these directories in a different location so that there is no chance of deleting them when upgrading Elasticsearch. These custom paths can be
							Element:a
								configured
								with the
							Element:code
								path.conf
								,
							Element:code
								path.logs
								, and
							Element:code
								path.data
								settings, and using
							Element:code
								ES_JVM_OPTIONS
								to specify the location of the
							Element:code
								jvm.options
								file.
							Element:p
								The
							Element:a
								Debian
								and
							Element:a
								RPM
								packages place these directories in the appropriate place for each operating system.
							Element:p
								To upgrade using a
							Element:a
								Debian
								or
							Element:a
								RPM
								package:
							Element:ul
							Element:li
								Use
							Element:code
								rpm
								or
							Element:code
								dpkg
								to install the new package. All files should be placed in their proper locations, and config files should not be overwritten.
							Element:p
								To upgrade using a zip or compressed tarball:
							Element:ul
							Element:li
								Extract the zip or tarball to a new directory, to be sure that you don’t overwrite the
							Element:code
								config
								or
							Element:code
								data
								directories.
							Element:li
								Either copy the files in the
							Element:code
								config
								directory from your old installation to your new installation, or set the environment variable
							Element:code
								ES_JVM_OPTIONS
								to the location of the
							Element:code
								jvm.options
								file and use the
							Element:code
								-E path.conf=
								option on the command line to point to an external config directory.
							Element:li
								Either copy the files in the
							Element:code
								data
								directory from your old installation to your new installation, or configure the location of the data directory in the
							Element:code
								config/elasticsearch.yml
								file, with the
							Element:code
								path.data
								setting.
							Element:li
							Element:p
							Element:span
							Element:strong
								Upgrade any plugins
							Element:p
								Elasticsearch plugins must be upgraded when upgrading a node. Use the
							Element:code
								elasticsearch-plugin
								script to install the correct version of any plugins that you need.
							Element:li
							Element:p
							Element:span
							Element:strong
								Start the upgraded node
							Element:p
								Start the now upgraded node and confirm that it joins the cluster by checking the log file or by checking the output of this request:
							Element:pre
								GET _cat/nodes
							Element:li
							Element:p
							Element:span
							Element:strong
								Reenable shard allocation
							Element:p
								Once the node has joined the cluster, reenable shard allocation to start using the node:
							Element:pre
								PUT _cluster/settings { "transient": { "cluster.routing.allocation.enable": "all" } }
							Element:li
							Element:p
							Element:span
							Element:strong
								Wait for the node to recover
							Element:p
								You should wait for the cluster to finish shard allocation before upgrading the next node. You can check on progress with the
							Element:a
								request:
							Element:code
								_cat/health
							Element:pre
								GET _cat/health
							Element:p
								Wait for the
							Element:code
								status
								column to move from
							Element:code
								yellow
								to
							Element:code
								green
								. Status
							Element:code
								green
								means that all primary and replica shards have been allocated.
							Element:img
							Element:p
								During a rolling upgrade, primary shards assigned to a node with the higher version will never have their replicas assigned to a node with the lower version, because the newer version may have a different data format which is not understood by the older version.
							Element:p
								If it is not possible to assign the replica shards to another node with the higher version — e.g. if there is only one node with the higher version in the cluster — then the replica shards will remain unassigned and the cluster health will remain status
							Element:code
								yellow
								.
							Element:p
								In this case, check that there are no initializing or relocating shards (the
							Element:code
								init
								and
							Element:code
								relo
								columns) before proceding.
							Element:p
								As soon as another node is upgraded, the replicas should be assigned and the cluster health will reach status
							Element:code
								green
								.
							Element:p
								Shards that have not been
							Element:a
								sync-flushed
								may take some time to recover. The recovery status of individual shards can be monitored with the
							Element:a
								request:
							Element:code
								_cat/recovery
							Element:pre
								GET _cat/recovery
							Element:p
								If you stopped indexing, then it is safe to resume indexing as soon as recovery has completed.
							Element:li
							Element:p
							Element:span
							Element:strong
								Repeat
							Element:p
								When the cluster is stable and the node has recovered, repeat the above steps for all remaining nodes.
						Node:
						(type) c
						(layer)2
							Element:span
							Element:a
								« Upgrading Elasticsearch
						Node:
						(type) c
						(layer)2
							Element:span
							Element:a
								Full cluster restart upgrade »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
