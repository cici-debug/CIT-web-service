Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
							Element:a
								Word Delimiter Token Filter
							Element:a
								edit
						Node:
						(type) c
						(layer)2
							Element:p
								Named
							Element:code
								word_delimiter
								, it Splits words into subwords and performs optional transformations on subword groups. Words are split into subwords with the following rules:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								split on intra-word delimiters (by default, all non alpha-numeric characters).
							Element:li
								"Wi-Fi" → "Wi", "Fi"
							Element:li
								split on case transitions: "PowerShot" → "Power", "Shot"
							Element:li
								split on letter-number transitions: "SD500" → "SD", "500"
							Element:li
								leading and trailing intra-word delimiters on each subword are ignored: "//hello---there,
							Element:span
								" → "hello", "there", "dude"
							Element:em
								dude
							Element:li
								trailing "'s" are removed for each subword: "O’Neil’s" → "O", "Neil"
						Node:
						(type) c
						(layer)2
							Element:p
								Parameters include:
						Node:
						(type) c
						(layer)2
							Element:dl
							Element:dt
							Element:span
							Element:code
								generate_word_parts
							Element:dd
								If
							Element:code
								true
								causes parts of words to be generated: "PowerShot" ⇒ "Power" "Shot". Defaults to
							Element:code
								true
								.
							Element:dt
							Element:span
							Element:code
								generate_number_parts
							Element:dd
								If
							Element:code
								true
								causes number subwords to be generated: "500-42" ⇒ "500" "42". Defaults to
							Element:code
								true
								.
							Element:dt
							Element:span
							Element:code
								catenate_words
							Element:dd
								If
							Element:code
								true
								causes maximum runs of word parts to be catenated: "wi-fi" ⇒ "wifi". Defaults to
							Element:code
								false
								.
							Element:dt
							Element:span
							Element:code
								catenate_numbers
							Element:dd
								If
							Element:code
								true
								causes maximum runs of number parts to be catenated: "500-42" ⇒ "50042". Defaults to
							Element:code
								false
								.
							Element:dt
							Element:span
							Element:code
								catenate_all
							Element:dd
								If
							Element:code
								true
								causes all subword parts to be catenated: "wi-fi-4000" ⇒ "wifi4000". Defaults to
							Element:code
								false
								.
							Element:dt
							Element:span
							Element:code
								split_on_case_change
							Element:dd
								If
							Element:code
								true
								causes "PowerShot" to be two tokens; ("Power-Shot" remains two parts regards). Defaults to
							Element:code
								true
								.
							Element:dt
							Element:span
							Element:code
								preserve_original
							Element:dd
								If
							Element:code
								true
								includes original words in subwords: "500-42" ⇒ "500-42" "500" "42". Defaults to
							Element:code
								false
								.
							Element:dt
							Element:span
							Element:code
								split_on_numerics
							Element:dd
								If
							Element:code
								true
								causes "j2se" to be three tokens; "j" "2" "se". Defaults to
							Element:code
								true
								.
							Element:dt
							Element:span
							Element:code
								stem_english_possessive
							Element:dd
								If
							Element:code
								true
								causes trailing "'s" to be removed for each subword: "O’Neil’s" ⇒ "O", "Neil". Defaults to
							Element:code
								true
								.
						Node:
						(type) c
						(layer)2
							Element:p
								Advance settings include:
						Node:
						(type) c
						(layer)2
							Element:dl
							Element:dt
							Element:span
							Element:code
								protected_words
							Element:dd
								A list of protected words from being delimiter. Either an array, or also can set
							Element:code
								protected_words_path
								which resolved to a file configured with protected words (one on each line). Automatically resolves to
							Element:code
								config/
								based location if exists.
							Element:dt
							Element:span
							Element:code
								type_table
							Element:dd
								A custom type mapping table, for example (when configured using
							Element:code
								type_table_path
								):
						Node:
						(type) c
						(layer)2
							Element:pre
								# Map the $, %, '.', and ',' characters to DIGIT # This might be useful for financial data. $ => DIGIT % => DIGIT . => DIGIT \\u002C => DIGIT # in some cases you might not want to split on ZWJ # this also tests the case where we need a bigger byte[] # see http://en.wikipedia.org/wiki/Zero-width_joiner \\u200D => ALPHANUM
						Node:
						(type) c
						(layer)2
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								Using a tokenizer like the
							Element:code
								standard
								tokenizer may interfere with the
							Element:code
								catenate_*
								and
							Element:code
								preserve_original
								parameters, as the original string may already have lost punctuation during tokenization. Instead, you may want to use the
							Element:code
								whitespace
								tokenizer.
						Node:
						(type) c
						(layer)2
							Element:span
							Element:a
								« Stop Token Filter
						Node:
						(type) c
						(layer)2
							Element:span
							Element:a
								Stemmer Token Filter »
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Top Videos
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Elasticsearch Demo
										Element:li
										Element:a
											Kibana 101
										Element:li
										Element:a
											Logstash Primer
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:h5
																	Be in the know with the latest and greatest from Elastic.
															Node:
															(type) c
															(layer)5
																Element:p
																	Thanks for subscribing! We'll keep you updated with new releases.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:h3
										Element:a
											Products >
										Element:ul
										Element:li
										Element:a
											Elasticsearch
										Element:li
										Element:a
											Kibana
										Element:li
										Element:a
											Beats
										Element:li
										Element:a
											Logstash
										Element:li
										Element:a
											X-Pack
										Element:li
										Element:a
											Elastic Cloud
										Element:li
										Element:a
											Security (formerly Shield)
										Element:li
										Element:a
											Alerting (via Watcher)
										Element:li
										Element:a
											Monitoring (formerly Marvel)
										Element:li
										Element:a
											Graph
										Element:li
										Element:a
											Reporting
										Element:li
										Element:a
											Machine Learning
										Element:li
										Element:a
											ES-Hadoop
										Element:h3
											Resources
										Element:ul
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Cloud Status
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Customers & Use Cases
										Element:li
										Element:a
											Documentation
										Element:li
										Element:a
											Elastic{ON} Events
										Element:li
										Element:a
											Forums
										Element:li
										Element:a
											Meetups
										Element:li
										Element:a
											Subscriptions
										Element:li
										Element:a
											Support Portal
										Element:li
										Element:a
											Videos & Webinars
										Element:li
										Element:a
											Training
										Element:h3
										Element:a
											About >
										Element:ul
										Element:li
										Element:a
											Careers/Jobs
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Leadership
										Element:li
										Element:a
											Partners
										Element:li
										Element:a
											Press
										Element:h3
											Language
										Element:ul
										Element:li
										Element:a
											English
										Element:li
										Element:a
											Français
										Element:li
										Element:a
											Deutsch
										Element:li
										Element:a
											日本語
										Element:li
										Element:a
											한국어
										Element:p
											FOLLOW US
										Element:ul
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:li
										Element:a
										Element:ul
										Element:li
										Element:a
											Trademarks
										Element:li
										Element:a
											Terms of Use
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Cookie Policy
										Element:li
										Element:a
											Brand
										Element:a
										Element:img
										Element:p
											© 2017. All Rights Reserved - Elasticsearch
										Element:p
											Elasticsearch is a trademark of Elasticsearch BV, registered in the U.S. and in other countries
										Element:p
											Apache, Apache Lucene, Apache Hadoop, Hadoop, HDFS and the yellow elephant logo are trademarks of the
										Element:a
											Apache Software Foundation
											in the United States and/or other countries.
