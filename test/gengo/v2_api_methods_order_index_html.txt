Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Order methods
				Element:a
					¶
			Node:
			(type) c
			(layer)1
				Element:p
					This describes the endpoints that deal with Order on the Gengo API.
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Order (GET)
				Element:li
				Element:a
					Order (DELETE)
				Element:li
				Element:a
					Comments (GET)
				Element:li
				Element:a
					Comment (POST)
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Order (GET)
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:dl
							Element:dt
							Element:strong
								Summary
								:
							Element:dd
								Retrieves a group of jobs that were previously submitted together by their order id.
							Element:dt
							Element:strong
								URL
								:
							Element:dd
							Element:cite
								http://api.gengo.com/v2/translate/order/{order_id}
							Element:dt
							Element:strong
								Authentication
								:
							Element:dd
								Required
							Element:dt
							Element:strong
								Parameters
								:
							Element:dd
							Element:ul
							Element:li
							Element:tt
								(required) - Your API key
							Element:span
								api_key
							Element:li
							Element:tt
								(required) - Your API signature
							Element:span
								api_sig
							Element:li
							Element:tt
								(required) - Current Unix epoch time as an integer
							Element:span
								ts
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Example call
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:pre
								1 2 3 4 5 6 7 8 9 10 11 12 13
							Element:td
							Element:pre
							Element:span
								#!/usr/bin/python
							Element:span
								# -*- coding: utf-8 -*-
							Element:span
								from
							Element:span
								gengo
							Element:span
								import
							Element:span
								Gengo
							Element:span
								gengo
							Element:span
								=
							Element:span
								Gengo
							Element:span
								(
							Element:span
								public_key
							Element:span
								=
							Element:span
								'your_public_key'
							Element:span
								,
							Element:span
								private_key
							Element:span
								=
							Element:span
								'your_private_key'
							Element:span
								,
							Element:span
								sandbox
							Element:span
								=
							Element:span
								False
							Element:span
								,
							Element:span
								debug
							Element:span
								=
							Element:span
								False
							Element:span
								)
							Element:span
								print
							Element:span
								(
							Element:span
								gengo
							Element:span
								.
							Element:span
								getTranslationOrderJobs
							Element:span
								(
							Element:span
								id
							Element:span
								=
							Element:span
								232
							Element:span
								))
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Response
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:pre
								1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
							Element:td
							Element:pre
							Element:span
								{
							Element:span
								"opstat"
							Element:span
								:
							Element:span
								"ok"
							Element:span
								,
							Element:span
								"response"
							Element:span
								:
							Element:span
								{
							Element:span
								"order"
							Element:span
								:
							Element:span
								{
							Element:span
								"jobs_queued"
							Element:span
								:
							Element:span
								0
							Element:span
								,
							Element:span
								"jobs_reviewable"
							Element:span
								:
							Element:span
								[
							Element:span
								],
							Element:span
								"jobs_available"
							Element:span
								:
							Element:span
								[
							Element:span
								"243646"
							Element:span
								,
							Element:span
								"243647"
							Element:span
								,
							Element:span
								"243645"
							Element:span
								],
							Element:span
								"jobs_pending"
							Element:span
								:
							Element:span
								[
							Element:span
								],
							Element:span
								"jobs_approved"
							Element:span
								:
							Element:span
								[
							Element:span
								],
							Element:span
								"order_id"
							Element:span
								:
							Element:span
								"232"
							Element:span
								,
							Element:span
								"total_credits"
							Element:span
								:
							Element:span
								"0.30"
							Element:span
								,
							Element:span
								"total_units"
							Element:span
								:
							Element:span
								6
							Element:span
								,
							Element:span
								"total_jobs"
							Element:span
								:
							Element:span
								"3"
							Element:span
								,
							Element:span
								"jobs_revising"
							Element:span
								:
							Element:span
								[
							Element:span
								],
							Element:span
								"currency"
							Element:span
								:
							Element:span
								"USD"
							Element:span
								}
							Element:span
								}
							Element:span
								}
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Order (DELETE)
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:dl
							Element:dt
							Element:strong
								Summary
								:
							Element:dd
								Cancels all jobs in an order. Please keep in mind, this endpoint works when all jobs in an order are in available state. This also cancels the order itself.
							Element:dt
							Element:strong
								URL
								:
							Element:dd
							Element:cite
								http://api.gengo.com/v2/translate/order/{id}
							Element:dt
							Element:strong
								Authentication
								:
							Element:dd
								Required
							Element:dt
							Element:strong
								Parameters
								:
							Element:dd
							Element:ul
							Element:li
							Element:tt
								(required) - Your API key
							Element:span
								api_key
							Element:li
							Element:tt
								(required) - Your API signature
							Element:span
								api_sig
							Element:li
							Element:tt
								(required) - Current Unix epoch time as an integer
							Element:span
								ts
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Example call
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:pre
								1 2 3 4 5 6 7 8 9 10 11 12 13
							Element:td
							Element:pre
							Element:span
								#!/usr/bin/python
							Element:span
								# -*- coding: utf-8 -*-
							Element:span
								from
							Element:span
								gengo
							Element:span
								import
							Element:span
								Gengo
							Element:span
								gengo
							Element:span
								=
							Element:span
								Gengo
							Element:span
								(
							Element:span
								public_key
							Element:span
								=
							Element:span
								'your_public_key'
							Element:span
								,
							Element:span
								private_key
							Element:span
								=
							Element:span
								'your_private_key'
							Element:span
								,
							Element:span
								sandbox
							Element:span
								=
							Element:span
								False
							Element:span
								,
							Element:span
								debug
							Element:span
								=
							Element:span
								False
							Element:span
								)
							Element:span
								gengo
							Element:span
								.
							Element:span
								deleteTranslationOrder
							Element:span
								(
							Element:span
								id
							Element:span
								=
							Element:span
								42
							Element:span
								)
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Response
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:pre
								1 2 3 4 5 6
							Element:td
							Element:pre
							Element:span
								{
							Element:span
								"opstat"
							Element:span
								:
							Element:span
								"ok"
							Element:span
								,
							Element:span
								"response"
							Element:span
								:
							Element:span
								{
							Element:span
								}
							Element:span
								}
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Comments (GET)
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:dl
							Element:dt
							Element:strong
								Summary
								:
							Element:dd
								Retrieves the comment thread for an order.
							Element:dt
							Element:strong
								URL
								:
							Element:dd
							Element:cite
								http://api.gengo.com/v2/translate/order/{id}/comments
							Element:dt
							Element:strong
								Authentication
								:
							Element:dd
								Required
							Element:dt
							Element:strong
								Parameters
								:
							Element:dd
							Element:ul
							Element:li
							Element:tt
								(required) - Your API key
							Element:span
								api_key
							Element:li
							Element:tt
								(required) - Your API signature
							Element:span
								api_sig
							Element:li
							Element:tt
								(required) - Current Unix epoch time as an integer
							Element:span
								ts
							Element:dt
							Element:strong
								Data arguments
								:
							Element:dd
							Element:ul
							Element:li
							Element:tt
								(required) - Order ID
							Element:span
								id
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Note
								: Possible values for “author” are “customer” or “translator”.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Example call
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:pre
								1 2 3 4 5 6 7 8 9 10 11 12 13
							Element:td
							Element:pre
							Element:span
								#!/usr/bin/python
							Element:span
								# -*- coding: utf-8 -*-
							Element:span
								from
							Element:span
								gengo
							Element:span
								import
							Element:span
								Gengo
							Element:span
								gengo
							Element:span
								=
							Element:span
								Gengo
							Element:span
								(
							Element:span
								public_key
							Element:span
								=
							Element:span
								'your_public_key'
							Element:span
								,
							Element:span
								private_key
							Element:span
								=
							Element:span
								'your_private_key'
							Element:span
								,
							Element:span
								sandbox
							Element:span
								=
							Element:span
								False
							Element:span
								,
							Element:span
								debug
							Element:span
								=
							Element:span
								False
							Element:span
								)
							Element:span
								print
							Element:span
								(
							Element:span
								gengo
							Element:span
								.
							Element:span
								getTranslationOrderComments
							Element:span
								(
							Element:span
								id
							Element:span
								=
							Element:span
								42
							Element:span
								))
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Response
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:pre
								1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
							Element:td
							Element:pre
							Element:span
								{
							Element:span
								"opstat"
							Element:span
								:
							Element:span
								"ok"
							Element:span
								,
							Element:span
								"response"
							Element:span
								:
							Element:span
								{
							Element:span
								"thread"
							Element:span
								:
							Element:span
								[
							Element:span
								{
							Element:span
								"body"
							Element:span
								:
							Element:span
								"...."
							Element:span
								,
							Element:span
								"author"
							Element:span
								:
							Element:span
								"translator"
							Element:span
								,
							Element:span
								"ctime"
							Element:span
								:
							Element:span
								1266322028
							Element:span
								},
							Element:span
								{
							Element:span
								"body"
							Element:span
								:
							Element:span
								"...."
							Element:span
								,
							Element:span
								"author"
							Element:span
								:
							Element:span
								"customer"
							Element:span
								,
							Element:span
								"ctime"
							Element:span
								:
							Element:span
								1266324432
							Element:span
								}
							Element:span
								]
							Element:span
								}
							Element:span
								}
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Comment (POST)
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:dl
							Element:dt
							Element:strong
								Summary
								:
							Element:dd
								Submits a new comment to the order’s comment thread.
							Element:dt
							Element:strong
								URL
								:
							Element:dd
							Element:cite
								http://api.gengo.com/v2/translate/order/{id}/comment
							Element:dt
							Element:strong
								Authentication
								:
							Element:dd
								Required
							Element:dt
							Element:strong
								Parameters
								:
							Element:dd
							Element:ul
							Element:li
							Element:tt
								(required) - Your API key
							Element:span
								api_key
							Element:li
							Element:tt
								(required) - Your API signature
							Element:span
								api_sig
							Element:li
							Element:tt
								(required) - Current Unix epoch time as an integer
							Element:span
								ts
							Element:dt
							Element:strong
								Data arguments
								:
							Element:dd
							Element:ul
							Element:li
							Element:tt
								(required) - Order ID
							Element:span
								id
							Element:li
							Element:tt
								(required) - The comment body
							Element:span
								body
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Example call
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:pre
								1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
							Element:td
							Element:pre
							Element:span
								#!/usr/bin/python
							Element:span
								# -*- coding: utf-8 -*-
							Element:span
								from
							Element:span
								gengo
							Element:span
								import
							Element:span
								Gengo
							Element:span
								gengo
							Element:span
								=
							Element:span
								Gengo
							Element:span
								(
							Element:span
								public_key
							Element:span
								=
							Element:span
								'your_public_key'
							Element:span
								,
							Element:span
								private_key
							Element:span
								=
							Element:span
								'your_private_key'
							Element:span
								,
							Element:span
								sandbox
							Element:span
								=
							Element:span
								False
							Element:span
								,
							Element:span
								debug
							Element:span
								=
							Element:span
								False
							Element:span
								)
							Element:span
								gengo
							Element:span
								.
							Element:span
								postOrderComment
							Element:span
								(
							Element:span
								id
							Element:span
								=
							Element:span
								42
							Element:span
								,
							Element:span
								comment
							Element:span
								=
							Element:span
								{
							Element:span
								'body'
							Element:span
								:
							Element:span
								'I love lamp!'
							Element:span
								}
							Element:span
								)
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Response
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:pre
								1 2 3 4 5 6
							Element:td
							Element:pre
							Element:span
								{
							Element:span
								"opstat"
							Element:span
								:
							Element:span
								"ok"
							Element:span
								,
							Element:span
								"response"
							Element:span
								:
							Element:span
								{
							Element:span
								}
							Element:span
								}
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:a
							Element:span
								MENU
							Element:i
							Element:a
							Element:a
							Element:a
							Element:a
							Element:span
								© 2008-2017 Gengo, Inc
							Element:span
							Element:a
								Legal
							Element:span
							Element:a
								Quality Policy
							Element:a
							Element:p
								Professional, people-powered translation in one click
