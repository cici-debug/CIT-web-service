Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Jobs methods
				Element:a
					¶
			Node:
			(type) c
			(layer)1
				Element:p
					This describes the endpoints that deal with Jobs on the Gengo API.
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Jobs (POST)
				Element:li
				Element:a
					Jobs (GET)
				Element:li
				Element:a
					Jobs by id (GET)
				Element:li
				Element:a
					Jobs (PUT)
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Jobs (POST)
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:dl
							Element:dt
							Element:strong
								Summary
								:
							Element:dd
								Submits a job or group of jobs to translate. If all jobs which are placed in one order have same language pair and level then those jobs will be grouped.
							Element:dt
							Element:strong
								URL
								:
							Element:dd
							Element:cite
								http://api.gengo.com/v2/translate/jobs
							Element:dt
							Element:strong
								Authentication
								:
							Element:dd
								Required
							Element:dt
							Element:strong
								Parameters
								:
							Element:dd
							Element:ul
							Element:li
							Element:tt
								(required) - Your API key
							Element:span
								api_key
							Element:li
							Element:tt
								(required) - Your API signature
							Element:span
								api_sig
							Element:li
							Element:tt
								(required) - Current Unix epoch time as an integer
							Element:span
								ts
							Element:dt
							Element:strong
								Data arguments
								:
							Element:dd
							Element:ul
							Element:li
							Element:tt
								(required) - An array of Job Payloads. Please see the job payloads page for full details of the required parameters.
							Element:span
								jobs
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Example call
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:pre
								1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
							Element:td
							Element:pre
							Element:span
								#!/usr/bin/python
							Element:span
								# -*- coding: utf-8 -*-
							Element:span
								from
							Element:span
								gengo
							Element:span
								import
							Element:span
								Gengo
							Element:span
								gengo
							Element:span
								=
							Element:span
								Gengo
							Element:span
								(
							Element:span
								public_key
							Element:span
								=
							Element:span
								'your_public_key'
							Element:span
								,
							Element:span
								private_key
							Element:span
								=
							Element:span
								'your_private_key'
							Element:span
								,
							Element:span
								sandbox
							Element:span
								=
							Element:span
								False
							Element:span
								,
							Element:span
								debug
							Element:span
								=
							Element:span
								False
							Element:span
								)
							Element:span
								data
							Element:span
								=
							Element:span
								{
							Element:span
								'jobs'
							Element:span
								:
							Element:span
								{
							Element:span
								'job_1'
							Element:span
								:
							Element:span
								{
							Element:span
								'type'
							Element:span
								:
							Element:span
								'text'
							Element:span
								,
							Element:span
								'slug'
							Element:span
								:
							Element:span
								'Single :: English to Japanese'
							Element:span
								,
							Element:span
								'body_src'
							Element:span
								:
							Element:span
								'Testing Gengo API library calls.'
							Element:span
								,
							Element:span
								'lc_src'
							Element:span
								:
							Element:span
								'en'
							Element:span
								,
							Element:span
								'lc_tgt'
							Element:span
								:
							Element:span
								'ja'
							Element:span
								,
							Element:span
								'tier'
							Element:span
								:
							Element:span
								'standard'
							Element:span
								,
							Element:span
								'auto_approve'
							Element:span
								:
							Element:span
								0
							Element:span
								,
							Element:span
								'comment'
							Element:span
								:
							Element:span
								'Instructions for translators on this specific job go here'
							Element:span
								,
							Element:span
								'attachments'
							Element:span
								:
							Element:span
								[{
							Element:span
								'url'
							Element:span
								:
							Element:span
								'http://example.com/image01.jpg'
							Element:span
								,
							Element:span
								'filename'
							Element:span
								:
							Element:span
								'image01.jpg'
							Element:span
								,
							Element:span
								'mime_type'
							Element:span
								:
							Element:span
								'image/jpg'
							Element:span
								},
							Element:span
								{
							Element:span
								'url'
							Element:span
								:
							Element:span
								'http://example.com/video/1234'
							Element:span
								,
							Element:span
								'filename'
							Element:span
								:
							Element:span
								'video.mp4'
							Element:span
								,
							Element:span
								'mime_type'
							Element:span
								:
							Element:span
								'video/mp4'
							Element:span
								}],
							Element:span
								'callback_url'
							Element:span
								:
							Element:span
								'http://...'
							Element:span
								,
							Element:span
								'custom_data'
							Element:span
								:
							Element:span
								'your optional custom data, limited to 1kb.'
							Element:span
								,
							Element:span
								'force'
							Element:span
								:
							Element:span
								0
							Element:span
								,
							Element:span
								'use_preferred'
							Element:span
								:
							Element:span
								0
							Element:span
								},
							Element:span
								'job_2'
							Element:span
								:
							Element:span
								{
							Element:span
								'type'
							Element:span
								:
							Element:span
								'text'
							Element:span
								,
							Element:span
								'slug'
							Element:span
								:
							Element:span
								'Single :: English to Japanese'
							Element:span
								,
							Element:span
								'body_src'
							Element:span
								:
							Element:span
								'Testing Gengo API library calls.'
							Element:span
								,
							Element:span
								'lc_src'
							Element:span
								:
							Element:span
								'en'
							Element:span
								,
							Element:span
								'lc_tgt'
							Element:span
								:
							Element:span
								'ja'
							Element:span
								,
							Element:span
								'tier'
							Element:span
								:
							Element:span
								'standard'
							Element:span
								,
							Element:span
								'auto_approve'
							Element:span
								:
							Element:span
								0
							Element:span
								,
							Element:span
								'comment'
							Element:span
								:
							Element:span
								'Instructions for translators on this specific job go here'
							Element:span
								,
							Element:span
								'attachments'
							Element:span
								:
							Element:span
								[{
							Element:span
								'url'
							Element:span
								:
							Element:span
								'http://example.com/image02.jpg'
							Element:span
								,
							Element:span
								'filename'
							Element:span
								:
							Element:span
								'image02.jpg'
							Element:span
								,
							Element:span
								'mime_type'
							Element:span
								:
							Element:span
								'image/jpg'
							Element:span
								},
							Element:span
								{
							Element:span
								'url'
							Element:span
								:
							Element:span
								'http://example.com/video/4321'
							Element:span
								,
							Element:span
								'filename'
							Element:span
								:
							Element:span
								'video01.mp4'
							Element:span
								,
							Element:span
								'mime_type'
							Element:span
								:
							Element:span
								'video/mp4'
							Element:span
								}],
							Element:span
								'callback_url'
							Element:span
								:
							Element:span
								'http://...'
							Element:span
								,
							Element:span
								'custom_data'
							Element:span
								:
							Element:span
								'your optional custom data, limited to 1kb.'
							Element:span
								,
							Element:span
								'force'
							Element:span
								:
							Element:span
								0
							Element:span
								,
							Element:span
								'use_preferred'
							Element:span
								:
							Element:span
								0
							Element:span
								}
							Element:span
								},
							Element:span
								'comment'
							Element:span
								:
							Element:span
								'Instructions for translators on the entire order go here'
							Element:span
								}
							Element:span
								print
							Element:span
								(
							Element:span
								gengo
							Element:span
								.
							Element:span
								postTranslationJobs
							Element:span
								(
							Element:span
								jobs
							Element:span
								=
							Element:span
								data
							Element:span
								))
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								Comments
						Node:
						(type) c
						(layer)2
							Element:p
								Please note that you can submit comments on individual jobs or on the entire order.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Response
						Node:
						(type) c
						(layer)2
							Element:p
								In all cases, the response from should be near instant. That said, there are 3 possible types of response payloads depending on the jobs that were submitted in the POST call.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								All jobs are new
						Node:
						(type) c
						(layer)2
							Element:p
								If there are only new jobs, or all jobs have the force flag, the response will have a new order id, the number of jobs and the total cost of the order.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:pre
								1 2 3 4 5 6 7 8 9
							Element:td
							Element:pre
							Element:span
								{
							Element:span
								"opstat"
							Element:span
								:
							Element:span
								"ok"
							Element:span
								,
							Element:span
								"response"
							Element:span
								:
							Element:span
								{
							Element:span
								"job_count"
							Element:span
								:
							Element:span
								10
							Element:span
								,
							Element:span
								"order_id"
							Element:span
								:
							Element:span
								139370
							Element:span
								,
							Element:span
								"credits_used"
							Element:span
								:
							Element:span
								100.45
							Element:span
								,
							Element:span
								"currency"
							Element:span
								:
							Element:span
								"USD"
							Element:span
								}
							Element:span
								}
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								All jobs are old
						Node:
						(type) c
						(layer)2
							Element:p
								If there are only 100% matching jobs (i.e. all jobs have already been ordered before and translations exist), the response is a list of the jobs, keyed the same as in the original submission. The status for these jobs will be updated as “approved”. Notice that each index is a list, as there may be several matching jobs for a single payload if the force flag has been used in past POSTs.
						Node:
						(type) c
						(layer)2
							Element:p
								The translation is in the “body_tgt” variable. The order id will be new and the credits_used will be same amount, but not charged again because we have not ordered any new content.
						Node:
						(type) c
						(layer)2
							Element:pre
								"opstat": "ok", "response": { "jobs": { "job_2": [ { "custom_data": "1234567", "job_id": 1821444, "credits": 0.10, "auto_approve": 0, "eta": -1, "lc_tgt": "fr", "unit_count": 1, "lc_src": "en", "slug": "3", "callback_url": "http://example.com", "currency": "USD", "tier": "pro", "body_src": "Third", "body_tgt": "Troisieme", "ctime": 1378703629, "status": "reviewable" } ], "job_1": [ { "custom_data": "1234567", "job_id": 1821443, "credits": 0.10, "auto_approve": 0, "eta": -1, "lc_tgt": "fr", "unit_count": 1, "lc_src": "en", "slug": "3", "callback_url": "http://example.com", "currency": "USD", "tier": "pro", "body_src": "Second", "body_tgt": "Deuxieme", "ctime": 1378703629, "status": "reviewable" } ] }, "job_count": 2, "order_id": 754511, "credits_used": 0.00, "currency": "USD" } }
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								There are repeated jobs in the jobs payload
						Node:
						(type) c
						(layer)2
							Element:p
								If there are any jobs inside a payload that are repeats of any other jobs in the same payload, the response will return the same translated text of the previous jobs that were sent.
						Node:
						(type) c
						(layer)2
							Element:p
								The job count will be the number of jobs sent, however the credits will only charge for one of the repeated jobs in the payload. A new order id is created for each request.
						Node:
						(type) c
						(layer)2
							Element:pre
								"opstat": "ok", "response": { "jobs": [ [ { "job_id": 1087795, "credits": 0.10, "auto_approve": 0, "eta": 25308, "lc_tgt": "fr", "unit_count": 2, "lc_src": "en", "slug": "API Job test", "callback_url": "http://example.com", "currency": "USD", "tier": "standard", "body_src": "First test.", "mt": 1, "body_tgt": "Premier test.", "ctime": 1378694499, "status": "available" } ], [ { "job_id": 1087795, "credits": 0.10, "auto_approve": 0, "eta": 25308, "lc_tgt": "fr", "unit_count": 2, "lc_src": "en", "slug": "API Job test", "callback_url": "http://example.com", "currency": "USD", "tier": "standard", "body_src": "First test.", "mt": 1, "body_tgt": "Premier test.", "ctime": 1378694499, "status": "available" } ] ], "job_count": 2, "order_id": 122900, "credits_used": 0.10, "currency": "USD" } }
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								Mix of new and old jobs
						Node:
						(type) c
						(layer)2
							Element:p
								If there is a mix of previously ordered jobs (100% matching in content and language pair) and new jobs in the POST, you will get back a response that contains the old jobs, an order ID for the new jobs and total cost for the new jobs in the order.
						Node:
						(type) c
						(layer)2
							Element:p
								Please Note that the number of job_count will be the total number of jobs sent in your payload, not just the new ones.
						Node:
						(type) c
						(layer)2
							Element:pre
								"opstat": "ok", "response": { "jobs": { "old_job1": [ { "custom_data": "1234567", "job_id": 1821444, "credits": 0.10, "auto_approve": 0, "eta": -1, "lc_tgt": "fr", "unit_count": 1, "lc_src": "en", "slug": "3", "callback_url": "http://example.com", "currency": "USD", "tier": "pro", "body_src": "Third", "body_tgt": "Troisieme", "ctime": 1378703629, "status": "reviewable" } ] }, "job_count": 2, "order_id": 754513, "credits_used": 0.20, "currency": "USD" } }
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Jobs (GET)
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:dl
							Element:dt
							Element:strong
								Summary
								:
							Element:dd
								Retrieves a list of resources for the most recent jobs filtered by the given parameters.
							Element:dt
							Element:strong
								URL
								:
							Element:dd
							Element:cite
								http://api.gengo.com/v2/translate/jobs
							Element:dt
							Element:strong
								Authentication
								:
							Element:dd
								Required
							Element:dt
							Element:strong
								Parameters
								:
							Element:dd
							Element:ul
							Element:li
							Element:tt
								(required) - Your API key
							Element:span
								api_key
							Element:li
							Element:tt
								(required) - Your API signature
							Element:span
								api_sig
							Element:li
							Element:tt
								(required) - Current Unix epoch time as an integer
							Element:span
								ts
							Element:dt
							Element:strong
								Data arguments
								:
							Element:dd
							Element:ul
							Element:li
							Element:tt
								(optional) - “available”, “pending”, “reviewable”, “approved”, “rejected”, or “canceled”
							Element:span
								status
							Element:li
							Element:tt
								(optional) - Epoch timestamp from which to filter submitted jobs
							Element:span
								timestamp_after
							Element:li
							Element:tt
								(optional) - Defaults to 10 (maximum 200)
							Element:span
								count
							Element:dt
							Element:strong
								Note
							Element:dd
							Element:ul
							Element:li
								If you only use count, you’ll get the most recent count jobs
							Element:li
								If you use count with timestamp_after, you’ll get count jobs submitted since timestamp_after
							Element:li
								If you only use timestamp_after, you’ll get all jobs submitted since timestamp_after
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Example call
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:pre
								1 2 3 4 5 6 7 8 9 10 11 12 13
							Element:td
							Element:pre
							Element:span
								#!/usr/bin/python
							Element:span
								# -*- coding: utf-8 -*-
							Element:span
								from
							Element:span
								gengo
							Element:span
								import
							Element:span
								Gengo
							Element:span
								gengo
							Element:span
								=
							Element:span
								Gengo
							Element:span
								(
							Element:span
								public_key
							Element:span
								=
							Element:span
								'your_public_key'
							Element:span
								,
							Element:span
								private_key
							Element:span
								=
							Element:span
								'your_private_key'
							Element:span
								,
							Element:span
								sandbox
							Element:span
								=
							Element:span
								False
							Element:span
								,
							Element:span
								debug
							Element:span
								=
							Element:span
								False
							Element:span
								)
							Element:span
								print
							Element:span
								(
							Element:span
								gengo
							Element:span
								.
							Element:span
								getTranslationJobs
							Element:span
								(
							Element:span
								status
							Element:span
								=
							Element:span
								"available"
							Element:span
								,
							Element:span
								count
							Element:span
								=
							Element:span
								15
							Element:span
								))
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Response
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:pre
								1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
							Element:td
							Element:pre
							Element:span
								{
							Element:span
								"opstat"
							Element:span
								:
							Element:span
								"ok"
							Element:span
								,
							Element:span
								"response"
							Element:span
								:
							Element:span
								[
							Element:span
								{
							Element:span
								"job_id"
							Element:span
								:
							Element:span
								123
							Element:span
								,
							Element:span
								"ctime"
							Element:span
								:
							Element:span
								"..."
							Element:span
								},
							Element:span
								{
							Element:span
								"job_id"
							Element:span
								:
							Element:span
								425
							Element:span
								,
							Element:span
								"ctime"
							Element:span
								:
							Element:span
								"..."
							Element:span
								},
							Element:span
								{
							Element:span
								"job_id"
							Element:span
								:
							Element:span
								274
							Element:span
								,
							Element:span
								"ctime"
							Element:span
								:
							Element:span
								"..."
							Element:span
								}
							Element:span
								]
							Element:span
								}
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Jobs by id (GET)
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:dl
							Element:dt
							Element:strong
								Summary
								:
							Element:dd
								Retrieves a list of jobs. They are requested by a comma-separated list of job ids.
							Element:dt
							Element:strong
								URL
								:
							Element:dd
							Element:cite
								http://api.gengo.com/v2/translate/jobs/{ids}
							Element:dt
							Element:strong
								Authentication
								:
							Element:dd
								Required
							Element:dt
							Element:strong
								Parameters
								:
							Element:dd
							Element:ul
							Element:li
							Element:tt
								(required) - Your API key
							Element:span
								api_key
							Element:li
							Element:tt
								(required) - Your API signature
							Element:span
								api_sig
							Element:li
							Element:tt
								(required) - Current Unix epoch time as an integer
							Element:span
								ts
							Element:dt
							Element:strong
								Note
							Element:dd
							Element:ul
							Element:li
								For the jobs that are file jobs, the response will include
							Element:tt
								and
							Element:span
								file_url_src
							Element:tt
							Element:span
								file_url_tgt
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Example call
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:pre
								1 2 3 4 5 6 7 8 9 10 11 12 13
							Element:td
							Element:pre
							Element:span
								#!/usr/bin/python
							Element:span
								# -*- coding: utf-8 -*-
							Element:span
								from
							Element:span
								gengo
							Element:span
								import
							Element:span
								Gengo
							Element:span
								gengo
							Element:span
								=
							Element:span
								Gengo
							Element:span
								(
							Element:span
								public_key
							Element:span
								=
							Element:span
								'your_public_key'
							Element:span
								,
							Element:span
								private_key
							Element:span
								=
							Element:span
								'your_private_key'
							Element:span
								,
							Element:span
								sandbox
							Element:span
								=
							Element:span
								False
							Element:span
								,
							Element:span
								debug
							Element:span
								=
							Element:span
								False
							Element:span
								)
							Element:span
								print
							Element:span
								(
							Element:span
								gengo
							Element:span
								.
							Element:span
								getTranslationJobBatch
							Element:span
								(
							Element:span
								id
							Element:span
								=
							Element:span
								"1,2"
							Element:span
								))
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Response
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:pre
								1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
							Element:td
							Element:pre
							Element:span
								{
							Element:span
								"opstat"
							Element:span
								:
							Element:span
								"ok"
							Element:span
								,
							Element:span
								"response"
							Element:span
								:
							Element:span
								{
							Element:span
								"jobs"
							Element:span
								:
							Element:span
								[
							Element:span
								{
							Element:span
								"custom_data"
							Element:span
								:
							Element:span
								"{internal_id: 2311}"
							Element:span
								,
							Element:span
								"job_id"
							Element:span
								:
							Element:span
								1
							Element:span
								,
							Element:span
								"credits"
							Element:span
								:
							Element:span
								0.25
							Element:span
								,
							Element:span
								"auto_approve"
							Element:span
								:
							Element:span
								1
							Element:span
								,
							Element:span
								"eta"
							Element:span
								:
							Element:span
								25308
							Element:span
								,
							Element:span
								"order_id"
							Element:span
								:
							Element:span
								54632
							Element:span
								,
							Element:span
								"lc_tgt"
							Element:span
								:
							Element:span
								"jp"
							Element:span
								,
							Element:span
								"unit_count"
							Element:span
								:
							Element:span
								5
							Element:span
								,
							Element:span
								"lc_src"
							Element:span
								:
							Element:span
								"en"
							Element:span
								,
							Element:span
								"slug"
							Element:span
								:
							Element:span
								"This is a short story"
							Element:span
								,
							Element:span
								"callback_url"
							Element:span
								:
							Element:span
								"http://yourapp.com/gengo_callback/job/1"
							Element:span
								,
							Element:span
								"currency"
							Element:span
								:
							Element:span
								"USD"
							Element:span
								,
							Element:span
								"tier"
							Element:span
								:
							Element:span
								"standard"
							Element:span
								,
							Element:span
								"body_src"
							Element:span
								:
							Element:span
								"This is a short story"
							Element:span
								,
							Element:span
								"ctime"
							Element:span
								:
							Element:span
								1352879655
							Element:span
								,
							Element:span
								"status"
							Element:span
								:
							Element:span
								"available"
							Element:span
								},
							Element:span
								{
							Element:span
								"custom_data"
							Element:span
								:
							Element:span
								"{internal_id: 2312}"
							Element:span
								,
							Element:span
								"job_id"
							Element:span
								:
							Element:span
								2
							Element:span
								,
							Element:span
								"credits"
							Element:span
								:
							Element:span
								0.35
							Element:span
								,
							Element:span
								"auto_approve"
							Element:span
								:
							Element:span
								1
							Element:span
								,
							Element:span
								"eta"
							Element:span
								:
							Element:span
								25308
							Element:span
								,
							Element:span
								"order_id"
							Element:span
								:
							Element:span
								54632
							Element:span
								,
							Element:span
								"lc_tgt"
							Element:span
								:
							Element:span
								"jp"
							Element:span
								,
							Element:span
								"unit_count"
							Element:span
								:
							Element:span
								7
							Element:span
								,
							Element:span
								"lc_src"
							Element:span
								:
							Element:span
								"en"
							Element:span
								,
							Element:span
								"slug"
							Element:span
								:
							Element:span
								"This is a short story as well"
							Element:span
								,
							Element:span
								"callback_url"
							Element:span
								:
							Element:span
								"http://yourapp.com/gengo_callback/job/2"
							Element:span
								,
							Element:span
								"currency"
							Element:span
								:
							Element:span
								"USD"
							Element:span
								,
							Element:span
								"tier"
							Element:span
								:
							Element:span
								"standard"
							Element:span
								,
							Element:span
								"body_src"
							Element:span
								:
							Element:span
								"This is a short story as well"
							Element:span
								,
							Element:span
								"ctime"
							Element:span
								:
							Element:span
								1352879764
							Element:span
								,
							Element:span
								"status"
							Element:span
								:
							Element:span
								"available"
							Element:span
								}
							Element:span
								]
							Element:span
								}
							Element:span
								}
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Jobs (PUT)
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:dl
							Element:dt
							Element:strong
								Summary
								:
							Element:dd
								Updates a group of jobs to translate. Request should be no larger than 100MB. Comments per job should not exceed more than 25,000 characters.
							Element:dt
							Element:strong
								URL
								:
							Element:dd
							Element:cite
								http://api.gengo.com/v2/translate/jobs/
							Element:dt
							Element:strong
								Authentication
								:
							Element:dd
								Required
							Element:dt
							Element:strong
								Parameters
								:
							Element:dd
							Element:ul
							Element:li
							Element:tt
								(required) - Your API key
							Element:span
								api_key
							Element:li
							Element:tt
								(required) - Your API signature
							Element:span
								api_sig
							Element:li
							Element:tt
								(required) - Current Unix epoch time as an integer
							Element:span
								ts
							Element:dt
							Element:strong
								Data arguments
								:
							Element:dd
							Element:dl
							Element:dt
							Element:strong
								action (required):
								(per job) :
							Element:dd
							Element:dl
							Element:dt
							Element:strong
								“revise“ - Returns this job back to the translator for revisions.
							Element:dd
							Element:p
								Other parameters
							Element:ul
							Element:li
							Element:tt
								(required) - The reason to the translator for sending the job back for revisions.
							Element:span
								comment
							Element:dt
							Element:strong
								“approve“ - Approves job.
							Element:dd
							Element:p
								Other parameters
							Element:ul
							Element:li
							Element:tt
								(optional) 1 (poor) to 5 (fantastic)
							Element:span
								rating
							Element:li
							Element:tt
								(optional) - Comments for the translator
							Element:span
								for_translator
							Element:li
							Element:tt
								(optional) - Comments for Gengo staff (private)
							Element:span
								for_mygengo
							Element:li
							Element:tt
								(optional) 1 (true) / 0 (false, default) - Whether Gengo can share this feedback publicly, including the source and target text (see
							Element:span
								public
							Element:a
								Open Data
								).
							Element:dt
							Element:strong
								“reject“ - Rejects the translation. Please see our FAQs for details of the rejection process.
							Element:dd
							Element:p
								Other parameters
							Element:ul
							Element:li
							Element:tt
								(required) - “quality”, “incomplete”, “other”
							Element:span
								reason
							Element:li
							Element:tt
								(required)
							Element:span
								comment
							Element:li
							Element:tt
								(required) - The captcha image text.
							Element:span
								captcha
							Element:li
							Element:tt
								- Each job in a “reviewable” state will have this value, which is a URL to an image. This captcha value is required only if a job is to be rejected. If the captcha is wrong, a URL for a new captcha is also included with the error message.
							Element:span
								captcha_url
							Element:li
							Element:tt
								(optional) “requeue” (default) or “cancel” - If you choose “requeue” the job will be rejected and then passed onto another translator. If you choose “cancel” the job will be completely cancelled upon rejection.
							Element:span
								follow_up
							Element:p
							Element:strong
								“archive“ - Archive approved job.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Example call
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:pre
								1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
							Element:td
							Element:pre
							Element:span
								#!/usr/bin/python
							Element:span
								# -*- coding: utf-8 -*-
							Element:span
								from
							Element:span
								gengo
							Element:span
								import
							Element:span
								Gengo
							Element:span
								gengo
							Element:span
								=
							Element:span
								Gengo
							Element:span
								(
							Element:span
								public_key
							Element:span
								=
							Element:span
								'your_public_key'
							Element:span
								,
							Element:span
								private_key
							Element:span
								=
							Element:span
								'your_private_key'
							Element:span
								,
							Element:span
								sandbox
							Element:span
								=
							Element:span
								False
							Element:span
								,
							Element:span
								debug
							Element:span
								=
							Element:span
								False
							Element:span
								)
							Element:span
								# Archive a group of jobs
							Element:span
								gengo
							Element:span
								.
							Element:span
								updateTranslationJobs
							Element:span
								(
							Element:span
								action
							Element:span
								=
							Element:span
								{
							Element:span
								'job_ids'
							Element:span
								:
							Element:span
								[
							Element:span
								4854
							Element:span
								,
							Element:span
								547
							Element:span
								],
							Element:span
								'action'
							Element:span
								:
							Element:span
								'archive'
							Element:span
								})
							Element:span
								# Revise a group of jobs
							Element:span
								gengo
							Element:span
								.
							Element:span
								updateTranslationJobs
							Element:span
								(
							Element:span
								action
							Element:span
								=
							Element:span
								{
							Element:span
								'action'
							Element:span
								:
							Element:span
								'revise'
							Element:span
								,
							Element:span
								'job_ids'
							Element:span
								:
							Element:span
								[{
							Element:span
								'job_id'
							Element:span
								:
							Element:span
								922
							Element:span
								,
							Element:span
								'comment'
							Element:span
								:
							Element:span
								'Please change the word banana to gorilla'
							Element:span
								},
							Element:span
								{
							Element:span
								'job_id'
							Element:span
								:
							Element:span
								923
							Element:span
								,
							Element:span
								'comment'
							Element:span
								:
							Element:span
								'Please change the word banana to monkey'
							Element:span
								}],
							Element:span
								})
							Element:span
								## Reject a group of jobs
							Element:span
								gengo
							Element:span
								.
							Element:span
								updateTranslationJobs
							Element:span
								(
							Element:span
								action
							Element:span
								=
							Element:span
								{
							Element:span
								'action'
							Element:span
								:
							Element:span
								'reject'
							Element:span
								,
							Element:span
								'job_ids'
							Element:span
								:
							Element:span
								[{
							Element:span
								'job_id'
							Element:span
								:
							Element:span
								929
							Element:span
								,
							Element:span
								'reason'
							Element:span
								:
							Element:span
								'quality'
							Element:span
								,
							Element:span
								'comment'
							Element:span
								:
							Element:span
								'This sentence should be in the past tense'
							Element:span
								,
							Element:span
								'captcha'
							Element:span
								:
							Element:span
								'AAAA'
							Element:span
								},
							Element:span
								{
							Element:span
								'job_id'
							Element:span
								:
							Element:span
								811
							Element:span
								,
							Element:span
								'reason'
							Element:span
								:
							Element:span
								'quality'
							Element:span
								,
							Element:span
								'comment'
							Element:span
								:
							Element:span
								'This should have be capitalized'
							Element:span
								,
							Element:span
								'captcha'
							Element:span
								:
							Element:span
								'BBBB'
							Element:span
								}],
							Element:span
								})
							Element:span
								# Approve a group of jobs
							Element:span
								gengo
							Element:span
								.
							Element:span
								updateTranslationJobs
							Element:span
								(
							Element:span
								action
							Element:span
								=
							Element:span
								{
							Element:span
								'action'
							Element:span
								:
							Element:span
								'approve'
							Element:span
								,
							Element:span
								'job_ids'
							Element:span
								:
							Element:span
								[{
							Element:span
								'job_id'
							Element:span
								:
							Element:span
								924
							Element:span
								},
							Element:span
								{
							Element:span
								'job_id'
							Element:span
								:
							Element:span
								928
							Element:span
								}],
							Element:span
								})
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Response
						Node:
						(type) c
						(layer)2
							Element:pre
								// Archive a group of jobs { "opstat": "ok", "response": { } } // Revising a group of jobs. { "opstat": "ok", "response": { } } // Rejecting a group of jobs. { "opstat": "ok", "response": { "jobs": [ { "rejection_comments": "...", "worker_id": 4, "rejection_reason": "quality", "customer_id": 3, "job_id": 929 }, { "rejection_comments": "...", "worker_id": 4, "rejection_reason": "quality", "customer_id": 3, "job_id": 811 } ] } } // Approving a group of jobs. { "opstat": "ok", "response": { } }
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:a
							Element:span
								MENU
							Element:i
							Element:a
							Element:a
							Element:a
							Element:a
							Element:span
								© 2008-2017 Gengo, Inc
							Element:span
							Element:a
								Legal
							Element:span
							Element:a
								Quality Policy
							Element:a
							Element:p
								Professional, people-powered translation in one click
