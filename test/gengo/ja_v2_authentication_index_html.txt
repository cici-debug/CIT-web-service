Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					認証
				Element:a
					¶
			Node:
			(type) c
			(layer)1
				Element:p
					API ユーザーがキーの組み合わせ (パブリックキー とプライベートキー) を取得するには、Gengo に予めアカウント登録していることが必要です。
				Element:tt
					はユーザーの識別に使用され、
				Element:span
					api_key
				Element:tt
					はAPIを呼び出す際の認証に毎回使用されます。キーの組み合わせは、実質的にユーザー名とパスワードとして機能します。ですから、private_keyは秘密にするようにしてください。
				Element:span
					private_key
			Node:
			(type) c
			(layer)1
				Element:p
					これらのキーは、
				Element:a
					アカウント設定ページ
					から生成や取り出しができます。
			Node:
			(type) c
			(layer)1
				Element:p
					毎回の制限された (非公開の) RESTの呼び出しは、以下のようにGengoから認証される必要があります。
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								呼び出しのサインオン
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:p
								認証された呼び出しには全て、サインオンが必要になります:
						Node:
						(type) c
						(layer)2
							Element:ol
							Element:li
								現在のUNIX時間をInteger (整数型) で取得します
							Element:li
								その時間をあなたの引数リストの’ts’ キーの値として入れます
							Element:li
								そのタイムスタンプのSHA-1ハッシュ値をお持ちのプライベートキーに対して計算します
							Element:li
								このハッシュ値を、api_sigというパラメータとして引数リストに加えます
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								APIでの認証された呼び出しの例
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:td
							Element:pre
								1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
							Element:td
							Element:pre
							Element:span
								#!/usr/bin/python
							Element:span
								# -*- coding: utf-8 -*-
							Element:span
								from
							Element:span
								hashlib
							Element:span
								import
							Element:span
								sha1
							Element:span
								import
							Element:span
								hmac
							Element:span
								import
							Element:span
								json
							Element:span
								import
							Element:span
								requests
							Element:span
								import
							Element:span
								time
							Element:span
								if
							Element:span
								__name__
							Element:span
								==
							Element:span
								'__main__'
							Element:span
								:
							Element:span
								PUBLIC_KEY
							Element:span
								=
							Element:span
								'your public key'
							Element:span
								PRIVATE_KEY
							Element:span
								=
							Element:span
								'your private key'
							Element:span
								# submit a comment for job ID 20
							Element:span
								JOB_ID
							Element:span
								=
							Element:span
								'20'
							Element:span
								COMMENT
							Element:span
								=
							Element:span
								'Please use British spelling'
							Element:span
								URL
							Element:span
								=
							Element:span
								"http://api.gengo.com/v2/translate/job/{0}/comment"
							Element:span
								.
							Element:span
								format
							Element:span
								(
							Element:span
								JOB_ID
							Element:span
								)
							Element:span
								header
							Element:span
								=
							Element:span
								{
							Element:span
								"Accept"
							Element:span
								:
							Element:span
								"application/json"
							Element:span
								}
							Element:span
								data
							Element:span
								=
							Element:span
								{
							Element:span
								# 'data' must be flattened. We use json.dumps()
							Element:span
								"data"
							Element:span
								:
							Element:span
								json
							Element:span
								.
							Element:span
								dumps
							Element:span
								({
							Element:span
								"body"
							Element:span
								:
							Element:span
								COMMENT
							Element:span
								},
							Element:span
								separators
							Element:span
								=
							Element:span
								(
							Element:span
								','
							Element:span
								,
							Element:span
								':'
							Element:span
								)),
							Element:span
								"api_key"
							Element:span
								:
							Element:span
								PUBLIC_KEY
							Element:span
								,
							Element:span
								"api_sig"
							Element:span
								:
							Element:span
								PRIVATE_KEY
							Element:span
								,
							Element:span
								"ts"
							Element:span
								:
							Element:span
								str
							Element:span
								(
							Element:span
								int
							Element:span
								(
							Element:span
								time
							Element:span
								.
							Element:span
								time
							Element:span
								()))
							Element:span
								}
							Element:span
								# use your private_key to create an hmac
							Element:span
								data
							Element:span
								[
							Element:span
								"api_sig"
							Element:span
								]
							Element:span
								=
							Element:span
								hmac
							Element:span
								.
							Element:span
								new
							Element:span
								(
							Element:span
								data
							Element:span
								[
							Element:span
								"api_sig"
							Element:span
								],
							Element:span
								data
							Element:span
								[
							Element:span
								"ts"
							Element:span
								],
							Element:span
								sha1
							Element:span
								)
							Element:span
								.
							Element:span
								hexdigest
							Element:span
								()
							Element:span
								post_comment
							Element:span
								=
							Element:span
								requests
							Element:span
								.
							Element:span
								post
							Element:span
								(
							Element:span
								URL
							Element:span
								,
							Element:span
								data
							Element:span
								=
							Element:span
								data
							Element:span
								,
							Element:span
								headers
							Element:span
								=
							Element:span
								header
							Element:span
								)
							Element:span
								res_json
							Element:span
								=
							Element:span
								json
							Element:span
								.
							Element:span
								loads
							Element:span
								(
							Element:span
								post_comment
							Element:span
								.
							Element:span
								text
							Element:span
								)
							Element:span
								if
							Element:span
								not
							Element:span
								res_json
							Element:span
								[
							Element:span
								"opstat"
							Element:span
								]
							Element:span
								==
							Element:span
								"ok"
							Element:span
								:
							Element:span
								msg
							Element:span
								=
							Element:span
								"API error occured.
							Element:span
								\n
							Element:span
								error msg: {0}"
							Element:span
								.
							Element:span
								format
							Element:span
								(
							Element:span
								res_json
							Element:span
								[
							Element:span
								"err"
							Element:span
								]
							Element:span
								)
							Element:span
								raise
							Element:span
								AssertionError
							Element:span
								(
							Element:span
								msg
							Element:span
								)
							Element:span
								else
							Element:span
								:
							Element:span
								print
							Element:span
								(
							Element:span
								res_json
							Element:span
								)
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:a
							Element:span
								MENU
							Element:i
							Element:a
							Element:a
							Element:a
							Element:a
							Element:span
								© 2008-2017 Gengo, Inc
							Element:span
							Element:a
								ご利用規約
							Element:span
							Element:a
								品質方針
							Element:a
							Element:p
								法人様お問合せ先
							Element:br
								03-6450-5219
