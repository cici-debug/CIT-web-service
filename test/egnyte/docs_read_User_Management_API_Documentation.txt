Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					User Management API
			Node:
			(type) c
			(layer)1
				Element:p
					The User Management API allows you to create, update, get information about, and delete users. You can customize settings like user role or authentication type and even control whether a new user receives an invitation email.
			Node:
			(type) c
			(layer)1
				Element:p
					To get user information to an OAUTH Token
				Element:a
					please click here
					.
			Node:
			(type) c
			(layer)1
				Element:p
					Note that the endpoint for the User Management API should always begin like this:
					https://{Egnyte Domain}.egnyte.com
			Node:
			(type) c
			(layer)1
				Element:p
					Specific endpoints are listed with each method.
			Node:
			(type) c
			(layer)1
				Element:p
					Note that this API adheres to the
				Element:a
					SCIM (System for Cross-domain Identity Management)
					standard for user management.
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Common HTTP Headers
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														HTTP Request Headers
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:th
														Header
													Element:th
														Description
													Element:th
														Value
													Element:tr
													Element:td
														Content-Type
													Element:td
														Specifies the format of request body
													Element:td
													Element:span
														application/json
													Element:tr
													Element:td
														Authorization
													Element:td
														This must use the the OAuth token you obtained through the OAuth flow.
													Element:td
													Element:span
														Bearer
														{OAuth token}
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														HTTP Response Headers
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:th
														Header
													Element:th
														Description
													Element:th
														Value
													Element:tr
													Element:td
														Content-Type
													Element:td
														Specifies the format of response body
													Element:td
													Element:span
														application/json
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Common Response Codes
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
										Element:tr
										Element:th
											Error
										Element:th
											Description
										Element:tr
										Element:td
											200 or 201
										Element:td
											Successful operation
										Element:tr
										Element:td
											400
										Element:td
											Request is syntactically incorrect or violates schema
										Element:tr
										Element:td
											401
										Element:td
											Authentication failure
										Element:tr
										Element:td
											403
										Element:td
											Server does not support requested operation
										Element:tr
										Element:td
											500
										Element:td
											Internal server error
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Error Messages
									Node:
									(type) c
									(layer)3
										Element:p
											Errors are returned in the HTTP Status Code of the response. Human readable error messages are returned in an “Errors” JSON object in the response body. An example is shown below.
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 404 NOT FOUND { "Errors": [ { "description": "User 12345678 not found.", "code": "404" } ] }
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:span
								API Methods
						Node:
						(type) c
						(layer)2
							Element:p
								Note that endpoints described below are v2, unlike the other endpoints within the Egnyte API.
						Node:
						(type) c
						(layer)2
							Element:h3
							Element:span
								Get Single User
						Node:
						(type) c
						(layer)2
							Element:p
								Retrieves a single user.
						Node:
						(type) c
						(layer)2
							Element:span
								GET
								/pubapi/v2/users/{id}
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Method-specific Response Header:
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:th
														Header
													Element:th
														Description
													Element:th
														Value
													Element:tr
													Element:td
														Location
													Element:td
														Specifies the URL location for a user, including the user ID.
													Element:td
														https://domain.egnyte.com/pubapi/v2/users/{id}
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Sample Response Body
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "id": "12345678", "userName": "jmiller", "externalId": "S-1-5-21-3623811015-3361044348-30300820-1013", "email": "john.miller@example.com", "name": { "familyName": "Miller", "givenName": "John" }, "active": "true", createdDate: "2015-12-22T04:56:07.000+0000", lastActiveDate: "2016-08-10T15:52:07.000+0000", "locked": "false", "authType": "sso", "userType": "admin", "idpUserId": "jmiller" }
												Node:
												(type) c
												(layer)4
													Element:h3
													Element:span
														Get User List
												Node:
												(type) c
												(layer)4
													Element:p
														Retrieves all, or a chosen subset, of users.
												Node:
												(type) c
												(layer)4
													Element:span
														GET
														/pubapi/v2/users
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Pagination Query String Parameters
												Node:
												(type) c
												(layer)4
													Element:p
														Pagination of results is supported when retrieving multiple resources (e.g. users). Pagination is requested via URL query string parameters.
												Node:
												(type) c
												(layer)4
													Element:p
														The following table describes the pagination query string parameters for a request:
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:th
														Required
													Element:th
														Possible Values
													Element:tr
													Element:td
													Element:span
														startIndex
													Element:td
														The 1-based index of the first search result.
													Element:td
														No
													Element:td
														Non-negative integer that is ≥ 1
													Element:tr
													Element:td
													Element:span
														count
													Element:td
														Specifies the desired maximum number of search results per page; e.g., 50.
													Element:td
														No
													Element:td
														Must be a non-negative integer. The maximum count value supported is 100.
												Node:
												(type) c
												(layer)4
													Element:p
														The following table specifies the pagination attributes returned by Egnyte in the response:
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:th
														Element
													Element:th
														Description
													Element:tr
													Element:td
														itemsPerPage
													Element:td
														Non-negative Integer. Specifies the number of search results returned in a query response page; e.g., 50.
													Element:tr
													Element:td
														totalResults
													Element:td
														Non-negative Integer. Specifies the total number of results matching the query; e.g., 1000.
													Element:tr
													Element:td
														startIndex
													Element:td
														The 1-based index of the first result in the current set of search results; e.g., 1.
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Filtering Query String Parameter
												Node:
												(type) c
												(layer)4
													Element:p
														API consumers can request a subset of resources by specifying the
													Element:span
														filter
														URL query string parameter containing a filter expression.
												Node:
												(type) c
												(layer)4
													Element:p
														The expression language that is used in the filter parameter supports references to attributes and literals. The literal values can be strings enclosed in double quotes, numbers, date times enclosed in double quotes, and Boolean values; i.e., true or false. String literals MUST be valid JSON strings.
												Node:
												(type) c
												(layer)4
													Element:p
														The table below provides a brief description of the
													Element:span
														filter
														parameter.
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:th
														Required
													Element:th
														Supported Attributes
													Element:tr
													Element:td
													Element:span
														filter
													Element:td
														Allows you to request a subset of users.
													Element:td
														No
													Element:td
													Element:span
														email
														,
													Element:span
														externalId
														,
													Element:span
														userName
												Node:
												(type) c
												(layer)4
													Element:p
														The attribute name and attribute operator are case insensitive. For example, the following two expressions will evaluate to the same logical value:
														filter=userName Eq "john"
												Node:
												(type) c
												(layer)4
													Element:br
														filter=Username eq "john"
												Node:
												(type) c
												(layer)4
													Element:p
														The filter parameter MUST contain at least one valid Boolean expression. Each expression MUST contain an attribute name followed by an attribute operator and a value. Currently this API only supports the equal (Eq or eq) operator.
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Sample Response Body:
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "totalResults": 100, "itemsPerPage": 2, "startIndex": 1, "Resources": [ { "id": "12345678", "userName": "jmiller", "externalId": "S-1-5-21-3623811015-3361044348-30300820-1013", "email": "john.miller@example.com", "name": { "familyName": "Miller", "givenName": "John" }, "active": "true", createdDate: "2015-12-22T04:56:07.000+0000", lastActiveDate: "2016-08-10T15:52:07.000+0000", "locked": "false", "authType": "ad", "userType": "admin", "userPrincipalName": "jmiller@example.com" }, { "id": "17654328", "userName": "bjensen", "externalId": "S-1-5-21-3623811015-3361044348-30300820-1014", "email": "bjensen@example.com", "name": { "familyName": "Jensen", "givenName": "Barbara" }, "active": "true", createdDate: "2016-06-02T01:04:59.000+0000", lastActiveDate: "2016-08-06T19:22:34.000+0000", "locked": "false", "authType": "sso", "userType": "power", "idpUserId": "bjensen" } ] }
												Node:
												(type) c
												(layer)4
													Element:h3
													Element:span
														Create Single User
												Node:
												(type) c
												(layer)4
													Element:span
														POST
														/pubapi/v2/users
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:span
														Parameters:
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:th
														Required
													Element:th
														Possible Values
													Element:tr
													Element:td
													Element:span
														userName
													Element:td
														The Egnyte username for the user.
													Element:td
													Element:span
														Yes
													Element:td
														Username must start with a letter or digit. Special characters are not supported (with the exception of periods, hyphens, and underscores).
													Element:tr
													Element:td
													Element:span
														externalId
													Element:td
														This is an immutable unique identifier provided by the API consumer.
													Element:td
													Element:span
														Yes
													Element:td
														Any plain text (e.g. S-1-5-21-3623811015-3361044348-30300820-1013)
													Element:tr
													Element:td
													Element:span
														email
													Element:td
														The email address of the user.
													Element:td
													Element:span
														Yes
													Element:td
														Any valid email address (e.g. admin@acme.com)
													Element:tr
													Element:td
													Element:span
														familyName
													Element:td
														The last name of the user.
													Element:td
													Element:span
														Yes
													Element:td
														Any plain text (e.g. John)
													Element:tr
													Element:td
													Element:span
														givenName
													Element:td
														The first name of the user.
													Element:td
													Element:span
														Yes
													Element:td
														Any plain text (e.g. Smith)
													Element:tr
													Element:td
													Element:span
														active
													Element:td
														Whether the user is active or inactive.
													Element:td
													Element:span
														Yes
													Element:td
													Element:span
														True
														or
													Element:span
														False
													Element:tr
													Element:td
													Element:span
														sendInvite
													Element:td
														If set to true when creating a user, an invitation email will be sent (if the user is created in active state).
													Element:td
													Element:span
														Yes
													Element:td
													Element:span
														True
														or
													Element:span
														False
													Element:tr
													Element:td
													Element:span
														authType
													Element:td
														The authentication type for the user.
													Element:td
													Element:span
														Yes
													Element:td
													Element:span
														ad
														(AD),
													Element:span
														sso
														(SAML SSO),
													Element:span
														egnyte
														(Internal Egnyte)
													Element:tr
													Element:td
													Element:span
														userType
													Element:td
														The type of the user.
													Element:td
													Element:span
														Yes
													Element:td
													Element:span
														admin
														(Administrator),
													Element:span
														power
														(Power User),
													Element:span
														standard
														(Standard User)
													Element:tr
													Element:td
													Element:span
														role
													Element:td
														The role assigned to the user. Only applicable for Power Users.
													Element:td
														No
													Element:td
													Element:span
														Default
														or custom role name
													Element:tr
													Element:td
													Element:span
														idpUserId
													Element:td
														Only required if the user is SSO authenticated and not using default user mapping. Do not specify if user is not SSO authenticated.
													Element:td
														No
													Element:td
														This is the way the user is identified within the SAML Response from an SSO Identity Provider, i.e. the SAML Subject (e.g. jsmith)
													Element:tr
													Element:td
													Element:span
														userPrincipalName
													Element:td
														Do not specify if user is not AD authenticated.
													Element:td
														No
													Element:td
														Used to bind child authentication policies to a user when using Active Directory authentication in a multi-domain setup (e.g. jmiller@example.com)
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Sample Request Body
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "userName": "jmiller", "externalId": "S-1-5-21-3623811015-3361044348-30300820-1013", "email": "jmiller@example.com", "name": { "familyName": "Miller", "givenName": "John" }, "active": "true", "sendInvite": "true", "authType": "sso", "userType": "power", "idpUserId": "jmiller", "userPrincipalName": "jmiller@example.com" }
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Method-specific Response Header
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:th
														Header
													Element:th
														Description
													Element:th
														Value
													Element:tr
													Element:td
														Location
													Element:td
														Specifies the URL location for a user, including the user ID.
													Element:td
														https://domain.egnyte.com/pubapi/v2/users/{id}
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Sample Response Body
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "id": "12345678", "userName": "jmiller", "externalId": "S-1-5-21-3623811015-3361044348-30300820-1013", "email": "jmiller@example.com", "name": { "familyName": "Miller", "givenName": "John" }, "active": "true", "locked": "false", "authType": "sso", "userType": "power", "idpUserId": "jmiller" }
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Method-specific Response Code
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:th
														Header
													Element:th
														Description
													Element:tr
													Element:td
														409
													Element:td
														Server refused to create a new duplicate user
												Node:
												(type) c
												(layer)4
													Element:h3
													Element:span
														Update Single User
												Node:
												(type) c
												(layer)4
													Element:p
														Updates a single user. Partial updates are supported. Fields not specified in the request will not be updated.
												Node:
												(type) c
												(layer)4
													Element:span
														PATCH
														/pubapi/v2/users/{id}
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:span
														Parameters:
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:th
														Required
													Element:th
														Possible Values
													Element:tr
													Element:td
													Element:span
														id
													Element:td
														An opaque, immutable, unique identifier for the user, generated by Egnyte. This identifier is used to refer to the user in all API calls.
													Element:td
													Element:span
														Yes
													Element:td
														Must be the exact integer id for a given user.
													Element:tr
													Element:td
													Element:span
														email
													Element:td
														The email address of the user.
													Element:td
														No
													Element:td
														Any valid email address (e.g. admin@acme.com)
													Element:tr
													Element:td
													Element:span
														familyName
													Element:td
														The last name of the user.
													Element:td
														No
													Element:td
														Any plain text (e.g. John)
													Element:tr
													Element:td
													Element:span
														givenName
													Element:td
														The first name of the user.
													Element:td
														No
													Element:td
														Any plain text (e.g. Smith)
													Element:tr
													Element:td
													Element:span
														active
													Element:td
														Whether the user is active or inactive.
													Element:td
														No
													Element:td
													Element:span
														True
														or
													Element:span
														False
													Element:tr
													Element:td
													Element:span
														sendInvite
													Element:td
														If set to true when creating a user, an invitation email will be sent (if the user is created in active state).
													Element:td
														No
													Element:td
													Element:span
														True
														or
													Element:span
														False
													Element:tr
													Element:td
													Element:span
														authType
													Element:td
														The authentication type for the user.
													Element:td
														No
													Element:td
													Element:span
														ad
														(AD),
													Element:span
														sso
														(SAML SSO),
													Element:span
														egnyte
														(Internal Egnyte)
													Element:tr
													Element:td
													Element:span
														userType
													Element:td
														The Egnyte role of the user.
													Element:td
														No
													Element:td
													Element:span
														admin
														(Administrator),
													Element:span
														power
														(Power User),
													Element:span
														standard
														(Standard User)
													Element:tr
													Element:td
													Element:span
														idpUserId
													Element:td
														Only required if the user is SSO authenticated and not using default user mapping. Do not specify if user is not SSO authenticated.
													Element:td
														No
													Element:td
														This is the way the user is identified within the SAML Response from an SSO Identity Provider, i.e. the SAML Subject (e.g. jsmith)
													Element:tr
													Element:td
													Element:span
														userPrincipalName
													Element:td
														Do not specify if user is not AD authenticated.
													Element:td
														No
													Element:td
														Used to bind child authentication policies to a user when using Active Directory authentication in a multi-domain setup (e.g. jmiller@example.com)
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Sample Request Body
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "email": "john.miller@example.com", "userType": "admin" }
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Method-specific Response Header:
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:th
														Header
													Element:th
														Description
													Element:th
														Value
													Element:tr
													Element:td
														Location
													Element:td
														Specifies the URL location for a user, including the user ID.
													Element:td
														https://domain.egnyte.com/pubapi/v2/users/{id}
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Sample Response Body
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "id": "12345678", "userName": "jmiller", "externalId": "S-1-5-21-3623811015-3361044348-30300820-1013", "email": "john.miller@example.com", "name": { "familyName": "Miller", "givenName": "John" }, "active": "true", "locked": "false", "authType": "sso", "userType": "admin", "idpUserId": "jmiller" }
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Method-specific Response Code
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:th
														Error
													Element:th
														Description
													Element:tr
													Element:td
														404
													Element:td
														Specified user does not exist
												Node:
												(type) c
												(layer)4
													Element:h3
													Element:span
														Delete Single User
												Node:
												(type) c
												(layer)4
													Element:p
														Deletes a single user.
												Node:
												(type) c
												(layer)4
													Element:span
														DELETE
														/pubapi/v2/users/{id}
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Method-specific Response Code:
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:th
														Error
													Element:th
														Description
													Element:tr
													Element:td
														404
													Element:td
														Specified user does not exist
												Node:
												(type) c
												(layer)4
													Element:p
													Element:span
														version 131
													Element:span
														as of
													Element:abbr
														7 months ago
													Element:span
														by
													Element:span
													Element:a
														Cara de Freitas Bart
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:span
														Previous:
													Element:a
														Links API
													Element:li
													Element:span
														Up:
													Element:a
														Overview
													Element:li
													Element:span
														Next:
													Element:a
														Group Management API
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								Docs Navigation
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Overview
							Element:li
							Element:a
								Getting Started
							Element:li
							Element:a
								Authentication
							Element:li
							Element:a
								File System API
							Element:li
							Element:a
								Permissions API
							Element:li
							Element:a
								Events API
							Element:li
							Element:a
								Search API
							Element:li
							Element:a
								Links API
							Element:li
							Element:a
								User Management API
							Element:li
							Element:a
								Group Management API
							Element:li
							Element:a
								Audit Reporting API
							Element:li
							Element:a
								UI Integration Framework
							Element:li
							Element:a
								Trash API
							Element:li
							Element:a
								Comments API
							Element:li
							Element:a
								Metadata API
							Element:li
							Element:a
								Embedded UI API
							Element:li
							Element:a
								Bookmarks API
							Element:li
							Element:a
								Folder Options API
							Element:li
							Element:a
								Best Practices
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Get API Key
							Element:li
							Element:a
								API Docs
							Element:li
							Element:a
								Getting Started
							Element:li
							Element:a
								Explore APIs
							Element:li
							Element:a
								Explore SDKs
						Node:
						(type) c
						(layer)2
							Element:noscript
							Element:img
