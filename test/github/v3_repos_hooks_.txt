Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
				Element:a
					Webhooks
				Element:span
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					List hooks
				Element:li
				Element:a
					Get single hook
				Element:li
				Element:a
					Create a hook
				Element:li
				Element:a
					Edit a hook
				Element:li
				Element:a
					Test a push hook
				Element:li
				Element:a
					Ping a hook
				Element:li
				Element:a
					Delete a hook
				Element:li
				Element:a
					Receiving Webhooks
				Element:li
				Element:a
					PubSubHubbub
			Node:
			(type) c
			(layer)1
				Element:p
					The Repository Webhooks API allows repository admins to manage the post-receive hooks for a repository. Webhooks can be managed using the JSON HTTP API, or the
				Element:a
					PubSubHubbub API
					.
			Node:
			(type) c
			(layer)1
				Element:p
					If you would like to set up a single webhook to receive events from all of your organization's repositories, check out our
				Element:a
					API documentation for Organization Webhooks
					.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								List hooks
							Element:span
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								GET /repos/:owner/:repo/hooks
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Response
										Element:span
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											Status: 200 OK Link: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
										Element:span
											[
										Element:span
										Element:span
											{
										Element:span
										Element:span
											"id"
										Element:span
											:
										Element:span
										Element:span
											1
										Element:span
											,
										Element:span
										Element:span
											"url"
										Element:span
											:
										Element:span
										Element:span
											"https://api.github.com/repos/octocat/Hello-World/hooks/1"
										Element:span
											,
										Element:span
										Element:span
											"test_url"
										Element:span
											:
										Element:span
										Element:span
											"https://api.github.com/repos/octocat/Hello-World/hooks/1/test"
										Element:span
											,
										Element:span
										Element:span
											"ping_url"
										Element:span
											:
										Element:span
										Element:span
											"https://api.github.com/repos/octocat/Hello-World/hooks/1/pings"
										Element:span
											,
										Element:span
										Element:span
											"name"
										Element:span
											:
										Element:span
										Element:span
											"web"
										Element:span
											,
										Element:span
										Element:span
											"events"
										Element:span
											:
										Element:span
										Element:span
											[
										Element:span
										Element:span
											"push"
										Element:span
											,
										Element:span
										Element:span
											"pull_request"
										Element:span
										Element:span
											],
										Element:span
										Element:span
											"active"
										Element:span
											:
										Element:span
										Element:span
											true
										Element:span
											,
										Element:span
										Element:span
											"config"
										Element:span
											:
										Element:span
										Element:span
											{
										Element:span
										Element:span
											"url"
										Element:span
											:
										Element:span
										Element:span
											"http://example.com/webhook"
										Element:span
											,
										Element:span
										Element:span
											"content_type"
										Element:span
											:
										Element:span
										Element:span
											"json"
										Element:span
										Element:span
											},
										Element:span
										Element:span
											"updated_at"
										Element:span
											:
										Element:span
										Element:span
											"2011-09-06T20:39:23Z"
										Element:span
											,
										Element:span
										Element:span
											"created_at"
										Element:span
											:
										Element:span
										Element:span
											"2011-09-06T17:26:27Z"
										Element:span
										Element:span
											}
										Element:span
										Element:span
											]
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Get single hook
							Element:span
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								GET /repos/:owner/:repo/hooks/:id
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Response
										Element:span
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											Status: 200 OK
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
										Element:span
											{
										Element:span
										Element:span
											"id"
										Element:span
											:
										Element:span
										Element:span
											1
										Element:span
											,
										Element:span
										Element:span
											"url"
										Element:span
											:
										Element:span
										Element:span
											"https://api.github.com/repos/octocat/Hello-World/hooks/1"
										Element:span
											,
										Element:span
										Element:span
											"test_url"
										Element:span
											:
										Element:span
										Element:span
											"https://api.github.com/repos/octocat/Hello-World/hooks/1/test"
										Element:span
											,
										Element:span
										Element:span
											"ping_url"
										Element:span
											:
										Element:span
										Element:span
											"https://api.github.com/repos/octocat/Hello-World/hooks/1/pings"
										Element:span
											,
										Element:span
										Element:span
											"name"
										Element:span
											:
										Element:span
										Element:span
											"web"
										Element:span
											,
										Element:span
										Element:span
											"events"
										Element:span
											:
										Element:span
										Element:span
											[
										Element:span
										Element:span
											"push"
										Element:span
											,
										Element:span
										Element:span
											"pull_request"
										Element:span
										Element:span
											],
										Element:span
										Element:span
											"active"
										Element:span
											:
										Element:span
										Element:span
											true
										Element:span
											,
										Element:span
										Element:span
											"config"
										Element:span
											:
										Element:span
										Element:span
											{
										Element:span
										Element:span
											"url"
										Element:span
											:
										Element:span
										Element:span
											"http://example.com/webhook"
										Element:span
											,
										Element:span
										Element:span
											"content_type"
										Element:span
											:
										Element:span
										Element:span
											"json"
										Element:span
										Element:span
											},
										Element:span
										Element:span
											"updated_at"
										Element:span
											:
										Element:span
										Element:span
											"2011-09-06T20:39:23Z"
										Element:span
											,
										Element:span
										Element:span
											"created_at"
										Element:span
											:
										Element:span
										Element:span
											"2011-09-06T17:26:27Z"
										Element:span
										Element:span
											}
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Create a hook
							Element:span
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								POST /repos/:owner/:repo/hooks
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Note
								: Repository service hooks (like email or Campfire) can have at most one configured at a time. Creating hooks for a service that already has one configured will
							Element:a
								update the existing hook
								.
						Node:
						(type) c
						(layer)2
							Element:p
								Repositories can have multiple webhooks installed. Each webhook should have a unique
							Element:code
								config
								. Multiple webhooks can share the same
							Element:code
								config
								as long as those webhooks do not have any
							Element:code
								events
								that overlap.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Parameters
										Element:span
									Node:
									(type) c
									(layer)3
										Element:table
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:code
											name
										Element:td
										Element:code
											string
										Element:td
										Element:strong
											Required
											. Use
										Element:code
											web
											for a webhook or use the name of a valid service. (See
										Element:a
											/hooks
											for the list of valid service names.)
										Element:tr
										Element:td
										Element:code
											config
										Element:td
										Element:code
											object
										Element:td
										Element:strong
											Required
											. Key/value pairs to provide settings for this hook. These settings vary between hooks and some are defined in the
										Element:a
											github-services
											repository. Booleans are stored internally as "1" for true, and "0" for false. Any JSON
										Element:code
											true
											/
										Element:code
											false
											values will be converted automatically.
										Element:tr
										Element:td
										Element:code
											events
										Element:td
										Element:code
											array
										Element:td
											Determines what events the hook is triggered for. Default:
										Element:code
											["push"]
										Element:tr
										Element:td
										Element:code
											active
										Element:td
										Element:code
											boolean
										Element:td
											Determines whether the hook is actually triggered on pushes.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:a
														Example
													Element:span
												Node:
												(type) c
												(layer)4
													Element:p
														To create
													Element:a
														a webhook
														, the following fields are required by the
													Element:code
														config
														:
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:code
														url
														: A required string defining the URL to which the payloads will be delivered.
													Element:li
													Element:code
														content_type
														: An optional string defining the media type used to serialize the payloads. Supported values include
													Element:code
														json
														and
													Element:code
														form
														. The default is
													Element:code
														form
														.
													Element:li
													Element:code
														secret
														: An optional string that's passed with the HTTP requests as an
													Element:code
														X-Hub-Signature
														header. The value of this header is computed as the HMAC hex digest of the body, using the
													Element:code
														secret
														as the key.
													Element:li
													Element:code
														insecure_ssl
														: An optional string that determines whether the SSL certificate of the host for
													Element:code
														url
														will be verified when delivering payloads. Supported values include
													Element:code
														"0"
														(verification is performed) and
													Element:code
														"1"
														(verification is not performed). The default is
													Element:code
														"0"
														.
												Node:
												(type) c
												(layer)4
													Element:p
														Here's how you can create a hook that posts payloads in JSON format:
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														{
													Element:span
													Element:span
														"name"
													Element:span
														:
													Element:span
													Element:span
														"web"
													Element:span
														,
													Element:span
													Element:span
														"active"
													Element:span
														:
													Element:span
													Element:span
														true
													Element:span
														,
													Element:span
													Element:span
														"events"
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														"push"
													Element:span
														,
													Element:span
													Element:span
														"pull_request"
													Element:span
													Element:span
														],
													Element:span
													Element:span
														"config"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"url"
													Element:span
														:
													Element:span
													Element:span
														"http://example.com/webhook"
													Element:span
														,
													Element:span
													Element:span
														"content_type"
													Element:span
														:
													Element:span
													Element:span
														"json"
													Element:span
													Element:span
														}
													Element:span
													Element:span
														}
													Element:span
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Response
										Element:span
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											Status: 201 Created Location: https://api.github.com/repos/octocat/Hello-World/hooks/1
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
										Element:span
											{
										Element:span
										Element:span
											"id"
										Element:span
											:
										Element:span
										Element:span
											1
										Element:span
											,
										Element:span
										Element:span
											"url"
										Element:span
											:
										Element:span
										Element:span
											"https://api.github.com/repos/octocat/Hello-World/hooks/1"
										Element:span
											,
										Element:span
										Element:span
											"test_url"
										Element:span
											:
										Element:span
										Element:span
											"https://api.github.com/repos/octocat/Hello-World/hooks/1/test"
										Element:span
											,
										Element:span
										Element:span
											"ping_url"
										Element:span
											:
										Element:span
										Element:span
											"https://api.github.com/repos/octocat/Hello-World/hooks/1/pings"
										Element:span
											,
										Element:span
										Element:span
											"name"
										Element:span
											:
										Element:span
										Element:span
											"web"
										Element:span
											,
										Element:span
										Element:span
											"events"
										Element:span
											:
										Element:span
										Element:span
											[
										Element:span
										Element:span
											"push"
										Element:span
											,
										Element:span
										Element:span
											"pull_request"
										Element:span
										Element:span
											],
										Element:span
										Element:span
											"active"
										Element:span
											:
										Element:span
										Element:span
											true
										Element:span
											,
										Element:span
										Element:span
											"config"
										Element:span
											:
										Element:span
										Element:span
											{
										Element:span
										Element:span
											"url"
										Element:span
											:
										Element:span
										Element:span
											"http://example.com/webhook"
										Element:span
											,
										Element:span
										Element:span
											"content_type"
										Element:span
											:
										Element:span
										Element:span
											"json"
										Element:span
										Element:span
											},
										Element:span
										Element:span
											"updated_at"
										Element:span
											:
										Element:span
										Element:span
											"2011-09-06T20:39:23Z"
										Element:span
											,
										Element:span
										Element:span
											"created_at"
										Element:span
											:
										Element:span
										Element:span
											"2011-09-06T17:26:27Z"
										Element:span
										Element:span
											}
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Edit a hook
							Element:span
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								PATCH /repos/:owner/:repo/hooks/:id
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Parameters
										Element:span
									Node:
									(type) c
									(layer)3
										Element:table
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:code
											config
										Element:td
										Element:code
											object
										Element:td
											Key/value pairs to provide settings for this hook. Modifying this will replace the entire config object. These settings vary between hooks and some are defined in the
										Element:a
											github-services
											repository. Booleans are stored internally as "1" for true, and "0" for false. Any JSON
										Element:code
											true
											/
										Element:code
											false
											values will be converted automatically.
										Element:tr
										Element:td
										Element:code
											events
										Element:td
										Element:code
											array
										Element:td
											Determines what events the hook is triggered for. This replaces the entire array of events. Default:
										Element:code
											["push"]
										Element:tr
										Element:td
										Element:code
											add_events
										Element:td
										Element:code
											array
										Element:td
											Determines a list of events to be added to the list of events that the Hook triggers for.
										Element:tr
										Element:td
										Element:code
											remove_events
										Element:td
										Element:code
											array
										Element:td
											Determines a list of events to be removed from the list of events that the Hook triggers for.
										Element:tr
										Element:td
										Element:code
											active
										Element:td
										Element:code
											boolean
										Element:td
											Determines whether the hook is actually triggered on pushes.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:a
														Example
													Element:span
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														{
													Element:span
													Element:span
														"active"
													Element:span
														:
													Element:span
													Element:span
														true
													Element:span
														,
													Element:span
													Element:span
														"add_events"
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														"pull_request"
													Element:span
													Element:span
														]
													Element:span
													Element:span
														}
													Element:span
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Response
										Element:span
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											Status: 200 OK
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
										Element:span
											{
										Element:span
										Element:span
											"id"
										Element:span
											:
										Element:span
										Element:span
											1
										Element:span
											,
										Element:span
										Element:span
											"url"
										Element:span
											:
										Element:span
										Element:span
											"https://api.github.com/repos/octocat/Hello-World/hooks/1"
										Element:span
											,
										Element:span
										Element:span
											"test_url"
										Element:span
											:
										Element:span
										Element:span
											"https://api.github.com/repos/octocat/Hello-World/hooks/1/test"
										Element:span
											,
										Element:span
										Element:span
											"ping_url"
										Element:span
											:
										Element:span
										Element:span
											"https://api.github.com/repos/octocat/Hello-World/hooks/1/pings"
										Element:span
											,
										Element:span
										Element:span
											"name"
										Element:span
											:
										Element:span
										Element:span
											"web"
										Element:span
											,
										Element:span
										Element:span
											"events"
										Element:span
											:
										Element:span
										Element:span
											[
										Element:span
										Element:span
											"push"
										Element:span
											,
										Element:span
										Element:span
											"pull_request"
										Element:span
										Element:span
											],
										Element:span
										Element:span
											"active"
										Element:span
											:
										Element:span
										Element:span
											true
										Element:span
											,
										Element:span
										Element:span
											"config"
										Element:span
											:
										Element:span
										Element:span
											{
										Element:span
										Element:span
											"url"
										Element:span
											:
										Element:span
										Element:span
											"http://example.com/webhook"
										Element:span
											,
										Element:span
										Element:span
											"content_type"
										Element:span
											:
										Element:span
										Element:span
											"json"
										Element:span
										Element:span
											},
										Element:span
										Element:span
											"updated_at"
										Element:span
											:
										Element:span
										Element:span
											"2011-09-06T20:39:23Z"
										Element:span
											,
										Element:span
										Element:span
											"created_at"
										Element:span
											:
										Element:span
										Element:span
											"2011-09-06T17:26:27Z"
										Element:span
										Element:span
											}
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Test a
							Element:span
							Element:code
								push
								hook
						Node:
						(type) c
						(layer)2
							Element:p
								This will trigger the hook with the latest push to the current repository if the hook is subscribed to
							Element:code
								push
								events. If the hook is not subscribed to
							Element:code
								push
								events, the server will respond with 204 but no test POST will be generated.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								POST /repos/:owner/:repo/hooks/:id/tests
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Note
								: Previously
							Element:code
								/repos/:owner/:repo/hooks/:id/test
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Response
										Element:span
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											Status: 204 No Content
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Ping a hook
							Element:span
						Node:
						(type) c
						(layer)2
							Element:p
								This will trigger a
							Element:a
								ping event
								to be sent to the hook.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								POST /repos/:owner/:repo/hooks/:id/pings
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Response
										Element:span
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											Status: 204 No Content
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Delete a hook
							Element:span
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								DELETE /repos/:owner/:repo/hooks/:id
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Response
										Element:span
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											Status: 204 No Content
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Receiving Webhooks
							Element:span
						Node:
						(type) c
						(layer)2
							Element:p
								In order for GitHub to send webhook payloads, your server needs to be accessible from the Internet. We also highly suggest using SSL so that we can send encrypted payloads over HTTPS.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Webhook Headers
										Element:span
									Node:
									(type) c
									(layer)3
										Element:p
											GitHub will send along several HTTP headers to differentiate between event types and payload identifiers.
									Node:
									(type) c
									(layer)3
										Element:table
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:code
											X-GitHub-Event
										Element:td
											The
										Element:a
											event type
											that was triggered.
										Element:tr
										Element:td
										Element:code
											X-GitHub-Delivery
										Element:td
											A
										Element:a
											guid
											to identify the payload and event being sent.
										Element:tr
										Element:td
										Element:code
											X-Hub-Signature
										Element:td
											The value of this header is computed as the HMAC hex digest of the body, using the
										Element:code
											secret
											config option as the key.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								PubSubHubbub
							Element:span
						Node:
						(type) c
						(layer)2
							Element:p
								GitHub can also serve as a
							Element:a
								PubSubHubbub
								hub for all repositories. PSHB is a simple publish/subscribe protocol that lets servers register to receive updates when a topic is updated. The updates are sent with an HTTP POST request to a callback URL. Topic URLs for a GitHub repository's pushes are in this format:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								https://github.com/:owner/:repo/events/:event
						Node:
						(type) c
						(layer)2
							Element:p
								The event can be any
							Element:a
								event
								string that is listed at the top of this document.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Response format
										Element:span
									Node:
									(type) c
									(layer)3
										Element:p
											The default format is what
										Element:a
											existing post-receive hooks should expect
											: A JSON body sent as the
										Element:code
											payload
											parameter in a POST. You can also specify to receive the raw JSON body with either an
										Element:code
											Accept
											header, or a
										Element:code
											.json
											extension.
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											Accept: application/json https://github.com/:owner/:repo/events/push.json
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Callback URLs
										Element:span
									Node:
									(type) c
									(layer)3
										Element:p
											Callback URLs can use either the
										Element:code
											http://
											protocol, or
										Element:code
											github://
											.
										Element:code
											github://
											callbacks specify a GitHub service.
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											# Send updates to postbin.org http://postbin.org/123 # Send updates to Campfire github://campfire?subdomain=github&room=Commits&token=abc123
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Subscribing
										Element:span
									Node:
									(type) c
									(layer)3
										Element:p
											The GitHub PubSubHubbub endpoint is:
										Element:code
											https://api.github.com/hub
											. (GitHub Enterprise users should use
										Element:code
											http://yourhost/api/v3/hub
											as the PubSubHubbub endpoint, but not change the
										Element:code
											hub.topic
											URI format.) A successful request with curl looks like:
									Node:
									(type) c
									(layer)3
										Element:pre
											curl -u "user" -i \ https://api.github.com/hub \ -F "hub.mode=subscribe" \ -F "hub.topic=https://github.com/:owner/:repo/events/push" \ -F "hub.callback=http://postbin.org/123"
									Node:
									(type) c
									(layer)3
										Element:p
											PubSubHubbub requests can be sent multiple times. If the hook already exists, it will be modified according to the request.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:a
														Parameters
													Element:span
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Type
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:code
														hub.mode
													Element:td
													Element:code
														string
													Element:td
													Element:strong
														Required
														. Either
													Element:code
														subscribe
														or
													Element:code
														unsubscribe
														.
													Element:tr
													Element:td
													Element:code
														hub.topic
													Element:td
													Element:code
														string
													Element:td
													Element:strong
														Required
														. The URI of the GitHub repository to subscribe to. The path must be in the format of
													Element:code
														/:owner/:repo/events/:event
														.
													Element:tr
													Element:td
													Element:code
														hub.callback
													Element:td
													Element:code
														string
													Element:td
														The URI to receive the updates to the topic.
													Element:tr
													Element:td
													Element:code
														hub.secret
													Element:td
													Element:code
														string
													Element:td
														A shared secret key that generates a SHA1 HMAC of the outgoing body content. You can verify a push came from GitHub by comparing the raw request body with the contents of the
													Element:code
														X-Hub-Signature
														header. You can see
													Element:a
														the PubSubHubbub documentation
														for more details.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:h3
										Element:a
										Element:a
											Overview
										Element:ul
										Element:li
										Element:a
											Media Types
										Element:li
										Element:a
											OAuth
										Element:li
										Element:a
											OAuth Authorizations API
										Element:li
										Element:a
											Other Authentication Methods
										Element:li
										Element:a
											Troubleshooting
										Element:li
										Element:a
											Pre-release Program
										Element:li
										Element:a
											API Previews
										Element:li
										Element:a
											Versions
										Element:li
										Element:h3
										Element:a
										Element:a
											Activity
										Element:ul
										Element:li
										Element:a
											Events
										Element:li
										Element:a
											Event Types & Payloads
										Element:li
										Element:a
											Feeds
										Element:li
										Element:a
											Notifications
										Element:li
										Element:a
											Starring
										Element:li
										Element:a
											Watching
										Element:li
										Element:h3
										Element:a
										Element:a
											Gists
										Element:ul
										Element:li
										Element:a
											Comments
										Element:li
										Element:h3
										Element:a
										Element:a
											Git Data
										Element:ul
										Element:li
										Element:a
											Blobs
										Element:li
										Element:a
											Commits
										Element:li
										Element:a
											References
										Element:li
										Element:a
											Tags
										Element:li
										Element:a
											Trees
										Element:li
										Element:h3
										Element:a
										Element:a
											Integrations
										Element:ul
										Element:li
										Element:a
											Integrations
										Element:li
										Element:a
											Installations
										Element:li
										Element:h3
										Element:a
										Element:a
											Issues
										Element:ul
										Element:li
										Element:a
											Assignees
										Element:li
										Element:a
											Comments
										Element:li
										Element:a
											Events
										Element:li
										Element:a
											Labels
										Element:li
										Element:a
											Milestones
										Element:li
										Element:a
											Timeline
										Element:li
										Element:h3
										Element:a
										Element:a
											Migration
										Element:ul
										Element:li
										Element:a
											Migrations
										Element:li
										Element:a
											Source Imports
										Element:li
										Element:h3
										Element:a
										Element:a
											Miscellaneous
										Element:ul
										Element:li
										Element:a
											Emojis
										Element:li
										Element:a
											Gitignore
										Element:li
										Element:a
											Licenses
										Element:li
										Element:a
											Markdown
										Element:li
										Element:a
											Meta
										Element:li
										Element:a
											Rate Limit
										Element:li
										Element:h3
										Element:a
										Element:a
											Organizations
										Element:ul
										Element:li
										Element:a
											Members
										Element:li
										Element:a
											Outside Collaborators
										Element:li
										Element:a
											Teams
										Element:li
										Element:a
											Webhooks
										Element:li
										Element:a
											Blocking Users (Organizations)
										Element:li
										Element:h3
										Element:a
										Element:a
											Projects
										Element:ul
										Element:li
										Element:a
											Cards
										Element:li
										Element:a
											Columns
										Element:li
										Element:h3
										Element:a
										Element:a
											Pull Requests
										Element:ul
										Element:li
										Element:a
											Reviews
										Element:li
										Element:a
											Review Comments
										Element:li
										Element:a
											Review Requests
										Element:li
										Element:h3
										Element:a
										Element:a
											Reactions
										Element:ul
										Element:li
										Element:a
											Commit Comment
										Element:li
										Element:a
											Issue
										Element:li
										Element:a
											Issue Comment
										Element:li
										Element:a
											Pull Request Review Comment
										Element:li
										Element:h3
										Element:a
										Element:a
											Repositories
										Element:ul
										Element:li
										Element:a
											Branches
										Element:li
										Element:a
											Collaborators
										Element:li
										Element:a
											Comments
										Element:li
										Element:a
											Community
										Element:li
										Element:a
											Commits
										Element:li
										Element:a
											Contents
										Element:li
										Element:a
											Deploy Keys
										Element:li
										Element:a
											Deployments
										Element:li
										Element:a
											Downloads
										Element:li
										Element:a
											Forks
										Element:li
										Element:a
											Invitations
										Element:li
										Element:a
											Merging
										Element:li
										Element:a
											Pages
										Element:li
										Element:a
											Releases
										Element:li
										Element:a
											Statistics
										Element:li
										Element:a
											Statuses
										Element:li
										Element:a
											Traffic
										Element:li
										Element:a
											Webhooks
										Element:li
										Element:h3
										Element:a
										Element:a
											Search
										Element:ul
										Element:li
										Element:a
											Repositories
										Element:li
										Element:a
											Code
										Element:li
										Element:a
											Commits
										Element:li
										Element:a
											Issues
										Element:li
										Element:a
											Users
										Element:li
										Element:a
											Legacy Search
										Element:li
										Element:h3
										Element:a
										Element:a
											Users
										Element:ul
										Element:li
										Element:a
											Emails
										Element:li
										Element:a
											Followers
										Element:li
										Element:a
											Git SSH Keys
										Element:li
										Element:a
											GPG Keys
										Element:li
										Element:a
											Administration (Enterprise)
										Element:li
										Element:a
											Blocking Users
										Element:li
										Element:h3
										Element:a
										Element:a
											Enterprise
										Element:ul
										Element:li
										Element:a
											Admin Stats
										Element:li
										Element:a
											LDAP
										Element:li
										Element:a
											License
										Element:li
										Element:a
											Management Console
										Element:li
										Element:a
											Pre-receive Environments
										Element:li
										Element:a
											Pre-receive Hooks
										Element:li
										Element:a
											Search Indexing
										Element:li
										Element:a
											Organization Administration
									Node:
									(type) c
									(layer)3
										Element:a
											API Status
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:span
											© 2017 GitHub Inc. All rights reserved.
										Element:span
