Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					.NET SDK
			Node:
			(type) c
			(layer)1
				Element:p
					Working with the AccountRight Live API
			Node:
			(type) c
			(layer)1
				Element:span
				Element:strong
					Date Updated:
					Nov 6th 2014
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											SDK Services
									Node:
									(type) c
									(layer)3
										Element:p
											The service classes accessible in the SDK provide the core HTTP operations available for each consumable endpoint. These include the following operators:
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Get/GetRange – HTTP GET
										Element:br
										Element:strong
											Insert – HTTP POST
										Element:br
										Element:strong
											Update – HTTP PUT
										Element:br
										Element:strong
											Delete – HTTP DELETE
										Element:br
									Node:
									(type) c
									(layer)3
										Element:p
											Each single endpoint documented online details which of these operators they support. The entire list of endpoints available for the AccountRight API and SDK
										Element:a
											can be found here
									Node:
									(type) c
									(layer)3
										Element:p
											Let’s take the
										Element:a
											customer endpoint
											as an example, the online documentation tells us that all operators are supported here so we can create, retrieve, update and delete (CRUD) for customer.
									Node:
									(type) c
									(layer)3
										Element:img
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:p
											To initialise a customer service that can be used to access the customer’s endpoint resources (contracts) you’ll firstly need to make sure you’re including the
										Element:strong
											Contact services
											in your code in order to resolve the namespace:
									Node:
									(type) c
									(layer)3
										Element:code
											using MYOB.AccountRight.SDK.Services.Contact;
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:p
											Once this is done, you are able to now initialise the
										Element:strong
											CustomerService
											by calling it like so: (custService is an example of a local variable name only).
									Node:
									(type) c
									(layer)3
										Element:code
											var custService = new CustomerService(configuration);
									Node:
									(type) c
									(layer)3
										Element:strong
											(c#)
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:code
											Dim custService = new CustomerService(configuration)
									Node:
									(type) c
									(layer)3
										Element:strong
											(vb.net)
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:p
											To use the operators i.e.
										Element:strong
											Insert (HTTP POST)
											to insert a new entity or
										Element:strong
											Update (HTTP PUT)
											updating an existing entity, you can simply construct like so:
									Node:
									(type) c
									(layer)3
										Element:code
											custService.Insert(companyFile, customers, credentials, OnError);
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:code
											custService.Update(companyFile, customers, credentials, OnError);
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:p
											For retrieving a single entity use
										Element:strong
											Get (HTTP GET)
											and for a paged list of entities use
										Element:strong
											GetRange
									Node:
									(type) c
									(layer)3
										Element:code
											custSerivce.Get(companyFile, null, credentials);
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:code
											custService.GetRange(companyFile, null, credentials);
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:p
										Element:em
											Examples of synchronous versus asynchronous to come shortly...
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											API
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Express your interest
										Element:li
										Element:a
											MYOB AccountRight API
										Element:li
										Element:a
											MYOB Essentials API
										Element:li
										Element:a
											MYOB EXO API
										Element:li
										Element:a
											MYOBapi Blog
										Element:li
										Element:a
											Google+
										Element:li
										Element:a
											MYOB Corporate
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Support
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											AccountRight API Forums
										Element:li
										Element:a
											EXO API Forums
										Element:li
										Element:a
											MYOB Advanced Developer Forums
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Social
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											MYOBapi on Twitter
										Element:li
										Element:a
											MYOB on Twitter
										Element:li
										Element:a
											MYOBapi on Instagram
										Element:li
										Element:a
											MYOB on GitHub
										Element:li
										Element:a
											Google+
									Node:
									(type) c
									(layer)3
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											Copyright © 2015 MYOB Technology Pty Ltd
