Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Headers
			Node:
			(type) c
			(layer)1
				Element:span
				Element:strong
					Date Updated:
					Jun 1st 2014
			Node:
			(type) c
			(layer)1
				Element:p
					With the two APIs (desktop and cloud) we have worked hard to keep the differences between them at bay. All our endpoints and calls are the same, making it really easy to have apps work in either environment. The only thing you need to tweak between the two are the headers you set to talk to the apis.
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Cloud & oauth
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
										Element:tr
										Element:th
											Header
										Element:th
											Takes
										Element:tr
										Element:td
										Element:code
											Authorization:
										Element:td
											Bearer [OAUTH_ACCESS_TOKEN]
										Element:tr
										Element:td
										Element:code
											x-myobapi-cftoken:
										Element:td
											[Base64Encode(username:password)]
										Element:tr
										Element:td
										Element:code
											x-myobapi-key:
										Element:td
											[dev_key]
										Element:tr
										Element:td
										Element:code
											x-myobapi-version:
										Element:td
											v2
										Element:tr
										Element:td
										Element:code
											Accept-Encoding:
										Element:td
											gzip,deflate
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:p
										Element:em
										Element:code
											accept-encoding:
											is recommended to compress the data returned from the server reducing download size
									Node:
									(type) c
									(layer)3
										Element:p
											An example of this could look like:
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:pre
											Authorization: Bearer [OAUTH_ACCESS_TOKEN] x-myobapi-cftoken: ABCta353c5R6YXRvcjo= x-myobapi-key: [API_KEY_HERE] x-myobapi-version: v2
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:p
										Element:small
											Note: 'ABCta353c5R6YXRvcjo=' in above is example only, replace with your OWN credentials
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Working locally?
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
										Element:tr
										Element:th
											Header
										Element:th
											Takes
										Element:tr
										Element:td
										Element:code
											Authorization:
										Element:td
											Basic [Base64Encode(username:password)]
										Element:tr
										Element:td
										Element:strong
										Element:em
											Or
										Element:code
											x-myobapi-cftoken:
										Element:td
											[Base64Encode(username:password)]
										Element:tr
										Element:td
										Element:code
											x-myobapi-key:
										Element:td
											[dev_key]
										Element:tr
										Element:td
										Element:code
											x-myobapi-version:
										Element:td
											v2
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:p
											An example using the
										Element:strong
											Authorization
											header:
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:pre
											Authorization: Basic ABCta353c5R6YXRvcjo= x-myobapi-version: v2
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:p
											The
										Element:strong
											recommended
											method is this example using the
										Element:code
											x-myobapi-cftoken:
											header:
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:pre
											x-myobapi-cftoken: ABCta353c5R6YXRvcjo= x-myobapi-version: v2
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:p
										Element:small
											Note: 'ABCta353c5R6YXRvcjo=' in above is example only, replace with your OWN credentials
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											If-None-Match and HTTP Etag
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Compare ETag for current version of a resource
									Node:
									(type) c
									(layer)3
										Element:p
										Element:a
											ETag
											is returned across all our endpoints as part of the response headers and can be used in conjunction with
										Element:strong
											If-None-Match
											as a way to check if a collection list or individual resource has changed.
									Node:
									(type) c
									(layer)3
										Element:p
											The Etag response header looks like
										Element:code
											ETag: "-1674987083"
									Node:
									(type) c
									(layer)3
										Element:p
											To query this through our request headers, pass like so
										Element:code
											If-None-Match: "-1674987083"
									Node:
									(type) c
									(layer)3
										Element:p
											If the collection or individual resource hasn't been modified based on the request made, 304 Not Modified with an empty body is returned, if the resource has been modified 200 success code along with the resource is returned.
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											If-Modified-Since
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											If-Modified-Since for contact collection
									Node:
									(type) c
									(layer)3
										Element:p
											The If-Modified-Since request-header is used to make conditional calls to our
										Element:a
											contact endpoints
											checking if the requested contact resource has not been modified since the time specified in this field.
									Node:
									(type) c
									(layer)3
										Element:p
											To query this through our request headers, pass like so:
										Element:code
											If-Modified-Since: Fri, 21 Mar 2014 02:51:32 GMT
									Node:
									(type) c
									(layer)3
										Element:p
											If the contact resource hasn't been modified based on the request made, 304 Not Modified with an empty body is returned, if the resource has been modified 200 success code along with the resource is returned.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Note:
											condititonal calls are only valid for an individual contact resource with the date format HTTP-date.
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											The Company files
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Accessing with '
										Element:em
											Username | Password
											'
									Node:
									(type) c
									(layer)3
										Element:p
											Each company file in MYOB AccountRight Live has the ability to carry a username and password to authenticate the file users. When accessing the company file via the API (regardless of desktop or cloud) you must pass the Username and Password for the company file as a Base 64 Encoded string - this is known as Basic Authentication. Many languages have a function called Base64Encode(Useranme:Password).
									Node:
									(type) c
									(layer)3
										Element:p
										Element:small
										Element:strong
											Note:
											you must put a : between the username and password.
									Node:
									(type) c
									(layer)3
										Element:p
											The desktop accepts the company file (cf) credentials in
										Element:strong
											base64 encoding
											in either the basic Authorization header, or a customer x_myobapi_cftoken header.
									Node:
									(type) c
									(layer)3
										Element:p
											The cloud requires three elements in the header with the basic Authentication header carrying the OAuth token, the x_myobapi_cftoken taking the company file credentials in
										Element:strong
											base64 encoding
											and the x_myobapi_key taking the developer key
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Sandbox Files
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Sandbox Company File Credentials
									Node:
									(type) c
									(layer)3
										Element:p
											If you are working against the provided Sandbox Files, the following credentials should be used:
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Username:
											Administrator
										Element:br
										Element:strong
											Password:
											(just leave this blank)
									Node:
									(type) c
									(layer)3
										Element:p
											As described above you'll need to base64 encode this. Here's a quick sample of what this looks like using
										Element:strong
											php's
											built in
										Element:code
											base64_encode()
											function.
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:pre
											$username = 'Administrator'; $password = ''; base64_encode($username.':'.$password);
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Resources
									Node:
									(type) c
									(layer)3
										Element:p
											Need a little more help with Authentication? Check out some of these handy online resources.
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Basic Access Authentication
										Element:li
										Element:a
											Base 64 Encoding with vb.net
										Element:a
										Element:li
										Element:a
										Element:a
											Base 64 Encode with PHP
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											API
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Express your interest
										Element:li
										Element:a
											MYOB AccountRight API
										Element:li
										Element:a
											MYOB Essentials API
										Element:li
										Element:a
											MYOB EXO API
										Element:li
										Element:a
											MYOBapi Blog
										Element:li
										Element:a
											Google+
										Element:li
										Element:a
											MYOB Corporate
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Support
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											AccountRight API Forums
										Element:li
										Element:a
											EXO API Forums
										Element:li
										Element:a
											MYOB Advanced Developer Forums
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Social
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											MYOBapi on Twitter
										Element:li
										Element:a
											MYOB on Twitter
										Element:li
										Element:a
											MYOBapi on Instagram
										Element:li
										Element:a
											MYOB on GitHub
										Element:li
										Element:a
											Google+
									Node:
									(type) c
									(layer)3
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											Copyright © 2015 MYOB Technology Pty Ltd
