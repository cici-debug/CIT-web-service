Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Best Practice Guides
			Node:
			(type) c
			(layer)1
				Element:p
					for MYOB AccountRight Live API
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Hypermedia & URI's
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								What is HATEOAS
						Node:
						(type) c
						(layer)2
							Element:p
								One of the core principles of a REST API is being able to navigate resources without needing to know about their location. Hypermedia as the Engine of Application State (HATEOAS) is roughly speaking the inclusion of links and URI’s between resources in your API. Without these links, API consumers would need to know specific resource locations and how to query them.
						Node:
						(type) c
						(layer)2
							Element:p
								When using these links, you can query a known API URL as an entry point to the API and then navigate the response links to find other resources in the API. In theory, you only need to know the API's entry point to be able to query it!
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								How is this relevant to AccountRight Live
						Node:
						(type) c
						(layer)2
							Element:p
								In AccountRight Live, we have two entry point URL’s: one for the cloud API and one for the local API. Here we'll refer to the cloud API, but the principles and best practice still apply to the desktop API as well.
						Node:
						(type) c
						(layer)2
							Element:p
								The AccountRight Live API entry URL is
							Element:code
								https://api.myob.com/accountright/
								. Making a GET request on this resource will return a list of the company files you have access to. This is determined by the my.myob user who's logged in via Oauth.
						Node:
						(type) c
						(layer)2
							Element:p
								For example, you might get a response with one company file:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								{ "items": [{ "Id": "d2014f64-ffdf-487b-8d12-67a20976aca6", "Name": "Best Practice Guides", "LibraryPath": "Internal Sandbox API", "ProductVersion": "2015.4", "ProductLevel": { "Code": 20, "Name": "Standard" }, "CheckedOutDate": null, "CheckedOutBy” : null, "Uri": "https://ar3.api.myob.com/accountright/d2014f64-ffdf-487b-8d12-67a20976aca6/", "Country": "AU" }] }
						Node:
						(type) c
						(layer)2
							Element:p
								Take a close look at the use of the URI field – this is the link between resources. In this example its a link to the company file.
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								AccountRightLive Best Practice
						Node:
						(type) c
						(layer)2
							Element:p
								In the example above, the Company File called “Best Practice Guides” is located at
							Element:code
								https://ar3.api.myob.com/accountright/d2014f64-ffdf-487b-8d12-67a20976aca6/
								. A further GET request to this endpoint will return a long list of API resources that you’re able to access. Noting of course that you will need to provide the
							Element:code
								x-myobapi-cftoken
								header.
						Node:
						(type) c
						(layer)2
							Element:p
								Let's assume for a moment that we want to retrieve a list of employees from this company file. To do this we'd need to do make a GET request to the Contact/Employee endpoint.
						Node:
						(type) c
						(layer)2
							Element:p
								The best way to achieve this is to either:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								Combine the Company File URI from the first request with ‘/Contact/Employee’ or
							Element:li
								Use the URI returned from the API when querying the company file endpoint.
						Node:
						(type) c
						(layer)2
							Element:p
								In an ideal, best practice implementation you shouldn't need to manually construct any URIs while using the AccountRight Live API.
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								Why not construct URIs?
						Node:
						(type) c
						(layer)2
							Element:p
								If you manually construct URIs, the API can't guide you to the right resource locations. For example, if any API endpoints get added or moved you’ll need to change your code instead of getting the updates provided to you by our API.
						Node:
						(type) c
						(layer)2
							Element:p
								In 2014 – alongside the release of v2 – we announced that the API URIs may be changing for company files (you can read the
							Element:a
								full announcement on our blog
								). If endpoints move, your requests might be slower or even time out causing errors.
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								What changes should I make to my code?
						Node:
						(type) c
						(layer)2
							Element:p
								If you’re using the official AccountRight Live .NET SDK, you don’t need to make any changes! We already follow this practice in consuming API URIs.
						Node:
						(type) c
						(layer)2
							Element:p
								However if your current code doesn’t work like this, you’ll need to make some changes. Since the AccountRight Live API is centred around CompanyFiles, a great place to start is to store the CompanyFile URI when first querying the API.
						Node:
						(type) c
						(layer)2
							Element:h3
								API
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Express your interest
							Element:li
							Element:a
								MYOB AccountRight API
							Element:li
							Element:a
								MYOB Essentials API
							Element:li
							Element:a
								MYOB EXO API
							Element:li
							Element:a
								MYOBapi Blog
							Element:li
							Element:a
								Google+
							Element:li
							Element:a
								MYOB Corporate
						Node:
						(type) c
						(layer)2
							Element:h3
								Support
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								AccountRight API Forums
							Element:li
							Element:a
								EXO API Forums
							Element:li
							Element:a
								MYOB Advanced Developer Forums
						Node:
						(type) c
						(layer)2
							Element:h3
								Social
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								MYOBapi on Twitter
							Element:li
							Element:a
								MYOB on Twitter
							Element:li
							Element:a
								MYOBapi on Instagram
							Element:li
							Element:a
								MYOB on GitHub
							Element:li
							Element:a
								Google+
						Node:
						(type) c
						(layer)2
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								Copyright © 2015 MYOB Technology Pty Ltd
