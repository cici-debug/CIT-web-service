Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					{"id":"54ddac5ded6e6b0d0050324e","name":"Hoiio Open API","subdomain":"hoiio-open-api","versions":[{"_id":"54ddac5eed6e6b0d00503251","releaseDate":"2015-02-13T07:48:46.162Z","is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":true,"codename":"","version_clean":"1.0.0","version":"1.0"}],"doc_slug":"","current_version":{"version_clean":"1.0.0","version":"1.0"},"oauth":{"enabled":false},"api":{"name":"","url":"https://secure.hoiio.com","contenttype":"form","auth":"","explorer":true,"proxyEnabled":true,"jwt":false,"authextra":[{"_id":"5578ca816858971900d5a762","type":"","default":"","key":""}],"headers":[],"object_definitions":[]},"apiAlt":[{"_id":"575530d422cb8d1900a976be","object_definitions":[],"headers":[],"authextra":[{"_id":"575531a33e5e320e0067bbbe","type":"query","default":"","key":"apiKey"}],"jwt":false,"proxyEnabled":true,"explorer":true,"auth":"token","contenttype":"form","url":"https://api.hoiio.com","name":"MS API"}],"plan_details":{"name":"Business","is_active":true,"cost":199,"versions":10000,"custom_domain":true,"custom_pages":true,"whitelabel":true,"errors":true,"password":true,"landing_page":true,"themebuilder":true,"stylesheet":true,"javascript":true,"html":true,"extra_html":true,"admins":true,"apps":true},"apps":{"enabled":false},"intercom":"","intercom_secure_emailonly":false,"flags":{"allow_hub2":false,"hub2":false,"migrationRun":true,"oauth":false,"swagger":false,"correctnewlines":false,"speedyRender":false,"allowXFrame":false,"jwt":false,"hideGoogleAnalytics":false,"stripe":false,"autoSslGeneration":true,"ssl":true},"asset_base_url":""}
				Element:a
					Hoiio Open API
			Node:
			(type) c
			(layer)1
				Element:ul
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:li
				Element:a
					Documentation
				Element:li
				Element:a
					Sign Up
				Element:li
				Element:a
					Login
			Node:
			(type) c
			(layer)1
				Element:pre
					{"__v":10,"_id":"54e5761a1815561700788627","category":{"__v":5,"_id":"54e575791815561700788624","pages":["54e575d21815561700788625","54e575e9c2f66835000133de","54e5761a1815561700788627","54e5762fc2f66835000133e0","54e57644c2f66835000133e2"],"project":"54ddac5ded6e6b0d0050324e","version":"54ddac5eed6e6b0d00503251","sync":{"url":"","isSync":false},"reference":false,"createdAt":"2015-02-19T05:32:41.463Z","from_sync":false,"order":1,"slug":"rest-api-general","title":"REST API & General"},"project":"54ddac5ded6e6b0d0050324e","user":"542a3845e677b00800508963","version":{"__v":31,"_id":"54ddac5eed6e6b0d00503251","project":"54ddac5ded6e6b0d0050324e","createdAt":"2015-02-13T07:48:46.162Z","releaseDate":"2015-02-13T07:48:46.162Z","categories":["54ddac5eed6e6b0d00503252","54ddad17ed6e6b0d00503256","54ddad3645aa9e170051e63f","54ddad42c48ad90d00c18708","54ddad5445aa9e170051e640","54ddad5bc4a3570d009d491f","54ddad6145aa9e170051e641","54ddad6cc48ad90d00c18709","54ddad74ed6e6b0d00503258","54ddad7cc48ad90d00c1870a","54ddad84c48ad90d00c1870b","54ddad8aed6e6b0d00503259","54ddad91ed6e6b0d0050325a","54ddad9cc48ad90d00c1870c","54ddada33a91410d001b164e","54ddadabed6e6b0d0050325b","54e025f1ebbf8f0d00b3b890","54e2b584d159340d00bd49cc","54e2c3f4d159340d00bd49d5","54e3e4a38ef7552300409d2c","54e4f9acc2f6683500013302","54e52194d71c112d00544131","54e55595c2f6683500013395","54e559e2d71c112d00544186","54e55b80c2f66835000133a3","54e55f281815561700788603","54e5644bd71c112d0054419c","54e572bfd71c112d005441ac","54e57413d71c112d005441af","54e575791815561700788624","57513e23c38d710e005d3cb0"],"is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":true,"codename":"","version_clean":"1.0.0","version":"1.0"},"updates":[],"next":{"pages":[],"description":""},"createdAt":"2015-02-19T05:35:22.260Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":3,"body":"Certain APIs produce events that developers will be interested in some time in the future. For example, after making a voice call request, you might be interested to find out the duration of a call when the call is hung up. For that, you should make use of Notifications (instead of constantly polling with voice status API).\n\nNotifications are asynchronous and Hoiio will notify your web server as an event happens.\n\nSome APIs that support Notifications are:\n\n* [sms/send](doc:send-sms)\n* [voice/call](doc:make-call)\n* [ivr/answer](doc:answer)\n\n**Handling Notifications**\n\nTo receive notifications, there are 3 things that you'll need to do:\n\n1. Configure a web server to receive **HTTP POST** requests from Hoiio.\nYour web server endpoint/script should process the content POST-ed by Hoiio. It should respond with a HTTP 200 OK status (the HTTP body is ignored).\n\n2. Configure Notify URL for receiving a call/SMS.\nYou have to specify the URL that Hoiio will POST to when your Hoiio Number receives a call/SMS. The URL is your web server URL. You can either use the [Number API](doc:number-api#configure-forwarding-urls), or go the portal and configure for the number.\n\n3. Set `notify_url` parameter in each API requests.\nHoiio will POST to this URL for events related to this API request. You can have a different URL from (2), or none if you are not interested in the events.\n[block:image]\n{\n \"images\": [\n {\n \"image\": [\n \"https://files.readme.io/ubVEPTquTzaVkyrg0J5q_notifications.png\",\n \"notifications.png\",\n \"368\",\n \"477\",\n \"#cbcbcb\",\n \"\"\n ]\n }\n ]\n}\n[/block]\n\nNotifications will not be resent to your application if your URL is not properly configured. You may also receive more than 1 notification as time progresses (such as the delivery status of a SMS). The last notification will be the most updated result.\n\n**Notification Parameters**\n\nThe notification parameters are in the URL query string. For example, Hoiio will HTTP POST to the following URL when you use [sms/send](doc:send-sms) (assuming your web server is at `http://my.example.com/path/to/script`).\n[block:code]\n{\n \"codes\": [\n {\n \"code\": \"http://my.example.com/path/to/script?to=%2B16501234567&debit=0.013&from=%2B16201234567&date=2012-10-30+12%3A20%3A50&msg=hoiio+world&txn_ref=AA-SI-85&currency=SGD\",\n \"language\": \"text\"\n }\n ]\n}\n[/block]\n\nYou could also provide pass-on parameters in your notify_url, which will subsequently be passed back to you when Hoiio POST the nofication. For example, you want to pass along a \"username\", set as such.\n[block:code]\n{\n \"codes\": [\n {\n \"code\": \"notify_url=http://my.example.com/path/to/script?username=dave\",\n \"language\": \"text\"\n }\n ]\n}\n[/block]\n\nDuring notification, you will get back the parameter(s) you set.\n[block:code]\n{\n \"codes\": [\n {\n \"code\": \"http://my.example.com/path/to/script?to=%2B16501234567&debit=0.013&from=%2B16201234567&date=2012-10-30+12%3A20%3A50&msg=hoiio+world&txn_ref=AA-SI-85&currency=SGD&username=dave\",\n \"language\": \"text\"\n }\n ]\n}\n[/block]\n\nTip: Pass-on parameters are especially useful for IVR APIs which you can pass on an \"app_state\" such as \"gather1\", \"gather2\", etc","excerpt":"","slug":"handling-notifications","type":"basic","title":"Handling Notifications"}
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Hoiio
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Overview
													Element:li
													Element:a
													Element:span
														Quick Start Guide
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Voice API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Voice API Introduction
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Make Call
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Hangup
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Query Call Status
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														REST API & General
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														REST Format
													Element:li
													Element:a
													Element:span
														Authentication
													Element:li
													Element:a
													Element:span
														API Limits!
													Element:li
													Element:a
													Element:span
														Handling Notifications
													Element:li
													Element:a
													Element:span
														Verifying Notifications
													Element:li
													Element:a
													Element:span
														Currency Codes
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Conference API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Call Conference
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Conference Moderate
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														SDK
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														SDK
													Element:li
													Element:a
													Element:span
														Java
													Element:li
													Element:a
													Element:span
														C#
													Element:li
													Element:a
													Element:span
														PHP
													Element:li
													Element:a
													Element:span
														Python
													Element:li
													Element:a
													Element:span
														Ruby
													Element:li
													Element:a
													Element:span
														JavaScript
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														SMS API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														SMS API Introduction
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Send SMS
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Send Bulk SMS
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Receive SMS
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Query SMS Status
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														IVR API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														IVR API Introduction
													Element:li
													Element:a
													Element:span
														An Overview
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Answer
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Dial
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Play
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Gather
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Record
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Hold
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Unhold
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Transfer
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Hangup
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Examples
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Examples
													Element:li
													Element:a
													Element:span
														Two-Factor Authentication
													Element:li
													Element:a
													Element:span
														Click-to-Call
													Element:li
													Element:a
													Element:span
														Booking Confirmation
													Element:li
													Element:a
													Element:span
														Conference Call (Outgoing)
													Element:li
													Element:a
													Element:span
														Conference Call (Incoming)
													Element:li
													Element:a
													Element:span
														Auto Attendant
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Fax API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Fax API Introduction
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Send Fax
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Receive Fax
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Fax Rate
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														API Reference
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														API Reference
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Number API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Number API Introduction
													Element:li
													Element:a
													Element:span
														get
													Element:span
														List Supported Countries
													Element:li
													Element:a
													Element:span
														get
													Element:span
														List Available Numbers
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Number Rates
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Number Subscription
													Element:li
													Element:a
													Element:span
														get
													Element:span
														List Subscribed Numbers
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Developer Agreement
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Developer Agreement
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Consent API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Add Consent Status
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Account API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Account API Introduction
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Credit Balance
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Account Info
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Organization API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														get
													Element:span
														List Organization Members
			Node:
			(type) h1
			(layer)1
				Element:h1
					Handling Notifications
			Node:
			(type) c
			(layer)1
				Element:hr
					Certain APIs produce events that developers will be interested in some time in the future. For example, after making a voice call request, you might be interested to find out the duration of a call when the call is hung up. For that, you should make use of Notifications (instead of constantly polling with voice status API). Notifications are asynchronous and Hoiio will notify your web server as an event happens. Some APIs that support Notifications are: * [sms/send](doc:send-sms) * [voice/call](doc:make-call) * [ivr/answer](doc:answer) **Handling Notifications** To receive notifications, there are 3 things that you'll need to do: 1. Configure a web server to receive **HTTP POST** requests from Hoiio. Your web server endpoint/script should process the content POST-ed by Hoiio. It should respond with a HTTP 200 OK status (the HTTP body is ignored). 2. Configure Notify URL for receiving a call/SMS. You have to specify the URL that Hoiio will POST to when your Hoiio Number receives a call/SMS. The URL is your web server URL. You can either use the [Number API](doc:number-api#configure-forwarding-urls), or go the portal and configure for the number. 3. Set `notify_url` parameter in each API requests. Hoiio will POST to this URL for events related to this API request. You can have a different URL from (2), or none if you are not interested in the events. [block:image] { "images": [ { "image": [ "https://files.readme.io/ubVEPTquTzaVkyrg0J5q_notifications.png", "notifications.png", "368", "477", "#cbcbcb", "" ] } ] } [/block] Notifications will not be resent to your application if your URL is not properly configured. You may also receive more than 1 notification as time progresses (such as the delivery status of a SMS). The last notification will be the most updated result. **Notification Parameters** The notification parameters are in the URL query string. For example, Hoiio will HTTP POST to the following URL when you use [sms/send](doc:send-sms) (assuming your web server is at `http://my.example.com/path/to/script`). [block:code] { "codes": [ { "code": "http://my.example.com/path/to/script?to=%2B16501234567&debit=0.013&from=%2B16201234567&date=2012-10-30+12%3A20%3A50&msg=hoiio+world&txn_ref=AA-SI-85&currency=SGD", "language": "text" } ] } [/block] You could also provide pass-on parameters in your notify_url, which will subsequently be passed back to you when Hoiio POST the nofication. For example, you want to pass along a "username", set as such. [block:code] { "codes": [ { "code": "notify_url=http://my.example.com/path/to/script?username=dave", "language": "text" } ] } [/block] During notification, you will get back the parameter(s) you set. [block:code] { "codes": [ { "code": "http://my.example.com/path/to/script?to=%2B16501234567&debit=0.013&from=%2B16201234567&date=2012-10-30+12%3A20%3A50&msg=hoiio+world&txn_ref=AA-SI-85&currency=SGD&username=dave", "language": "text" } ] } [/block] Tip: Pass-on parameters are especially useful for IVR APIs which you can pass on an "app_state" such as "gather1", "gather2", etc
			Node:
			(type) c
			(layer)1
				Element:footer
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Terms of Use
				Element:li
				Element:a
					Data Policy
				Element:li
				Element:a
					Privacy Policy
				Element:li
				Element:a
					SLA
				Element:ul
					COPYRIGHT © 2015 HOIIO
