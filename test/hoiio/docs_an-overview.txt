Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					{"id":"54ddac5ded6e6b0d0050324e","name":"Hoiio Open API","subdomain":"hoiio-open-api","versions":[{"_id":"54ddac5eed6e6b0d00503251","releaseDate":"2015-02-13T07:48:46.162Z","is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":true,"codename":"","version_clean":"1.0.0","version":"1.0"}],"doc_slug":"","current_version":{"version_clean":"1.0.0","version":"1.0"},"oauth":{"enabled":false},"api":{"name":"","url":"https://secure.hoiio.com","contenttype":"form","auth":"","explorer":true,"proxyEnabled":true,"jwt":false,"authextra":[{"_id":"5578ca816858971900d5a762","type":"","default":"","key":""}],"headers":[],"object_definitions":[]},"apiAlt":[{"_id":"575530d422cb8d1900a976be","object_definitions":[],"headers":[],"authextra":[{"_id":"575531a33e5e320e0067bbbe","type":"query","default":"","key":"apiKey"}],"jwt":false,"proxyEnabled":true,"explorer":true,"auth":"token","contenttype":"form","url":"https://api.hoiio.com","name":"MS API"}],"plan_details":{"name":"Business","is_active":true,"cost":199,"versions":10000,"custom_domain":true,"custom_pages":true,"whitelabel":true,"errors":true,"password":true,"landing_page":true,"themebuilder":true,"stylesheet":true,"javascript":true,"html":true,"extra_html":true,"admins":true,"apps":true},"apps":{"enabled":false},"intercom":"","intercom_secure_emailonly":false,"flags":{"allow_hub2":false,"hub2":false,"migrationRun":true,"oauth":false,"swagger":false,"correctnewlines":false,"speedyRender":false,"allowXFrame":false,"jwt":false,"hideGoogleAnalytics":false,"stripe":false,"autoSslGeneration":true,"ssl":true},"asset_base_url":""}
				Element:a
					Hoiio Open API
			Node:
			(type) c
			(layer)1
				Element:ul
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:li
				Element:a
					Documentation
				Element:li
				Element:a
					Sign Up
				Element:li
				Element:a
					Login
			Node:
			(type) c
			(layer)1
				Element:pre
					{"__v":2,"_id":"54e3f77e1e51932d006abc13","category":{"__v":12,"_id":"54e3e4a38ef7552300409d2c","pages":["54e3e6e58ef7552300409d37","54e3f77e1e51932d006abc13","54e3fcf13c0d9517001dfcef","54e405ac1e51932d006abc42","54e417723c0d9517001dfd38","54e41ceb3c0d9517001dfd44","54e4396f8ef7552300409e50","54e44427de9f5b2300fc6dfc","54e448c88ef7552300409e71","54e44d7dde9f5b2300fc6e27","54e4f34fd71c112d005440ad","54e4f8b4d71c112d005440bc"],"project":"54ddac5ded6e6b0d0050324e","version":"54ddac5eed6e6b0d00503251","sync":{"url":"","isSync":false},"reference":true,"createdAt":"2015-02-18T01:02:27.782Z","from_sync":false,"order":3,"slug":"ivr-api","title":"IVR API"},"project":"54ddac5ded6e6b0d0050324e","user":"542a3845e677b00800508963","version":{"__v":31,"_id":"54ddac5eed6e6b0d00503251","project":"54ddac5ded6e6b0d0050324e","createdAt":"2015-02-13T07:48:46.162Z","releaseDate":"2015-02-13T07:48:46.162Z","categories":["54ddac5eed6e6b0d00503252","54ddad17ed6e6b0d00503256","54ddad3645aa9e170051e63f","54ddad42c48ad90d00c18708","54ddad5445aa9e170051e640","54ddad5bc4a3570d009d491f","54ddad6145aa9e170051e641","54ddad6cc48ad90d00c18709","54ddad74ed6e6b0d00503258","54ddad7cc48ad90d00c1870a","54ddad84c48ad90d00c1870b","54ddad8aed6e6b0d00503259","54ddad91ed6e6b0d0050325a","54ddad9cc48ad90d00c1870c","54ddada33a91410d001b164e","54ddadabed6e6b0d0050325b","54e025f1ebbf8f0d00b3b890","54e2b584d159340d00bd49cc","54e2c3f4d159340d00bd49d5","54e3e4a38ef7552300409d2c","54e4f9acc2f6683500013302","54e52194d71c112d00544131","54e55595c2f6683500013395","54e559e2d71c112d00544186","54e55b80c2f66835000133a3","54e55f281815561700788603","54e5644bd71c112d0054419c","54e572bfd71c112d005441ac","54e57413d71c112d005441af","54e575791815561700788624","57513e23c38d710e005d3cb0"],"is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":true,"codename":"","version_clean":"1.0.0","version":"1.0"},"updates":[],"next":{"pages":[],"description":""},"createdAt":"2015-02-18T02:22:54.611Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[]},"settings":"","auth":"required","params":[],"url":""},"isReference":true,"order":1,"body":"This overview is made of 5 sections:\n\n1. [Designing your IVR App](doc:an-overview#designing-your-ivr-app)\n2. [An Example - Customer Helpline](doc:an-overview#an-example-customer-helpline)\n3. [Controlling IVR Behavior](doc:an-overview#controlling-ivr-behavior)\n4. [Text-To-Speech](doc:an-overview#text-to-speech)\n5. [Charges](doc:an-overview#charges)\n\n\n#Designing your IVR App\n\nWe have separated the lifetime of an IVR call into 3 different stages: Start, Middle and End.\n[block:image]\n{\n \"images\": [\n {\n \"image\": [\n \"https://files.readme.io/N6eF2YWHTu20nf4T902s_ivr_lifecycle.png\",\n \"ivr_lifecycle.png\",\n \"747\",\n \"55\",\n \"#4a8877\",\n \"\"\n ]\n }\n ]\n}\n[/block]\n\nIn each stage, there are building blocks that you can use to construct your call flow.\n\nThe rule is this: You can use only 1 Start block, any number of chaining Middle blocks, and finally 1 End block.\n[block:image]\n{\n \"images\": [\n {\n \"image\": [\n \"https://files.readme.io/ZxMZU03RZ65z7YrdP7c3_ivr_blocks.png\",\n \"ivr_blocks.png\",\n \"979\",\n \"193\",\n \"#569983\",\n \"\"\n ]\n }\n ]\n}\n[/block]\n\nFor example, during the start of a call, you can choose to **Answer** an incoming call, or **Dial** out to a phone number.\n\nDuring the middle stage, you could **Play** a text message/MP3, **Gather** keypad responses, **Record** voice messages, or start to Monitor the phone conversation.\n\nTowards the end of the call, you may wish to **Hangup** or **Transfer** the call to another number.\n\nIt's entirely up to you to decide the call flow!\n\n\n\n#An Example - Customer Helpline\n\nWe will use an example of a Customer Helpline app to illustrate how you can use the building blocks to construct a typical call flow. In this example, it starts with a caller calling a [Hoiio Number](doc:number-api), and the call flow begins.\n[block:image]\n{\n \"images\": [\n {\n \"image\": [\n \"https://files.readme.io/FcrKVGR5RxmTxfebG4Wx_ivr_examples.png\",\n \"ivr_examples.png\",\n \"461\",\n \"349\",\n \"#5a9e70\",\n \"\"\n ]\n }\n ]\n}\n[/block]\n\nAs you can see, we have used Answer, Gather, Play and Transfer blocks. You can, of course, choose to use any other blocks as long as it fits the rule (1 Start block, any number of chaining Middle blocks, and 1 End block).\n\nRead the next section on how we control the IVR behavior.\n\n\n\n#Controlling IVR Behavior\n\nYou are able to control the behavior of the call flow in realtime via our RESTful API. When you receive an incoming call or dial out a call, Hoiio will send you a notification containing the `session` for that particular call.\n\nRead more about [Notifications](doc:rest-api-&-general#handling-notifications).\n\nWith the `session`, you will then be able to choose the next block to use by calling one of the available [IVR API](doc:ivr-api#building-blocks). A notification will be sent each block is completed. It may also include other information eg. the keypad response (aka DTMF) for a [Gather](doc:gather) block.\n\nYou always have to indicate the next block to use after receiving the notification, until the call ends.\n\nHere is a sequence diagram showing the full server interactions between you and Hoiio, using the Customer Helpline as an example.\n[block:image]\n{\n \"images\": [\n {\n \"image\": [\n \"https://files.readme.io/ojhDMIBgR8qexae2LbLR_ivr_sequence.png\",\n \"ivr_sequence.png\",\n \"625\",\n \"738\",\n \"#5ea761\",\n \"\"\n ]\n }\n ]\n}\n[/block]\n\nOther than Answer (which is implicitly used), you would have used 3 IVR APIs in succession: Gather > Play > Transfer.\n\n\n\n#Text-To-Speech\n\nAll of the building blocks allow you to specify a text message to play, so you do not need to worry about recording your own voice messages. A Text-to-Speech service is included in the API. You can simply specify the text message you want to play over the phone call, and our service will automatically generate the voice message for you.\n\n**Languages and Gender**\n\nTo change the language or gender of the voice, use the `<speech>` markup. E.g.\n[block:code]\n{\n \"codes\": [\n {\n \"code\": \"<speech language=\\\"zh-HK\\\" gender=\\\"female\\\">請稍等，我們正在處理您的訂單。</speech>\",\n \"language\": \"text\"\n }\n ]\n}\n[/block]\n\nSupported languages and gender are:\n\n* English (en), male and female\n* English (British) (en-UK), male and female\n* English (Australian) (en-AU), female only\n* English (Canadian) (en-CA), female only\n\n* Chinese (zh), male and female\n* Chinese (Taiwanese) (zh-TW), female only\n* Cantonese (zh-HK), female only\n\n* Portuguese (pt), male and female\n* Portuguese (Brazilian) (pt-BR), female only\n\n* French (fr), male and female\n* French (Canadian) (fr-CA), male and female\n\n* Spanish (es),male and female\n* Spanish (United States) (es-MX), male only\n\n* Japanese (ja), male and female\n* Korean (ko), male and female\n* Danish (da), male and female\n* German (de), male and female\n* Italian (it), male and female\n* Turkish (tr), male and female\n* Russian (ru), male and female\n\n* Hungarian (hu), female only\n* Catalan (ca), female only\n* Czech (cs), female only\n* Danish (da), female only\n* Finnish (fi), female only\n* Norwegian (no), female only\n* Polish (po), female only\n* Swedish (sv), female only\n* Greek (el-GR), female only\n\nThe default language is English and the default gender is Female. If you are using the default, you can leave out the Speech markup.\n\nWe are also working on supporting more languages.\n\n**Custom Recordings**\n\nIf you would like to use your own voice recordings (instead of the synthesized speech), use the `<url>` markup to specify the audio file to use. We will download the file and use it as the voice message. E.g.\n[block:code]\n{\n \"codes\": [\n {\n \"code\": \"<url>http://example.com/myrecording.mp3</url>\",\n \"language\": \"text\"\n }\n ]\n}\n[/block]\n\nSupported file formats are .mp3, .wav and .gsm (8000 Hz, mono channel). File size must be 10MB or less. If your URL contains the ampersand (&) character, it needs to be encoded as &amp;. \n\n**Note:** There will be a slight delay when downloading the file for the first time. To enable us to cache your file locally for subsequent calls, please include the \"Last-Modified\" HTTP header and make sure your file hosting web server respond to our HTTP header \"If-Modified-Since\" in our request with a \"304 Not Modified\". Subsequent calls will not have the delay if we are able to cache your file. If you have updated your file, just make sure your file hosting web server respond to us with the updated file instead of \"304 Not Modified\".\n\n\n#Charges\n\nFor receiving incoming calls, you will be charged the incoming call rate to the Hoiio Number. For outgoing calls, you will be charged the outgoing call rate depending on the destination number.\n\nIf you used the [Transfer](doc:transfer) block, you will be charged an additional outgoing call rate depending on the destination number that the call was transferred to.\n\nFor details on the incoming and outgoing call rate, please refer to the [Pricing Section](http://developer.hoiio.com/pricing).","excerpt":"","slug":"an-overview","type":"basic","title":"An Overview"}
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Hoiio
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Overview
													Element:li
													Element:a
													Element:span
														Quick Start Guide
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Voice API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Voice API Introduction
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Make Call
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Hangup
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Query Call Status
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														REST API & General
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														REST Format
													Element:li
													Element:a
													Element:span
														Authentication
													Element:li
													Element:a
													Element:span
														API Limits!
													Element:li
													Element:a
													Element:span
														Handling Notifications
													Element:li
													Element:a
													Element:span
														Verifying Notifications
													Element:li
													Element:a
													Element:span
														Currency Codes
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Conference API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Call Conference
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Conference Moderate
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														SDK
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														SDK
													Element:li
													Element:a
													Element:span
														Java
													Element:li
													Element:a
													Element:span
														C#
													Element:li
													Element:a
													Element:span
														PHP
													Element:li
													Element:a
													Element:span
														Python
													Element:li
													Element:a
													Element:span
														Ruby
													Element:li
													Element:a
													Element:span
														JavaScript
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														SMS API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														SMS API Introduction
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Send SMS
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Send Bulk SMS
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Receive SMS
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Query SMS Status
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														IVR API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														IVR API Introduction
													Element:li
													Element:a
													Element:span
														An Overview
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Answer
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Dial
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Play
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Gather
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Record
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Hold
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Unhold
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Transfer
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Hangup
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Examples
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Examples
													Element:li
													Element:a
													Element:span
														Two-Factor Authentication
													Element:li
													Element:a
													Element:span
														Click-to-Call
													Element:li
													Element:a
													Element:span
														Booking Confirmation
													Element:li
													Element:a
													Element:span
														Conference Call (Outgoing)
													Element:li
													Element:a
													Element:span
														Conference Call (Incoming)
													Element:li
													Element:a
													Element:span
														Auto Attendant
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Fax API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Fax API Introduction
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Send Fax
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Receive Fax
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Fax Rate
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														API Reference
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														API Reference
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Number API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Number API Introduction
													Element:li
													Element:a
													Element:span
														get
													Element:span
														List Supported Countries
													Element:li
													Element:a
													Element:span
														get
													Element:span
														List Available Numbers
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Number Rates
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Number Subscription
													Element:li
													Element:a
													Element:span
														get
													Element:span
														List Subscribed Numbers
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Developer Agreement
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Developer Agreement
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Consent API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Add Consent Status
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Account API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Account API Introduction
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Credit Balance
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Account Info
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Organization API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														get
													Element:span
														List Organization Members
			Node:
			(type) h1
			(layer)1
				Element:h1
					An Overview
			Node:
			(type) c
			(layer)1
				Element:hr
					This overview is made of 5 sections: 1. [Designing your IVR App](doc:an-overview#designing-your-ivr-app) 2. [An Example - Customer Helpline](doc:an-overview#an-example-customer-helpline) 3. [Controlling IVR Behavior](doc:an-overview#controlling-ivr-behavior) 4. [Text-To-Speech](doc:an-overview#text-to-speech) 5. [Charges](doc:an-overview#charges) #Designing your IVR App We have separated the lifetime of an IVR call into 3 different stages: Start, Middle and End. [block:image] { "images": [ { "image": [ "https://files.readme.io/N6eF2YWHTu20nf4T902s_ivr_lifecycle.png", "ivr_lifecycle.png", "747", "55", "#4a8877", "" ] } ] } [/block] In each stage, there are building blocks that you can use to construct your call flow. The rule is this: You can use only 1 Start block, any number of chaining Middle blocks, and finally 1 End block. [block:image] { "images": [ { "image": [ "https://files.readme.io/ZxMZU03RZ65z7YrdP7c3_ivr_blocks.png", "ivr_blocks.png", "979", "193", "#569983", "" ] } ] } [/block] For example, during the start of a call, you can choose to **Answer** an incoming call, or **Dial** out to a phone number. During the middle stage, you could **Play** a text message/MP3, **Gather** keypad responses, **Record** voice messages, or start to Monitor the phone conversation. Towards the end of the call, you may wish to **Hangup** or **Transfer** the call to another number. It's entirely up to you to decide the call flow! #An Example - Customer Helpline We will use an example of a Customer Helpline app to illustrate how you can use the building blocks to construct a typical call flow. In this example, it starts with a caller calling a [Hoiio Number](doc:number-api), and the call flow begins. [block:image] { "images": [ { "image": [ "https://files.readme.io/FcrKVGR5RxmTxfebG4Wx_ivr_examples.png", "ivr_examples.png", "461", "349", "#5a9e70", "" ] } ] } [/block] As you can see, we have used Answer, Gather, Play and Transfer blocks. You can, of course, choose to use any other blocks as long as it fits the rule (1 Start block, any number of chaining Middle blocks, and 1 End block). Read the next section on how we control the IVR behavior. #Controlling IVR Behavior You are able to control the behavior of the call flow in realtime via our RESTful API. When you receive an incoming call or dial out a call, Hoiio will send you a notification containing the `session` for that particular call. Read more about [Notifications](doc:rest-api-&-general#handling-notifications). With the `session`, you will then be able to choose the next block to use by calling one of the available [IVR API](doc:ivr-api#building-blocks). A notification will be sent each block is completed. It may also include other information eg. the keypad response (aka DTMF) for a [Gather](doc:gather) block. You always have to indicate the next block to use after receiving the notification, until the call ends. Here is a sequence diagram showing the full server interactions between you and Hoiio, using the Customer Helpline as an example. [block:image] { "images": [ { "image": [ "https://files.readme.io/ojhDMIBgR8qexae2LbLR_ivr_sequence.png", "ivr_sequence.png", "625", "738", "#5ea761", "" ] } ] } [/block] Other than Answer (which is implicitly used), you would have used 3 IVR APIs in succession: Gather > Play > Transfer. #Text-To-Speech All of the building blocks allow you to specify a text message to play, so you do not need to worry about recording your own voice messages. A Text-to-Speech service is included in the API. You can simply specify the text message you want to play over the phone call, and our service will automatically generate the voice message for you. **Languages and Gender** To change the language or gender of the voice, use the `<speech>` markup. E.g. [block:code] { "codes": [ { "code": "<speech language=\"zh-HK\" gender=\"female\">請稍等，我們正在處理您的訂單。</speech>", "language": "text" } ] } [/block] Supported languages and gender are: * English (en), male and female * English (British) (en-UK), male and female * English (Australian) (en-AU), female only * English (Canadian) (en-CA), female only * Chinese (zh), male and female * Chinese (Taiwanese) (zh-TW), female only * Cantonese (zh-HK), female only * Portuguese (pt), male and female * Portuguese (Brazilian) (pt-BR), female only * French (fr), male and female * French (Canadian) (fr-CA), male and female * Spanish (es),male and female * Spanish (United States) (es-MX), male only * Japanese (ja), male and female * Korean (ko), male and female * Danish (da), male and female * German (de), male and female * Italian (it), male and female * Turkish (tr), male and female * Russian (ru), male and female * Hungarian (hu), female only * Catalan (ca), female only * Czech (cs), female only * Danish (da), female only * Finnish (fi), female only * Norwegian (no), female only * Polish (po), female only * Swedish (sv), female only * Greek (el-GR), female only The default language is English and the default gender is Female. If you are using the default, you can leave out the Speech markup. We are also working on supporting more languages. **Custom Recordings** If you would like to use your own voice recordings (instead of the synthesized speech), use the `<url>` markup to specify the audio file to use. We will download the file and use it as the voice message. E.g. [block:code] { "codes": [ { "code": "<url>http://example.com/myrecording.mp3</url>", "language": "text" } ] } [/block] Supported file formats are .mp3, .wav and .gsm (8000 Hz, mono channel). File size must be 10MB or less. If your URL contains the ampersand (&) character, it needs to be encoded as &amp;. **Note:** There will be a slight delay when downloading the file for the first time. To enable us to cache your file locally for subsequent calls, please include the "Last-Modified" HTTP header and make sure your file hosting web server respond to our HTTP header "If-Modified-Since" in our request with a "304 Not Modified". Subsequent calls will not have the delay if we are able to cache your file. If you have updated your file, just make sure your file hosting web server respond to us with the updated file instead of "304 Not Modified". #Charges For receiving incoming calls, you will be charged the incoming call rate to the Hoiio Number. For outgoing calls, you will be charged the outgoing call rate depending on the destination number. If you used the [Transfer](doc:transfer) block, you will be charged an additional outgoing call rate depending on the destination number that the call was transferred to. For details on the incoming and outgoing call rate, please refer to the [Pricing Section](http://developer.hoiio.com/pricing).
			Node:
			(type) c
			(layer)1
				Element:footer
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Terms of Use
				Element:li
				Element:a
					Data Policy
				Element:li
				Element:a
					Privacy Policy
				Element:li
				Element:a
					SLA
				Element:ul
					COPYRIGHT © 2015 HOIIO
