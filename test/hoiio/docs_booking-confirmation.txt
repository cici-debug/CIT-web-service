Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					{"id":"54ddac5ded6e6b0d0050324e","name":"Hoiio Open API","subdomain":"hoiio-open-api","versions":[{"_id":"54ddac5eed6e6b0d00503251","releaseDate":"2015-02-13T07:48:46.162Z","is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":true,"codename":"","version_clean":"1.0.0","version":"1.0"}],"doc_slug":"","current_version":{"version_clean":"1.0.0","version":"1.0"},"oauth":{"enabled":false},"api":{"name":"","url":"https://secure.hoiio.com","contenttype":"form","auth":"","explorer":true,"proxyEnabled":true,"jwt":false,"authextra":[{"_id":"5578ca816858971900d5a762","type":"","default":"","key":""}],"headers":[],"object_definitions":[]},"apiAlt":[{"_id":"575530d422cb8d1900a976be","object_definitions":[],"headers":[],"authextra":[{"_id":"575531a33e5e320e0067bbbe","type":"query","default":"","key":"apiKey"}],"jwt":false,"proxyEnabled":true,"explorer":true,"auth":"token","contenttype":"form","url":"https://api.hoiio.com","name":"MS API"}],"plan_details":{"name":"Business","is_active":true,"cost":199,"versions":10000,"custom_domain":true,"custom_pages":true,"whitelabel":true,"errors":true,"password":true,"landing_page":true,"themebuilder":true,"stylesheet":true,"javascript":true,"html":true,"extra_html":true,"admins":true,"apps":true},"apps":{"enabled":false},"intercom":"","intercom_secure_emailonly":false,"flags":{"allow_hub2":false,"hub2":false,"migrationRun":true,"oauth":false,"swagger":false,"correctnewlines":false,"speedyRender":false,"allowXFrame":false,"jwt":false,"hideGoogleAnalytics":false,"stripe":false,"autoSslGeneration":true,"ssl":true},"asset_base_url":""}
				Element:a
					Hoiio Open API
			Node:
			(type) c
			(layer)1
				Element:ul
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:li
				Element:a
					Documentation
				Element:li
				Element:a
					Sign Up
				Element:li
				Element:a
					Login
			Node:
			(type) c
			(layer)1
				Element:pre
					{"__v":2,"_id":"54e562c6c2f66835000133b5","category":{"__v":7,"_id":"54e55f281815561700788603","pages":["54e56094c2f66835000133ad","54e561c4c2f66835000133b0","54e56242c2f66835000133b2","54e562c6c2f66835000133b5","54e5635bd71c112d0054419a","54e563f4c2f66835000133b8","54e5642b181556170078860d"],"project":"54ddac5ded6e6b0d0050324e","version":"54ddac5eed6e6b0d00503251","sync":{"url":"","isSync":false},"reference":false,"createdAt":"2015-02-19T03:57:28.070Z","from_sync":false,"order":3,"slug":"examples","title":"Examples"},"project":"54ddac5ded6e6b0d0050324e","user":"542a3845e677b00800508963","version":{"__v":31,"_id":"54ddac5eed6e6b0d00503251","project":"54ddac5ded6e6b0d0050324e","createdAt":"2015-02-13T07:48:46.162Z","releaseDate":"2015-02-13T07:48:46.162Z","categories":["54ddac5eed6e6b0d00503252","54ddad17ed6e6b0d00503256","54ddad3645aa9e170051e63f","54ddad42c48ad90d00c18708","54ddad5445aa9e170051e640","54ddad5bc4a3570d009d491f","54ddad6145aa9e170051e641","54ddad6cc48ad90d00c18709","54ddad74ed6e6b0d00503258","54ddad7cc48ad90d00c1870a","54ddad84c48ad90d00c1870b","54ddad8aed6e6b0d00503259","54ddad91ed6e6b0d0050325a","54ddad9cc48ad90d00c1870c","54ddada33a91410d001b164e","54ddadabed6e6b0d0050325b","54e025f1ebbf8f0d00b3b890","54e2b584d159340d00bd49cc","54e2c3f4d159340d00bd49d5","54e3e4a38ef7552300409d2c","54e4f9acc2f6683500013302","54e52194d71c112d00544131","54e55595c2f6683500013395","54e559e2d71c112d00544186","54e55b80c2f66835000133a3","54e55f281815561700788603","54e5644bd71c112d0054419c","54e572bfd71c112d005441ac","54e57413d71c112d005441af","54e575791815561700788624","57513e23c38d710e005d3cb0"],"is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":true,"codename":"","version_clean":"1.0.0","version":"1.0"},"updates":[],"next":{"pages":[],"description":""},"createdAt":"2015-02-19T04:12:54.813Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":3,"body":"This example shows you how to make use of our [IVR API](doc:an-overview) to create a booking confirmation service. Visitors to your website can enter their phone number and their booking details. Then, they will receive a call to confirm or cancel their booking.\n\n**Requirements**\n\n* PHP with [cURL library support](http://php.net/manual/en/book.curl.php) \n[block:code]\n{\n \"codes\": [\n {\n \"code\": \"<?php\\n\\n/************\\nProgram flow:\\n1. User enter booking details on web form.\\n2. Call out to user.\\n3. Read out booking details.\\n4. Ask user to confirm or cancel the booking.\\n5. Read out user's decision and hang up.\\n************/\\n\\n\\n/* Hoiio developer credentials */\\n$hoiioAppId = \\\"YOUR_APP_ID_HERE\\\";\\n$hoiioAccessToken = \\\"YOUR_ACCESS_TOKEN_HERE\\\";\\n\\n/* Replace with YOUR SERVER ADDRESS here for IVR notifications */\\n$notify_url = \\\"http://YOUR_SERVER_ADDRESS_HERE/booking_confirmation.php\\\";\\n\\n/* IVR API URL */\\n$dialBlockURL = \\\"https://secure.hoiio.com/open/ivr/start/dial\\\";\\n$gatherBlockURL =\\\"https://secure.hoiio.com/open/ivr/middle/gather\\\";\\n$hangupBlockURL = \\\"https://secure.hoiio.com/open/ivr/end/hangup\\\";\\n\\nif($_POST == null) {\\n // no form submission, show order confirmation page\\n show_booking_page();\\n} else {\\n if(isset($_POST['confirm'])) {\\n // user just posted the form, begin IVR flow now\\n $mobile = $_POST['mobile'];\\n $num_guests = $_POST['num_guests'];\\n $booking_day = $_POST['booking_day'];\\n $booking_time = $_POST['booking_time'];\\n\\n start_ivr_flow($mobile, $num_guests, $booking_day, $booking_time);\\n } else {\\n // we are already in the IVR flow, decide what to do next\\n handle_ivr_flow($_POST);\\n }\\n}\\n\\n\\n/* function to start the IVR flow after user submits booking confirmation form */\\nfunction start_ivr_flow($mobile, $num_guests, $booking_day, $booking_time) {\\n global $hoiioAppId, $hoiioAccessToken, $notify_url, $dialBlockURL;\\n\\n $msg = \\\"You have made a booking for $num_guests guests on $booking_day at $booking_time pm.\\\";\\n\\n // use custom parameters in the notify_url to track the stage of IVR flow\\n // this will be returned to you in the IVR notifications\\n // next step in IVR is \\\"gather\\\"\\n $notifications_url = $notify_url . \\\"?state=gather\\\";\\n\\n // prepare HTTP POST variables\\n $fields = array(\\n 'app_id' => urlencode($hoiioAppId),\\n 'access_token' => urlencode($hoiioAccessToken),\\n 'dest' => urlencode($mobile), // call out to the user for confirmation\\n 'msg' => urlencode($msg),\\n 'notify_url' => urlencode($notifications_url) // IVR notifications will be sent to this URL\\n );\\n\\n $result = doPost($dialBlockURL, $fields); // do API post for IVR Dial\\n print $result;\\n}\\n\\n\\n/* function to decide what is the next step of IVR flow */\\nfunction handle_ivr_flow($params) {\\n global $hoiioAppId, $hoiioAccessToken, $notify_url, $gatherBlockURL, $hangupBlockURL;\\n\\n if($params['call_state'] == \\\"ongoing\\\") {\\n // only process if the call is still ongoing\\n\\n $session = $params['session']; // retrieve session so we can control the correct IVR call\\n $state = $params['state']; // retrieve custom parameters to know which stage the IVR flow is at\\n\\n // decide what to do depending on which stage the call is at\\n if($state == \\\"gather\\\") {\\n // we have already read out the details of the booking to the user, ask user to confirm now\\n\\n $msg = \\\"To confirm the booking, please press 1. To cancel the booking, please press 0.\\\";\\n\\n // use custom parameters in the notify_url to track the stage of IVR flow\\n // this will be returned to you in the IVR notifications\\n // next step in IVR is \\\"after_gather\\\"\\n $notifications_url = $notify_url . \\\"?state=after_gather\\\";\\n\\n // prepare HTTP POST variables\\n $fields = array(\\n 'app_id' => urlencode($hoiioAppId),\\n 'access_token' => urlencode($hoiioAccessToken),\\n 'session' => urlencode($session),\\n 'msg' => urlencode($msg),\\n 'max_digits' => urlencode(\\\"1\\\"), // only allow 1 digit in user input\\n 'timeout' => urlencode(\\\"15\\\"), // allow 15s for user to input response\\n 'attempts' => urlencode(\\\"2\\\"), // user has 2 attempts to input response\\n 'notify_url' => urlencode($notifications_url) // IVR notifications will be sent here\\n );\\n\\n doPost($gatherBlockURL, $fields); // do API post for IVR Gather\\n } else if($state == \\\"after_gather\\\") {\\n // user has just keyed in his response, read out his decision and hang up\\n\\n $digits = $params['digits']; // retrieve user's response\\n\\n if($digits == \\\"1\\\")\\n $msg = \\\"Thank you for your confirmation. Good bye.\\\";\\n else\\n $msg = \\\"Your booking have been cancelled. Good bye.\\\";\\n\\n // prepare HTTP POST variables\\n $fields = array(\\n 'app_id' => urlencode($hoiioAppId),\\n 'access_token' => urlencode($hoiioAccessToken),\\n 'session' => urlencode($session),\\n 'msg' => urlencode($msg)\\n );\\n\\n doPost($hangupBlockURL, $fields); // do API post for IVR Hangup\\n }\\n }\\n}\\n\\n\\n/* generic function to do HTTP post */\\nfunction doPost($url, $fields) {\\n // form up variables in the correct format for HTTP POST\\n $fields_string = '';\\n foreach($fields as $key => $value)\\n $fields_string .= $key . '=' . $value . '&';\\n\\n $fields_string = rtrim($fields_string,'&');\\n\\n // initialize cURL\\n $ch = curl_init();\\n\\n // set options for cURL\\n curl_setopt($ch, CURLOPT_URL, $url);\\n curl_setopt($ch, CURLOPT_POST, true);\\n curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\\n curl_setopt($ch, CURLOPT_POSTFIELDS, $fields_string);\\n\\n // execute HTTP POST request\\n $response = curl_exec($ch);\\n\\n // close connection\\n curl_close($ch);\\n\\n return $response;\\n}\\n\\n\\n/* function to print HTML for order confirmation form */\\nfunction show_booking_page() {\\n echo <<<CONFIRMATION\\n<html>\\n <head>\\n <title>Booking Confirmation Example</title>\\n </head>\\n <body>\\n <h2>Booking Confirmation Example</h2>\\n <form id=\\\"confirmation\\\" action=\\\"\\\" method=\\\"post\\\">\\n <table>\\n <tr>\\n <td>My mobile number (e.g. +6511111111) :</td>\\n <td><input type=\\\"text\\\" name=\\\"mobile\\\" value=\\\"\\\"/></td>\\n </tr>\\n <tr>\\n <td>Number of guests:</td>\\n <td><input type=\\\"text\\\" name=\\\"num_guests\\\" value=\\\"\\\"/></td>\\n </tr>\\n <tr>\\n <td>Date:</td>\\n <td>\\n <select name=\\\"booking_day\\\">\\n <option value=\\\"monday\\\">Monday</option>\\n <option value=\\\"tuesday\\\">Tuesday</option>\\n <option value=\\\"wednesday\\\">Wednesday</option>\\n <option value=\\\"thursday\\\">Thursday</option>\\n <option value=\\\"friday\\\">Friday</option>\\n <option value=\\\"saturday\\\">Saturday</option>\\n <option value=\\\"sunday\\\">Sunday</option>\\n </select>\\n </td>\\n </tr>\\n <tr>\\n <td>Time:</td>\\n <td>\\n <select name=\\\"booking_time\\\">\\n <option value=\\\"6\\\">6:00pm</option>\\n <option value=\\\"7\\\">7:00pm</option>\\n <option value=\\\"8\\\">8:00pm</option>\\n </select>\\n </td>\\n </tr>\\n <tr>\\n <td colspan=\\\"2\\\"><input type=\\\"submit\\\" value=\\\"confirm\\\" name=\\\"confirm\\\"/></td>\\n </tr>\\n </table>\\n </form>\\n </body>\\n</html>\\nCONFIRMATION;\\n}\\n\\n?>\\n\",\n \"language\": \"php\"\n }\n ]\n}\n[/block]\nDownload the [source code](https://gist.github.com/gists/3930473/download).","excerpt":"","slug":"booking-confirmation","type":"basic","title":"Booking Confirmation"}
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Hoiio
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Overview
													Element:li
													Element:a
													Element:span
														Quick Start Guide
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Voice API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Voice API Introduction
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Make Call
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Hangup
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Query Call Status
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														REST API & General
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														REST Format
													Element:li
													Element:a
													Element:span
														Authentication
													Element:li
													Element:a
													Element:span
														API Limits!
													Element:li
													Element:a
													Element:span
														Handling Notifications
													Element:li
													Element:a
													Element:span
														Verifying Notifications
													Element:li
													Element:a
													Element:span
														Currency Codes
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Conference API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Call Conference
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Conference Moderate
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														SDK
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														SDK
													Element:li
													Element:a
													Element:span
														Java
													Element:li
													Element:a
													Element:span
														C#
													Element:li
													Element:a
													Element:span
														PHP
													Element:li
													Element:a
													Element:span
														Python
													Element:li
													Element:a
													Element:span
														Ruby
													Element:li
													Element:a
													Element:span
														JavaScript
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														SMS API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														SMS API Introduction
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Send SMS
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Send Bulk SMS
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Receive SMS
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Query SMS Status
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														IVR API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														IVR API Introduction
													Element:li
													Element:a
													Element:span
														An Overview
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Answer
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Dial
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Play
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Gather
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Record
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Hold
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Unhold
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Transfer
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Hangup
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Examples
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Examples
													Element:li
													Element:a
													Element:span
														Two-Factor Authentication
													Element:li
													Element:a
													Element:span
														Click-to-Call
													Element:li
													Element:a
													Element:span
														Booking Confirmation
													Element:li
													Element:a
													Element:span
														Conference Call (Outgoing)
													Element:li
													Element:a
													Element:span
														Conference Call (Incoming)
													Element:li
													Element:a
													Element:span
														Auto Attendant
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Fax API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Fax API Introduction
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Send Fax
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Receive Fax
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Fax Rate
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														API Reference
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														API Reference
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Number API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Number API Introduction
													Element:li
													Element:a
													Element:span
														get
													Element:span
														List Supported Countries
													Element:li
													Element:a
													Element:span
														get
													Element:span
														List Available Numbers
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Number Rates
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Number Subscription
													Element:li
													Element:a
													Element:span
														get
													Element:span
														List Subscribed Numbers
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Developer Agreement
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Developer Agreement
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Consent API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Add Consent Status
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Account API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Account API Introduction
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Credit Balance
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Account Info
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Organization API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														get
													Element:span
														List Organization Members
			Node:
			(type) h1
			(layer)1
				Element:h1
					Booking Confirmation
			Node:
			(type) c
			(layer)1
				Element:hr
					This example shows you how to make use of our [IVR API](doc:an-overview) to create a booking confirmation service. Visitors to your website can enter their phone number and their booking details. Then, they will receive a call to confirm or cancel their booking. **Requirements** * PHP with [cURL library support](http://php.net/manual/en/book.curl.php) [block:code] { "codes": [ { "code": "<?php\n\n/************\nProgram flow:\n1. User enter booking details on web form.\n2. Call out to user.\n3. Read out booking details.\n4. Ask user to confirm or cancel the booking.\n5. Read out user's decision and hang up.\n************/\n\n\n/* Hoiio developer credentials */\n$hoiioAppId = \"YOUR_APP_ID_HERE\";\n$hoiioAccessToken = \"YOUR_ACCESS_TOKEN_HERE\";\n\n/* Replace with YOUR SERVER ADDRESS here for IVR notifications */\n$notify_url = \"http://YOUR_SERVER_ADDRESS_HERE/booking_confirmation.php\";\n\n/* IVR API URL */\n$dialBlockURL = \"https://secure.hoiio.com/open/ivr/start/dial\";\n$gatherBlockURL =\"https://secure.hoiio.com/open/ivr/middle/gather\";\n$hangupBlockURL = \"https://secure.hoiio.com/open/ivr/end/hangup\";\n\nif($_POST == null) {\n // no form submission, show order confirmation page\n show_booking_page();\n} else {\n if(isset($_POST['confirm'])) {\n // user just posted the form, begin IVR flow now\n $mobile = $_POST['mobile'];\n $num_guests = $_POST['num_guests'];\n $booking_day = $_POST['booking_day'];\n $booking_time = $_POST['booking_time'];\n\n start_ivr_flow($mobile, $num_guests, $booking_day, $booking_time);\n } else {\n // we are already in the IVR flow, decide what to do next\n handle_ivr_flow($_POST);\n }\n}\n\n\n/* function to start the IVR flow after user submits booking confirmation form */\nfunction start_ivr_flow($mobile, $num_guests, $booking_day, $booking_time) {\n global $hoiioAppId, $hoiioAccessToken, $notify_url, $dialBlockURL;\n\n $msg = \"You have made a booking for $num_guests guests on $booking_day at $booking_time pm.\";\n\n // use custom parameters in the notify_url to track the stage of IVR flow\n // this will be returned to you in the IVR notifications\n // next step in IVR is \"gather\"\n $notifications_url = $notify_url . \"?state=gather\";\n\n // prepare HTTP POST variables\n $fields = array(\n 'app_id' => urlencode($hoiioAppId),\n 'access_token' => urlencode($hoiioAccessToken),\n 'dest' => urlencode($mobile), // call out to the user for confirmation\n 'msg' => urlencode($msg),\n 'notify_url' => urlencode($notifications_url) // IVR notifications will be sent to this URL\n );\n\n $result = doPost($dialBlockURL, $fields); // do API post for IVR Dial\n print $result;\n}\n\n\n/* function to decide what is the next step of IVR flow */\nfunction handle_ivr_flow($params) {\n global $hoiioAppId, $hoiioAccessToken, $notify_url, $gatherBlockURL, $hangupBlockURL;\n\n if($params['call_state'] == \"ongoing\") {\n // only process if the call is still ongoing\n\n $session = $params['session']; // retrieve session so we can control the correct IVR call\n $state = $params['state']; // retrieve custom parameters to know which stage the IVR flow is at\n\n // decide what to do depending on which stage the call is at\n if($state == \"gather\") {\n // we have already read out the details of the booking to the user, ask user to confirm now\n\n $msg = \"To confirm the booking, please press 1. To cancel the booking, please press 0.\";\n\n // use custom parameters in the notify_url to track the stage of IVR flow\n // this will be returned to you in the IVR notifications\n // next step in IVR is \"after_gather\"\n $notifications_url = $notify_url . \"?state=after_gather\";\n\n // prepare HTTP POST variables\n $fields = array(\n 'app_id' => urlencode($hoiioAppId),\n 'access_token' => urlencode($hoiioAccessToken),\n 'session' => urlencode($session),\n 'msg' => urlencode($msg),\n 'max_digits' => urlencode(\"1\"), // only allow 1 digit in user input\n 'timeout' => urlencode(\"15\"), // allow 15s for user to input response\n 'attempts' => urlencode(\"2\"), // user has 2 attempts to input response\n 'notify_url' => urlencode($notifications_url) // IVR notifications will be sent here\n );\n\n doPost($gatherBlockURL, $fields); // do API post for IVR Gather\n } else if($state == \"after_gather\") {\n // user has just keyed in his response, read out his decision and hang up\n\n $digits = $params['digits']; // retrieve user's response\n\n if($digits == \"1\")\n $msg = \"Thank you for your confirmation. Good bye.\";\n else\n $msg = \"Your booking have been cancelled. Good bye.\";\n\n // prepare HTTP POST variables\n $fields = array(\n 'app_id' => urlencode($hoiioAppId),\n 'access_token' => urlencode($hoiioAccessToken),\n 'session' => urlencode($session),\n 'msg' => urlencode($msg)\n );\n\n doPost($hangupBlockURL, $fields); // do API post for IVR Hangup\n }\n }\n}\n\n\n/* generic function to do HTTP post */\nfunction doPost($url, $fields) {\n // form up variables in the correct format for HTTP POST\n $fields_string = '';\n foreach($fields as $key => $value)\n $fields_string .= $key . '=' . $value . '&';\n\n $fields_string = rtrim($fields_string,'&');\n\n // initialize cURL\n $ch = curl_init();\n\n // set options for cURL\n curl_setopt($ch, CURLOPT_URL, $url);\n curl_setopt($ch, CURLOPT_POST, true);\n curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n curl_setopt($ch, CURLOPT_POSTFIELDS, $fields_string);\n\n // execute HTTP POST request\n $response = curl_exec($ch);\n\n // close connection\n curl_close($ch);\n\n return $response;\n}\n\n\n/* function to print HTML for order confirmation form */\nfunction show_booking_page() {\n echo <<<CONFIRMATION\n<html>\n <head>\n <title>Booking Confirmation Example</title>\n </head>\n <body>\n <h2>Booking Confirmation Example</h2>\n <form id=\"confirmation\" action=\"\" method=\"post\">\n <table>\n <tr>\n <td>My mobile number (e.g. +6511111111) :</td>\n <td><input type=\"text\" name=\"mobile\" value=\"\"/></td>\n </tr>\n <tr>\n <td>Number of guests:</td>\n <td><input type=\"text\" name=\"num_guests\" value=\"\"/></td>\n </tr>\n <tr>\n <td>Date:</td>\n <td>\n <select name=\"booking_day\">\n <option value=\"monday\">Monday</option>\n <option value=\"tuesday\">Tuesday</option>\n <option value=\"wednesday\">Wednesday</option>\n <option value=\"thursday\">Thursday</option>\n <option value=\"friday\">Friday</option>\n <option value=\"saturday\">Saturday</option>\n <option value=\"sunday\">Sunday</option>\n </select>\n </td>\n </tr>\n <tr>\n <td>Time:</td>\n <td>\n <select name=\"booking_time\">\n <option value=\"6\">6:00pm</option>\n <option value=\"7\">7:00pm</option>\n <option value=\"8\">8:00pm</option>\n </select>\n </td>\n </tr>\n <tr>\n <td colspan=\"2\"><input type=\"submit\" value=\"confirm\" name=\"confirm\"/></td>\n </tr>\n </table>\n </form>\n </body>\n</html>\nCONFIRMATION;\n}\n\n?>\n", "language": "php" } ] } [/block] Download the [source code](https://gist.github.com/gists/3930473/download).
			Node:
			(type) c
			(layer)1
				Element:footer
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Terms of Use
				Element:li
				Element:a
					Data Policy
				Element:li
				Element:a
					Privacy Policy
				Element:li
				Element:a
					SLA
				Element:ul
					COPYRIGHT © 2015 HOIIO
