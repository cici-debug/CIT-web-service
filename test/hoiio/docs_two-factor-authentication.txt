Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					{"id":"54ddac5ded6e6b0d0050324e","name":"Hoiio Open API","subdomain":"hoiio-open-api","versions":[{"_id":"54ddac5eed6e6b0d00503251","releaseDate":"2015-02-13T07:48:46.162Z","is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":true,"codename":"","version_clean":"1.0.0","version":"1.0"}],"doc_slug":"","current_version":{"version_clean":"1.0.0","version":"1.0"},"oauth":{"enabled":false},"api":{"name":"","url":"https://secure.hoiio.com","contenttype":"form","auth":"","explorer":true,"proxyEnabled":true,"jwt":false,"authextra":[{"_id":"5578ca816858971900d5a762","type":"","default":"","key":""}],"headers":[],"object_definitions":[]},"apiAlt":[{"_id":"575530d422cb8d1900a976be","object_definitions":[],"headers":[],"authextra":[{"_id":"575531a33e5e320e0067bbbe","type":"query","default":"","key":"apiKey"}],"jwt":false,"proxyEnabled":true,"explorer":true,"auth":"token","contenttype":"form","url":"https://api.hoiio.com","name":"MS API"}],"plan_details":{"name":"Business","is_active":true,"cost":199,"versions":10000,"custom_domain":true,"custom_pages":true,"whitelabel":true,"errors":true,"password":true,"landing_page":true,"themebuilder":true,"stylesheet":true,"javascript":true,"html":true,"extra_html":true,"admins":true,"apps":true},"apps":{"enabled":false},"intercom":"","intercom_secure_emailonly":false,"flags":{"allow_hub2":false,"hub2":false,"migrationRun":true,"oauth":false,"swagger":false,"correctnewlines":false,"speedyRender":false,"allowXFrame":false,"jwt":false,"hideGoogleAnalytics":false,"stripe":false,"autoSslGeneration":true,"ssl":true},"asset_base_url":""}
				Element:a
					Hoiio Open API
			Node:
			(type) c
			(layer)1
				Element:ul
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:li
				Element:a
					Documentation
				Element:li
				Element:a
					Sign Up
				Element:li
				Element:a
					Login
			Node:
			(type) c
			(layer)1
				Element:pre
					{"__v":4,"_id":"54e561c4c2f66835000133b0","category":{"__v":7,"_id":"54e55f281815561700788603","pages":["54e56094c2f66835000133ad","54e561c4c2f66835000133b0","54e56242c2f66835000133b2","54e562c6c2f66835000133b5","54e5635bd71c112d0054419a","54e563f4c2f66835000133b8","54e5642b181556170078860d"],"project":"54ddac5ded6e6b0d0050324e","version":"54ddac5eed6e6b0d00503251","sync":{"url":"","isSync":false},"reference":false,"createdAt":"2015-02-19T03:57:28.070Z","from_sync":false,"order":3,"slug":"examples","title":"Examples"},"project":"54ddac5ded6e6b0d0050324e","user":"542a3845e677b00800508963","version":{"__v":31,"_id":"54ddac5eed6e6b0d00503251","project":"54ddac5ded6e6b0d0050324e","createdAt":"2015-02-13T07:48:46.162Z","releaseDate":"2015-02-13T07:48:46.162Z","categories":["54ddac5eed6e6b0d00503252","54ddad17ed6e6b0d00503256","54ddad3645aa9e170051e63f","54ddad42c48ad90d00c18708","54ddad5445aa9e170051e640","54ddad5bc4a3570d009d491f","54ddad6145aa9e170051e641","54ddad6cc48ad90d00c18709","54ddad74ed6e6b0d00503258","54ddad7cc48ad90d00c1870a","54ddad84c48ad90d00c1870b","54ddad8aed6e6b0d00503259","54ddad91ed6e6b0d0050325a","54ddad9cc48ad90d00c1870c","54ddada33a91410d001b164e","54ddadabed6e6b0d0050325b","54e025f1ebbf8f0d00b3b890","54e2b584d159340d00bd49cc","54e2c3f4d159340d00bd49d5","54e3e4a38ef7552300409d2c","54e4f9acc2f6683500013302","54e52194d71c112d00544131","54e55595c2f6683500013395","54e559e2d71c112d00544186","54e55b80c2f66835000133a3","54e55f281815561700788603","54e5644bd71c112d0054419c","54e572bfd71c112d005441ac","54e57413d71c112d005441af","54e575791815561700788624","57513e23c38d710e005d3cb0"],"is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":true,"codename":"","version_clean":"1.0.0","version":"1.0"},"updates":[],"next":{"pages":[],"description":""},"createdAt":"2015-02-19T04:08:36.726Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":1,"body":"This example shows you how to make use of [sms/send](doc:send-sms) to create a login page with 2-factor authentication. After verifying that the username and password is correct, the user would receive a one-time token via SMS that they have to enter before they are allowed access.\n\n**Requirements**\n\n* PHP with [cURL library support](http://php.net/manual/en/book.curl.php) \n\n[block:code]\n{\n \"codes\": [\n {\n \"code\": \"<?php\\n\\n/* Hoiio developer credentials */\\n$hoiioAppId = \\\"YOUR_APP_ID_HERE\\\";\\n$hoiioAccessToken = \\\"YOUR_ACCESS_TOKEN_HERE\\\";\\n$sendSmsURL = \\\"https://secure.hoiio.com/open/sms/send\\\";\\n\\n// User information: Query these from the db\\n$username = \\\"test\\\";\\n$password = \\\"password\\\";\\n$userMobileNumber = \\\"+6511111111\\\";\\n\\nsession_start();\\n\\n/* print HTML for page headers */\\necho <<<HEADER\\n<html>\\n <head>\\n <title>2 Factor-Authentication using SMS Example</title>\\n </head>\\n <body>\\nHEADER;\\n \\nif($_POST == null) {\\n // no form submission, show login page\\n show_login_page();\\n} else {\\n // process login page\\n if(isset($_POST['login'])) {\\n // Check username and password of user\\n $form_username = $_POST['user'];\\n $form_password = $_POST['password'];\\n \\n if(($form_username == $username) && ($form_password == $password)) { \\n // username and password match, generate token for 2FA\\n $token = rand(100, 999);\\n $message = \\\"Your 2FA verification token is: $token\\\";\\n \\n // store token in session for verification later\\n $_SESSION['token'] = $token;\\n \\n /* send SMS containing token */\\n /* prepare HTTP POST variables */\\n $fields = array(\\n 'app_id' => urlencode($hoiioAppId),\\n 'access_token' => urlencode($hoiioAccessToken),\\n 'dest' => urlencode($userMobileNumber), // send SMS to this phone\\n 'msg' => urlencode($message) // message content in SMS\\n );\\n \\n // form up variables in the correct format for HTTP POST\\n $fields_string = \\\"\\\";\\n foreach($fields as $key => $value) \\n $fields_string .= $key . '=' . $value . '&';\\n\\n $fields_string = rtrim($fields_string,'&');\\n\\n /* initialize cURL */\\n $ch = curl_init();\\n \\n /* set options for cURL */\\n curl_setopt($ch, CURLOPT_URL, $sendSmsURL);\\n curl_setopt($ch, CURLOPT_POST, true);\\n curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\\n curl_setopt($ch, CURLOPT_POSTFIELDS, $fields_string); \\n \\n /* execute HTTP POST request */\\n $raw_result = curl_exec($ch);\\n $result = json_decode($raw_result); // parse JSON formatted result\\n \\n /* close connection */\\n curl_close($ch);\\n\\n if($result->status == \\\"success_ok\\\") {\\n // 2FA sent successfully, move on to next step\\n show_2fa_page();\\n } else {\\n // error sending 2FA\\n echo $result->status;\\n show_login_page();\\n }\\n } else {\\n // wrong username and/or password\\n echo \\\"Wrong username and/or password.\\\";\\n show_login_page();\\n }\\n } elseif(isset($_POST['verify'])) { // process 2FA\\n // check token\\n $tokenInput = $_POST['token'];\\n $token = $_SESSION['token'];\\n \\n if($tokenInput != $token) {\\n echo \\\"Invalid token.\\\";\\n } else { \\n echo \\\"Login successful.\\\";\\n session_destroy();\\n }\\n }\\n}\\n\\n/* print HTML for page footers */\\necho <<<FOOTER\\n </body>\\n</html>\\nFOOTER;\\n\\n/* function to print HTML for login form */\\nfunction show_login_page() {\\n echo <<<LOGIN\\n<h2>2 Factor-Authentication using SMS Example</h2>\\n<form id=\\\"login\\\" action=\\\"\\\" method=\\\"post\\\">\\n Use test/password to login.\\n <table>\\n <tr>\\n <td>Username:</td>\\n <td><input type=\\\"text\\\" name=\\\"user\\\" value=\\\"\\\"/></td>\\n </tr>\\n <tr>\\n <td>Password:</td>\\n <td><input type=\\\"password\\\" name=\\\"password\\\" value=\\\"\\\"/></td>\\n </tr>\\n <tr>\\n <td colspan=\\\"2\\\"><input type=\\\"submit\\\" value=\\\"Login\\\" name=\\\"login\\\"/></td>\\n </tr>\\n </table>\\n</form>\\nLOGIN;\\n}\\n\\n/* function to print HTML for 2FA form */\\nfunction show_2fa_page() {\\n echo <<<TOKENVERIFY\\n<h2>2FA Token Verification</h2>\\n<form id=\\\"verify\\\" action=\\\"\\\" method=\\\"post\\\">\\n <table>\\n <tr>\\n <td colspan=\\\"2\\\">Enter your 2FA token here:</td>\\n </tr>\\n <tr>\\n <td>Token:</td>\\n <td><input type=\\\"text\\\" name=\\\"token\\\" value=\\\"\\\"/></td>\\n </tr>\\n <tr>\\n <td colspan=\\\"2\\\"><input type=\\\"submit\\\" value=\\\"Submit\\\" name=\\\"verify\\\"/></td>\\n </tr>\\n </table>\\n</form>\\nTOKENVERIFY;\\n}\\n\\n?>\",\n \"language\": \"php\"\n }\n ]\n}\n[/block]\nDownload the [source code](https://gist.github.com/gists/3930414/download).","excerpt":"","slug":"two-factor-authentication","type":"basic","title":"Two-Factor Authentication"}
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Hoiio
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Overview
													Element:li
													Element:a
													Element:span
														Quick Start Guide
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Voice API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Voice API Introduction
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Make Call
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Hangup
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Query Call Status
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														REST API & General
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														REST Format
													Element:li
													Element:a
													Element:span
														Authentication
													Element:li
													Element:a
													Element:span
														API Limits!
													Element:li
													Element:a
													Element:span
														Handling Notifications
													Element:li
													Element:a
													Element:span
														Verifying Notifications
													Element:li
													Element:a
													Element:span
														Currency Codes
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Conference API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Call Conference
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Conference Moderate
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														SDK
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														SDK
													Element:li
													Element:a
													Element:span
														Java
													Element:li
													Element:a
													Element:span
														C#
													Element:li
													Element:a
													Element:span
														PHP
													Element:li
													Element:a
													Element:span
														Python
													Element:li
													Element:a
													Element:span
														Ruby
													Element:li
													Element:a
													Element:span
														JavaScript
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														SMS API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														SMS API Introduction
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Send SMS
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Send Bulk SMS
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Receive SMS
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Query SMS Status
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														IVR API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														IVR API Introduction
													Element:li
													Element:a
													Element:span
														An Overview
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Answer
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Dial
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Play
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Gather
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Record
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Hold
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Unhold
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Transfer
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Hangup
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Examples
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Examples
													Element:li
													Element:a
													Element:span
														Two-Factor Authentication
													Element:li
													Element:a
													Element:span
														Click-to-Call
													Element:li
													Element:a
													Element:span
														Booking Confirmation
													Element:li
													Element:a
													Element:span
														Conference Call (Outgoing)
													Element:li
													Element:a
													Element:span
														Conference Call (Incoming)
													Element:li
													Element:a
													Element:span
														Auto Attendant
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Fax API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Fax API Introduction
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Send Fax
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Receive Fax
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Fax Rate
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														API Reference
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														API Reference
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Number API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Number API Introduction
													Element:li
													Element:a
													Element:span
														get
													Element:span
														List Supported Countries
													Element:li
													Element:a
													Element:span
														get
													Element:span
														List Available Numbers
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Number Rates
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Number Subscription
													Element:li
													Element:a
													Element:span
														get
													Element:span
														List Subscribed Numbers
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Developer Agreement
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Developer Agreement
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Consent API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Add Consent Status
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Account API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Account API Introduction
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Credit Balance
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Account Info
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Organization API
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														get
													Element:span
														List Organization Members
			Node:
			(type) h1
			(layer)1
				Element:h1
					Two-Factor Authentication
			Node:
			(type) c
			(layer)1
				Element:hr
					This example shows you how to make use of [sms/send](doc:send-sms) to create a login page with 2-factor authentication. After verifying that the username and password is correct, the user would receive a one-time token via SMS that they have to enter before they are allowed access. **Requirements** * PHP with [cURL library support](http://php.net/manual/en/book.curl.php) [block:code] { "codes": [ { "code": "<?php\n\n/* Hoiio developer credentials */\n$hoiioAppId = \"YOUR_APP_ID_HERE\";\n$hoiioAccessToken = \"YOUR_ACCESS_TOKEN_HERE\";\n$sendSmsURL = \"https://secure.hoiio.com/open/sms/send\";\n\n// User information: Query these from the db\n$username = \"test\";\n$password = \"password\";\n$userMobileNumber = \"+6511111111\";\n\nsession_start();\n\n/* print HTML for page headers */\necho <<<HEADER\n<html>\n <head>\n <title>2 Factor-Authentication using SMS Example</title>\n </head>\n <body>\nHEADER;\n \nif($_POST == null) {\n // no form submission, show login page\n show_login_page();\n} else {\n // process login page\n if(isset($_POST['login'])) {\n // Check username and password of user\n $form_username = $_POST['user'];\n $form_password = $_POST['password'];\n \n if(($form_username == $username) && ($form_password == $password)) { \n // username and password match, generate token for 2FA\n $token = rand(100, 999);\n $message = \"Your 2FA verification token is: $token\";\n \n // store token in session for verification later\n $_SESSION['token'] = $token;\n \n /* send SMS containing token */\n /* prepare HTTP POST variables */\n $fields = array(\n 'app_id' => urlencode($hoiioAppId),\n 'access_token' => urlencode($hoiioAccessToken),\n 'dest' => urlencode($userMobileNumber), // send SMS to this phone\n 'msg' => urlencode($message) // message content in SMS\n );\n \n // form up variables in the correct format for HTTP POST\n $fields_string = \"\";\n foreach($fields as $key => $value) \n $fields_string .= $key . '=' . $value . '&';\n\n $fields_string = rtrim($fields_string,'&');\n\n /* initialize cURL */\n $ch = curl_init();\n \n /* set options for cURL */\n curl_setopt($ch, CURLOPT_URL, $sendSmsURL);\n curl_setopt($ch, CURLOPT_POST, true);\n curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n curl_setopt($ch, CURLOPT_POSTFIELDS, $fields_string); \n \n /* execute HTTP POST request */\n $raw_result = curl_exec($ch);\n $result = json_decode($raw_result); // parse JSON formatted result\n \n /* close connection */\n curl_close($ch);\n\n if($result->status == \"success_ok\") {\n // 2FA sent successfully, move on to next step\n show_2fa_page();\n } else {\n // error sending 2FA\n echo $result->status;\n show_login_page();\n }\n } else {\n // wrong username and/or password\n echo \"Wrong username and/or password.\";\n show_login_page();\n }\n } elseif(isset($_POST['verify'])) { // process 2FA\n // check token\n $tokenInput = $_POST['token'];\n $token = $_SESSION['token'];\n \n if($tokenInput != $token) {\n echo \"Invalid token.\";\n } else { \n echo \"Login successful.\";\n session_destroy();\n }\n }\n}\n\n/* print HTML for page footers */\necho <<<FOOTER\n </body>\n</html>\nFOOTER;\n\n/* function to print HTML for login form */\nfunction show_login_page() {\n echo <<<LOGIN\n<h2>2 Factor-Authentication using SMS Example</h2>\n<form id=\"login\" action=\"\" method=\"post\">\n Use test/password to login.\n <table>\n <tr>\n <td>Username:</td>\n <td><input type=\"text\" name=\"user\" value=\"\"/></td>\n </tr>\n <tr>\n <td>Password:</td>\n <td><input type=\"password\" name=\"password\" value=\"\"/></td>\n </tr>\n <tr>\n <td colspan=\"2\"><input type=\"submit\" value=\"Login\" name=\"login\"/></td>\n </tr>\n </table>\n</form>\nLOGIN;\n}\n\n/* function to print HTML for 2FA form */\nfunction show_2fa_page() {\n echo <<<TOKENVERIFY\n<h2>2FA Token Verification</h2>\n<form id=\"verify\" action=\"\" method=\"post\">\n <table>\n <tr>\n <td colspan=\"2\">Enter your 2FA token here:</td>\n </tr>\n <tr>\n <td>Token:</td>\n <td><input type=\"text\" name=\"token\" value=\"\"/></td>\n </tr>\n <tr>\n <td colspan=\"2\"><input type=\"submit\" value=\"Submit\" name=\"verify\"/></td>\n </tr>\n </table>\n</form>\nTOKENVERIFY;\n}\n\n?>", "language": "php" } ] } [/block] Download the [source code](https://gist.github.com/gists/3930414/download).
			Node:
			(type) c
			(layer)1
				Element:footer
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Terms of Use
				Element:li
				Element:a
					Data Policy
				Element:li
				Element:a
					Privacy Policy
				Element:li
				Element:a
					SLA
				Element:ul
					COPYRIGHT © 2015 HOIIO
