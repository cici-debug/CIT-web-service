Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Hypermedia
			Node:
			(type) c
			(layer)1
				Element:p
					The Wurl API implements a Hypermedia API. What is Hypermedia and why should I care? We explain below.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								HATEOAS
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
								HATEOAS
								(Hypermedia As The Engine Of Application State) is a rather powerful concept. Quoting the wikipedia description:
						Node:
						(type) c
						(layer)2
							Element:blockquote
							Element:p
								The principle is that a client interacts with a network application entirely through hypermedia provided dynamically by application servers. A REST client needs no prior knowledge about how to interact with any particular application or server beyond a generic understanding of hypermedia.
						Node:
						(type) c
						(layer)2
							Element:p
								What this means is that when both the server and client respect the constraints of Hypermedia, both can evolve independently without breaking every time either one changes. The Wurl API enables this by providing URLs for you.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Use provided URLs
						Node:
						(type) c
						(layer)2
							Element:p
								Your client should not construct URLs. The only URL your client needs to know about is the Root URL for the API,
							Element:code
								https://api.wurl.com/api
								. Any further URL's you will need to interact with the API will be provided in the API responses.
						Node:
						(type) c
						(layer)2
							Element:p
								For example, let's start with the Root URL:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								$ curl https://api.wurl.com/api { "links": [ { "rel": ["self"], "href": "https://api.wurl.com/api" }, { "rel": ["urn:x-resource:name:me"], "href": "https://api.wurl.com/api/users/me" } ] }
						Node:
						(type) c
						(layer)2
							Element:p
								The Root URL provides a number of links to the resources you have available to you. Each link has a named rel (
							Element:em
								urn:x-resource:name
								). The named rel is the Wurl API's contract with its clients. When you look up the resource with rel
							Element:em
								urn:x-resource:name:me
								then you are guaranteed to lookup the resource for your user account. Similarly, the Wurl API is free to change the URL to
							Element:em
								https://api.wurl.com/api/users/3423
								in the future without breaking your client because you 'find' the URL by rel instead of manually constructing the URL in your client.
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:p
							Element:span
								Wurl, Inc.
							Element:br
							Element:span
								Palo Alto, California
							Element:br
							Element:a
								info@wurl.com
							Element:br
							Element:span
								650.470.7550
							Element:p
								© Wurl
							Element:ul
							Element:li
								Wurl
							Element:li
							Element:a
								Home
							Element:li
							Element:a
								About
							Element:li
							Element:a
								Blog
							Element:li
							Element:a
								Team
							Element:li
							Element:a
								Legal
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:a
							Element:li
			Node:
			(type) h1
			(layer)1
				Element:h1
					Developer
				Element:ul
				Element:li
				Element:a
					Blog
				Element:li
				Element:a
					API Status
				Element:li
				Element:a
					Support
			Node:
			(type) h1
			(layer)1
				Element:h1
					Hypermedia
			Node:
			(type) c
			(layer)1
				Element:p
					The Wurl API implements a Hypermedia API. What is Hypermedia and why should I care? We explain below.
			Node:
			(type) c
			(layer)1
				Element:h2
					HATEOAS
			Node:
			(type) c
			(layer)1
				Element:p
				Element:a
					HATEOAS
					(Hypermedia As The Engine Of Application State) is a rather powerful concept. Quoting the wikipedia description:
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					The principle is that a client interacts with a network application entirely through hypermedia provided dynamically by application servers. A REST client needs no prior knowledge about how to interact with any particular application or server beyond a generic understanding of hypermedia.
			Node:
			(type) c
			(layer)1
				Element:p
					What this means is that when both the server and client respect the constraints of Hypermedia, both can evolve independently without breaking every time either one changes. The Wurl API enables this by providing URLs for you.
			Node:
			(type) c
			(layer)1
				Element:h2
					Use provided URLs
			Node:
			(type) c
			(layer)1
				Element:p
					Your client should not construct URLs. The only URL your client needs to know about is the Root URL for the API,
				Element:code
					https://api.wurl.com/api
					. Any further URL's you will need to interact with the API will be provided in the API responses.
			Node:
			(type) c
			(layer)1
				Element:p
					For example, let's start with the Root URL:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl https://api.wurl.com/api { "links": [ { "rel": ["self"], "href": "https://api.wurl.com/api" }, { "rel": ["urn:x-resource:name:me"], "href": "https://api.wurl.com/api/users/me" } ] }
			Node:
			(type) c
			(layer)1
				Element:p
					The Root URL provides a number of links to the resources you have available to you. Each link has a named rel (
				Element:em
					urn:x-resource:name
					). The named rel is the Wurl API's contract with its clients. When you look up the resource with rel
				Element:em
					urn:x-resource:name:me
					then you are guaranteed to lookup the resource for your user account. Similarly, the Wurl API is free to change the URL to
				Element:em
					https://api.wurl.com/api/users/3423
					in the future without breaking your client because you 'find' the URL by rel instead of manually constructing the URL in your client.
			Node:
			(type) c
			(layer)1
				Element:footer
				Element:ul
				Element:li
					Wurl
				Element:li
				Element:a
					Home
				Element:li
				Element:a
					About
				Element:li
				Element:a
					Blog
				Element:li
				Element:a
					Team
				Element:li
				Element:a
					Legal
				Element:ul
				Element:li
					Help
				Element:li
				Element:a
					Contact Support
				Element:li
				Element:a
					Status
				Element:p
				Element:span
					Wurl, Inc.
				Element:br
				Element:span
					Palo Alto, California
				Element:br
				Element:a
					info@wurl.com
				Element:br
				Element:span
					650.470.7550
				Element:p
					© Wurl
