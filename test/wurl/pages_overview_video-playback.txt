Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Video Playback
			Node:
			(type) c
			(layer)1
				Element:p
					One of the strengths of the Wurl API is the breadth of video programming we make available. Our API exposes content from 1000s of Internet-based video publishers (“Programming Sources”). Through our API, video service providers can create apps with discovery and search experiences that integrate a wide variety of video programming – all delivered under each operator’s own brand and user experience.
			Node:
			(type) c
			(layer)1
				Element:p
					The Wurl API provides normalized metadata that simplifies our customers’ content integration. This frees application developers from the complexity of developing and maintaining back-end services to on-board, index and update the thousands of content sources available on the Internet.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Playback Metadata Types
						Node:
						(type) c
						(layer)2
							Element:p
								The Programming Sources in our Index provide a variety of methods to access their video content. Wurl works with each Programming Source to allow playback only according to each provider’s preferences and terms of use. Below are the various types of video playback methods that are supported by the Wurl API.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Direct (Native Player)
									Node:
									(type) c
									(layer)3
										Element:p
											Thousands of video Programming Sources in the Wurl Index provide us with metadata to enable playback in our customer’s native video players (e.g. a pay TV operator’s native video player on a STB). Because this method provides effortless, 1-click playback for consumers, video programming made available in this way consistently produces the highest view counts and viewer loyalty. AOL, Brightcove and Wochit are examples of Programming Sources that support playback in native players.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Direct (Custom Player from Programming Source)
									Node:
									(type) c
									(layer)3
										Element:p
											Some video publishers provide their own custom player for video playback. This is a method that has evolved from “embeddable” players popular on the Web for the past decade. For video programming from these providers, Wurl’s metadata includes a snippet of code - typically an HTML
										Element:code
											<iframe>
											or
										Element:code
											<video>
											element. Wurl customers use these snippets to enable playback in a browser or a WebView. YouTube, PopcornFlix and Dailymotion are examples of Programming Sources in our Index that require the use of their own custom player.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Link-out
									Node:
									(type) c
									(layer)3
										Element:p
											Some Programming Sources allow Wurl to index their content, but require the use of their own proprietary app for video playback. Examples include: Toon Goggles, i-Velozity, Netflix and Hulu. We use the term “link-out” to describe this playback method where we maintain complete descriptive metadata for a publisher’s content catalog, but our playback metadata contains a deep-link that launches the publisher’s app and automatically starts video playback. For our customers, Link-outs require the installation of each content provider’s native app or web app.
									Node:
									(type) c
									(layer)3
										Element:p
											Note: This is an area where many Programming Sources change their rules quite frequently. For example, Netflix allowed Link-Outs until recently, but now requires special permission.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Apps
									Node:
									(type) c
									(layer)3
										Element:p
											Some Programming Sources do not allow their content to be indexed and require the use of their own proprietary app for video playback and discovery. In these cases, the Wurl index includes metadata related to each app (including launch information), but does not include descriptive metadata or playback metadata related to any of the video programming. This is the approach that Netflix takes on STBs with most operators – allowing the Netflix app to be accessible, but not allowing Netflix programming to appear in any operator-controlled discovery experience.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Video Playback
						Node:
						(type) c
						(layer)2
							Element:p
								Wurl API responses include a “Playback Array” containing all of the information a developer needs to enable video playback pursuant to the methods exposed by each Programming Source (as described above). See our
							Element:a
								Play a Video
								guide for more details.
						Node:
						(type) c
						(layer)2
							Element:p
								For more information, here are some examples of Programming Sources that provide API's or SDKs for advanced integrations.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
								Publisher
							Element:th
								Resource
							Element:tbody
							Element:tr
							Element:td
								Youtube
							Element:td
							Element:a
								https://developers.google.com/youtube/v3/libraries
							Element:tr
							Element:td
								Vimeo
							Element:td
							Element:a
								http://developer.vimeo.com/
							Element:tr
							Element:td
								Daily Motion
							Element:td
							Element:a
								http://www.dailymotion.com/doc/api/sdk.html
							Element:tr
							Element:td
								Brightcove
							Element:td
							Element:a
								http://support.brightcove.com/en/video-cloud/docs/brightcove-sdks
						Node:
						(type) c
						(layer)2
							Element:p
								Many of the content publishers that do not use aggregators provide their content in an easily digestible syndicated format that plays well on native device players.
						Node:
						(type) c
						(layer)2
							Element:p
								Don't hesitate to contact us at
							Element:a
								support
								for any questions regarding specific integrations.
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:p
							Element:span
								Wurl, Inc.
							Element:br
							Element:span
								Palo Alto, California
							Element:br
							Element:a
								info@wurl.com
							Element:br
							Element:span
								650.470.7550
							Element:p
								© Wurl
							Element:ul
							Element:li
								Wurl
							Element:li
							Element:a
								Home
							Element:li
							Element:a
								About
							Element:li
							Element:a
								Blog
							Element:li
							Element:a
								Team
							Element:li
							Element:a
								Legal
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:a
							Element:li
			Node:
			(type) h1
			(layer)1
				Element:h1
					Developer
				Element:ul
				Element:li
				Element:a
					Blog
				Element:li
				Element:a
					API Status
				Element:li
				Element:a
					Support
			Node:
			(type) h1
			(layer)1
				Element:h1
					Video Playback
			Node:
			(type) c
			(layer)1
				Element:p
					One of the strengths of the Wurl API is the breadth of video programming we make available. Our API exposes content from 1000s of Internet-based video publishers (“Programming Sources”). Through our API, video service providers can create apps with discovery and search experiences that integrate a wide variety of video programming – all delivered under each operator’s own brand and user experience.
			Node:
			(type) c
			(layer)1
				Element:p
					The Wurl API provides normalized metadata that simplifies our customers’ content integration. This frees application developers from the complexity of developing and maintaining back-end services to on-board, index and update the thousands of content sources available on the Internet.
			Node:
			(type) c
			(layer)1
				Element:h2
					Playback Metadata Types
			Node:
			(type) c
			(layer)1
				Element:p
					The Programming Sources in our Index provide a variety of methods to access their video content. Wurl works with each Programming Source to allow playback only according to each provider’s preferences and terms of use. Below are the various types of video playback methods that are supported by the Wurl API.
			Node:
			(type) c
			(layer)1
				Element:h3
					Direct (Native Player)
			Node:
			(type) c
			(layer)1
				Element:p
					Thousands of video Programming Sources in the Wurl Index provide us with metadata to enable playback in our customer’s native video players (e.g. a pay TV operator’s native video player on a STB). Because this method provides effortless, 1-click playback for consumers, video programming made available in this way consistently produces the highest view counts and viewer loyalty. AOL, Brightcove and Wochit are examples of Programming Sources that support playback in native players.
			Node:
			(type) c
			(layer)1
				Element:h3
					Direct (Custom Player from Programming Source)
			Node:
			(type) c
			(layer)1
				Element:p
					Some video publishers provide their own custom player for video playback. This is a method that has evolved from “embeddable” players popular on the Web for the past decade. For video programming from these providers, Wurl’s metadata includes a snippet of code - typically an HTML
				Element:code
					<iframe>
					or
				Element:code
					<video>
					element. Wurl customers use these snippets to enable playback in a browser or a WebView. YouTube, PopcornFlix and Dailymotion are examples of Programming Sources in our Index that require the use of their own custom player.
			Node:
			(type) c
			(layer)1
				Element:h3
					Link-out
			Node:
			(type) c
			(layer)1
				Element:p
					Some Programming Sources allow Wurl to index their content, but require the use of their own proprietary app for video playback. Examples include: Toon Goggles, i-Velozity, Netflix and Hulu. We use the term “link-out” to describe this playback method where we maintain complete descriptive metadata for a publisher’s content catalog, but our playback metadata contains a deep-link that launches the publisher’s app and automatically starts video playback. For our customers, Link-outs require the installation of each content provider’s native app or web app.
			Node:
			(type) c
			(layer)1
				Element:p
					Note: This is an area where many Programming Sources change their rules quite frequently. For example, Netflix allowed Link-Outs until recently, but now requires special permission.
			Node:
			(type) c
			(layer)1
				Element:h3
					Apps
			Node:
			(type) c
			(layer)1
				Element:p
					Some Programming Sources do not allow their content to be indexed and require the use of their own proprietary app for video playback and discovery. In these cases, the Wurl index includes metadata related to each app (including launch information), but does not include descriptive metadata or playback metadata related to any of the video programming. This is the approach that Netflix takes on STBs with most operators – allowing the Netflix app to be accessible, but not allowing Netflix programming to appear in any operator-controlled discovery experience.
			Node:
			(type) c
			(layer)1
				Element:h2
					Video Playback
			Node:
			(type) c
			(layer)1
				Element:p
					Wurl API responses include a “Playback Array” containing all of the information a developer needs to enable video playback pursuant to the methods exposed by each Programming Source (as described above). See our
				Element:a
					Play a Video
					guide for more details.
			Node:
			(type) c
			(layer)1
				Element:p
					For more information, here are some examples of Programming Sources that provide API's or SDKs for advanced integrations.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Publisher
				Element:th
					Resource
				Element:tbody
				Element:tr
				Element:td
					Youtube
				Element:td
				Element:a
					https://developers.google.com/youtube/v3/libraries
				Element:tr
				Element:td
					Vimeo
				Element:td
				Element:a
					http://developer.vimeo.com/
				Element:tr
				Element:td
					Daily Motion
				Element:td
				Element:a
					http://www.dailymotion.com/doc/api/sdk.html
				Element:tr
				Element:td
					Brightcove
				Element:td
				Element:a
					http://support.brightcove.com/en/video-cloud/docs/brightcove-sdks
			Node:
			(type) c
			(layer)1
				Element:p
					Many of the content publishers that do not use aggregators provide their content in an easily digestible syndicated format that plays well on native device players.
			Node:
			(type) c
			(layer)1
				Element:p
					Don't hesitate to contact us at
				Element:a
					support
					for any questions regarding specific integrations.
			Node:
			(type) c
			(layer)1
				Element:footer
				Element:ul
				Element:li
					Wurl
				Element:li
				Element:a
					Home
				Element:li
				Element:a
					About
				Element:li
				Element:a
					Blog
				Element:li
				Element:a
					Team
				Element:li
				Element:a
					Legal
				Element:ul
				Element:li
					Help
				Element:li
				Element:a
					Contact Support
				Element:li
				Element:a
					Status
				Element:p
				Element:span
					Wurl, Inc.
				Element:br
				Element:span
					Palo Alto, California
				Element:br
				Element:a
					info@wurl.com
				Element:br
				Element:span
					650.470.7550
				Element:p
					© Wurl
