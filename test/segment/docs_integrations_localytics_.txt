Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Localytics Integration
			Node:
			(type) c
			(layer)1
				Element:p
					Segment makes it easy to send your data to
				Element:a
					Localytics
					(and lots of other integrations). Once you've tracked your data through our open source
				Element:a
					libraries
					we'll translate and route your data to Localytics in the format they understand.
			Node:
			(type) c
			(layer)1
				Element:p
					Our Localytics mobile integration code is open sourced on Github. Feel free to check it out:
				Element:a
					iOS
					,
				Element:a
					Android
					.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Getting Started
						Node:
						(type) c
						(layer)2
							Element:p
								Once the Segment library is integrated with your site or app, toggle Localytics on in your Segment integrations, and add your application’s
							Element:strong
								App Key
								which you can find in your Localytics app settings. These new settings will take up to an hour to propogate to all of your existing users. For new users it’ll be instanteneous!
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Note:
								Localytics does not accept server-side data, so you’ll have to use one of our client-side libraries (
							Element:a
								Analytics.js
								,
							Element:a
								iOS
								/
							Element:a
								Android
								SDKs with Localytics
							Element:a
								bundled
								to send data to Localytics.
						Node:
						(type) c
						(layer)2
							Element:p
								You will also need to add the Maven Localytics repo (since Localytics doesn’t publish it on Maven Central). You can see an example of how to add that
							Element:a
								here
								.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Identify
						Node:
						(type) c
						(layer)2
							Element:p
								When you call
							Element:a
								, we’ll set the Localytics customer Id, and set any special Localytics traits you provide, such as
							Element:code
								identify
							Element:code
								name
								, or
							Element:code
								email
								, and any custom traits as well.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Track
						Node:
						(type) c
						(layer)2
							Element:p
								Whenever you call
							Element:a
								, we’ll log an event with Localytics.
							Element:code
								track
							Element:a
								takes the name of the event and any optional properties you want to associate with the event.
							Element:code
								track
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Push Notifications
						Node:
						(type) c
						(layer)2
							Element:p
								Push notifications on Android require a bit of extra work to setup.
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:p
								First, you need to make sure Localytics is being bundled. You can find out more information about bundled integrations in our
							Element:a
								Android documentation
								.
							Element:li
							Element:p
								Follow Localytics’ documentation to
							Element:a
								setup the permission in your AndroidManifest.xml
								. Specifically, the
							Element:strong
								AndroidManifest
								changes regarding the
							Element:code
								GcmReceiver
								,
							Element:code
								GcmListenerService
								,
							Element:code
								InstanceIDListenerServer
								, and
							Element:code
								PushTrackingActivity
								classes.
							Element:li
							Element:p
								In lieu of step four, you will register the Push receiver in your Activity or Application class within a Segment
							Element:code
								onIntegrationReady
								method:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								@Override protected void onResume() { super.onResume(); Analytics.with(this).onIntegrationReady(BundledIntegration.LOCALYTICS, new Callback() { @Override public void onIntegrationReady(Object integration) { Localytics.registerPush("YOUR-SENDER-ID"); } }); }
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Supported Sources and Connection Modes
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
							Element:th
								Web
							Element:th
								Mobile
							Element:th
								Server
							Element:tr
							Element:td
								📱 Device-based
							Element:td
								✅
							Element:td
								✅
							Element:td
							Element:tr
							Element:td
								☁️ Cloud-based
							Element:td
							Element:td
							Element:td
						Node:
						(type) c
						(layer)2
							Element:p
								To learn more about about Connection Modes and what dictates which we support,
							Element:a
								see here
								.
						Node:
						(type) c
						(layer)2
							Element:p
								This integration
							Element:em
								requires
								a
							Element:strong
								Device-based
								Connection Mode for
							Element:strong
								Mobile
								data. Follow the steps above to ensure you have packaged the Localytics SDK with Segment’s.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Settings
						Node:
						(type) c
						(layer)2
							Element:p
								Segment lets you change these integration settings via your Segment dashboard without having to touch any code.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											App Key
									Node:
									(type) c
									(layer)3
										Element:p
											You can find your App Key in your Localytics
										Element:a
											Settings page
											.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Custom Dimensions
									Node:
									(type) c
									(layer)3
										Element:p
											Localytics only accepts custom dimensions that have been pre-set in your app. Make sure to set these up in Localytics first, under Settings > Apps and then editing your app settings. You should then map the
										Element:code
											trait
											in an identify call or the
										Element:code
											property
											in a track call to the corresponding custom dimension you want to send. For e.g. you might map
										Element:code
											gender
											with custom dimension
										Element:code
											0
											. You can read more about custom dimensions
										Element:a
											here
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Session Timeout Interval
									Node:
									(type) c
									(layer)3
										Element:p
											If an App stays in the background for more than this many seconds, start a new session when it returns to foreground.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Use Organization Scope for Attributes
									Node:
									(type) c
									(layer)3
										Element:p
											This allows a user to set the
										Element:code
											profileScope
											of attributes within Localytics to Organization. If this is enabled, the attributes that you set for a user will be available across all of your apps in Localytics. If it’s unchecked, we’ll use the default SDK behavior of Application scoping.
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:p
											If you have any questions or see anywhere we can improve our documentation, please
										Element:a
											let us know
											or kick off a conversation in the
										Element:a
											Segment Community
											!
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
									Node:
									(type) c
									(layer)3
										Element:span
											Check out the code!
									Node:
									(type) c
									(layer)3
										Element:a
											android
									Node:
									(type) c
									(layer)3
										Element:a
											ios
									Node:
									(type) c
									(layer)3
										Element:a
											browser
