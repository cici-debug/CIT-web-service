Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Infinario Integration
			Node:
			(type) c
			(layer)1
				Element:p
					Segment makes it easy to send your data to
				Element:a
					Infinario
					(and lots of other integrations). Once you've tracked your data through our open source
				Element:a
					libraries
					we'll translate and route your data to Infinario in the format they understand.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Getting Started
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								Create a free account and project at
							Element:a
								https://cloud.infinario.com/
								if you haven‚Äôt done so already
							Element:li
								Find your Exponea
							Element:code
								Project Token
								in the Project overview screen visible after choosing your project
							Element:li
								Toggle Exponea on in your Segment integrations, using the Project Token from the previous step
						Node:
						(type) c
						(layer)2
							Element:p
								Exponea supports the
							Element:code
								identify
								,
							Element:code
								track
								,
							Element:code
								page
								,
							Element:code
								screen
								and
							Element:code
								alias
								methods, there is also partial support for the
							Element:code
								group
								method.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Common restrictions
						Node:
						(type) c
						(layer)2
							Element:p
								User traits and event properties cannot contain characters
							Element:code
								.
								and
							Element:code
								$
								in the trait/property keys. That means
							Element:code
								"currency": "$"
								is OK, but
							Element:code
								"^.^": "kitty"
								is not. The total amount of user trait keys is limited to 255. The same limit also applies for the total amount of property keys for each event type, and the total amount of event types.
						Node:
						(type) c
						(layer)2
							Element:p
								Aside from these restrictions, Exponea supports any JSON-serializable data as a trait/property value. However, objects are unpractical to use in the Exponea analytic module, therefore we unpack the first level of an object as properties for your convenience. For example,
							Element:code
								"address": {"country": "UK", "city": "London"}
								is stored as properties
							Element:code
								"address_country": "UK"
								and
							Element:code
								"address_city": "London"
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Identify
						Node:
						(type) c
						(layer)2
							Element:p
								This call ensures the existence and updates the properties of a user (player/customer) in Exponea. The
							Element:code
								userId
								is mapped to Exponea
							Element:code
								registered
								ID, whereas the
							Element:code
								anonymousId
								is mapped to Exponea
							Element:code
								cookie
								ID. Properties of a user with special usage in Exponea can be found in
							Element:a
								the Players guide
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Track
						Node:
						(type) c
						(layer)2
							Element:p
								Tracks an event of any type, including any desired properties of that event. Most of the Segment call‚Äôs context will be added as extra properties.
						Node:
						(type) c
						(layer)2
							Element:p
								It is advised to reserve the
							Element:code
								campaign
								event type for events generated automatically by the Exponea campaign module. If you track your mobile app payments as the event type
							Element:code
								hard_purchase
								, you will be able to use the
							Element:a
								automated payment validation
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Page
						Node:
						(type) c
						(layer)2
							Element:p
								Tracks an event of type
							Element:code
								page_visit
								, it is currently also used to keep track of sessions. The first page call in a session creates a
							Element:code
								session_start
								event, then after a certain time of inactivity, the
							Element:code
								session_end
								event is created with the duration of the session.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Screen
						Node:
						(type) c
						(layer)2
							Element:p
								Tracks an event of type
							Element:code
								screen_visit
								, it is currently also used to keep track of Exponea sessions, the same way the page call does.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Alias
						Node:
						(type) c
						(layer)2
							Element:p
								The alias call can be used to merge two user indentities and their data to one. The
							Element:code
								previousId
								field should always contain a previously used
							Element:code
								anonymousId
								, as merging users by specifying two
							Element:code
								userId
								‚Äòs is currently not supported. Note that users are also merged when any call specifies both a
							Element:code
								userId
								and an
							Element:code
								anonymousId
								, which previously belonged to two separate users.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Group
						Node:
						(type) c
						(layer)2
							Element:p
								This call is currently only supported partially. Whenever a user is assigned to a group, the properties of this group and the group ID is added to the user‚Äôs properties. This means there is no support for the user being in multiple groups.
						Node:
						(type) c
						(layer)2
							Element:hr
						Node:
						(type) c
						(layer)2
							Element:p
								Please consult the
							Element:a
								Exponea guides
								to see what can you do with the data you tracked.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Supported Sources and Connection Modes
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
							Element:th
								Web
							Element:th
								Mobile
							Element:th
								Server
							Element:tr
							Element:td
								üì± Device-based
							Element:td
							Element:td
							Element:td
							Element:tr
							Element:td
								‚òÅÔ∏è Cloud-based
							Element:td
								‚úÖ
							Element:td
								‚úÖ
							Element:td
								‚úÖ
						Node:
						(type) c
						(layer)2
							Element:p
								To learn more about about Connection Modes and what dictates which we support,
							Element:a
								see here
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Settings
						Node:
						(type) c
						(layer)2
							Element:p
								Segment lets you change these integration settings via your Segment dashboard without having to touch any code.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Project Token
									Node:
									(type) c
									(layer)3
										Element:p
											Your Exponea Project Token
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:p
											If you have any questions or see anywhere we can improve our documentation, please
										Element:a
											let us know
											or kick off a conversation in the
										Element:a
											Segment Community
											!
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
									Node:
									(type) c
									(layer)3
										Element:span
											Check out the code!
