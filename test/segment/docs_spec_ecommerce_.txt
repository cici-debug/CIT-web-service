Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Spec: V1 Ecommerce Events
			Node:
			(type) c
			(layer)1
				Element:p
					This guide maps out the standard data Segment expects to see from ecommerce companies. The semantic events detailed below represent the ideal for ecommerce events; not every ecommerce store will take advantage of every event or all of their properties.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								V2
						Node:
						(type) c
						(layer)2
							Element:p
								Segment now supports a fully
							Element:strong
								backwards compatible
								V2 of our Ecommerce Spec. You can still use V1 but we recommend upgrading to V2 as it includes many more spec’d ecommerce events!
						Node:
						(type) c
						(layer)2
							Element:p
								Please refer to our V2 docs
							Element:a
								here
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								V1 Overview
						Node:
						(type) c
						(layer)2
							Element:p
								One of the core components of the Segment
							Element:a
								Spec
								is the
							Element:a
								method. It records any arbitrary event that the user has triggered. For Ecommerce tracking, you will be sending
							Element:code
								track
							Element:strong
								specific event names
								that we recognize semantically. That way we can transform them before sending them off to each different tool.
						Node:
						(type) c
						(layer)2
							Element:p
								The
							Element:code
								properties
								listed in the sections below are
							Element:strong
								required
								for some integrations to function. You can always add your own custom properties (product color, size, etc.) in additon to the required ones.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Events
						Node:
						(type) c
						(layer)2
							Element:p
								The ecommerce category includes the following semantic events:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Viewed Product Category
							Element:li
							Element:a
								Viewed Product
							Element:li
							Element:a
								Added Product
							Element:li
							Element:a
								Completed Order
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Viewed Product Category
						Node:
						(type) c
						(layer)2
							Element:p
								Category pages are a staple of Ecommerce. They let the user browse all of the products in a specific category. You’ll want to track all of your product category pages so you can quickly see which categories are most popular.
						Node:
						(type) c
						(layer)2
							Element:p
								To do that, you’ll want to record a specially recognized event called
							Element:code
								Viewed Product Category
								using a `track call. This event fires when a visitor views a product category. That view might happen on a page, screen, or modal.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Properties
									Node:
									(type) c
									(layer)3
										Element:p
											This event supports the following semantic property:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:thead
										Element:tr
										Element:th
											Property
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:code
											category
										Element:td
											String
										Element:td
											The product category being viewed.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Example
									Node:
									(type) c
									(layer)3
										Element:figure
										Element:pre
										Element:code
											analytics.track("Viewed Product Category", new Properties() .putValue("category", "Games"));
										Element:pre
										Element:code
											client.Track(&analytics.Track{ UserId: "019mr8mf4r", Event: "Viewed Product Category", Properties: map[string]interface{}{ "category": "Games", }, })
										Element:pre
										Element:code
											[[SEGAnalytics sharedAnalytics] track:@"Viewed Product Category", properties: @{ @"category" : @"Games" }];
										Element:pre
										Element:code
											Analytics.track("019mr8mf4r", "Viewed Product Category", new Props() .put("category", "Games"));
										Element:pre
										Element:code
											analytics.track({ userId: '019mr8mf4r', event: 'Viewed Product Category', properties: { category: 'Games' } });
										Element:pre
										Element:code
											Analytics::track(array( "userId" => "019mr8mf4r", "event" => "Viewed Product Category", "properties" => array( "category" => "Games" ) ));
										Element:pre
										Element:code
											analytics.track('019mr8mf4r', 'Viewed Product Category', { 'category': 'Games' })
										Element:pre
										Element:code
											Analytics.track( user_id: '019mr8mf4r', event: 'Viewed Product Category', properties: { category: 'Games' } )
										Element:pre
										Element:code
											analytics.track('Viewed Product Category', { category: 'Games' });
										Element:pre
										Element:code
											Analytics.Client.Track("019mr8mf4r", "Viewed Product Category", new Properties() { { "category", "Games" } });
										Element:pre
										Element:code
											Analytics.Client.Track("019mr8mf4r", "Viewed Product Category", new Properties() { { "category", "Games" } });
										Element:pre
										Element:code
											curl
										Element:a
											https://api.segment.io/v1/track
											\ -d userId=019mr8mf4r \ -d "event=Viewed Product Category" \ -d properties[category]=Games
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Viewed Product
						Node:
						(type) c
						(layer)2
							Element:p
								The second special event to record for an Ecommerce installation is ‘Viewed Product’. To record that you’ll use a
							Element:code
								track
								call.This event fires when a visitor views a product. That view might happen on a page, screen, or preview modal.
						Node:
						(type) c
						(layer)2
							Element:p
								Note that the properties are required to tell individual tools, like Google Analytics, about the specific product that was viewed. You can always add your own custom properties as well.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Properties
									Node:
									(type) c
									(layer)3
										Element:p
											This event supports the following semantic properties:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:thead
										Element:tr
										Element:th
											Property
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:code
											id
										Element:td
											String
										Element:td
											The database id of the product being viewed.
										Element:tr
										Element:td
										Element:code
											sku
										Element:td
											String
										Element:td
											The sku of the product being viewed.
										Element:tr
										Element:td
										Element:code
											name
										Element:td
											String
										Element:td
											The name of the product being viewed.
										Element:tr
										Element:td
										Element:code
											price
										Element:td
											Number
										Element:td
											The price of the product being viewed.
										Element:tr
										Element:td
										Element:code
											category
										Element:td
											String
										Element:td
											The product category being viewed.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:em
											Note: The
										Element:code
											sku
											and
										Element:code
											id
											do not have to be different. If they are different, typically the
										Element:code
											id
											is a database identifier, like
										Element:code
											9714107479
											and the
										Element:code
											sku
											is a public-facing identifier like
										Element:code
											SEG-02
											.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Example
									Node:
									(type) c
									(layer)3
										Element:figure
										Element:pre
										Element:code
											analytics.track("Viewed Product", new Properties() .putValue("id", "507f1f77bcf86cd799439011") .putValue("sku", "G-32") .putValue("name", "Monopoly: 3rd Edition") .putValue("price", 18.99) .putValue("category", "Games"));
										Element:pre
										Element:code
											client.Track(&analytics.Track{ UserId: "019mr8mf4r", Event: "Viewed Product", Properties: map[string]interface{}{ "id": "507f1f77bcf86cd799439011", "sku": "G-32", "name": "Monopoly: 3rd Edition", "price": 18.99, "category": "Games", }, })
										Element:pre
										Element:code
											[[SEGAnalytics sharedAnalytics] track:@"Viewed Product", properties: @{ @"id" : @"507f1f77bcf86cd799439011", @"sku" : @"G-32", @"name" : @"Monopoly: 3rd Edition", @"price" : @18.99, @"category" : @"Games" }];
										Element:pre
										Element:code
											Analytics.track("019mr8mf4r", "Viewed Product", new Props() .put("id", "507f1f77bcf86cd799439011") .put("sku", "G-32") .put("name", "Monopoly: 3rd Edition") .put("price", 18.99) .put("category", "Games"));
										Element:pre
										Element:code
											analytics.track({ userId: '019mr8mf4r', event: 'Viewed Product', properties: { id: '507f1f77bcf86cd799439011', sku: 'G-32', name: 'Monopoly: 3rd Edition', price: 18.99, category: 'Games' } });
										Element:pre
										Element:code
											Analytics::track(array( "userId" => "019mr8mf4r", "event" => "Viewed Product", "properties" => array( "id" => "507f1f77bcf86cd799439011", "sku" => "G-32", "name" => "Monopoly: 3rd Edition", "price" => 18.99, "category" => "Games" ) ));
										Element:pre
										Element:code
											analytics.track('019mr8mf4r', 'Viewed Product', { 'id': '507f1f77bcf86cd799439011', 'sku': 'G-32', 'name': 'Monopoly: 3rd Edition', 'price': 18.99, 'category': 'Games' })
										Element:pre
										Element:code
											Analytics.track( user_id: '019mr8mf4r', event: 'Viewed Product', properties: { id: '507f1f77bcf86cd799439011', sku: 'G-32', name: 'Monopoly: 3rd Edition', price: 18.99, category: 'Games' } )
										Element:pre
										Element:code
											analytics.track('Viewed Product', { id: '507f1f77bcf86cd799439011', sku: 'G-32', name: 'Monopoly: 3rd Edition', price: 18.99, category: 'Games' });
										Element:pre
										Element:code
											Analytics.Client.Track("019mr8mf4r", "Viewed Product", new Properties() { { "id", "507f1f77bcf86cd799439011" }, { "sku", "G-32" }, { "name", "Monopoly: 3rd Edition" }, { "price", 18.99 }, { "category", "Games" } });
										Element:pre
										Element:code
											Analytics.Client.Track("019mr8mf4r", "Viewed Product", new Properties() { { "id", "507f1f77bcf86cd799439011" }, { "sku", "G-32" }, { "name", "Monopoly: 3rd Edition" }, { "price", 18.99 }, { "category", "Games" } });
										Element:pre
										Element:code
											curl
										Element:a
											https://api.segment.io/v1/track
											\ -d userId=019mr8mf4r \ -d "event=Viewed Product" \ -d properties[id]=507f1f77bcf86cd799439011 \ -d properties[sku]=G-32 \ -d "properties[name]=Monopoly: 3rd Edition" \ -d properties[price]=18.99 \ -d properties[category]=Games
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Added / Removed Product
						Node:
						(type) c
						(layer)2
							Element:p
								Next up are two events that are critical to figuring out how your customers are interacting with your products: ‘Added Product’ and ‘Removed Product’. Fire the
							Element:code
								Added Product
								event when a visitor adds a product to their shopping cart and the
							Element:code
								Removed Product
								event when a visitor removes a product from their shopping cart.
						Node:
						(type) c
						(layer)2
							Element:p
								The properties to record for each of these are the same as the ones for the’Viewed Product’ event above (of course you can always add more properties of your own too!).
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Properties
									Node:
									(type) c
									(layer)3
										Element:p
											This event supports the following semantic properties:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:thead
										Element:tr
										Element:th
											Property
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:code
											id
										Element:td
											String
										Element:td
											The database id of the product being added or removed.
										Element:tr
										Element:td
										Element:code
											sku
										Element:td
											String
										Element:td
											The sku of the product being added or removed.
										Element:tr
										Element:td
										Element:code
											name
										Element:td
											String
										Element:td
											The name of the product being added or removed.
										Element:tr
										Element:td
										Element:code
											price
										Element:td
											Number
										Element:td
											The price of the product being added or removed.
										Element:tr
										Element:td
										Element:code
											quantity
										Element:td
											Number
										Element:td
											The quantity of product being added or removed.
										Element:tr
										Element:td
										Element:code
											category
										Element:td
											String
										Element:td
											The category of the product being added or removed.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Example
									Node:
									(type) c
									(layer)3
										Element:figure
										Element:pre
										Element:code
											analytics.track("Added Product", new Properties() .putValue("id", "507f1f77bcf86cd799439011") .putValue("sku", "45790-32") .putValue("name", "Monopoly: 3rd Edition") .putValue("price", 18.99) .putValue("quantity", 3) .putValue("category", "Games"));
										Element:pre
										Element:code
											client.Track(&analytics.Track{ UserId: "019mr8mf4r", Event: "Added Product", Properties: map[string]interface{}{ "id": "507f1f77bcf86cd799439011", "sku": "45790-32", "name": "Monopoly: 3rd Edition", "price": 18.99, "quantity": 3, "category": "Games", }, })
										Element:pre
										Element:code
											[[SEGAnalytics sharedAnalytics] track:@"Added Product", properties: @{ @"id" : @"507f1f77bcf86cd799439011", @"sku" : @"45790-32", @"name" : @"Monopoly: 3rd Edition", @"price" : @18.99, @"quantity" : @3, @"category" : @"Games" }];
										Element:pre
										Element:code
											Analytics.track("019mr8mf4r", "Added Product", new Props() .put("id", "507f1f77bcf86cd799439011") .put("sku", "45790-32") .put("name", "Monopoly: 3rd Edition") .put("price", 18.99) .put("quantity", 3) .put("category", "Games"));
										Element:pre
										Element:code
											analytics.track({ userId: '019mr8mf4r', event: 'Added Product', properties: { id: '507f1f77bcf86cd799439011', sku: '45790-32', name: 'Monopoly: 3rd Edition', price: 18.99, quantity: 3, category: 'Games' } });
										Element:pre
										Element:code
											Analytics::track(array( "userId" => "019mr8mf4r", "event" => "Added Product", "properties" => array( "id" => "507f1f77bcf86cd799439011", "sku" => "45790-32", "name" => "Monopoly: 3rd Edition", "price" => 18.99, "quantity" => 3, "category" => "Games" ) ));
										Element:pre
										Element:code
											analytics.track('019mr8mf4r', 'Added Product', { 'id': '507f1f77bcf86cd799439011', 'sku': '45790-32', 'name': 'Monopoly: 3rd Edition', 'price': 18.99, 'quantity': 3, 'category': 'Games' })
										Element:pre
										Element:code
											Analytics.track( user_id: '019mr8mf4r', event: 'Added Product', properties: { id: '507f1f77bcf86cd799439011', sku: '45790-32', name: 'Monopoly: 3rd Edition', price: 18.99, quantity: 3, category: 'Games' } )
										Element:pre
										Element:code
											analytics.track('Added Product', { id: '507f1f77bcf86cd799439011', sku: '45790-32', name: 'Monopoly: 3rd Edition', price: 18.99, quantity: 3, category: 'Games' });
										Element:pre
										Element:code
											Analytics.Client.Track("019mr8mf4r", "Added Product", new Properties() { { "id", "507f1f77bcf86cd799439011" }, { "sku", "45790-32" }, { "name", "Monopoly: 3rd Edition" }, { "price", 18.99 }, { "quantity", 3 }, { "category", "Games" } });
										Element:pre
										Element:code
											Analytics.Client.Track("019mr8mf4r", "Added Product", new Properties() { { "id", "507f1f77bcf86cd799439011" }, { "sku", "45790-32" }, { "name", "Monopoly: 3rd Edition" }, { "price", 18.99 }, { "quantity", 3 }, { "category", "Games" } });
										Element:pre
										Element:code
											curl
										Element:a
											https://api.segment.io/v1/track
											\ -d userId=019mr8mf4r \ -d "event=Added Product" \ -d properties[id]=507f1f77bcf86cd799439011 \ -d properties[sku]=45790-32 \ -d "properties[name]=Monopoly: 3rd Edition" \ -d properties[price]=18.99 \ -d properties[quantity]=3 \ -d properties[category]=Games
									Node:
									(type) c
									(layer)3
										Element:figure
										Element:pre
										Element:code
											analytics.track("Removed Product", new Properties() .putValue("id", "507f1f77bcf86cd799439011") .putValue("sku", "45790-32") .putValue("name", "Monopoly: 3rd Edition") .putValue("price", 18.99) .putValue("quantity", 2) .putValue("category", "Games"));
										Element:pre
										Element:code
											client.Track(&analytics.Track{ UserId: "019mr8mf4r", Event: "Removed Product", Properties: map[string]interface{}{ "id": "507f1f77bcf86cd799439011", "sku": "45790-32", "name": "Monopoly: 3rd Edition", "price": 18.99, "quantity": 2, "category": "Games", }, })
										Element:pre
										Element:code
											[[SEGAnalytics sharedAnalytics] track:@"Removed Product", properties: @{ @"id" : @"507f1f77bcf86cd799439011", @"sku" : @"45790-32", @"name" : @"Monopoly: 3rd Edition", @"price" : @18.99, @"quantity" : @2, @"category" : @"Games" }];
										Element:pre
										Element:code
											Analytics.track("019mr8mf4r", "Removed Product", new Props() .put("id", "507f1f77bcf86cd799439011") .put("sku", "45790-32") .put("name", "Monopoly: 3rd Edition") .put("price", 18.99) .put("quantity", 2) .put("category", "Games"));
										Element:pre
										Element:code
											analytics.track({ userId: '019mr8mf4r', event: 'Removed Product', properties: { id: '507f1f77bcf86cd799439011', sku: '45790-32', name: 'Monopoly: 3rd Edition', price: 18.99, quantity: 2, category: 'Games' } });
										Element:pre
										Element:code
											Analytics::track(array( "userId" => "019mr8mf4r", "event" => "Removed Product", "properties" => array( "id" => "507f1f77bcf86cd799439011", "sku" => "45790-32", "name" => "Monopoly: 3rd Edition", "price" => 18.99, "quantity" => 2, "category" => "Games" ) ));
										Element:pre
										Element:code
											analytics.track('019mr8mf4r', 'Removed Product', { 'id': '507f1f77bcf86cd799439011', 'sku': '45790-32', 'name': 'Monopoly: 3rd Edition', 'price': 18.99, 'quantity': 2, 'category': 'Games' })
										Element:pre
										Element:code
											Analytics.track( user_id: '019mr8mf4r', event: 'Removed Product', properties: { id: '507f1f77bcf86cd799439011', sku: '45790-32', name: 'Monopoly: 3rd Edition', price: 18.99, quantity: 2, category: 'Games' } )
										Element:pre
										Element:code
											analytics.track('Removed Product', { id: '507f1f77bcf86cd799439011', sku: '45790-32', name: 'Monopoly: 3rd Edition', price: 18.99, quantity: 2, category: 'Games' });
										Element:pre
										Element:code
											Analytics.Client.Track("019mr8mf4r", "Removed Product", new Properties() { { "id", "507f1f77bcf86cd799439011" }, { "sku", "45790-32" }, { "name", "Monopoly: 3rd Edition" }, { "price", 18.99 }, { "quantity", 2 }, { "category", "Games" } });
										Element:pre
										Element:code
											Analytics.Client.Track("019mr8mf4r", "Removed Product", new Properties() { { "id", "507f1f77bcf86cd799439011" }, { "sku", "45790-32" }, { "name", "Monopoly: 3rd Edition" }, { "price", 18.99 }, { "quantity", 2 }, { "category", "Games" } });
										Element:pre
										Element:code
											curl
										Element:a
											https://api.segment.io/v1/track
											\ -d userId=019mr8mf4r \ -d "event=Removed Product" \ -d properties[id]=507f1f77bcf86cd799439011 \ -d properties[sku]=45790-32 \ -d "properties[name]=Monopoly: 3rd Edition" \ -d properties[price]=18.99 \ -d properties[quantity]=2 \ -d properties[category]=Games
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Completing an Order
						Node:
						(type) c
						(layer)2
							Element:p
								The final step is to record a
							Element:code
								Order Completed
								event when people complete your checkout process. It’s the most important event to record, since you’ll use it for A/B tests, sales dashboards, conversion pixels and pretty much everything you can think of!
						Node:
						(type) c
						(layer)2
							Element:p
								Be sure to
							Element:strong
								include all items in the cart as event properties
								, with the same properties from the previous calls, like so:
						Node:
						(type) c
						(layer)2
							Element:figure
							Element:pre
							Element:code
								analytics.track("Completed Order", new Properties() .putValue("orderId", "50314b8e9bcf000000000000") .putValue("revenue", 25) .putValue("shipping", 3) .putValue("tax", 2) .putValue("discount", 2.5) .putValue("coupon", "hasbros") .putValue("currency", "USD") .putValue("products", Arrays.asList([object Object],[object Object])));
							Element:pre
							Element:code
								client.Track(&analytics.Track{ UserId: "019mr8mf4r", Event: "Completed Order", Properties: map[string]interface{}{ "orderId": "50314b8e9bcf000000000000", "revenue": 25, "shipping": 3, "tax": 2, "discount": 2.5, "coupon": "hasbros", "currency": "USD", "products": []interface{}{ map[string]interface{}{ "id": "507f1f77bcf86cd799439011", "sku": "45790-32", "name": "Monopoly: 3rd Edition", "price": 19, "quantity": 1, "category": "Games", }, map[string]interface{}{ "id": "505bd76785ebb509fc183733", "sku": "46493-32", "name": "Uno Card Game", "price": 3, "quantity": 2, "category": "Games", }, }, }, })
							Element:pre
							Element:code
								[[SEGAnalytics sharedAnalytics] track:@"Completed Order", properties: @{ @"orderId" : @"50314b8e9bcf000000000000", @"revenue" : @25, @"shipping" : @3, @"tax" : @2, @"discount" : @2.5, @"coupon" : @"hasbros", @"currency" : @"USD", @"products" : @[object Object],[object Object] }];
							Element:pre
							Element:code
								Analytics.track("019mr8mf4r", "Completed Order", new Props() .put("orderId", "50314b8e9bcf000000000000") .put("revenue", 25) .put("shipping", 3) .put("tax", 2) .put("discount", 2.5) .put("coupon", "hasbros") .put("currency", "USD") .put("products", [object Object],[object Object]));
							Element:pre
							Element:code
								analytics.track({ userId: '019mr8mf4r', event: 'Completed Order', properties: { orderId: '50314b8e9bcf000000000000', revenue: 25, shipping: 3, tax: 2, discount: 2.5, coupon: 'hasbros', currency: 'USD', products: [ { id: '507f1f77bcf86cd799439011', sku: '45790-32', name: 'Monopoly: 3rd Edition', price: 19, quantity: 1, category: 'Games' }, { id: '505bd76785ebb509fc183733', sku: '46493-32', name: 'Uno Card Game', price: 3, quantity: 2, category: 'Games' } ] } });
							Element:pre
							Element:code
								Analytics::track(array( "userId" => "019mr8mf4r", "event" => "Completed Order", "properties" => array( "orderId" => "50314b8e9bcf000000000000", "revenue" => 25, "shipping" => 3, "tax" => 2, "discount" => 2.5, "coupon" => "hasbros", "currency" => "USD", "products" => array( array( "id" => "507f1f77bcf86cd799439011", "sku" => "45790-32", "name" => "Monopoly: 3rd Edition", "price" => 19, "quantity" => 1, "category" => "Games" ), array( "id" => "505bd76785ebb509fc183733", "sku" => "46493-32", "name" => "Uno Card Game", "price" => 3, "quantity" => 2, "category" => "Games" ) ) ) ));
							Element:pre
							Element:code
								analytics.track('019mr8mf4r', 'Completed Order', { 'orderId': '50314b8e9bcf000000000000', 'revenue': 25, 'shipping': 3, 'tax': 2, 'discount': 2.5, 'coupon': 'hasbros', 'currency': 'USD', 'products': [ { 'id': '507f1f77bcf86cd799439011', 'sku': '45790-32', 'name': 'Monopoly: 3rd Edition', 'price': 19, 'quantity': 1, 'category': 'Games' }, { 'id': '505bd76785ebb509fc183733', 'sku': '46493-32', 'name': 'Uno Card Game', 'price': 3, 'quantity': 2, 'category': 'Games' } ] })
							Element:pre
							Element:code
								Analytics.track( user_id: '019mr8mf4r', event: 'Completed Order', properties: { orderId: '50314b8e9bcf000000000000', revenue: 25, shipping: 3, tax: 2, discount: 2.5, coupon: 'hasbros', currency: 'USD', products: [ { id: '507f1f77bcf86cd799439011', sku: '45790-32', name: 'Monopoly: 3rd Edition', price: 19, quantity: 1, category: 'Games' }, { id: '505bd76785ebb509fc183733', sku: '46493-32', name: 'Uno Card Game', price: 3, quantity: 2, category: 'Games' } ] } )
							Element:pre
							Element:code
								analytics.track('Completed Order', { orderId: '50314b8e9bcf000000000000', revenue: 25, shipping: 3, tax: 2, discount: 2.5, coupon: 'hasbros', currency: 'USD', products: [ { id: '507f1f77bcf86cd799439011', sku: '45790-32', name: 'Monopoly: 3rd Edition', price: 19, quantity: 1, category: 'Games' }, { id: '505bd76785ebb509fc183733', sku: '46493-32', name: 'Uno Card Game', price: 3, quantity: 2, category: 'Games' } ] });
							Element:pre
							Element:code
								Analytics.Client.Track("019mr8mf4r", "Completed Order", new Properties() { { "orderId", "50314b8e9bcf000000000000" }, { "revenue", 25 }, { "shipping", 3 }, { "tax", 2 }, { "discount", 2.5 }, { "coupon", "hasbros" }, { "currency", "USD" }, { "products", [object Object],[object Object] } });
							Element:pre
							Element:code
								Analytics.Client.Track("019mr8mf4r", "Completed Order", new Properties() { { "orderId", "50314b8e9bcf000000000000" }, { "revenue", 25 }, { "shipping", 3 }, { "tax", 2 }, { "discount", 2.5 }, { "coupon", "hasbros" }, { "currency", "USD" }, { "products", [object Object],[object Object] } });
							Element:pre
							Element:code
								curl
							Element:a
								https://api.segment.io/v1/track
								\ -d userId=019mr8mf4r \ -d "event=Completed Order" \ -d properties[orderId]=50314b8e9bcf000000000000 \ -d properties[revenue]=25 \ -d properties[shipping]=3 \ -d properties[tax]=2 \ -d properties[discount]=2.5 \ -d properties[coupon]=hasbros \ -d properties[currency]=USD \ -d "properties[products]=[object Object],[object Object]"
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Note
								: Some integrations require
							Element:code
								total
								in place of
							Element:code
								revenue
								. Specific requirements will be outlined in each integration’s documentation.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Google Analytics Enhanced Ecommerce
						Node:
						(type) c
						(layer)2
							Element:p
								If you’re using Google Analytics enhanced ecommerce there are some special events you might also want to add. Details in
							Element:a
								our GA docs
								.
						Node:
						(type) c
						(layer)2
							Element:hr
						Node:
						(type) c
						(layer)2
							Element:p
								If you have any questions or see anywhere we can improve our documentation, please
							Element:a
								let us know
								or kick off a conversation in the
							Element:a
								Segment Community
								!
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:span
							Element:span
								Was this document helpful?
							Element:span
							Element:label
							Element:span
								Yes
							Element:label
							Element:span
								No
						Node:
						(type) c
						(layer)2
							Element:i
			Node:
			(type) h1
			(layer)1
				Element:h1
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Overview
				Element:li
				Element:a
					Identify
				Element:li
				Element:a
					Track
				Element:li
				Element:a
					Page
				Element:li
				Element:a
					Screen
				Element:li
				Element:a
					Group
				Element:li
				Element:a
					Alias
				Element:li
				Element:a
					Common Fields
				Element:li
				Element:a
					Semantic Events
				Element:li
				Element:a
					Ecommerce
				Element:li
				Element:a
					Mobile
