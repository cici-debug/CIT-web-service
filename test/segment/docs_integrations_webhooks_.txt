Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Webhooks Integration
			Node:
			(type) c
			(layer)1
				Element:p
					Segment makes it easy to send your data to
				Element:a
					Webhooks
					(and lots of other integrations). Once you've tracked your data through our open source
				Element:a
					libraries
					we'll translate and route your data to Webhooks in the format they understand.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Getting Started
						Node:
						(type) c
						(layer)2
							Element:p
								You can toggle on Webhooks in Segment just like any other integration.
						Node:
						(type) c
						(layer)2
							Element:p
								Once you do so, we‚Äôll immediately start forwarding data to up to five different HTTP endpoints you have specified.
						Node:
						(type) c
						(layer)2
							Element:p
								Once you toggle on webhooks, we‚Äôll start sending you requests that we receive on our own API. We‚Äôll send you HTTP(s) POST requests that look like the below for each type. Note with each call, you‚Äôll also receive a
							Element:a
								object that provides information about the user‚Äôs device, IP address, etc.
							Element:code
								context
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Note:
								As you start experimenting, we recommend trying the Webhooks integration with
							Element:a
								requestb.in
								and
							Element:a
								ultrahook
								to immediately start seeing requests coming through.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Sending to multiple webhooks
						Node:
						(type) c
						(layer)2
							Element:p
								Under advanced settings, you can provide up to 5 webhooks. This will ignore any URL you have set in the basic options.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Note:
								If sending a message to any of the webhooks succeed, we consider the message to be successfully processed and won‚Äôt retry the request to the other webhooks. If your webhooks aren‚Äôt robust, you should consider using our
							Element:a
								Iron.io
								integration.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Identify
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								POST https://your-webhook-url.com/x
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								User-Agent: Segment/version Content-Type: application/json
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								{ "version" : 1, "type" : "identify", "userId" : "019mr8mf4r", "traits" : { "email" : "achilles@segment.com", "name" : "Achilles", "subscriptionPlan" : "Premium", "friendCount" : 29 }, "timestamp" : "2012-12-02T00:30:08.276Z" }
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Track
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								POST https://your-webhook-url.com/x
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								User-Agent: Segment/version Content-Type: application/json
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								{ "version" : 1, "type" : "track", "userId" : "019mr8mf4r", "event" : "Purchased an Item", "properties" : { "revenue" : "39.95", "shippingMethod" : "2-day" }, "timestamp" : "2012-12-02T00:30:08.276Z" }
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Alias
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								POST https://your-webhook-url.com/x
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								User-Agent: Segment/version Content-Type: application/json
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								{ "version" : 1, "type" : "alias", "Previous ID" : "previousId", "User ID" : "userId", "timestamp" : "2012-12-02T00:30:08.276Z" }
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Group
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								POST https://your-webhook-url.com/x
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								User-Agent: Segment/version Content-Type: application/json
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								{ "version" : 1, "type" : "group", "groupId" : "0e8c78ea9d97a7b8185e8632", "userId" : "019mr8mf4r", "traits" : { "name" : "Initech", "industry" : "Technology", "employees" : 329, "plan" : "Enterprise", "total billed" : 830 }, "timestamp" : "2012-12-02T00:30:08.276Z" }
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Page
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								POST https://your-webhook-url.com/x
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								User-Agent: Segment/version Content-Type: application/json
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								{ "version" : 1, "type" : "page", "userId" : "019mr8mf4r", "properties" : { "path" : "/pricing", "referrer" : "https://segment.com", "title" : "Segment Pricing", "url" : "https://segment.com/pricing" }, "timestamp" : "2012-12-02T00:30:08.276Z" }
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Screen
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								POST https://your-webhook-url.com/x
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								User-Agent: Segment/version Content-Type: application/json
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								{ "version" : 1, "type" : "screen", "userId" : "019mr8mf4r", "name" : "Main Screen", "timestamp" : "2012-12-02T00:30:08.276Z", "context" : { "device" : { "model" : "x86_64", "type" : "ios" }, "os" : { "name" : "iPhone OS", "version": "7.1" }, "app" : { "build" : "88", "name" : "YourApp", "version": "2.0.0" } } }
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Authentication
						Node:
						(type) c
						(layer)2
							Element:p
								If you want to authenticate the requests being sent to your webhook endpoint, you can input a
							Element:code
								sharedSecret
								in the advanced option settings. If you provide this, we will sign your requests using the shared secret and the body of the request, and add that as the ‚Äã
							Element:code
								X-Signature
								‚Äã header. We calculate a SHA1 digest using the shared secret and the JSON-stringified body of the request.
						Node:
						(type) c
						(layer)2
							Element:p
								An example of how one might authenticate the requests would be:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								var signature = req.headers['x-signature']; var digest = crypto .createHmac('sha1', settings.sharedSecret) .update(new Buffer(JSON.stringify(req.body),'utf-8')) .digest('hex'); if (signature === digest) { // do cool stuff }
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								SSL Certification
						Node:
						(type) c
						(layer)2
							Element:p
								If your server is using HTTPS, please note that our webhooks integration does not work with self-signed certs. If webhooks detects a self-signed cert it will throw an error and no request will be sent.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Retries
						Node:
						(type) c
						(layer)2
							Element:p
								Our webhooks integration will retry any failed requests once.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Supported Sources and Connection Modes
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
							Element:th
								Web
							Element:th
								Mobile
							Element:th
								Server
							Element:tr
							Element:td
								üì± Device-based
							Element:td
							Element:td
							Element:td
							Element:tr
							Element:td
								‚òÅÔ∏è Cloud-based
							Element:td
								‚úÖ
							Element:td
								‚úÖ
							Element:td
								‚úÖ
						Node:
						(type) c
						(layer)2
							Element:p
								To learn more about about Connection Modes and what dictates which we support,
							Element:a
								see here
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Settings
						Node:
						(type) c
						(layer)2
							Element:p
								Segment lets you change these integration settings via your Segment dashboard without having to touch any code.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Webhook URL
									Node:
									(type) c
									(layer)3
										Element:p
											The full URL (with http/https protocol) that we can send data to. eg.
										Element:a
											https://webhooks.company.com/analytics
											.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Webhooks (max 5)
									Node:
									(type) c
									(layer)3
										Element:p
											For each webhook you‚Äôd like to enable, enter the full URL (with http/https protocol) that we can send data to. eg.
										Element:a
											https://webhooks.company.com/analytics
											. Additionally, you may set static key:value pairs for Headers on the requests. Limited to 5.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Shared Secret
									Node:
									(type) c
									(layer)3
										Element:p
											When this is set, we‚Äôll use it to create a hash signature with each payload. See our webhook documentation for more detail.
										Element:a
											https://segment.com/docs/integrations/webhooks/#authentication
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:p
											If you have any questions or see anywhere we can improve our documentation, please
										Element:a
											let us know
											or kick off a conversation in the
										Element:a
											Segment Community
											!
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
									Node:
									(type) c
									(layer)3
										Element:span
											Check out the code!
									Node:
									(type) c
									(layer)3
										Element:a
											server
