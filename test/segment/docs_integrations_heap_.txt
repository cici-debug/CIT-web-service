Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Heap Integration
			Node:
			(type) c
			(layer)1
				Element:p
					Segment makes it easy to send your data to
				Element:a
					Heap
					(and lots of other integrations). Once you've tracked your data through our open source
				Element:a
					libraries
					we'll translate and route your data to Heap in the format they understand.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Getting Started
						Node:
						(type) c
						(layer)2
							Element:p
								When you toggle on Heap in Segment, this is what happens:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								Our CDN is updated within 5-10 minutes. Then our snippet will start asynchronously loading heap.js onto your page. This means you should remove Heap‚Äôs snippet from your page.
							Element:li
								Heap will automatically start recording data.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Required Field
						Node:
						(type) c
						(layer)2
							Element:p
								If you are sending events to Heap via our server side integration, you
							Element:strong
								must
								provide a
							Element:code
								userId
								. All anonymous events will be rejected since Heap‚Äôs API also rejects them on their end.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Identify
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Client Side
									Node:
									(type) c
									(layer)3
										Element:p
											When you call
										Element:a
											on Analytics.js, we call
										Element:code
											identify
										Element:a
											Heap‚Äôs identify method
											with the
										Element:code
											userId
											and
										Element:code
											traits
											you provide.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Server Side
									Node:
									(type) c
									(layer)3
										Element:p
											Our server-side libraries support the
										Element:a
											call. The
										Element:code
											identify
										Element:code
											identify
											call will send a request to
										Element:a
											Heap‚Äôs
											.
										Element:code
											identify
											endpoint
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Track
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Client Side
									Node:
									(type) c
									(layer)3
										Element:p
											When you call
										Element:a
											or one of its helper functions on
										Element:code
											track
										Element:code
											analytics.js
											, we call Heap‚Äôs
										Element:code
											track
											function with exactly the same parameters.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Server Side & Mobile
									Node:
									(type) c
									(layer)3
										Element:p
											Calling
										Element:a
											from one of our mobile SDKs or server-side sources records a
										Element:code
											track
										Element:a
											Heap Custom Event
											with the same event name and properties.
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Web
						Node:
						(type) c
						(layer)2
							Element:p
								If you are using Heap via Segment‚Äôs client-side
							Element:code
								analytics.js
								library, we asynchronously load Heap‚Äôs javascript library onto the page. As such, all native functionality of Heap, including auto capturing of all events.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Nested Objects and Arrays
						Node:
						(type) c
						(layer)2
							Element:p
								While these are not the preferred way to send data types, in the event that you send us nested objects or nested arrays of objects, we will flatten and stringify them before sending to Heap. For example:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								analytics.track('Signed Up', { foo: { bar: { cheese: 'american', prop: [1, 2, 3], products: [{"A": "Jello"}, {"B": "Peanut"}] } } });
						Node:
						(type) c
						(layer)2
							Element:p
								The properties would be sent as:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:code
								foo.bar.cheese: 'american'
							Element:code
								foo.bar.prop: '[1,2,3]'
							Element:code
								foo.bar.products: "[{'A': 'Jello'},{'B': 'Peanut'}]"
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Dates
						Node:
						(type) c
						(layer)2
							Element:p
								We will convert all date type
							Element:code
								properties
								or
							Element:code
								traits
								into an ISO string.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Supported Sources and Connection Modes
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
							Element:th
								Web
							Element:th
								Mobile
							Element:th
								Server
							Element:tr
							Element:td
								üì± Device-based
							Element:td
								‚úÖ
							Element:td
							Element:td
							Element:tr
							Element:td
								‚òÅÔ∏è Cloud-based
							Element:td
							Element:td
								‚úÖ
							Element:td
								‚úÖ
						Node:
						(type) c
						(layer)2
							Element:p
								To learn more about about Connection Modes and what dictates which we support,
							Element:a
								see here
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Settings
						Node:
						(type) c
						(layer)2
							Element:p
								Segment lets you change these integration settings via your Segment dashboard without having to touch any code.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											App ID
									Node:
									(type) c
									(layer)3
										Element:p
											You can find the snippet containing your app ID in Heap‚Äôs
										Element:a
											QuickStart docs
											. It‚Äôs inside the
										Element:code
											heap.load('YOUR_APP_ID')
											function call.
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:p
											If you have any questions or see anywhere we can improve our documentation, please
										Element:a
											let us know
											or kick off a conversation in the
										Element:a
											Segment Community
											!
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
									Node:
									(type) c
									(layer)3
										Element:span
											Check out the code!
									Node:
									(type) c
									(layer)3
										Element:a
											browser
									Node:
									(type) c
									(layer)3
										Element:a
											server
