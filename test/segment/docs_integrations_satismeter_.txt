Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					SatisMeter Integration
			Node:
			(type) c
			(layer)1
				Element:p
					Segment makes it easy to send your data to
				Element:a
					SatisMeter
					(and lots of other integrations). Once you've tracked your data through our open source
				Element:a
					libraries
					we'll translate and route your data to SatisMeter in the format they understand.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:a
					Our SatisMeter integration code
					is all open-source on GitHub if you want to check it out.
			Node:
			(type) c
			(layer)1
				Element:p
					See SatisMeter in action on their
				Element:a
					sample app
					.
			Node:
			(type) c
			(layer)1
				Element:p
					After you enable SatisMeter in Segment, the SatisMeter NPS survey will be shown to your customers.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Features
						Node:
						(type) c
						(layer)2
							Element:p
								With SatisMeter you can:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								gather NPS and customer feedback straight from your web app,
							Element:li
								send gathered customer feedback back to Segment which distributes it to other customer analytics tools,
							Element:li
								get the feedback directly into your Slack channel,
							Element:li
								customize SatisMeter survey to comply with your design,
							Element:li
								send email surveys to users that don‚Äôt answer the in-app survey,
							Element:li
								ask every user in their own language.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Get Started
						Node:
						(type) c
						(layer)2
							Element:p
								To get started you need to sign up to SatisMeter, and click the green button ‚ÄúEnable with Segment‚Äù. This will link your SatisMeter project with your Segment project and enable the integration.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Identify
						Node:
						(type) c
						(layer)2
							Element:p
								Users need to be identified in order to target surveys at the right time.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Client-side integration
						Node:
						(type) c
						(layer)2
							Element:p
								Identifying of users is done by calling an
							Element:code
								analytics.identify
								method using the
							Element:a
								analytics.js
								library. The recommended traits are
							Element:code
								name
								,
							Element:code
								email
								and
							Element:code
								createdAt
								, however SatisMeter will collect any other traits you‚Äôd like to see next to feedback from your customers.
						Node:
						(type) c
						(layer)2
							Element:p
								Here‚Äôs an example of the identify call:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								analytics.identify('007', { name: 'James Bond‚Äô, email: ‚Äò007@sis.gov.uk‚Äô, createdAt: ‚Äò2015-06-16T09:19:47.155Z‚Äô });
						Node:
						(type) c
						(layer)2
							Element:p
								It is important to send the
							Element:code
								createdAt
								trait which tells us how long is the customer using your service. This way we can show the survey to people that already have some experience with your service.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Server-side integration
						Node:
						(type) c
						(layer)2
							Element:p
								You can also send additional traits you don‚Äôt have available on client-side using one of the
							Element:a
								server libraries
								provided by Segment. These traits will be added to the collected responses from your users.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Sending data from SatisMeter back to Segment (optional)
						Node:
						(type) c
						(layer)2
							Element:p
								We can send completed survey responses to Segment which will distribute it to all your other Segment integrations.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Segment write key
									Node:
									(type) c
									(layer)3
										Element:p
											You should copy the Segment write key (Project settings / API KEYS / WRITE KEY) and paste it into SatisMeter (Integrations / Segment). The write key looks like this:
										Element:code
											8lnHXS8z3lkCyNkFlggIvd59M2BXdSHn
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								SatisMeter traits and events
						Node:
						(type) c
						(layer)2
							Element:p
								When a user completes a survey the following traits are added to the user:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:code
								NPS_rating
								: NPS rating (0-10)
							Element:li
							Element:code
								NPS_comment
								: verbal feedback that user left
							Element:li
							Element:code
								NPS_date
								: date when the NPS survey was filled out
						Node:
						(type) c
						(layer)2
							Element:p
								We also record the following events
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:code
								Viewed NPS Survey
								: The survey was shown to the user
							Element:li
							Element:code
								Closed NPS Survey
								: User closed the survey without filling it
							Element:li
							Element:code
								Answered NPS Survey
								: User filled the rating of NPS Survey
							Element:li
							Element:code
								Completed NPS Survey
								: User completed the survey (including the follow-up question)
			Node:
			(type) h1
			(layer)1
				Element:h1
					Troubleshooting
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											The SatisMeter widget does not show up
									Node:
									(type) c
									(layer)3
										Element:p
											Make sure you are sending an
										Element:code
											analytics.identify()
											call when the page is loaded. If you are calling this method, make sure SatisMeter survey has a reason to be displayed. The widget will not display unless the customer fits your targeting settings.
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											The SatisMeter widget shows up right after sign-up
									Node:
									(type) c
									(layer)3
										Element:p
											It is important to send the
										Element:code
											createdAt
											trait to
										Element:code
											analytics.identify()
											method. Without this SatisMeter widget will be shown right after sign-up to every user that fits your other targeting settings. You can change the targeting settings in Targeting section of SatisMeter settings.
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:h2
											Supported Sources and Connection Modes
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tr
										Element:th
										Element:th
											Web
										Element:th
											Mobile
										Element:th
											Server
										Element:tr
										Element:td
											üì± Device-based
										Element:td
											‚úÖ
										Element:td
										Element:td
										Element:tr
										Element:td
											‚òÅÔ∏è Cloud-based
										Element:td
										Element:td
											‚úÖ
										Element:td
											‚úÖ
									Node:
									(type) c
									(layer)3
										Element:p
											To learn more about about Connection Modes and what dictates which we support,
										Element:a
											see here
											.
									Node:
									(type) c
									(layer)3
										Element:h2
											Settings
									Node:
									(type) c
									(layer)3
										Element:p
											Segment lets you change these integration settings via your Segment dashboard without having to touch any code.
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											API Key
									Node:
									(type) c
									(layer)3
										Element:p
											To connect SatisMeter with Segment first create a project in your Satismeter dashboard and then navigate to Settings / Install and click the green button ‚ÄòEnable with Segment‚Äô. You can also manually copy Settings / Integrations / API keys / Write key and use it as the api key. The api key should look like urC2RuBlt7utBCzu.
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Token
									Node:
									(type) c
									(layer)3
										Element:p
											This is a legacy setting, and now known as the apiKey. To connect SatisMeter with Segment first create a project in your Satismeter dashboard and then navigate to Settings / Install and click the green button ‚ÄòEnable with Segment‚Äô. You can also manually copy Settings / Integrations / API keys / Write key and use it as the token. The tokeny should look like urC2RuBlt7utBCzu.
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:p
											If you have any questions or see anywhere we can improve our documentation, please
										Element:a
											let us know
											or kick off a conversation in the
										Element:a
											Segment Community
											!
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
									Node:
									(type) c
									(layer)3
										Element:span
											Check out the code!
									Node:
									(type) c
									(layer)3
										Element:a
											browser
