Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Visual Website Optimizer Integration
			Node:
			(type) c
			(layer)1
				Element:p
					Segment makes it easy to send your data to
				Element:a
					Visual Website Optimizer
					(and lots of other integrations). Once you've tracked your data through our open source
				Element:a
					libraries
					we'll translate and route your data to Visual Website Optimizer in the format they understand.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:a
					Our Visual Website Optimizer integration code
					is all open-source on GitHub if you want to check it out.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Getting Started
						Node:
						(type) c
						(layer)2
							Element:p
								Because the Visual Website Optimizer needs to be on the page right away, Segment can’t add it for you. That means you’ll need to put the javascript snippet on the page. Pop over to Visual Website Optimizer and click their “Integration” tab to find their snippet.
						Node:
						(type) c
						(layer)2
							Element:p
								To get started with Visual Website Optimizer and Segment, just toggle on the Visual Website Optimizer integration on your Segment
							Element:strong
								Integrations page
								.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Features
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Recording Variations
									Node:
									(type) c
									(layer)3
										Element:p
											By default, we will take the variation data that is available in Visual Website Optimizer and send that data to the other user-tracking integrations you have enabled in Segment automatically. That way, you can segment your Mixpanel or KISSmetrics reports by the variations a user has seen.
									Node:
									(type) c
									(layer)3
										Element:p
											Previously we sent this data as a trait on an identify call:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											'Experiment: EXPERIMENT_NAME': 'EXPERIMENT_VARIATION'
									Node:
									(type) c
									(layer)3
										Element:p
											For example, if you have an experiment called Home CTA and a visitor sees a variation called
										Element:strong
											Create free account now
											, Segment sets the following trait for that visitor:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											'Experiment: Home CTA': 'Create free account now'
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											However, we will be sunsetting this feature and moving to capturing experiment data with a
											This should make it easier for you to do analysis in your end tools and won’t muddy up all of your user traits if you’re running a lot of experiments.
										Element:code
											track
											call.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Send Experiment Data from VWO
						Node:
						(type) c
						(layer)2
							Element:p
								Check the option for
							Element:code
								Send experiment data to other tools (as a track call)
								, and we will automatically collect the event
							Element:a
								.
							Element:code
								Experiment Viewed
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								This event supports the following semantic properties:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
								Property
							Element:th
								Type
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
							Element:code
								experiment_id
							Element:td
								String
							Element:td
								The experiment’s ID.
							Element:tr
							Element:td
							Element:code
								variation_name
							Element:td
								String
							Element:td
								The variation’s human-readable name.
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:figure
													Element:pre
													Element:code
														analytics.track("Experiment Viewed", new Properties() .putValue("experiment_id", "home-page-title-2819") .putValue("variation_name", "Enterprise Solutions Synergy"));
													Element:pre
													Element:code
														client.Track(&analytics.Track{ Event: "Experiment Viewed", Properties: map[string]interface{}{ "experiment_id": "home-page-title-2819", "variation_name": "Enterprise Solutions Synergy", }, })
													Element:pre
													Element:code
														[[SEGAnalytics sharedAnalytics] track:@"Experiment Viewed", properties: @{ @"experiment_id" : @"home-page-title-2819", @"variation_name" : @"Enterprise Solutions Synergy" }];
													Element:pre
													Element:code
														Analytics.track("Experiment Viewed", new Props() .put("experiment_id", "home-page-title-2819") .put("variation_name", "Enterprise Solutions Synergy"));
													Element:pre
													Element:code
														analytics.track({ event: 'Experiment Viewed', properties: { experiment_id: 'home-page-title-2819', variation_name: 'Enterprise Solutions Synergy' } });
													Element:pre
													Element:code
														Analytics::track(array( "event" => "Experiment Viewed", "properties" => array( "experiment_id" => "home-page-title-2819", "variation_name" => "Enterprise Solutions Synergy" ) ));
													Element:pre
													Element:code
														analytics.track('Experiment Viewed', { 'experiment_id': 'home-page-title-2819', 'variation_name': 'Enterprise Solutions Synergy' })
													Element:pre
													Element:code
														Analytics.track( event: 'Experiment Viewed', properties: { experiment_id: 'home-page-title-2819', variation_name: 'Enterprise Solutions Synergy' } )
													Element:pre
													Element:code
														analytics.track('Experiment Viewed', { experiment_id: 'home-page-title-2819', variation_name: 'Enterprise Solutions Synergy' });
													Element:pre
													Element:code
														Analytics.Client.Track("Experiment Viewed", new Properties() { { "experiment_id", "home-page-title-2819" }, { "variation_name", "Enterprise Solutions Synergy" } });
													Element:pre
													Element:code
														Analytics.Client.Track("Experiment Viewed", new Properties() { { "experiment_id", "home-page-title-2819" }, { "variation_name", "Enterprise Solutions Synergy" } });
													Element:pre
													Element:code
														curl
													Element:a
														https://api.segment.io/v1/track
														\ -d user_id=019mr8mf4r \ -d "event=Experiment Viewed" \ -d properties[experiment_id]=home-page-title-2819 \ -d "properties[variation_name]=Enterprise Solutions Synergy"
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Sending Revenue
						Node:
						(type) c
						(layer)2
							Element:p
								You can send revenue data to VWO as
							Element:code
								total
								in an
							Element:code
								Order Completed
								ecommerce track event:
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:figure
													Element:pre
													Element:code
														analytics.track("Order Completed", new Properties() .putValue("total", 25));
													Element:pre
													Element:code
														client.Track(&analytics.Track{ Event: "Order Completed", Properties: map[string]interface{}{ "total": 25, }, })
													Element:pre
													Element:code
														[[SEGAnalytics sharedAnalytics] track:@"Order Completed", properties: @{ @"total" : @25 }];
													Element:pre
													Element:code
														Analytics.track("Order Completed", new Props() .put("total", 25));
													Element:pre
													Element:code
														analytics.track({ event: 'Order Completed', properties: { total: 25 } });
													Element:pre
													Element:code
														Analytics::track(array( "event" => "Order Completed", "properties" => array( "total" => 25 ) ));
													Element:pre
													Element:code
														analytics.track('Order Completed', { 'total': 25 })
													Element:pre
													Element:code
														Analytics.track( event: 'Order Completed', properties: { total: 25 } )
													Element:pre
													Element:code
														analytics.track('Order Completed', { total: 25 });
													Element:pre
													Element:code
														Analytics.Client.Track("Order Completed", new Properties() { { "total", 25 } });
													Element:pre
													Element:code
														Analytics.Client.Track("Order Completed", new Properties() { { "total", 25 } });
													Element:pre
													Element:code
														curl
													Element:a
														https://api.segment.io/v1/track
														\ -d user_id=019mr8mf4r \ -d "event=Order Completed" \ -d properties[total]=25
												Node:
												(type) c
												(layer)4
													Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Supported Sources and Connection Modes
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
							Element:th
								Web
							Element:th
								Mobile
							Element:th
								Server
							Element:tr
							Element:td
								📱 Device-based
							Element:td
								✅
							Element:td
							Element:td
							Element:tr
							Element:td
								☁️ Cloud-based
							Element:td
							Element:td
							Element:td
						Node:
						(type) c
						(layer)2
							Element:p
								To learn more about about Connection Modes and what dictates which we support,
							Element:a
								see here
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Settings
						Node:
						(type) c
						(layer)2
							Element:p
								Segment lets you change these integration settings via your Segment dashboard without having to touch any code.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Send experiment data to other tools (as a track call)
									Node:
									(type) c
									(layer)3
										Element:p
											Sends the experiment and variation information as properties on a track call.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Send experiment data to other tools (as an identify call)
									Node:
									(type) c
									(layer)3
										Element:p
											Sends the experiment id and variation name as traits on the identify call.
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:p
											If you have any questions or see anywhere we can improve our documentation, please
										Element:a
											let us know
											or kick off a conversation in the
										Element:a
											Segment Community
											!
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
									Node:
									(type) c
									(layer)3
										Element:span
											Check out the code!
									Node:
									(type) c
									(layer)3
										Element:a
											browser
