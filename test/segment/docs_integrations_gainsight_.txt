Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Gainsight Integration
			Node:
			(type) c
			(layer)1
				Element:p
					Segment makes it easy to send your data to
				Element:a
					Gainsight
					(and lots of other integrations). Once you've tracked your data through our open source
				Element:a
					libraries
					we'll translate and route your data to Gainsight in the format they understand.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Getting Started
						Node:
						(type) c
						(layer)2
							Element:p
								When you toggle on Gainsight in Segment, we‚Äôll start sending data to the Gainsight API for your account. Currently, Gainsight will send data from any one of our libraries.
						Node:
						(type) c
						(layer)2
							Element:p
								To start pushing user data to Gainsight, toggle the integration on and add your Access Key. This key can be generated from the integrations page under the ‚Äúadmin‚Äù area in Gainsight.
						Node:
						(type) c
						(layer)2
							Element:p
								Gainsight currently supports the following methods:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
							Element:code
								identify
							Element:li
							Element:a
							Element:code
								group
							Element:li
							Element:a
							Element:code
								track
						Node:
						(type) c
						(layer)2
							Element:hr
						Node:
						(type) c
						(layer)2
							Element:p
								Gainsight needs a way to map Segment data to a Salesforce Account. That can be done via the Segment
							Element:code
								identify
								,
							Element:code
								group
								, or
							Element:code
								track
								methods.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Identify
						Node:
						(type) c
						(layer)2
							Element:p
								To map your
							Element:code
								identify
								calls to a Salesforce Account, pass the Salesforce Account ID as a trait, like this:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								analytics.identify('123', { accountId: 'o283h08fh2390f923uofu23', name: 'Jake Peterson' });
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								This example is for
							Element:code
								analytics.js
								. If you‚Äôre using a different Segment source
							Element:a
								check out our sources docs
								to see how
							Element:code
								identify
								calls work for your source.
						Node:
						(type) c
						(layer)2
							Element:p
								Inside of Gainsight you‚Äôll need to map the
							Element:code
								accountId
								to the Salesforce Account ID and Gainsight will handle the rest and collect any additional info you send in your
							Element:code
								identify
								calls and attribute them to the correct Account.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Group
						Node:
						(type) c
						(layer)2
							Element:p
								To map your
							Element:code
								group
								calls to a Salesforce Account, pass the Salesforce Account ID as the
							Element:code
								groupId
								, like this:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								analytics.group('555', { name: 'Twitter', url: 'https://twitter.com' });
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								This example is for Analytics.js. If you‚Äôre using a different Segment library
							Element:a
								check out our source docs
								to see how
							Element:code
								group
								calls work for your source.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Track
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Important
								: It is recommended that you only send
							Element:code
								.track()
								events that you need. You can whitelist the names of your Segment events in the settings pane for Gainsight. Once you pre-map your events, we will
							Element:em
								only
								send those events to Gainsight. However, if you do
							Element:em
								not
								map any events, we will by default send all your track events to Gainsight!
						Node:
						(type) c
						(layer)2
							Element:p
								Mapping your
							Element:code
								track
								calls to a Salesforce Account is only necessary if the user doing the event is not already identified or grouped. If the user is identified all their events will be picked up automatically.
						Node:
						(type) c
						(layer)2
							Element:p
								If they haven‚Äôt been identified, pass the Salesforce Account ID as a property, like this:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								analytics.track('Account Created', { accountId: 'o283h08fh2390f923uofu23', source: 'Invite', title: 'CEO' });
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								This example is for Analytics.js. If you‚Äôre using a different Segment library
							Element:a
								check out our source docs
								to see how
							Element:code
								group
								calls work for your source.
						Node:
						(type) c
						(layer)2
							Element:p
								Inside of Gainsight you‚Äôll need to map the
							Element:code
								accountId
								to the Salesforce Account ID and Gainsight will handle the rest and collect any additional info you send in your
							Element:code
								track
								calls and attribute them to the correct Account.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Supported Sources and Connection Modes
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
							Element:th
								Web
							Element:th
								Mobile
							Element:th
								Server
							Element:tr
							Element:td
								üì± Device-based
							Element:td
							Element:td
							Element:td
							Element:tr
							Element:td
								‚òÅÔ∏è Cloud-based
							Element:td
								‚úÖ
							Element:td
								‚úÖ
							Element:td
								‚úÖ
						Node:
						(type) c
						(layer)2
							Element:p
								To learn more about about Connection Modes and what dictates which we support,
							Element:a
								see here
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Settings
						Node:
						(type) c
						(layer)2
							Element:p
								Segment lets you change these integration settings via your Segment dashboard without having to touch any code.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Access Key
									Node:
									(type) c
									(layer)3
										Element:p
											It should be 36 characters long, and look something like this:
										Element:code
											35a84f9e-7084-47a1-b8a5-593444e9e862
											.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Whitelist Track Events
									Node:
									(type) c
									(layer)3
										Element:p
											Whitelist Segment
										Element:code
											.track()
											events you‚Äôd like to send to Gainsight. By
										Element:strong
											default
											, if you do not whitelist
										Element:em
											any
											events, we will send all
										Element:code
											.track()
											events. If you do whitelist any events, we will
										Element:strong
											only
											send those events through. Put the name of your
										Element:code
											.track()
											events here, ie. ‚ÄòOrder Completed‚Äô
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:p
											If you have any questions or see anywhere we can improve our documentation, please
										Element:a
											let us know
											or kick off a conversation in the
										Element:a
											Segment Community
											!
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
									Node:
									(type) c
									(layer)3
										Element:span
											Check out the code!
									Node:
									(type) c
									(layer)3
										Element:a
											server
