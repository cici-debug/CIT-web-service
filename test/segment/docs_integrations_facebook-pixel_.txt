Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Facebook Pixel Integration
			Node:
			(type) c
			(layer)1
				Element:p
					Segment makes it easy to send your data to
				Element:a
					Facebook Pixel
					(and lots of other integrations). Once you've tracked your data through our open source
				Element:a
					libraries
					we'll translate and route your data to Facebook Pixel in the format they understand.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					Facebook has deprecated their modular “Ads For Websites” suite, which previously comprised Facebook Custom Audiences and Facebook Conversion Tracking. We’ve consolidated those two integrations into the new and improved
				Element:strong
					Facebook Pixel
					integration!
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Getting Started
						Node:
						(type) c
						(layer)2
							Element:p
								Facebook Pixel works with our client-side javascript library: Analytics.js.
						Node:
						(type) c
						(layer)2
							Element:p
								From your Segment Integrations page click on Facebook Pixel. Drop in your
							Element:code
								pixelId
								from Facebook’s “Create a Pixel” dialog, also found in the sidebar of the Pixel pane in the Ads Management console.
						Node:
						(type) c
						(layer)2
							Element:p
								We’ll automatically initialize facebook’s pixel with your
							Element:code
								pixelId
								upon loading Analytics.js.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Page
						Node:
						(type) c
						(layer)2
							Element:p
								We’ve mapped
							Element:code
								analytics.page()
								to Facebook’s
							Element:code
								fbq('track', "PageView")
								method and will forward all pageviews accordingly.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Track
						Node:
						(type) c
						(layer)2
							Element:p
								We support all three
							Element:a
								documented
								methods of sending events to Facebook:
						Node:
						(type) c
						(layer)2
							Element:blockquote
							Element:p
							Element:em
								“To report a standard event, use one of the 9 standard events in the
							Element:code
								fbq
								track call. To report a legacy conversion event, use a Conversion Pixel ID as the
							Element:code
								eventName
								in the fbq track call. Additionally, if you are not interested in tracking or optimizing for conversions for specific actions, you can pass custom event names into the
							Element:code
								trackCustom
								call.”
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Standard Events
									Node:
									(type) c
									(layer)3
										Element:p
											Any Segment track events that you map to FB standard events in the Segment interface will be sent with the proper API to signify the type of event. These events can be used for conversions and audiences; we recommend using them where it makes sense. See the
										Element:a
											FB docs
											for more information.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											For these events, if you pass either
										Element:code
											revenue
											or
										Element:code
											value
											properties to your track call, we will map them to the
										Element:code
											value
											parameter w/in Facebook. We’ll also automatically add
										Element:code
											currency: USD
											by default, unless you pass your own currency type as a property to your track call. All other properties will be mapped to Facebook parameters as-is.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Legacy Conversion Events
									Node:
									(type) c
									(layer)3
										Element:p
											If you still have conversion tracking pixel IDs, including those we automatically transferred from your Conversion Tracking integration, we’ll send these conversions in lieu of events, as Facebook still accepts them.
									Node:
									(type) c
									(layer)3
										Element:p
											For these events, if you pass either
										Element:code
											revenue
											or
										Element:code
											value
											properties to your track call, we will map them to the
										Element:code
											value
											parameter w/in Facebook. We’ll also automatically add
										Element:code
											currency: USD
											by default, unless you pass your own currency type as a property to your track call. All other properties will be dropped.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Custom Events
									Node:
									(type) c
									(layer)3
										Element:p
											Any Segment events that are not mapped in our interface will be sent with Facebook’s
										Element:code
											trackCustom
											method with the event’s properties as
										Element:code
											customData
											in the form that Facebook expects.
									Node:
									(type) c
									(layer)3
										Element:p
											These events can then be used to build Custom Audiences or custom conversions, which can then be used for conversion tracking and optimization.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Advanced Matching
									Node:
									(type) c
									(layer)3
										Element:p
											The Segment Facebook Pixel integration supports
										Element:a
											Advanced Matching
											which enables you to send your customer data through the pixel to match more website actions with Facebook users. With this additional data, you can report and optimize your ads for more conversions and build larger re-marketing audiences. When the page loads, before we fire off the pixels, we’ll check for traits that the user has been previously identified with and send that along with each call.
									Node:
									(type) c
									(layer)3
										Element:p
											Facebook accepts the following properties, firstName, lastName, email, phone number gender, birthday, city, state and zip code but they require it in a very precise format so in order to get them the data as expected, please follow our
										Element:a
											spec!
											. A fully compliant identify call would look like this.
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											analytics.identify('ze8rt1u89'{ name: 'Zaphod Beeblebrox', gender: 'Male', email: 'Zaphod@hotmail.com', phone: '1-401-826-4421', address: { city: 'San Francisco', state: 'Ca', postalCode: '94107' } });
									Node:
									(type) c
									(layer)3
										Element:p
											If you check off
										Element:strong
											Enable Advanced Matching
											setting inside Segment, we’ll grab these values from the user’s cookies so once you’ve identified them with this information then it should be included on all future Facebook pixels for that user! You can use as many or as few of these traits as makes sense for you and we’ll send along what you have included.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Ecommerce Events and Facebook Dynamic Product Ads
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Product Audiences
									Node:
									(type) c
									(layer)3
										Element:p
											We support Facebook Custom Audiences’s
										Element:strong
											Product Audiences
											feature, enabling you to serve
										Element:a
											Dynamic Product Ads
											that are customized and targeted to your users based upon the
										Element:a
											Segment Ecommerce events
											—
										Element:code
											Product Viewed
											,
										Element:code
											Product List Viewed
											,
										Element:code
											Product Added
											and
										Element:code
											Order Completed
											— that a person triggers on that product or product group.
									Node:
									(type) c
									(layer)3
										Element:p
											To send this data to Facebook, make sure your events adhere to our
										Element:a
											in your client-side javascript. We’ll translate your calls to the correct Custom Audience pixels. No need to map these events in the interface!
										Element:code
											ecommerce spec
									Node:
									(type) c
									(layer)3
										Element:p
											Note that any spec’d ecommece events will automatically map to specific Facebook Standard Events (i.e.
										Element:code
											Product Viewed
											->
										Element:code
											ViewContent
											,
										Element:code
											Product List Viewed
											->
										Element:code
											ViewContent
											,
										Element:code
											Product Added
											->
										Element:code
											AddToCart
											,
										Element:code
											Order Compeleted
											->
										Element:code
											Purchase
											). These default mappings will
										Element:em
											override
											any custom mappings you may have defined in your Segment dashboard.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Troubleshooting
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Inconsistent or Missing Conversions
									Node:
									(type) c
									(layer)3
										Element:p
											The most common reason for Facebook conversion pixels to fire inconsistently is that the page redirects or reloads before the pixel has time to be loaded on the page. Make sure your page does not redirect or reload for at least 300ms after the conversion event happens. In some cases a delay of 500ms is necessary.
									Node:
									(type) c
									(layer)3
										Element:p
											We recommend using our
										Element:code
											trackLink
											or
										Element:code
											trackForm
											helpers to delay the page redirect.
										Element:a
											Documentation here
											. You can extend the delay by
										Element:a
											setting the timeout to 500ms
											.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Extra or Duplicate Conversions
									Node:
									(type) c
									(layer)3
										Element:p
											This may be due to conversion events being sent from your development, staging, or testing environments. We recommend setting up separate source for each environment. That way you can either point events to test conversion pixels in Facebook Conversion Tracking or turn off Facebook Conversion Tracking completely in non-production environments.
									Node:
									(type) c
									(layer)3
										Element:p
											Double check that your mapped conversion events aren’t happening anywhere else on your site. If the user reloads the conversion page or re-triggers the tracked event they may be double counted.
									Node:
									(type) c
									(layer)3
										Element:p
											Facebook’s conversion reports count view-through conversions as well as click-through conversions by default. You can change that setting inside Facebook Conversion Tracking in the report attribution settings.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Facebook Conversions Not Matching Google Analytics
									Node:
									(type) c
									(layer)3
										Element:p
											Facebook counts conversions per person, as opposed to Google Analytics which counts per browser cookie session (unless you’re using
										Element:a
											Google Anlaytics User-ID
											).
									Node:
									(type) c
									(layer)3
										Element:p
											If someone saw or clicked on your ad on a mobile phone then later came back directly to purchase on a desktop machine Google Analytics wouldn’t know that this was the same person, but Facebook would. In that scenario Google Analytics counts 2 unique visits with a conversion last attributed to a direct visit on desktop. Facebook counts 1 conversion with the conversion properly attributed to the last ad click/view on mobile.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Script unverified or undetected by third-party tool
									Node:
									(type) c
									(layer)3
										Element:p
											Many times this is a limitation on the tool’s detection process, where the detector is looking for a specific HTML element on your page. Our client side analytics.js library asynchronously loads the tool’s library or pixel onto the page. As such, the detection fails.
									Node:
									(type) c
									(layer)3
										Element:p
											In order to confirm that the tool’s library or pixel is actually loaded onto the page, you can open up the
										Element:a
											javascript console
											and go to the network tab when the page is loading.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											If the script isn’t loading, check that any form of ad blocker is disabled.
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Supported Sources and Connection Modes
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
							Element:th
								Web
							Element:th
								Mobile
							Element:th
								Server
							Element:tr
							Element:td
								📱 Device-based
							Element:td
								✅
							Element:td
							Element:td
							Element:tr
							Element:td
								☁️ Cloud-based
							Element:td
							Element:td
							Element:td
						Node:
						(type) c
						(layer)2
							Element:p
								To learn more about about Connection Modes and what dictates which we support,
							Element:a
								see here
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Settings
						Node:
						(type) c
						(layer)2
							Element:p
								Segment lets you change these integration settings via your Segment dashboard without having to touch any code.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Enable Advanced Matching
									Node:
									(type) c
									(layer)3
										Element:p
											If true, we will initialize Facebook Pixel with any user traits that’s been cached in the Segment cookies from your previous
										Element:code
											.identify()
											calls.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Legacy Conversion Pixel IDs
									Node:
									(type) c
									(layer)3
										Element:p
											These are your
										Element:strong
											Conversion Pixel IDs from Facebook Conversion Tracking. Facebook will still accept data in this format, though it’s no longer possible to create conversion Pixel IDs. Now you create conversions based on standard and custom events inside their interface. Enter your event name in the left column and your pixel ID in the right column. Email
										Element:a
											deprecated
										Element:a
											friends@segment.com
											if you need help!
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Pixel ID
									Node:
									(type) c
									(layer)3
										Element:p
											Your Pixel ID, from the snippet created on the
										Element:a
											Facebook Pixel creation page
											.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Map Your Events to Standard FB Events
									Node:
									(type) c
									(layer)3
										Element:p
											Enter your event on the left, and the Facebook standard event to map to on the right. Facebook recognizes certain
										Element:a
											standard events
											that can be used across Custom Audiences, custom conversions, conversion tracking, and conversion optimization. When you map an event to a standard Facebook event, we’ll send the event by that name. Any unmapped events will still be sent as Custom Events. Email
										Element:a
											friends@segment.com
											if you need help!
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Value Field Identifier
									Node:
									(type) c
									(layer)3
										Element:p
											For pre-purchase events such as
										Element:code
											Product Viewed
											and
										Element:code
											Product Added
											, choose which Segment property you would like to map to Facebook’s value property.
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:p
											If you have any questions or see anywhere we can improve our documentation, please
										Element:a
											let us know
											or kick off a conversation in the
										Element:a
											Segment Community
											!
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
									Node:
									(type) c
									(layer)3
										Element:span
											Check out the code!
									Node:
									(type) c
									(layer)3
										Element:a
											browser
