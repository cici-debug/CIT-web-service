Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Slack Integration
			Node:
			(type) c
			(layer)1
				Element:p
					Segment makes it easy to send your data to
				Element:a
					Slack
					(and lots of other integrations). Once you've tracked your data through our open source
				Element:a
					libraries
					we'll translate and route your data to Slack in the format they understand.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Getting Started
						Node:
						(type) c
						(layer)2
							Element:p
								Enabling Slack in Segment, you‚Äôll be able to send event data from mobile, web and server sources to any specified channel in Slack. Using
							Element:a
								handlebars.js templating
								, you can control and populate the messages with data from a Track event.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Incoming Webhooks URL
						Node:
						(type) c
						(layer)2
							Element:p
								In Slack app mangament, create a new
							Element:a
								Incoming Webhooks url
								and enter this in your settings.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Whitelist Identify Traits
						Node:
						(type) c
						(layer)2
							Element:p
								By default, your
							Element:code
								.identify()
								calls will not be sent through to Slack unless you have whitelisted a
							Element:code
								trait
								and the
							Element:code
								.identify()
								call contains that
							Element:code
								trait
								. If you whitelist multiple
							Element:code
								traits
								, then the
							Element:code
								.identify()
								call must contain all of them in order to be sent into your Slack.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Identify Template
						Node:
						(type) c
						(layer)2
							Element:p
								Identify events that contain the whitelisted
							Element:code
								traits
								will appear as a Slack message with the following default template:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:code
								Identified user {{name}}. \n{{traits}}
						Node:
						(type) c
						(layer)2
							Element:p
								where ‚Äúname‚Äù is the first found of the following:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:code
								context.traits.name
							Element:li
							Element:code
								context.traits.firstName
								+
							Element:code
								context.traits.lastName
							Element:li
							Element:code
								context.traits.username
							Element:li
							Element:code
								properties.email
							Element:li
							Element:code
								context.traits.email
							Element:li
							Element:code
								User + userId
							Element:li
							Element:code
								Anonymous user + anonymousId
						Node:
						(type) c
						(layer)2
							Element:p
								When constructing a template, reference the spec for the
							Element:a
								Identify payload
								and
							Element:a
								common object
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Event Channels
						Node:
						(type) c
						(layer)2
							Element:p
								By default, events are sent to the Slack channel selected when creating the new Incoming Webhooks in Slack.
						Node:
						(type) c
						(layer)2
							Element:p
								You can override specific events to a post in a channel (#channel) or DM a user (@user).
						Node:
						(type) c
						(layer)2
							Element:p
								For example, the following will post ‚ÄúOrder Completed‚Äù events in the #orders-completed channel and Drake will be notified when the clubs are going up:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Track Event Templates
						Node:
						(type) c
						(layer)2
							Element:blockquote
							Element:p
								Note: If you‚Äôre trying to stop an event from reaching Slack, use
							Element:a
								selective integrations
								. Segment Business customers may optionally use UI Filtering as well.
						Node:
						(type) c
						(layer)2
							Element:p
								Track events will trigger a Slack message with the following default template:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:code
								'{{name}} did {{event}}.'
						Node:
						(type) c
						(layer)2
							Element:p
								where ‚Äúevent‚Äù is the event name and ‚Äúname‚Äù is found with the same logic as that of the ‚Äúname‚Äù in the Identify template.
						Node:
						(type) c
						(layer)2
							Element:p
								When constructing a template, reference the spec for
							Element:a
								Track payload
								and
							Element:a
								common object
								.
						Node:
						(type) c
						(layer)2
							Element:p
								The basic Track structure:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								{ "type": "track", "event": "Email Opened", "properties": { "plan": "Pro Annual", "custom" : "Bay Area", "name": "Peter Reinhardt" } }
						Node:
						(type) c
						(layer)2
							Element:p
								As an example, consider the
							Element:code
								analytics.js
								Track event:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								analytics.track('Article Bookmarked', { title: 'Snow Fall', subtitle: 'The Avalanche at Tunnel Creek', author: 'John Branch' });
						Node:
						(type) c
						(layer)2
							Element:p
								The template:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								will produce:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Troubleshooting
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Page, Identify, Group calls are not showing up!
									Node:
									(type) c
									(layer)3
										Element:p
											Only Track events are supported by the integration at the moment. Remember that
										Element:a
											is an open dictionary and may include any data you choose!
										Element:code
											track.properties
											object
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											[object Object]
									Node:
									(type) c
									(layer)3
										Element:p
											If you try to print an object (eg.,
										Element:code
											{{properties}}
											), you will see [object Object] in Slack. Drill down to a primitive type value (eg.,
										Element:code
											properties.plan
											).
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Supported Sources and Connection Modes
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
							Element:th
								Web
							Element:th
								Mobile
							Element:th
								Server
							Element:tr
							Element:td
								üì± Device-based
							Element:td
							Element:td
							Element:td
							Element:tr
							Element:td
								‚òÅÔ∏è Cloud-based
							Element:td
								‚úÖ
							Element:td
								‚úÖ
							Element:td
								‚úÖ
						Node:
						(type) c
						(layer)2
							Element:p
								To learn more about about Connection Modes and what dictates which we support,
							Element:a
								see here
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Settings
						Node:
						(type) c
						(layer)2
							Element:p
								Segment lets you change these integration settings via your Segment dashboard without having to touch any code.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Event Channels
									Node:
									(type) c
									(layer)3
										Element:p
											Specify the channel a specific event is sent to. By default, events are sent to the channel specified when creating the incoming webhook in Slack. You can send events to a channel (#channel) or DM a user (@user). For example,
										Element:code
											Completed Order
											on the left and #orders on the right will send
										Element:code
											Completed Order
											events to the #orders Slack channel. To disable sending an event to Slack completely, use the filters in your Schema.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Identify Template
									Node:
									(type) c
									(layer)3
										Element:p
											Use ‚Äúhandlebarsjs‚Äù templating to format messages sent to Slack. The default template is ‚ÄúIdentified {{name}}. {{traits}}‚Äù. You do not need to append ‚Äòtraits‚Äô, as this template is specific to
										Element:code
											.identify()
											calls only and thus is assumed. Make sure whatever trait you try to use in your template, you send as a trait in your
										Element:code
											.identify()
											calls, otherwise we will reject the message.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Event Templates
									Node:
									(type) c
									(layer)3
										Element:p
											Use ‚Äúhandlebarsjs‚Äù templating to format messages sent to Slack. The default template is ‚Äú{{properties.email}} did {{event}}.‚Äù. For another example, consider an event
										Element:code
											Adopted Dog
											, on the left, with ‚Äú{{properties.owner}} adopted a {{properties.type}}‚Äù on the right. This would send the message ‚ÄúHan adopted a Husky‚Äù.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Incoming Webhook URL
									Node:
									(type) c
									(layer)3
										Element:p
											Your Slack
										Element:a
											incoming webhook URL
											.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Whitelisted Traits
									Node:
									(type) c
									(layer)3
										Element:p
											List the traits you want to forward to Slack. If you do not list any traits, we will not forward any
										Element:code
											.identify()
											calls! Whitelist the traits you want catch and foward to Slack.
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:p
											If you have any questions or see anywhere we can improve our documentation, please
										Element:a
											let us know
											or kick off a conversation in the
										Element:a
											Segment Community
											!
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
									Node:
									(type) c
									(layer)3
										Element:span
											Check out the code!
									Node:
									(type) c
									(layer)3
										Element:a
											server
