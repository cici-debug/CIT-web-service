Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Kochava Integration
			Node:
			(type) c
			(layer)1
				Element:p
					Segment makes it easy to send your data to
				Element:a
					Kochava
					(and lots of other integrations). Once you've tracked your data through our open source
				Element:a
					libraries
					we'll translate and route your data to Kochava in the format they understand.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Getting Started
						Node:
						(type) c
						(layer)2
							Element:p
								Data needed before beginning the process:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								Kochava App GUID (Globally Unique Identifier) obtained from the Kochava user interface.
						Node:
						(type) c
						(layer)2
							Element:p
								For the Segment <> Kochava integration to work, you must make sure to send these required context fields:
							Element:code
								context.device.type
								(has value of ‚Äòios‚Äô or ‚Äòandroid‚Äô),
							Element:code
								context.device.advertising_id
								(IDFA on iOS and adID on Android)
							Element:strong
								and
							Element:code
								context.device.id
								. To automatically collect
							Element:code
								context.device.advertising_id
								, on Android you must include the Google Mobile Ads component of Google Play services as
							Element:a
								seen here
								, and on iOS you must include the iAd framework as
							Element:a
								seen here
								.
						Node:
						(type) c
						(layer)2
							Element:p
								If making calls outside of Segment‚Äôs iOS or Android library (eg post-install events sent from a server-side library), you‚Äôll need to ensure that you collect and send
							Element:code
								context.device.type
								,
							Element:code
								context.device.advertising_id
							Element:strong
								and
							Element:code
								context.device.id
								. Note that if you are sending data from mobile devices using one of our mobile libraries as well as server-side,
							Element:code
								context.device.id
								and
							Element:code
								context.device.advertising_id
								need to be the same for the same user regardless of where the data originates. Below is a Ruby example.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								Analytics.track( user_id: '019mr8mf4r', event: 'Subscription Charge', properties: { subscription_type: 'Premium', revenue: '9.99' }, context: { device: { id: '176779B9-8C07-4E53-B3EA-ABBFAA40C829', advertising_id: '017D76B5-85F8-4E3C-8CCE-8B29CCEACB1D', type: 'ios' # or 'android' } } )
						Node:
						(type) c
						(layer)2
							Element:p
								Note that
							Element:code
								advertising_id
								will be a string of 0s if the user has limited ad tracking on their mobile device.
						Node:
						(type) c
						(layer)2
							Element:p
								You‚Äôll also need to create your app within the Kochava dashboard. Check out Kochava‚Äôs documentation for information on
							Element:a
								creating your app
								.
						Node:
						(type) c
						(layer)2
							Element:p
								To enable the integration simply log into your Segment account and select Kochava as a partner. Once Kochava is selected as a partner, data will be sent to Kochava and attributed.
						Node:
						(type) c
						(layer)2
							Element:p
								Additional information from Kochava on
							Element:a
								setting up your first campaign within Kochava
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Track
						Node:
						(type) c
						(layer)2
							Element:p
								Kochava is able to accommodate any post-install event that is passed into its system. Events, when received for the first time, will auto provision into the Kochava dashboard. There is no need to create / provision the post-install event ahead of time. When enabling Kochava in the Segment dashboard, you should expect to see any / all actions you‚Äôre tracking with Segment appear in your Kochava account.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Supported Sources and Connection Modes
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
							Element:th
								Web
							Element:th
								Mobile
							Element:th
								Server
							Element:tr
							Element:td
								üì± Device-based
							Element:td
							Element:td
							Element:td
							Element:tr
							Element:td
								‚òÅÔ∏è Cloud-based
							Element:td
								‚úÖ
							Element:td
								‚úÖ
							Element:td
								‚úÖ
						Node:
						(type) c
						(layer)2
							Element:p
								To learn more about about Connection Modes and what dictates which we support,
							Element:a
								see here
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Settings
						Node:
						(type) c
						(layer)2
							Element:p
								Segment lets you change these integration settings via your Segment dashboard without having to touch any code.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											API Key
									Node:
									(type) c
									(layer)3
										Element:p
											Get your Kochava App GUID from your Kochava user interface.
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:p
											If you have any questions or see anywhere we can improve our documentation, please
										Element:a
											let us know
											or kick off a conversation in the
										Element:a
											Segment Community
											!
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
									Node:
									(type) c
									(layer)3
										Element:span
											Check out the code!
