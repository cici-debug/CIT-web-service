Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Urban Airship Integration
			Node:
			(type) c
			(layer)1
				Element:p
					Segment makes it easy to send your data to
				Element:a
					Urban Airship
					(and lots of other integrations). Once you've tracked your data through our open source
				Element:a
					libraries
					we'll translate and route your data to Urban Airship in the format they understand.
			Node:
			(type) c
			(layer)1
				Element:p
					The Urban Airship integration code is open sourced on Github. Feel free to check it out:
				Element:a
					Android
					,
				Element:a
					iOS
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Screen
						Node:
						(type) c
						(layer)2
							Element:p
								Screen calls will generate Urban Airship screen tracking events. These events are exposed through Connect. Only the screen and category name will be used as the screen tracking event name.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Identify
						Node:
						(type) c
						(layer)2
							Element:p
								When you
							Element:code
								identify
								a user, Urban Airship will use the
							Element:code
								userId
								to set the
							Element:a
								Named User
								. Named Users allow you to associate multiple devices to a single user or profile that may be associated with more than one device, e.g., an end-user’s Android phone and tablet. A device can have only one Named User, and a single Named User should not be associated with more than 20 devices.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Track
						Node:
						(type) c
						(layer)2
							Element:p
								When
							Element:code
								track
								is called, an Urban Airship custom event will be created. The event’s
							Element:code
								traits
								will will be automatically added as properties on the custom event and if revenue is present that will be set at the custom event’s value.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Group
						Node:
						(type) c
						(layer)2
							Element:p
								Groups will be added as tags on the Urban Airship channel. Tags can then be used for audience segmentation when sending notifications or setting up automation rules.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Android
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Setup
									Node:
									(type) c
									(layer)3
										Element:p
											1) Include the Urban Airship dependency in the project’s build.gradle file:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											repositories { ... maven { url "https://urbanairship.bintray.com/android" } } dependencies { ... // Urban Airship SDK compile 'com.urbanairship.android:segment-integration:1.0.+' }
									Node:
									(type) c
									(layer)3
										Element:p
											2) Verify the
										Element:code
											applicationId
											is set in the project’s build.gradle file:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											android { ... defaultConfig { ... applicationId "com.example.application" } }
									Node:
									(type) c
									(layer)3
										Element:p
											3) Add the Urban Airship Integration factory:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											Analytics analytics = new Analytics.Builder(context, writeKey) .use(UrbanAirhsipIntegration.FACTORY) ... .build();
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Enabling user notifications
									Node:
									(type) c
									(layer)3
										Element:p
											Once the Urban Airship integration is ready, you can enable user notifications with the following:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											analytics.onIntegrationReady(UrbanAirshipIntegration.URBAN_AIRSHIP_KEY, new Analytics.Callback<Object>() { @Override public void onReady(Object instance) { UAirship airship = (UAirship) instance; airship.getPushManager().setUserNotificationsEnabled(true); } });
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								iOS
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Setup
									Node:
									(type) c
									(layer)3
										Element:p
											1) Add the Urban Airship Segment Integration pod to your project’s Podfile:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											pod "UrbanAirship-iOS-Segment-Integration"
									Node:
									(type) c
									(layer)3
										Element:p
											2) Use the Urban Airship Integration:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											SEGAnalyticsConfiguration *config = [SEGAnalyticsConfiguration configurationWithWriteKey:@"YOUR_WRITE_KEY"]; [config use:[SEGUrbanAirshipIntegrationFactory instance]]; [SEGAnalytics setupWithConfiguration:config];
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Enabling user notifications
									Node:
									(type) c
									(layer)3
										Element:p
											Once the Urban Airship integration is ready, you can enable user notifications with the following:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											[UAirship push].userPushNotificationsEnabled = YES;
									Node:
									(type) c
									(layer)3
										Element:p
											To listen for when the Urban Airship integration is ready, listen for the
										Element:code
											SEGAnalyticsIntegrationDidStart
											event in
										Element:code
											NSNotificationCenter
											:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											[[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(airshipReady) name:@"io.segment.analytics.integration.did.start" object:[SEGUrbanAirshipIntegrationFactory instance].key];
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Supported Sources and Connection Modes
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
							Element:th
								Web
							Element:th
								Mobile
							Element:th
								Server
							Element:tr
							Element:td
								📱 Device-based
							Element:td
							Element:td
								✅
							Element:td
							Element:tr
							Element:td
								☁️ Cloud-based
							Element:td
							Element:td
							Element:td
						Node:
						(type) c
						(layer)2
							Element:p
								To learn more about about Connection Modes and what dictates which we support,
							Element:a
								see here
								.
						Node:
						(type) c
						(layer)2
							Element:p
								This integration
							Element:em
								requires
								a
							Element:strong
								Device-based
								Connection Mode for
							Element:strong
								Mobile
								data. Follow the steps above to ensure you have packaged the Urban Airship SDK with Segment’s.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Settings
						Node:
						(type) c
						(layer)2
							Element:p
								Segment lets you change these integration settings via your Segment dashboard without having to touch any code.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											App Key
									Node:
									(type) c
									(layer)3
										Element:p
											The Urban Airship app key. Found in your Urban Airship dashboard under Setting -> APIs & Integrations.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											App Secret
									Node:
									(type) c
									(layer)3
										Element:p
											The Urban Airship app secret. Found in your Urban Airship dashboard under Setting -> APIs & Integrations.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											GCM Sender
									Node:
									(type) c
									(layer)3
										Element:p
											Android only. The GCM sender ID or project number. Used for Android push notifications.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Notification Accent Color
									Node:
									(type) c
									(layer)3
										Element:p
											Android only. The hex color to use as the notification accent color, e.g., #ff0000.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Notification Icon
									Node:
									(type) c
									(layer)3
										Element:p
											Android only. The name of the drawable to use as the notification icon, e.g., ic_notification.
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:p
											If you have any questions or see anywhere we can improve our documentation, please
										Element:a
											let us know
											or kick off a conversation in the
										Element:a
											Segment Community
											!
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
									Node:
									(type) c
									(layer)3
										Element:span
											Check out the code!
									Node:
									(type) c
									(layer)3
										Element:a
											android
									Node:
									(type) c
									(layer)3
										Element:a
											ios
