Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Analytics for AMP
			Node:
			(type) c
			(layer)1
				Element:p
					The
				Element:a
					Segment AMP
					component makes it easy to send your data to lots of tools without having to learn, test or implement a new AMP component every time. The component automatically collects default properties and sends a page view.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					Note:
					Since our AMP integration sends data directly to our servers, only integrations that support
				Element:a
					Cloud-based connection modes
					are compatible with AMP.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Choosing a Segment Source type
						Node:
						(type) c
						(layer)2
							Element:p
								Because data moves from AMP > Segment > end-tool, integration settings will require server-side or mobile keys.
							Element:br
								Create a source of
							Element:strong
								Mobile, Server, or Legacy
								type for AMPs.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Getting Started
						Node:
						(type) c
						(layer)2
							Element:p
								If youâ€™re new to
							Element:a
								AMP
								, go through their excellent
							Element:a
								Quickstart
								.
						Node:
						(type) c
						(layer)2
							Element:p
								Once you have an AMP page up and running, include the
							Element:a
								amp-analytics component
								before the closing
							Element:code
								</head>
								tag:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								<script async custom-element="amp-analytics" src="https://cdn.ampproject.org/v0/amp-analytics-0.1.js"></script>
						Node:
						(type) c
						(layer)2
							Element:p
								Include Segment analytics, using the
							Element:code
								<amp-analytics type="segment"?>
								as follows will automatically collect Page views:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								<amp-analytics type="segment"> <script type="application/json"> { "vars": { "writeKey": "WRITE_KEY", "name": "My Page Name" } } </script> </amp-analytics>
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Default Properties Collected
						Node:
						(type) c
						(layer)2
							Element:p
								A few properties are automatically collected with each page view and event call.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								{ "anonymousId": "amp-<unique-id>", "context.locale": "en-US", "context.page.path": "/article", "context.page.url": "http://example.com/article", "context.page.referrer": "referrer", "context.page.title": "My Article", "context.screen.width": 600, "context.screen.height": 800 }
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Page
						Node:
						(type) c
						(layer)2
							Element:p
								Track pageviews by includeding in the body tag:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								<amp-analytics type="segment"> <script type="application/json"> { "vars": { "writeKey": "WRITE_KEY", "name": "my page name" } } </script> </amp-analytics>
						Node:
						(type) c
						(layer)2
							Element:p
								To collect additional, custom properties, include an
							Element:code
								"extraUrlParams"
								object:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								<amp-analytics type="segment"> <script type="application/json"> { "vars": { "writeKey": "WRITE_KEY", "name": "my page name" }, "extraUrlParams": { "properties.type": "article", "properties.published_at": "2016-06-28", "properties.author": "John Doe" } } </script> </amp-analytics>
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Events
						Node:
						(type) c
						(layer)2
							Element:p
								Track
							Element:code
								click
								events, add a simple trigger with a
							Element:code
								selector
								which will send that event once the user clicks:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								<amp-analytics type="segment"> <script type="application/json"> { "vars": { "writeKey": "WRITE_KEY" } "triggers": { "click": { "on": "click", "selector": ".read-more-button", "request": "track", "vars": { "event": "Read More Clicked" } } } } </script> </amp-analytics>
						Node:
						(type) c
						(layer)2
							Element:p
								To collect additional, custom properties, include an
							Element:code
								"extraUrlParams"
								object like so:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								<amp-analytics type="segment"> <script type="application/json"> { "vars": { "writeKey": "WRITE_KEY" }, "extraUrlParams": { "properties.button_type": "read-more", "properties.article_id": "my-article-id" }, "triggers": { "click": { "on": "click", "selector": ".read-more-button", "request": "track", "vars": { "event": "Read More Clicked" } } } } </script> </amp-analytics>
						Node:
						(type) c
						(layer)2
							Element:p
								See a live
							Element:a
								AMP with Segment analytics
						Node:
						(type) c
						(layer)2
							Element:hr
						Node:
						(type) c
						(layer)2
							Element:p
								If you have any questions or see anywhere we can improve our documentation, please
							Element:a
								let us know
								or kick off a conversation in the
							Element:a
								Segment Community
								!
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:span
							Element:span
								Was this document helpful?
							Element:span
							Element:label
							Element:span
								Yes
							Element:label
							Element:span
								No
						Node:
						(type) c
						(layer)2
							Element:i
			Node:
			(type) h1
			(layer)1
				Element:h1
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Overview
				Element:li
				Element:a
					ActiveCampaign
				Element:li
				Element:a
					AMP
				Element:li
				Element:a
					analytics.js
				Element:li
				Element:a
					Android
				Element:li
				Element:a
					Android Wear
				Element:li
				Element:a
					Clojure
				Element:li
				Element:a
					Customer.io
				Element:li
				Element:a
					Drip
				Element:li
				Element:a
					Facebook Ads
				Element:li
				Element:a
					Facebook Lead Ads
				Element:li
				Element:a
					Go
				Element:li
				Element:a
					Google AdWords
				Element:li
				Element:a
					HTTP
				Element:li
				Element:a
					HubSpot
				Element:li
				Element:a
					Intercom
				Element:li
				Element:a
					iOS
				Element:li
				Element:a
					Iterable
				Element:li
				Element:a
					Java
				Element:li
				Element:a
					Klaviyo
				Element:li
				Element:a
					Mailchimp
				Element:li
				Element:a
					Mailjet
				Element:li
				Element:a
					Marketo
				Element:li
				Element:a
					Node
				Element:li
				Element:a
					Nudgespot
				Element:li
				Element:a
					PHP
				Element:li
				Element:a
					Python
				Element:li
				Element:a
					Ruby
				Element:li
				Element:a
					Salesforce
				Element:li
				Element:a
					Selligent
				Element:li
				Element:a
					SendGrid
				Element:li
				Element:a
					Stripe
				Element:li
				Element:a
					Twilio
				Element:li
				Element:a
					Vero
				Element:li
				Element:a
					Xamarin
				Element:li
				Element:a
					Zendesk
				Element:li
				Element:a
					.NET
