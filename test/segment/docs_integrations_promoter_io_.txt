Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Promoter.io Integration
			Node:
			(type) c
			(layer)1
				Element:p
					Segment makes it easy to send your data to
				Element:a
					Promoter.io
					(and lots of other integrations). Once you've tracked your data through our open source
				Element:a
					libraries
					we'll translate and route your data to Promoter.io in the format they understand.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Getting Started
						Node:
						(type) c
						(layer)2
							Element:p
								Once the Segment library is integrated with your service, add your Promoter API Key and toggle on Promoter in your Segment integrations page. You can find your API key in Promoter.io under
							Element:strong
								Accounts Settings > Segment Integration
								.
						Node:
						(type) c
						(layer)2
							Element:hr
						Node:
						(type) c
						(layer)2
							Element:p
								Promoter supports the
							Element:code
								identify
								and
							Element:code
								track
								methods from Segment and will allow you to:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								Add a contact to a list
							Element:li
								Send a survey to a contact
						Node:
						(type) c
						(layer)2
							Element:p
								Both
							Element:code
								identify
								and
							Element:code
								track
								will need to be called in order to utilize the full power of Promoter.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Identify
						Node:
						(type) c
						(layer)2
							Element:p
								By calling
							Element:code
								identify
								, you will effectively be creating a new contact for your organization.
						Node:
						(type) c
						(layer)2
							Element:p
								Within the
							Element:code
								identify
								event, Promoter requires a
							Element:code
								userId
								and
							Element:code
								email
								, while
							Element:code
								firstName
								and
							Element:code
								lastName
								are optional. However, it is encouraged that you pass in as many attributes that are meaningful to your organization around the context of NPS. You will be able to filter your score by every single attribute or combination of attributes provided.
						Node:
						(type) c
						(layer)2
							Element:p
								Here‚Äôs an example:
						Node:
						(type) c
						(layer)2
							Element:figure
							Element:pre
							Element:code
								analytics.identify("12345", new Traits() .putValue("email", "ted@mosbiusdesigns.com") .putValue("firstName", "Ted") .putValue("lastName", "Mosby") .putValue("plan", "Premium"));
							Element:pre
							Element:code
								client.Identify(&analytics.Identify{ UserId: "12345", Traits: map[string]interface{}{ "email": "ted@mosbiusdesigns.com", "firstName": "Ted", "lastName": "Mosby", "plan": "Premium", }, })
							Element:pre
							Element:code
								[[SEGAnalytics sharedAnalytics] identify:@"12345", traits: @{ @"email" : @"ted@mosbiusdesigns.com", @"firstName" : @"Ted", @"lastName" : @"Mosby", @"plan" : @"Premium" }];
							Element:pre
							Element:code
								Analytics.identify("12345", new Traits() .put("email", "ted@mosbiusdesigns.com") .put("firstName", "Ted") .put("lastName", "Mosby") .put("plan", "Premium"));
							Element:pre
							Element:code
								analytics.identify({ userId: '12345', traits: { email: 'ted@mosbiusdesigns.com', firstName: 'Ted', lastName: 'Mosby', plan: 'Premium' } });
							Element:pre
							Element:code
								Analytics::identify(array( "userId" => "12345", "traits" => array( "email" => "ted@mosbiusdesigns.com", "firstName" => "Ted", "lastName" => "Mosby", "plan" => "Premium" ) ));
							Element:pre
							Element:code
								analytics.identify('12345', { 'email': 'ted@mosbiusdesigns.com', 'firstName': 'Ted', 'lastName': 'Mosby', 'plan': 'Premium' })
							Element:pre
							Element:code
								Analytics.identify( user_id: '12345', traits: { email: 'ted@mosbiusdesigns.com', firstName: 'Ted', lastName: 'Mosby', plan: 'Premium' } )
							Element:pre
							Element:code
								analytics.identify('12345', { email: 'ted@mosbiusdesigns.com', firstName: 'Ted', lastName: 'Mosby', plan: 'Premium' });
							Element:pre
							Element:code
								Analytics.Client.Identify("12345", new Traits() { { "email", "ted@mosbiusdesigns.com" }, { "firstName", "Ted" }, { "lastName", "Mosby" }, { "plan", "Premium" } });
							Element:pre
							Element:code
								Analytics.Client.Identify("12345", new Traits() { { "email", "ted@mosbiusdesigns.com" }, { "firstName", "Ted" }, { "lastName", "Mosby" }, { "plan", "Premium" } });
							Element:pre
							Element:code
								curl
							Element:a
								https://api.segment.io/v1/identify
								\ -d userId=12345 \ -d traits[email]=ted@mosbiusdesigns.com \ -d traits[firstName]=Ted \ -d traits[lastName]=Mosby \ -d traits[plan]=Premium
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Track
						Node:
						(type) c
						(layer)2
							Element:p
								By creating a track event you will effectively trigger a survey to be sent to your contact.
						Node:
						(type) c
						(layer)2
							Element:p
								The track event should have an associated userId sent with it. That userId
							Element:strong
								needs
								to match the userId sent with the
							Element:code
								identify
								event. This is the only way we know which contact you would like to associate this event to. We will send a survey to that contact using the campaign that‚Äôs associated to Segment within Promoter.
						Node:
						(type) c
						(layer)2
							Element:p
								Note: if you are using our client-side javascript library (
							Element:a
								Analytics.js
								) and already called
							Element:code
								identify
								we will automatically include the
							Element:code
								userId
								with every
							Element:code
								track
								call.
						Node:
						(type) c
						(layer)2
							Element:p
								Here‚Äôs an example:
						Node:
						(type) c
						(layer)2
							Element:figure
							Element:pre
							Element:code
								analytics.track("Friend Invited", new Properties() .putValue("category", "viral") .putValue("totalInvites", 50));
							Element:pre
							Element:code
								client.Track(&analytics.Track{ UserId: "12345", Event: "Friend Invited", Properties: map[string]interface{}{ "category": "viral", "totalInvites": 50, }, })
							Element:pre
							Element:code
								[[SEGAnalytics sharedAnalytics] track:@"Friend Invited", properties: @{ @"category" : @"viral", @"totalInvites" : @50 }];
							Element:pre
							Element:code
								Analytics.track("12345", "Friend Invited", new Props() .put("category", "viral") .put("totalInvites", 50));
							Element:pre
							Element:code
								analytics.track({ userId: '12345', event: 'Friend Invited', properties: { category: 'viral', totalInvites: 50 } });
							Element:pre
							Element:code
								Analytics::track(array( "userId" => "12345", "event" => "Friend Invited", "properties" => array( "category" => "viral", "totalInvites" => 50 ) ));
							Element:pre
							Element:code
								analytics.track('12345', 'Friend Invited', { 'category': 'viral', 'totalInvites': 50 })
							Element:pre
							Element:code
								Analytics.track( user_id: '12345', event: 'Friend Invited', properties: { category: 'viral', totalInvites: 50 } )
							Element:pre
							Element:code
								analytics.track('Friend Invited', { category: 'viral', totalInvites: 50 });
							Element:pre
							Element:code
								Analytics.Client.Track("12345", "Friend Invited", new Properties() { { "category", "viral" }, { "totalInvites", 50 } });
							Element:pre
							Element:code
								Analytics.Client.Track("12345", "Friend Invited", new Properties() { { "category", "viral" }, { "totalInvites", 50 } });
							Element:pre
							Element:code
								curl
							Element:a
								https://api.segment.io/v1/track
								\ -d userId=12345 \ -d "event=Friend Invited" \ -d properties[category]=viral \ -d properties[totalInvites]=50
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Completed Order
									Node:
									(type) c
									(layer)3
										Element:p
											When you
										Element:code
											track
											an event with the name
										Element:code
											Order Completed
											using the
										Element:a
											e-commerce tracking API
											, we will send the event and data to Promoter as a custom event with the data stored with Promoter for future use.
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Supported Sources and Connection Modes
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
							Element:th
								Web
							Element:th
								Mobile
							Element:th
								Server
							Element:tr
							Element:td
								üì± Device-based
							Element:td
							Element:td
							Element:td
							Element:tr
							Element:td
								‚òÅÔ∏è Cloud-based
							Element:td
								‚úÖ
							Element:td
								‚úÖ
							Element:td
								‚úÖ
						Node:
						(type) c
						(layer)2
							Element:p
								To learn more about about Connection Modes and what dictates which we support,
							Element:a
								see here
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Settings
						Node:
						(type) c
						(layer)2
							Element:p
								Segment lets you change these integration settings via your Segment dashboard without having to touch any code.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											API Key
									Node:
									(type) c
									(layer)3
										Element:p
											You can find your API key in Promoter.io under your accounts settings > Segment Integration
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:p
											If you have any questions or see anywhere we can improve our documentation, please
										Element:a
											let us know
											or kick off a conversation in the
										Element:a
											Segment Community
											!
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
									Node:
									(type) c
									(layer)3
										Element:span
											Check out the code!
