Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Vero Integration
			Node:
			(type) c
			(layer)1
				Element:p
					Segment makes it easy to send your data to
				Element:a
					Vero
					(and lots of other integrations). Once you've tracked your data through our open source
				Element:a
					libraries
					we'll translate and route your data to Vero in the format they understand.
			Node:
			(type) c
			(layer)1
				Element:p
					Our Vero integration code is all open-source on GitHub if you want to check it out:
				Element:a
					Javascript
					,
				Element:a
					Server
					.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Getting Started
						Node:
						(type) c
						(layer)2
							Element:p
								Vero helps you send targeted emails to customers based on their behavior. When you toggle on Vero in Segment, this is what happens:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								Our CDN is updated within 5-10 minutes. Then our snippet will start asynchronously loading Vero‚Äôs m.js onto your page. This means you should remove Vero‚Äôs snippet from your page.
							Element:li
								Since Vero only records custom events and custom user data, no events or users will appear in Vero until you start using the API outlined below.
						Node:
						(type) c
						(layer)2
							Element:p
								Vero is supported on the client-side, server-side and mobile.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Identify
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Client Side
									Node:
									(type) c
									(layer)3
										Element:p
											When you call
										Element:a
											on analytics.js, we augment
										Element:code
											identify
										Element:code
											traits
											to have
										Element:code
											traits.id
											set to the
										Element:code
											userId
											, and then call Vero‚Äôs
										Element:code
											user
											with the augmented traits object. You should provide both a
										Element:code
											traits.email
											and a
										Element:code
											userId
											for Vero to work best.
									Node:
									(type) c
									(layer)3
										Element:p
											If no
										Element:code
											email
											is attached, the user is created in Vero but cannot be emailed. If you send omit the
										Element:code
											userId
											, Vero will use the email as the ID, which is is not recommended. Check out the
										Element:a
											Vero docs
											for more information.
									Node:
									(type) c
									(layer)3
										Element:p
											A
										Element:code
											userId
											is a required value for all types of calls. Be sure you call
										Element:code
											identify
											with a
										Element:code
											userId
											for subsequent
										Element:code
											track
											calls to populate into Vero correctly. For server side calls, you will have to manually pass in the
										Element:code
											userId
											at the top level.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Server Side
									Node:
									(type) c
									(layer)3
										Element:p
											When you call
										Element:a
											from one of our server-side languages, we‚Äôll call Vero‚Äôs REST API and update the traits for the customer with that
										Element:code
											identify
										Element:code
											userId
											. If your
										Element:code
											userId
											is an email, we‚Äôll also set the trait
										Element:code
											email
											as your
										Element:code
											userId
											in the update call.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Track
						Node:
						(type) c
						(layer)2
							Element:p
								When you call
							Element:a
								, we‚Äôll send the event to Vero with the event
							Element:code
								track
							Element:code
								name
								and
							Element:code
								properties
								you provide. Events will be matched to the current user.
						Node:
						(type) c
						(layer)2
							Element:p
								You can also unsubscribe users by sending a
							Element:code
								track
								event, passing in the user‚Äôs ID as a
							Element:code
								property
								, like so:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								analytics.track('Unsubscribe', { id: '12345' });
						Node:
						(type) c
						(layer)2
							Element:p
								Note: If you‚Äôd like to explicitly specify a user‚Äôs email with track events that is not an event metadata, you can send that under
							Element:code
								context.traits.email
								!
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Sending Data from Vero
						Node:
						(type) c
						(layer)2
							Element:p
								Vero supports sending
							Element:a
								email events
								to other tools on the Segment platform. These events will be sent as
							Element:code
								track
								calls to the other integrations you‚Äôve turned on.
						Node:
						(type) c
						(layer)2
							Element:p
								To enable this feature,
						Node:
						(type) c
						(layer)2
							Element:ol
							Element:li
								Log into Vero and go to Settings
							Element:li
								Then go to
							Element:a
								Integrations
							Element:li
								Hit ‚Äòview‚Äô next to the Segment integration
							Element:li
								Enter in your Segment write key at the bottom.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Group
						Node:
						(type) c
						(layer)2
							Element:p
								When you call
							Element:a
								, the
							Element:code
								group
							Element:code
								traits
								included in the call will be set to the current user‚Äôs
							Element:strong
								Group
								property in Vero.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Alias
						Node:
						(type) c
						(layer)2
							Element:p
								Our
							Element:a
								method can be used from your server to ‚Äúre-identify‚Äù an existing user identity to a new one.
							Element:code
								alias
						Node:
						(type) c
						(layer)2
							Element:p
								Most of the time this happens when you identify a visitor by their email address after they opt in, then later re-identify with a database ID when they become registered users.
						Node:
						(type) c
						(layer)2
							Element:p
								To connect the two identities you‚Äôll need to
							Element:a
								their current identity to their new one.
							Element:code
								alias
						Node:
						(type) c
						(layer)2
							Element:p
								Here‚Äôs a python example of using
							Element:a
								to update the identity from an email address to a database ID:
							Element:code
								alias
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								analytics.alias('friends@segment.com', '8765309')
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Supported Sources and Connection Modes
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
							Element:th
								Web
							Element:th
								Mobile
							Element:th
								Server
							Element:tr
							Element:td
								üì± Device-based
							Element:td
								‚úÖ
							Element:td
							Element:td
							Element:tr
							Element:td
								‚òÅÔ∏è Cloud-based
							Element:td
								‚úÖ
							Element:td
								‚úÖ
							Element:td
								‚úÖ
						Node:
						(type) c
						(layer)2
							Element:p
								To learn more about about Connection Modes and what dictates which we support,
							Element:a
								see here
								.
						Node:
						(type) c
						(layer)2
							Element:p
								We offer an optional
							Element:strong
								Cloud-based
								Connection Mode for
							Element:strong
								Web
								data with Vero. As a reminder, this removes the Vero javascript library from your site, improving performance. However, there are a few disparities between the Cloud-based and Device-based connection modes to keep in mind brefore enabling it in the Segment app. When you enable the
							Element:strong
								Cloud-based
								integration mode, here‚Äôs what happens:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								Server-side `page` and `group` calls are now supported.
							Element:li
								Server-side `identify`, and `track` calls now pass `context.userAgent` through to Vero.
							Element:li
								Server-side `track` calls that include "Unsubscribe" will now unsubscribe the user in Vero. This change makes the server-side integration match that of Vero's JavaScript SDK.
							Element:li
								All calls will no longer send `platform`, `language`, or `timezone` properties.
							Element:li
								Vero's JavaScript SDK keeps track of anonymous users and, the first time they're identified, sends a `Visited Site` event to Vero. (If a user clears their cookies or changes devices, `Visited Site` event will be sent again.) If you rely on this exact behavior, you must instrument the event manually.
							Element:li
								Vero does not support anonymous IDs, instead requiring that a discrete user ID be attached to all events; the Vero JavaScript SDK queues all `page` and `track` calls until an `identify` call is performed. Disabling the SDK will result in these anonymous events being dropped.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Settings
						Node:
						(type) c
						(layer)2
							Element:p
								Segment lets you change these integration settings via your Segment dashboard without having to touch any code.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											API Key
									Node:
									(type) c
									(layer)3
										Element:p
											You can find your API key in your
										Element:a
											Vero Settings
											.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Auth Token
									Node:
									(type) c
									(layer)3
										Element:p
											Your auth token allows you to send data to Vero through our server-side libraries. You can find your
										Element:code
											auth_token
											on
										Element:a
											Vero‚Äôs account page
											.
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:p
											If you have any questions or see anywhere we can improve our documentation, please
										Element:a
											let us know
											or kick off a conversation in the
										Element:a
											Segment Community
											!
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
									Node:
									(type) c
									(layer)3
										Element:span
											Check out the code!
									Node:
									(type) c
									(layer)3
										Element:a
											browser
									Node:
									(type) c
									(layer)3
										Element:a
											server
