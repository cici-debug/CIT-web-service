Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Totango Integration
			Node:
			(type) c
			(layer)1
				Element:p
					Segment makes it easy to send your data to
				Element:a
					Totango
					(and lots of other integrations). Once you've tracked your data through our open source
				Element:a
					libraries
					we'll translate and route your data to Totango in the format they understand.
			Node:
			(type) c
			(layer)1
				Element:p
					Our Totango integration code is all open-source on GitHub if you want to check it out:
				Element:a
					Javascript
					,
				Element:a
					Server
					.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Getting Started
						Node:
						(type) c
						(layer)2
							Element:p
								To get started with Totango and Segment, toggle Totango on in your Segment integrations and add your
							Element:strong
								Service ID
								, which you can find in your Totango settings.
						Node:
						(type) c
						(layer)2
							Element:p
								Once you’ve done that, those new settings will propagate to our CDN (that usually takes around 5 minutes) and Totango will be live on your site! Since Totango is all about identified users, the next thing you’ll want to do is add a few API calls with exactly the information Totango needs. We’ll show you how..
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Note:
								As part of setup, you should know the user and call
							Element:code
								identify
								before the
							Element:code
								group
								call. Remember that every
							Element:code
								page
								and
							Element:code
								track
								call that you want to show up in Totango must be tied to a
							Element:code
								groupId
								(Totango calls this Account ID). , however.
						Node:
						(type) c
						(layer)2
							Element:p
								For our client-side Javascript library (Analytics.js) that means you need to call
							Element:code
								group
								at least once with a
							Element:code
								groupId
								and we will cache it and attach it to future calls to other methods.
						Node:
						(type) c
						(layer)2
							Element:p
								For server-side and mobile libraries you must include
							Element:code
								context.groupId
								in every call you want to be sent through to Totango so they can connect the dots between a call made to Segment and an account in their system.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Group
						Node:
						(type) c
						(layer)2
							Element:p
								Totango also needs to know what “account” the user belongs to. To record this, you’d use our
							Element:a
								method. Group also takes a unique ID (for the group this time!) and a dictionary of properties about the group. It looks like this:
							Element:code
								group
						Node:
						(type) c
						(layer)2
							Element:p
								A call to
							Element:code
								group
								is required before any
							Element:code
								track
								calls will be sent to Totango.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								analytics.group('sjsj2hdj2', { name: 'Initech', website: 'http://www.initech.com' });
						Node:
						(type) c
						(layer)2
							Element:p
								Making a call like that will add the current user to the group, which maps directly to Totango’s “accounts”.
						Node:
						(type) c
						(layer)2
							Element:p
								You should always call
							Element:a
								after your call to
							Element:code
								group
							Element:a
								, so that we know which user you want to associate with the group. To learn more about how
							Element:code
								identify
							Element:a
								works, check out our
							Element:code
								group
							Element:a
								Group docs
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Page
						Node:
						(type) c
						(layer)2
							Element:p
								Totango allows you to split your application into functional sections known as
							Element:code
								modules
								. By default, Totango pulls this module out of the users current URL. You can customize this behavior by using our
							Element:a
								method. You can pass
							Element:code
								page
							Element:code
								category
								as a property to
							Element:a
								and we’ll set that as the
							Element:code
								page
							Element:code
								module
								in Totango.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
								takes the category of the page, the name of the page and any optional properties you want to associate with the pageview. The
							Element:code
								page
							Element:a
								call is included by default in your snippet, since it’s a required call. Modify the
							Element:code
								page
							Element:a
								call inside the snippet or move it elsewhere, but don’t delete it.
							Element:code
								page
						Node:
						(type) c
						(layer)2
							Element:p
								It looks like this:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								// Names and categorizes the page... sets the totango module to "Blog" analytics.page('Blog', '15,000 Ways to Increase Conversion');
						Node:
						(type) c
						(layer)2
							Element:p
								You can label as many categories / modules as you need, but as a best practice you’ll probably want to have around 5 for a small – medium sized app to 20 for a very large web-application. Not sure which modules to use? Check out Totango’s
							Element:a
								Best Practices guide
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Identify
						Node:
						(type) c
						(layer)2
							Element:p
								The first thing Totango needs to know is “who is the user browsing your site?” You record this with our
							Element:a
								method. Identify takes the unique ID of a user and any traits you know about them. It looks like this:
							Element:code
								identify
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								analytics.identify('29ej29d', { email: 'lawrence@initech.com', name: 'Lawrence Drywall', age: 42 });
						Node:
						(type) c
						(layer)2
							Element:p
								To learn more about how
							Element:a
								works, check out our
							Element:code
								identify
							Element:a
								Identify docs
								. For example,
							Element:code
								email
								and
							Element:code
								name
								are two of our
							Element:a
								special traits
								that we recognize semantically.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								If you’re sending data via the server-side or mobile libraries
								, you’ll need to include
							Element:code
								context.groupId
								. Check out the
							Element:a
								server-side
								section to see how.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Special Properties
									Node:
									(type) c
									(layer)3
										Element:p
											Totango recognizes a few special properties for accounts that mean very specific things. For example, an account’s
										Element:code
											plan
											indicates whether they are paying you or not. Here are the special properties for the
										Element:a
											method that Segment will recognize and translate for you automatically:
										Element:code
											group
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tr
										Element:td
										Element:code
											created
										Element:em
											Date or String
										Element:td
											The date when the account was first created. We will automatically change this from
										Element:code
											created
											to
										Element:code
											'Create Date'
											for the Totango API, but you should send it to us as
										Element:code
											created
											. If you don’t provide this, Totango will default to the current date.
										Element:tr
										Element:td
										Element:code
											plan
										Element:em
											String
											,
										Element:em
											optional
										Element:td
											The “Free” or “Paying” plan of the account. You can setup extra types of plans in your Totango settings if “Free” and “Paying” don’t suit your needs. If you don’t provide this, we’ll default it to
										Element:code
											"Free"
											.
									Node:
									(type) c
									(layer)3
										Element:p
											To use the rest of the Totango’s special properties, just pass them exactly like you would normally to Totango and we’ll send them straight through!
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Track
						Node:
						(type) c
						(layer)2
							Element:p
								Totango also lets you record any events a user triggers in your interface. To do that with Segment you’d use our
							Element:a
								method. If you’re just starting out with events, we usually recommend recording 5-10 of your business’s most important events. You can always add more later!
							Element:code
								track
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
								takes the name of the event and any optional properties you want to associate with the event. If you’d like to add a
							Element:code
								track
							Element:code
								category
								to your
							Element:code
								track
								calls in addition to your
							Element:code
								page
								calls, you can add them as
							Element:code
								properties
								. It looks like this:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								analytics.track('Completed Purchase', { revenue: 42.99, shippingMethod: '2-day', category: 'Conversion' });
						Node:
						(type) c
						(layer)2
							Element:p
								To learn more about how
							Element:a
								works check out our
							Element:code
								track
							Element:a
								Track docs
								. For example,
							Element:code
								revenue
								is a special property that lets you semantically describe how much money you’re making.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								If you’re sending data via the server-side or mobile libraries
								, you’ll need to include
							Element:code
								context.groupId
								. Check out the
							Element:a
								troubleshooting
								section to see how.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Troubleshooting
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Server-side Methods Require Group ID
									Node:
									(type) c
									(layer)3
										Element:p
											Totango requires
										Element:code
											groupId
											on every
										Element:code
											identify
											,
										Element:code
											page
											and
										Element:code
											track
											call, so you’ll need to pass it via
										Element:code
											context.groupId
											.
									Node:
									(type) c
									(layer)3
										Element:p
											Here’s a node
										Element:code
											identify
											example to get you started:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											analytics.identify({ userId: '29ej29d', traits: { email: 'lawrence@initech.com', name: 'Lawrence Drywall', age: 42 }, context: { groupId: 'sjsj2hdj2' } });
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Supported Sources and Connection Modes
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
							Element:th
								Web
							Element:th
								Mobile
							Element:th
								Server
							Element:tr
							Element:td
								📱 Device-based
							Element:td
								✅
							Element:td
							Element:td
							Element:tr
							Element:td
								☁️ Cloud-based
							Element:td
							Element:td
								✅
							Element:td
								✅
						Node:
						(type) c
						(layer)2
							Element:p
								To learn more about about Connection Modes and what dictates which we support,
							Element:a
								see here
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Settings
						Node:
						(type) c
						(layer)2
							Element:p
								Segment lets you change these integration settings via your Segment dashboard without having to touch any code.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Disable the Totango Heartbeat
									Node:
									(type) c
									(layer)3
										Element:p
											By default Totango’s Javascript pings its servers once a minute to see if the user has left the page. If you don’t want that to happen, enable this setting.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Service ID
									Node:
									(type) c
									(layer)3
										Element:p
											You can find your Service ID under
										Element:strong
											Settings > Developer Console
											in
										Element:a
											Totango
											.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Track Categorized Pages to Totango
									Node:
									(type) c
									(layer)3
										Element:p
											This will track events to Totango for
										Element:a
											calls that have a
										Element:code
											page
											method
										Element:code
											category
											associated with them. For example
										Element:code
											page('Docs', 'Index')
											would translate to
										Element:strong
											Viewed Docs Index Page
											.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Track Named Pages to Totango
									Node:
									(type) c
									(layer)3
										Element:p
											This will track events to Totango for
										Element:a
											calls that have a
										Element:code
											page
											method
										Element:code
											name
											associated with them. For example
										Element:code
											page('Signup')
											would translate to
										Element:strong
											Viewed Signup Page
											.
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:p
											If you have any questions or see anywhere we can improve our documentation, please
										Element:a
											let us know
											or kick off a conversation in the
										Element:a
											Segment Community
											!
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
									Node:
									(type) c
									(layer)3
										Element:span
											Check out the code!
									Node:
									(type) c
									(layer)3
										Element:a
											browser
									Node:
									(type) c
									(layer)3
										Element:a
											server
