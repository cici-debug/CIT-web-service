Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Leanplum Integration
			Node:
			(type) c
			(layer)1
				Element:p
					Segment makes it easy to send your data to
				Element:a
					Leanplum
					(and lots of other integrations). Once you've tracked your data through our open source
				Element:a
					libraries
					we'll translate and route your data to Leanplum in the format they understand.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Getting Started
						Node:
						(type) c
						(layer)2
							Element:p
								Our Leanplum integration is offered as a Server-Side Integration. To utilize Leanplum‚Äôs Push Notifications or A/B testing in your mobile app, you will need to use our Android SDK.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Server-Side
						Node:
						(type) c
						(layer)2
							Element:p
								If you‚Äôre using any of our
							Element:a
								server-side sources
								, our
							Element:a
								HTTP API
								, or our
							Element:a
								Xamarin library
								we will begin passing data through our servers to Leanplum within minutes after you enable it on your source integrations page.
						Node:
						(type) c
						(layer)2
							Element:p
								Our Leanplum integrations supports our identify, track, and page methods.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Note:
								Leanplum cannot support group or alias in our server-side sources since they don‚Äôt have a REST API for those methods.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Mobile
						Node:
						(type) c
						(layer)2
							Element:p
								If you‚Äôre using our Android SDK we will begin sending data to Leanplum from your users‚Äô devices as soon as you enable it on your source integrations page. If you‚Äôre using custom builds and you haven‚Äôt included Leanplum, you‚Äôll have to make a new build.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Identify
						Node:
						(type) c
						(layer)2
							Element:p
								The first thing you‚Äôll want to do is to
							Element:a
								a user with any relevant information as soon as they log-in, or sign-up. You record this with our
							Element:code
								identify
							Element:a
								method.
							Element:code
								identify
						Node:
						(type) c
						(layer)2
							Element:p
								Identify takes the
							Element:code
								userId
								of a user and any
							Element:code
								traits
								you know about them.
						Node:
						(type) c
						(layer)2
							Element:p
								When you call
							Element:a
								, we‚Äôll set the custom ID in Leanplum, and set any special Leanplum
							Element:code
								identify
							Element:code
								traits
								you provide, such as
							Element:code
								gender
								, or
							Element:code
								age
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Track
						Node:
						(type) c
						(layer)2
							Element:p
								Next you‚Äôll want to
							Element:a
								your user‚Äôs behavior so that you can figure out how to increase engagement, virality, or whatever key action is critical to your business. You can use the
							Element:code
								track
							Element:a
								method to do this.
							Element:code
								track
						Node:
						(type) c
						(layer)2
							Element:p
								Whenever you call
							Element:a
								from our iOS or Android library, we‚Äôll log an event with Leanplum.
							Element:code
								track
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Page
						Node:
						(type) c
						(layer)2
							Element:p
								To advance your user‚Äôs ‚Äòstate‚Äô through your application, you can call
							Element:a
								whenever a user moves to a new area. When you call
							Element:code
								page
							Element:a
								, we will call Leanplum‚Äôs
							Element:code
								page
							Element:code
								advance
								method.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								How To - Push Notifications:
						Node:
						(type) c
						(layer)2
							Element:p
								As every analytics provider deals with push notifications and in app messaging differently, we currently don‚Äôt support them out of the box. To use these features with your Leanplum account, you can add a couple of small code snippets to your app, then you‚Äôre ready to go!
						Node:
						(type) c
						(layer)2
							Element:ol
							Element:li
							Element:p
								Copy the permissions XML below into the AndroidManifest.xml and insert your package name into the name fields where it says [com.YOUR_PACKAGE].
							Element:pre
							Element:code
								<uses-permission android:name="android.permission.GET_ACCOUNTS"/> <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/> <uses-permission android:name="android.permission.WAKE_LOCK"/> <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE"/> <permission android:name="[com.YOUR_PACKAGE].gcm.permission.C2D_MESSAGE" android:protectionLevel="signature" /> <uses-permission android:name="[com.YOUR_PACKAGE].gcm.permission.C2D_MESSAGE" />
							Element:li
							Element:p
								Add the receiver XML below into the same manifest file and replace [com.YOUR_PACKAGE] with your package name.
							Element:pre
							Element:code
								<receiver android:name="com.leanplum.GcmBroadcastReceiver" android:permission="com.google.android.c2dm.permission.SEND" > <intent-filter> <action android:name="com.google.android.c2dm.intent.RECEIVE" /> <action android:name="com.google.android.c2dm.intent.REGISTRATION" /> <category android:name="[com.YOUR_PACKAGE].gcm" /> </intent-filter> </receiver>
							Element:li
							Element:p
								Register your service in the manifest file using the below code.
							Element:pre
							Element:code
								<service android:name="com.leanplum.LeanplumPushService" />
						Node:
						(type) c
						(layer)2
							Element:p
								You are now ready to send push notifications from your Leanplum UI! For more information about setting up push notifications and in app messaging with Leanplum,
							Element:a
								see their docs
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								How To - A/B Testing:
						Node:
						(type) c
						(layer)2
							Element:p
								As with push notifications, A/B testing variables are dealt with in different ways by each of our integrations. Leanplum only requires two lines of code for each of your variables to get you set up!
						Node:
						(type) c
						(layer)2
							Element:ol
							Element:li
							Element:p
								Define your variable using var.define any time before calling
							Element:code
								Leanplum.start
								.
							Element:pre
							Element:code
								static Var<String> welcomeLabel = Var.define("welcomeLabel", "Welcome!");
							Element:li
							Element:p
								Register a valueChangedHandler on that variable.
							Element:pre
							Element:code
								welcomeLabel.addValueChangedHandler(new VariableCallback<String>() { @Override public void handle(Var<String> stringVar) { stringVar.value(); } });
						Node:
						(type) c
						(layer)2
							Element:p
								All done! You‚Äôre all set up to do A/B testing with Leanplum. For more information about variables in Leanplum, see their docs on
							Element:a
								Data Modeling
								.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Supported Sources and Connection Modes
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
							Element:th
								Web
							Element:th
								Mobile
							Element:th
								Server
							Element:tr
							Element:td
								üì± Device-based
							Element:td
							Element:td
								‚úÖ
							Element:td
							Element:tr
							Element:td
								‚òÅÔ∏è Cloud-based
							Element:td
								‚úÖ
							Element:td
								‚úÖ
							Element:td
								‚úÖ
						Node:
						(type) c
						(layer)2
							Element:p
								To learn more about about Connection Modes and what dictates which we support,
							Element:a
								see here
								.
						Node:
						(type) c
						(layer)2
							Element:p
								Segment offers a
							Element:strong
								Device-based
								Connection Mode for
							Element:strong
								Mobile
								data with Leanplum. If you‚Äôd like to use those features that require client-based functionality, follow the steps above to ensure you have packaged the Leanplum SDK with Segment‚Äôs.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Settings
						Node:
						(type) c
						(layer)2
							Element:p
								Segment lets you change these integration settings via your Segment dashboard without having to touch any code.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Leanplum Application Id
									Node:
									(type) c
									(layer)3
										Element:p
											The application ID. To find yours, select your app in the navigation column, and click Edit Apps. Under Keys, click Show.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Leanplum Client Key
									Node:
									(type) c
									(layer)3
										Element:p
											Either the Production or Development keys, depending on which API call you want to make.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Use Leanplum in Development Mode
									Node:
									(type) c
									(layer)3
										Element:p
											To use development mode, you must also input your Development key as the client key.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											GCM Sender ID
									Node:
									(type) c
									(layer)3
										Element:p
											The GCM sender ID that should be used for Push Notifications.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Use Leanplum Sender ID
									Node:
									(type) c
									(layer)3
										Element:p
											Select this if you don‚Äôt have your own GCM Sender ID, and would like to use Leanplum‚Äôs built in sender ID instead. If you have set your own GCM Sender ID and enable this setting, both IDs will be used.
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:p
											If you have any questions or see anywhere we can improve our documentation, please
										Element:a
											let us know
											or kick off a conversation in the
										Element:a
											Segment Community
											!
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
									Node:
									(type) c
									(layer)3
										Element:span
											Check out the code!
									Node:
									(type) c
									(layer)3
										Element:a
											server
									Node:
									(type) c
									(layer)3
										Element:a
											android
									Node:
									(type) c
									(layer)3
										Element:a
											ios
