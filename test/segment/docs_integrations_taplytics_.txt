Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Taplytics Integration
			Node:
			(type) c
			(layer)1
				Element:p
					Segment makes it easy to send your data to
				Element:a
					Taplytics
					(and lots of other integrations). Once you've tracked your data through our open source
				Element:a
					libraries
					we'll translate and route your data to Taplytics in the format they understand.
			Node:
			(type) c
			(layer)1
				Element:p
					Our Taplytics integration code is open sourced on Github. Feel free to check it out:
				Element:a
					iOS
					,
				Element:a
					Android
					.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Getting Started
						Node:
						(type) c
						(layer)2
							Element:p
								Once the Segment library is integrated with your app, add your API key and select your settings then toggle Taplytics on in your Segment integrations. These new settings will take up to an hour to propagate to your existing users. For new users it‚Äôll be instantaneous!
						Node:
						(type) c
						(layer)2
							Element:p
								Follow the below steps for integration
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											iOS
									Node:
									(type) c
									(layer)3
										Element:p
											To get started with Taplytics on iOS, first integrate your app with the Taplytics
										Element:a
											iOS
											library. To get the API key,
										Element:a
											login
											to your account, select the App on the top left then click into the Settings menu on the left side. If you want to set up Push Notifications click on the Push Notification tab in their UI and
										Element:a
											follow the instructions
											. Finally, you want to ensure you have configured your app delegate to
										Element:a
											enable push notifications
											.
									Node:
									(type) c
									(layer)3
										Element:p
											If you want to set up deep linking, just follow
										Element:a
											this section of their docs!
									Node:
									(type) c
									(layer)3
										Element:p
											For more information about setting up Taplytics on iOS, see their
										Element:a
											docs
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Android
									Node:
									(type) c
									(layer)3
										Element:p
											To get up and running with Taplytics on Android, there a couple of steps we will walk you through. You first want to ensure that you‚Äôve integrated your mobile app with our
										Element:a
											Android
											library.
									Node:
									(type) c
									(layer)3
										Element:p
											To enable its full functionality (like Push Notifications, Deep linking), there are a couple of extra steps that you have to take care of in your Android app.
										Element:a
											This document explains how to set up Push Notifications
											and
										Element:a
											ths one explains how to set up deep linking
											.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Identify
						Node:
						(type) c
						(layer)2
							Element:p
								Use
							Element:a
								Identify
								to track user specific attributes. It equivalent to tracking
							Element:a
								user attributes
								on Taplytics. Taplytics supports traits supported by Segment as well as custom traits. If you set traits.id, we set that as the Unique ID for that user.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Track
						Node:
						(type) c
						(layer)2
							Element:p
								Use
							Element:a
								track
								to track events and user behaviour in your app. This will send the event to Taplytics with the associated properties. If you include a
							Element:code
								revenue
								property on your Track call, we‚Äôll call
							Element:code
								logRevenue
								to pass a revenue amount into Taplytics associated with the action. If you include a
							Element:code
								value
								property, we‚Äôll map it to Taplytics amount property when we
							Element:code
								logEvent
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Reset
						Node:
						(type) c
						(layer)2
							Element:p
								If your app supports the ability for a user to logout and login with a new identity, then you‚Äôll need to call reset in your mobile app. Here we will call Taplytic‚Äôs resetUser implementation to ensure the user information remains consistent.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Supported Sources and Connection Modes
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
							Element:th
								Web
							Element:th
								Mobile
							Element:th
								Server
							Element:tr
							Element:td
								üì± Device-based
							Element:td
								‚úÖ
							Element:td
							Element:td
							Element:tr
							Element:td
								‚òÅÔ∏è Cloud-based
							Element:td
							Element:td
							Element:td
						Node:
						(type) c
						(layer)2
							Element:p
								To learn more about about Connection Modes and what dictates which we support,
							Element:a
								see here
								.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Settings
						Node:
						(type) c
						(layer)2
							Element:p
								Segment lets you change these integration settings via your Segment dashboard without having to touch any code.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											API Key
									Node:
									(type) c
									(layer)3
										Element:p
											You can find your API Key under
										Element:strong
											Project Settings
											in the upper-left of the
										Element:a
											Taplytics interface
											.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Delay Load (iOS)
									Node:
									(type) c
									(layer)3
										Element:p
											Seconds to keep showing the splash screen until the experiments are loaded. Used for when running an experiment on the first page of the app.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Enable Live Update (Android)
									Node:
									(type) c
									(layer)3
										Element:p
											This will automatically flag this device as a dev device and make a socket connection to the server for testing experiments and variations live.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Push Sandbox (iOS)
									Node:
									(type) c
									(layer)3
										Element:p
											Configures whether the push token for the device is a production token or if it is a development token.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Background Session Time
									Node:
									(type) c
									(layer)3
										Element:p
											This will control the amount of time the app can be in background before a session is ended.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Enable Shake Menu (iOS)
									Node:
									(type) c
									(layer)3
										Element:p
											This will control whether the in-app Shake Menu is enabled or not.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Enable Shake Menu (Android)
									Node:
									(type) c
									(layer)3
										Element:p
											This will control whether the in-app Shake Menu is enabled or not.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Enable Turn Menu (Android)
									Node:
									(type) c
									(layer)3
										Element:p
											This is an alternative method of accessing the shake menu, useful for emulators that do not have such a capability. When enabled, turning the device three times will bring up the menu.
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:p
											If you have any questions or see anywhere we can improve our documentation, please
										Element:a
											let us know
											or kick off a conversation in the
										Element:a
											Segment Community
											!
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:i
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
									Node:
									(type) c
									(layer)3
										Element:span
											Check out the code!
									Node:
									(type) c
									(layer)3
										Element:a
											browser
