Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Facebook Ads Source
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Getting Started
						Node:
						(type) c
						(layer)2
							Element:ol
							Element:li
							Element:p
								From your workspace’s
							Element:code
								/sources
								page, click
							Element:code
								add source
								.
							Element:li
							Element:p
								Choose Facebook Ads.
							Element:li
							Element:p
								Give the source a nickname and a schema name. The nickname will be used to designate the source in the Segment interface, and the schema name is the namespace you’ll be querying against in your warehouse. Both can be whatever you like, but we recommend sticking to something that reflects the source itself, like
							Element:code
								Facebook Ads
								for nickname and
							Element:code
								facebook_ads
								,
							Element:code
								fb_ads
								, or
							Element:code
								fbads_prod
								for the schema name.
							Element:p
							Element:img
							Element:li
							Element:p
								Finally, just click
							Element:strong
								Connect
								on the next page to OAuth into Facebook.
						Node:
						(type) c
						(layer)2
							Element:p
								That’s it!
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Components
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Sync
									Node:
									(type) c
									(layer)3
										Element:p
											Facebook Ads has a sync component, which means we’ll make requests to their API on your behalf on a 3 hour interval to pull the latest data into Segment. In the initial sync, we’ll grab all the Facebook objects (and their corresponding properties) according to the Collections table below. The objects will be written into a separate schema, corresponding to the source instance’s schema name you designated upon creation. For example, if you went with
										Element:code
											fb_ads
											, the
										Element:code
											ads
											collection will be accessible at
										Element:code
											fb_ads.ads
											in SQL.
									Node:
									(type) c
									(layer)3
										Element:p
											Our sync component uses an upsert API, so the data in your warehouse loaded via sync will reflect the latest state of the corresponding resource in Facebook Ads. For example, if
										Element:code
											budget
											from
										Element:code
											0
											to
										Element:code
											100
											between syncs, on its next sync that tickets status will be
										Element:code
											100
											.
									Node:
									(type) c
									(layer)3
										Element:p
											The source syncs and warehouse syncs are independent processes. Source runs pull your data into the Segment Hub, and warehouse runs flush that data to your warehouse. Sources will sync with Segment every 3 hours. Depending on your Warehouses plan, we will push the Source data to your warehouse on the interval associated with your billing plan.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Collections
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								For a complete visual breakdown of the Facebook collections, all their properties, and ID linkages between objects,
							Element:a
								view the visual schema here
								.
						Node:
						(type) c
						(layer)2
							Element:p
								Collections are the groupings of resources we pull from your source. In your warehouse, each collection gets its own table.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Permissions
						Node:
						(type) c
						(layer)2
							Element:p
								If your Facebook user has read permissions to Facebook Ads account’s data, you should be able to use your account for the Source. When setting up your Facebook Ads Source, we’ll show you available ad accounts to choose from.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
								Collection
							Element:th
								Type
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								ad_accounts
							Element:td
								object
							Element:td
								An ad account is an account used to manage ads on Facebook
							Element:tr
							Element:td
								ad_sets
							Element:td
								object
							Element:td
								An ad set is a group of ads that share the same daily or lifetime budget, schedule, bid type, bid info, and targeting data
							Element:tr
							Element:td
								ads
							Element:td
								object
							Element:td
								An ad object contains the data necessary to visually display an ad and associate it with a corresponding ad set.
							Element:tr
							Element:td
								campaigns
							Element:td
								object
							Element:td
								A campaign is a grouping of ad sets which are organized by the same business objective.
							Element:tr
							Element:td
								insights
							Element:td
								object
							Element:td
								Insights contain performance statistics for an ad broken down by day.
						Node:
						(type) c
						(layer)2
							Element:hr
						Node:
						(type) c
						(layer)2
							Element:p
								If you have any questions or see anywhere we can improve our documentation, please
							Element:a
								let us know
								or kick off a conversation in the
							Element:a
								Segment Community
								!
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:span
							Element:span
								Was this document helpful?
							Element:span
							Element:label
							Element:span
								Yes
							Element:label
							Element:span
								No
						Node:
						(type) c
						(layer)2
							Element:i
			Node:
			(type) h1
			(layer)1
				Element:h1
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Overview
				Element:li
				Element:a
					ActiveCampaign
				Element:li
				Element:a
					AMP
				Element:li
				Element:a
					analytics.js
				Element:li
				Element:a
					Android
				Element:li
				Element:a
					Android Wear
				Element:li
				Element:a
					Clojure
				Element:li
				Element:a
					Customer.io
				Element:li
				Element:a
					Drip
				Element:li
				Element:a
					Facebook Ads
				Element:li
				Element:a
					Facebook Lead Ads
				Element:li
				Element:a
					Go
				Element:li
				Element:a
					Google AdWords
				Element:li
				Element:a
					HTTP
				Element:li
				Element:a
					HubSpot
				Element:li
				Element:a
					Intercom
				Element:li
				Element:a
					iOS
				Element:li
				Element:a
					Iterable
				Element:li
				Element:a
					Java
				Element:li
				Element:a
					Klaviyo
				Element:li
				Element:a
					Mailchimp
				Element:li
				Element:a
					Mailjet
				Element:li
				Element:a
					Marketo
				Element:li
				Element:a
					Node
				Element:li
				Element:a
					Nudgespot
				Element:li
				Element:a
					PHP
				Element:li
				Element:a
					Python
				Element:li
				Element:a
					Ruby
				Element:li
				Element:a
					Salesforce
				Element:li
				Element:a
					Selligent
				Element:li
				Element:a
					SendGrid
				Element:li
				Element:a
					Stripe
				Element:li
				Element:a
					Twilio
				Element:li
				Element:a
					Vero
				Element:li
				Element:a
					Xamarin
				Element:li
				Element:a
					Zendesk
				Element:li
				Element:a
					.NET
