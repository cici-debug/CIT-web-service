Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
								Interface information
						Node:
						(type) c
						(layer)2
							Element:p
								The REST API (Representational State Transfer Application Programming Interface) enables quick and easy access to tyntec’s messaging platform. The communication is established via HTTPS (Hypertext Transfer Protocol Secure) connections. The exchanged object types are either JSON (JavaScript Object Notation) or XML (Extensible Markup Language). tyntec accepts “application/json” or “application/xml” as “Content-Type” (and “charset=utf-8”) in the HTTP header. tyntec’s application automatically detects the object type of the request and responds accordingly, i.e., tyntec replies to a request containing a JSON object with a response containing a JSON object; tyntec’s application reacts similarly to XML objects. The “Accept” parameter can override the default response object type by tyntec’s application, e.g. the request can be a JSON object and tyntec’s response will be a XML object for “Content-Type: application/json; Accept: application/xml”.
						Node:
						(type) c
						(layer)2
							Element:p
								All of tyntec’s SMS services are accessible through the base URL (Unique Resource Location) (${baseURL}):
						Node:
						(type) c
						(layer)2
							Element:pre
								https://rest.tyntec.com/sms/v1/
						Node:
						(type) c
						(layer)2
							Element:p
								Authentication is done during the setup of the REST API connection.
						Node:
						(type) c
						(layer)2
							Element:p
								tyntec will provide a username (${username}) and password (${password}) to grant access to the services:
						Node:
						(type) c
						(layer)2
							Element:pre
								https://${username}:${password}@rest.tyntec.com/sms/v1/
						Node:
						(type) c
						(layer)2
							Element:p
							Element:span
								The Base64-encoded combination "${username}:${password}" is used as an authentication-token for the Basic HTTP authentication and can also be given in the HTTP header:
						Node:
						(type) c
						(layer)2
							Element:pre
								Authorization: Basic ${authentication-token}
						Node:
						(type) c
						(layer)2
							Element:p
						Node:
						(type) c
						(layer)2
							Element:center
							Element:ul
							Element:li
							Element:a
								Contact
							Element:li
							Element:a
								Imprint
							Element:li
							Element:a
								Disclaimer
