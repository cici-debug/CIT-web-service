Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
				Element:a
					Main: GettingStarted
			Node:
			(type) c
			(layer)1
				Element:p
					The Katana Social Analytics Engine measures the value of social contributions in applications and games, provides detailed projections for the outcomes that matter to developers, and offers the tools to determine how effectively features facilitate engagement and social interaction.
			Node:
			(type) c
			(layer)1
				Element:p
					For better metrics and clearer insight follow these steps to implement the Katana Analytics API:
			Node:
			(type) c
			(layer)1
				Element:dl
				Element:dd
				Element:span
					Step 1: Getting Started - Get started by learning how to initialize the Katana API for your app.
				Element:span
					Step 2:
				Element:a
					Quick Start Guide
					- Get up and running fast with this quick guide that takes you beyond basic metrics.
				Element:span
					Step 3:
				Element:a
					Advanced Setup Guide
					- Get the complete experience with this guide, designed to optimize your data and get the most out of Katana Analytics.
			Node:
			(type) c
			(layer)1
				Element:p
					Follow the steps outlined below to initialize the Katana Analytics API for either Android, iOS, JavaScript or PHP. Once you’re done here, continue on to discover how to execute calls to begin logging events.
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
				Element:p
				Element:big
					Android
			Node:
			(type) c
			(layer)1
				Element:p
					To get started with Android, you’ll need to include our Android library, the jar file (kapi.jar), into your project lib folder, add it to your build path, and initialize a fresh tracking object to initialize the API. Note that the calls to the Katana Android library are asynchronous.
			Node:
			(type) c
			(layer)1
				Element:p
					To initialize the API using Android
			Node:
			(type) c
			(layer)1
				Element:ol
				Element:li
					Grab the latest version of the Katana Android Library:
				Element:a
					https://bitbucket.org/ninja_metrics/kapi-android-lib
				Element:li
					Include the Android library in your source, using: “import com.ninjametrics.kapi.KApi”
				Element:li
					Initialize a fresh tracking object in your source, using: KApi kapi = new KApi (url, clientID, appID, appPassword);
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
				Element:p
				Element:big
					iOS
			Node:
			(type) c
			(layer)1
				Element:p
					To get started with iOS, you’ll need to include our iOS library, the objective---c files (kApi.h and kApi.m), into your iOS environment, and initialize a fresh tracking object to initialize the API. Note that the calls to the Katana iOS library are asynchronous.
			Node:
			(type) c
			(layer)1
				Element:p
					To initialize the API using iOS
			Node:
			(type) c
			(layer)1
				Element:ol
				Element:li
					Grab the latest version of the Katana iOS Library:
				Element:a
					https://bitbucket.org/ninja_metrics/kapi-ios-lib
				Element:li
					Include the iOS library in your source, using: #import “kAPI.h”
				Element:li
					Initialize a fresh tracking object in your source, using: kAPI *api = [[kAPI alloc] clientID, appID, appPassword];
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
				Element:p
				Element:big
					JavaScript
			Node:
			(type) c
			(layer)1
				Element:p
					To get started with JavaScript, you’ll need to include our JavaScript library and initialize a fresh tracking object to initialize the API and integrate our JavaScript library into your HTML5 or ActionScript based web app. Note that the Katana JavaScript library makes use of asynchronous POST requests through Cross-Origin Resource Sharing (CORS) to make sure event tracking doesn’t block any of your business logic.
			Node:
			(type) c
			(layer)1
				Element:p
					To initialize the API using JavaScript
			Node:
			(type) c
			(layer)1
				Element:ol
				Element:li
					Grab one of the following JavaScript libraries:
				Element:a
					Katana JavaScript Library
					,
				Element:a
					Standard JavaScript Library
					.
				Element:li
					Include the JavaScript library, using: <script type="text/javascript" src="KApi.js"></script>
				Element:li
					Initialize a fresh tracking object, using: var aKApi= new KApi(yourClientId, yourAppId, yourAppPassword);
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
				Element:p
				Element:big
					PHP
			Node:
			(type) c
			(layer)1
				Element:p
					To get started with PHP, you’ll need to include our PHP library and initialize a fresh tracking object to initialize the API and integrate our library into your PHP environment. The Katana PHP library works with a vanilla instance of a PHP version 5.2+ environment. Note that this class library is blocking, as PHP does not have a good platform-independent means of setting up asynchronous processing queues.
			Node:
			(type) c
			(layer)1
				Element:p
					To initialize the API using PHP
			Node:
			(type) c
			(layer)1
				Element:ol
				Element:li
					Grab the latest version of the Katana PHP Library:
				Element:a
					https://api.ninjametrics.com/KAPI/kAPI.php
				Element:li
					Include the PHP library in your source, using: require_once('KApi.php');
				Element:li
					Initialize a fresh tracking object in your source, using: $aKApi = new KApi($clientId, $appId, $appPassword);
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
				Element:p
					You’re in! Now what? Get up and running faster with the
				Element:a
					Quick Start Guide
					, or get the full experience with the
				Element:a
					Advanced Setup Guide
					. The choice is up to you.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:big
					Developer Notes
			Node:
			(type) c
			(layer)1
				Element:p
					You’ll find that the API documentation outlines the parameters and requirements to log events to the Katana API. For each individual event you'll find an event description, the mandatory and optional parameters to call in JSON, the Katana dashboards and features impacted by logging the event, and a sample use.
			Node:
			(type) c
			(layer)1
				Element:p
					In addition, you’ll also find that the corresponding default values have been listed for each parameter. Where parameters relate to types (e.g. Account Types, Social Event Types), of which there may be many, you may find a list of sample types in Appendix A.
			Node:
			(type) c
			(layer)1
				Element:p
					Note that when referencing parameters, they must be called in the exact order displayed in the table and the sample.
			Node:
			(type) c
			(layer)1
				Element:p
					When ‘Shard ID’ is a required parameter, use 0 if shards are not used or if the event does not have a shard ID. When ‘Character Id’ is a required parameter and the application does not have character IDs the value of the Account_Id should be repeated as the value of the Character_Id. When ‘Country’ is a required parameter, use one of the
				Element:a
					recommended country codes
				Element:a
					?
					from the standardized list, or use a non-standard country code and Katana will convert it to one of the standardized codes based on the nearest probable code.
			Node:
			(type) c
			(layer)1
				Element:p
					Also note that certain initiation and creation events, such as account creation or shard initialization, must be loaded before referencing the event ID in any other logging statements. For those events where this applies, you'll find that this is noted along with the requirements.
			Node:
			(type) c
			(layer)1
				Element:p
					For a complete JSON only request, create a POST request to the appropriate url making sure to set the header Content-Type = "application/json":
			Node:
			(type) c
			(layer)1
				Element:pre
					http://api.ninjametrics.com/event?client_id=1234&app_id=5678&app_pwd=somepassword&api_client=JSON
			Node:
			(type) c
			(layer)1
				Element:p
					The body of the post request format should match one of the JSON event samples found in the
					Retrieved from https://developer.ninjametrics.com/Main/GettingStarted Page last modified on July 15, 2015, at 04:15 PM
				Element:a
					Quick Start Guide
					and
				Element:a
					Advanced Setup Guide
					. In each sample one field that should remain unchanged is the "type" key/value pair, this is the event id.
