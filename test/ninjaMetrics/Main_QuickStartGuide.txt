Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
				Element:a
					Developer Hub
			Node:
			(type) c
			(layer)1
				Element:a
					Main
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Quick Start Guide
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
								Get results faster. Follow the events in this
							Element:em
								Quick Start Guide
								to get your metrics sooner. With these events logged you'll have the essentials in place to obtain beyond basic metrics:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Login (Event ID#1)
							Element:li
							Element:a
								Logout (Event ID#2)
							Element:li
							Element:a
								Social Group Enter(Event ID#4)
							Element:li
							Element:a
								Social Group Exit(Event ID#5)
							Element:li
							Element:a
								Social (Event ID#6)
							Element:li
							Element:a
								Create Account (Event ID#9)
							Element:li
							Element:a
								Initialize Item (Event ID#15)
							Element:li
							Element:a
								Item Used (Event ID#16)
							Element:li
							Element:a
								Message (Event ID#20)
							Element:li
							Element:a
								Player Points (Event ID#24)
							Element:li
							Element:a
								Level Begin (Event ID#27)
							Element:li
							Element:a
								Level End (Event ID#28)
							Element:li
							Element:a
								Enter Area (Event ID#29)
							Element:li
							Element:a
								Exit Area (Event ID#30)
							Element:li
							Element:a
								Buy Store Item (Event ID#37)
							Element:li
							Element:a
								Friend Add (Event ID#43)
							Element:li
							Element:a
								Friend Delete(Event ID#44)
							Element:li
							Element:a
								Traffic Source(Event ID#59)
						Node:
						(type) c
						(layer)2
							Element:p
								Once you have these 18 fundamental events in place move on to the
							Element:a
								Advanced Setup Guide
								to optimize your experience and add even more value.
							Element:span
								*
							Element:a
								Set Virtual Currency (Event ID#14)
							Element:span
								*
							Element:a
								Delete Account (Event ID#10)
							Element:span
								*
							Element:a
								Initialize Shard (Event ID#13)
							Element:span
								*
							Element:a
								Subscription Change (Event ID#3)
							Element:span
								*
							Element:a
								Item Transaction (Event ID#17)
							Element:span
								*
							Element:a
								Currency Transaction (Event ID#18)
							Element:span
								*
							Element:a
								Non-Player Character (NPC) (Event ID#31)
							Element:span
								*
							Element:a
								Recruitment Send (Event ID#33)
							Element:span
								*
							Element:a
								Recruitment Receive Action (Event ID#34)
						Node:
						(type) c
						(layer)2
							Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Login (Event ID#1)
													Element:a
												Node:
												(type) c
												(layer)4
													Element:p
														This event records the time at which the user logged into the system (website, game, software, etc.). To log a login event, you need to pass the user's account ID, character ID, platform, and timestamp. Optionally, you may pass the shard ID, and login area name and ID.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Impacted UI Features
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														KPI
													Element:li
														System Metrics (Items, Location/Maps, NPC, Social)
													Element:li
														User Metrics (Churn, Farming, Integrity)
													Element:li
														Basic Package (Summary)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														String
													Element:td
														account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														character_id
													Element:td
														account_id
													Element:tr
													Element:td
														Long
													Element:td
														shard_id
													Element:td
														0
													Element:tr
													Element:td
														String
													Element:td
														platform
													Element:td
														Other
													Element:tr
													Element:td
														Long
													Element:td
														area_id
													Element:td
														Null
													Element:tr
													Element:td
														String
													Element:td
														area_name
													Element:td
														Null
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user logs in
													Element:br
														public void
													Element:em
														aKApi.
														logLogin(timestamp, account_id, character_id, shard_id, platform, area_id, area_name);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user logs in
													Element:br
													Element:em
														aKApi.
														logLogin(timestamp, account_id, character_id, shard_id, platform, area_id, area_name);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user logs in
													Element:br
													Element:em
														$aKApi->
														logLogin(timestamp, account_id, character_id, shard_id, platform, area_id, area_name);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user logs in
													Element:br
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "timestamp":"2013-11-14T13:43:06.308Z", "data":{ "type":1, "account_id":"cool_guy@example.com", "character_id":"Wizard", "shard_id":42, "platform":"Facebook Mobile", "area_id":0, "area_name":0 } }
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: All parameters are required in JSON, except “shard_id”, “area_id” and “area_name” which are optional.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Logout (Event ID#2)
													Element:a
												Node:
												(type) c
												(layer)4
													Element:p
														This event records the time at which the user logged out of the system (website, game, software, etc.). To log a logout event, you need to pass the user's account ID, character ID, and timestamp.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Impacted UI Features
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														KPI
													Element:li
														User Metrics (Churn, Farming, Integrity)
													Element:li
														Basic Package (Summary)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														String
													Element:td
														account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														character_id
													Element:td
														account_id
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user logs out
													Element:br
														public void
													Element:em
														aKApi.
														logLogout(timestamp, account_id, character_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user logs out
													Element:br
													Element:em
														aKApi.
														logLogout(timestamp, account_id, character_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user logs out
													Element:br
													Element:em
														$aKApi
														->logLogout(timestamp, account_id, character_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user logs out
													Element:br
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "timestamp":"2013-11-14T13:51:53.035Z", "data":{ "type":2, "account_id":"cool_guy@example.com", "character_id":"Wizard" } }
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: All parameters are required in JSON.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Social Group Enter (Event ID#4)
													Element:a
												Node:
												(type) c
												(layer)4
													Element:p
														This event records the time at which a user joins a group. In this case, groups are likely to be impermanent. Note that grouping is not applicable for solo games. To log a user's entry into a group you need to pass the account, character, and group IDs; the character level, and timestamp of entry. Optionally, you may pass the shard ID.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Impacted UI Features
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														System Metrics (Social)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														String
													Element:td
														account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														character_id
													Element:td
														account_id
													Element:tr
													Element:td
														Long
													Element:td
														character_lvl
													Element:td
														0
													Element:tr
													Element:td
														Long
													Element:td
														shard_id
													Element:td
														0
													Element:tr
													Element:td
														Long
													Element:td
														group_id
													Element:td
													Element:em
														No Default Value
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user enters a group
													Element:br
														public void
													Element:em
														aKApi
														.logEnterGroup(timestamp, account_id, character_id, character_lvl, shard_id, group_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user enters a group
													Element:br
													Element:em
														aKApi
														.logEnterGroup(timestamp, account_id, character_id, character_lvl, shard_id, group_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user enters a group
													Element:br
													Element:em
														$aKApi
														->logEnterGroup(timestamp, account_id, character_id, character_lvl, shard_id, group_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user enters a group
													Element:br
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "timestamp":"2013-11-14T14:10:36.792Z", "data":{ "type":4, "account_id":"cool_guy@example.com", "character_id":"wizard", "character_lvl":50, "shard_id":42, "group_id":42 } }
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: All parameters are required in JSON, except “shard_id” which is optional.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Social Group Exit (Event ID#5)
													Element:a
												Node:
												(type) c
												(layer)4
													Element:p
														This event records the time at which a user leaves a group. To log a user's exit from a group you need to pass the account, character, and group IDs; the character level; and timestamp of exit. Optionally, you may pass the shard ID>
												Node:
												(type) c
												(layer)4
													Element:p
														For related information, see
													Element:a
														Group Enter
														.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Impacted UI Features
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														System Metrics (Social)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														String
													Element:td
														account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														character_id
													Element:td
														account_id
													Element:tr
													Element:td
														Long
													Element:td
														character_lvl
													Element:td
														0
													Element:tr
													Element:td
														Long
													Element:td
														shard_id
													Element:td
														0
													Element:tr
													Element:td
														Long
													Element:td
														group_id
													Element:td
													Element:em
														No Default Value
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user exits a group
													Element:br
														public void
													Element:em
														aKApi
														.logExitGroup(timestamp, account_id, character_id, character_lvl, shard_id, group_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user exits a group
													Element:br
													Element:em
														aKApi
														.logExitGroup(timestamp, account_id, character_id, character_lvl, shard_id, group_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user exits a group
													Element:br
													Element:em
														$aKApi
														->logExitGroup(timestamp, account_id, character_id, character_lvl, shard_id, group_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user exits a group
													Element:br
														{
												Node:
												(type) c
												(layer)4
													Element:pre
														"timestamp":"2013-11-14T14:16:15.375Z", "data":{ "type":5, "account_id":"cool_guy@example.com", "character_id":"Wizard", "character_lvl":50, "shard_id":42, "group_id":42 } }
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: All parameters are required in JSON, except “shard_id” which is optional.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Social (Event ID#6)
													Element:a
												Node:
												(type) c
												(layer)4
													Element:p
														This event records social events involving two people and includes all social events that are not covered as
													Element:em
														Group (Entry/Exit) Events
														or
													Element:em
														Friend (Addition/Deletion) Events
														. To log an in-app social event, you need to pass the sender account and character IDs; the receiver account and character IDs; the character levels of both users; the social event name and type; and the timestamp. Optionally, you may pass the shard ID.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Impacted UI Features
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														KPI
													Element:li
														System Metrics (Social)
													Element:li
														Basic Package (Summary)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														String
													Element:td
														sender_account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														sender_character_id
													Element:td
														sender_account_id
													Element:tr
													Element:td
														Long
													Element:td
														sender_character_level
													Element:td
														If Generic Character then Account Level; If no concept of levels then 0.
													Element:tr
													Element:td
														String
													Element:td
														receiver_account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														receiver_character_id
													Element:td
														receiver_account_id
													Element:tr
													Element:td
														Long
													Element:td
														receiver_character_level
													Element:td
														If Generic Character then Account Level; If no concept of levels then 0.
													Element:tr
													Element:td
														Long
													Element:td
														shard_id
													Element:td
														0
													Element:tr
													Element:td
														String
													Element:td
														social_event_name
													Element:td
														"No Default Value''
													Element:tr
													Element:td
														String
													Element:td
														social_event_type
													Element:td
														Other
													Element:a
														(See Appendix for more types)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log an in-app social event
													Element:br
														public void
													Element:em
														aKApi.
														logSocialEvent(timestamp, sender_account_id, sender_character_id, sender_character_level, receiver_account_id, receiver_character_id, receiver_character_level, shard_id, social_event_name, social_event_type);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log an in-app social event
													Element:br
													Element:em
														aKApi.
														logSocialEvent(timestamp, sender_account_id, sender_character_id, sender_character_level, receiver_account_id, receiver_character_id, receiver_character_level, shard_id, social_event_name, social_event_type);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
														//Log an in-app social event
													Element:br
													Element:em
														$aKApi->
														logSocialEvent(timestamp, sender_account_id, sender_character_id, sender_character_level, receiver_account_id, receiver_character_id, receiver_character_level, shard_id, social_event_name, social_event_type);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log an in-app social event
													Element:br
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "timestamp":"2013-11-14T14:28:54.832Z", "data":{ "type":6, "sender_account_id":"cool_guy@example.com", "sender_character_id":"sharer", "sender_character_level":1, "receiver_account_id":"cool_guy1@example.com", "receiver_character_id":"advertiser", "receiver_character_level":1, "shard_id":42, "social_event_name":"rebate_share", "social_event_type":"share" } }
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: All parameters are required in JSON, except “shard_id” which is optional.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Create Account (Event ID#9)
													Element:a
												Node:
												(type) c
												(layer)4
													Element:p
														This event records information regarding the creation of a new account, including the user's demographics. To log the creation of an account you need to pass the account ID and type; the user's language, country, gender, and date of birth; as well as the platform and the timestamp. Optionally, you may pass their currency balance and old account ID.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Note
														: You must log the account creation information before any log or load command references the account ID.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Impacted UI Features
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														KPI
													Element:li
														User Metrics (Churn, Farming, Integrity)
													Element:li
														Basic Package (Summary)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														String
													Element:td
														account_id
													Element:td
														"No Default Value"
													Element:tr
													Element:td
														String
													Element:td
														account_sub_type
													Element:td
														Free
													Element:tr
													Element:td
														String
													Element:td
														account_lang
													Element:td
														N0
													Element:tr
													Element:td
														String
													Element:td
														account_country
													Element:td
														N0
													Element:tr
													Element:td
														String
													Element:td
														account_gender
													Element:td
														N
													Element:tr
													Element:td
														Date
													Element:td
														account_dob
													Element:td
														"1900-01-01T00:00:00.000Z"
													Element:tr
													Element:td
														Float
													Element:td
														account_currency_balance
													Element:td
														0
													Element:tr
													Element:td
														String
													Element:td
														platform
													Element:td
														Other
													Element:tr
													Element:td
														String
													Element:td
														old_account_id
													Element:td
														Null
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user creates an account
													Element:br
														public void aKApi.loadAccountCreate(timestamp, account_id, account_sub_type, account_lang, account_country, account_gender, account_dob, platform, account_currency_balance, old_account_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user creates an account
													Element:br
													Element:em
														aKApi.
														loadAccountCreate(timestamp, account_id, account_sub_type, account_lang, account_country, account_gender, account_dob, platform, account_currency_balance, old_account_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user creates an account
													Element:br
													Element:em
														$aKApi->
														loadAccountCreate(timestamp, account_id, account_sub_type, account_lang, account_country, account_gender, account_dob, platform, account_currency_balance, old_account_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a user creates an account
													Element:br
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "timestamp":"2013-11-14T15:18:30.726Z", "data":{ "type":9, "account_id":"cool_guy@example.com", "account_sub_type":"Free", "account_lang":"NA", "account_country":"de", "account_gender":"N", "account_dob":"1900-01-01T00:00:00.000Z", "account_currency_balance":55, "platform":"Social", "old_account_id":"small_cat@example.com" } }
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: All parameters are required in JSON, except “account_currency_balance_” and “old_account_id” which are optional.
												Node:
												(type) c
												(layer)4
													Element:p
														Gender accepted params: ["M", "F", "T", "N"]
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Initialize Item (Event ID#15)
													Element:a
												Node:
												(type) c
												(layer)4
													Element:p
														This event records information regarding virtual items in the game. Such items may be made available by non-player characters, or they may be created by players in the game. Initializing an item also initializes the dimension table for the item, which is later referred to for all other item related events. To initialize an item, you need to pass the item ID, name, type, and segment, as well as the timestamp. Optionally, you may pass the account and character IDs of the creator.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Note
														: You must log the item creation information before any log or load command references the item ID.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Impacted UI Features
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														KPI
													Element:li
														System Metrics (Items)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														Long
													Element:td
														item_id
													Element:td
														0
													Element:tr
													Element:td
														String
													Element:td
														item_name
													Element:td
														NA
													Element:tr
													Element:td
														String
													Element:td
														item_type
													Element:td
														Other
													Element:a
														(See Appendix for more types)
													Element:tr
													Element:td
														String
													Element:td
														item_segment
													Element:td
														"UGC or INGAME"
													Element:tr
													Element:td
														String
													Element:td
														account_id
													Element:td
														If ITEM_SEGMENT=UGC, then Required.
													Element:tr
													Element:td
														String
													Element:td
														character_id
													Element:td
														If ITEM_SEGMENT=UGC, then account_id
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log item creation information
													Element:br
														public void
													Element:em
														aKApi.
														loadInitItem(timestamp, item_id, item_name, item_type, item_segment, account_id, character_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log item creation information
													Element:br
													Element:em
														aKApi
														.loadInitItem(timestamp, item_id, item_name, item_type, item_segment, account_id, character_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
														//Log item creation information
													Element:br
													Element:em
														$aKApi->
														loadInitItem(timestamp, item_id, item_name, item_type, item_segment, account_id, character_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log item creation information
													Element:br
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "timestamp":"2013-11-14T17:11:33.720Z", "data":{ "type":15, "item_id":66, "item_name":"the big blaster gun", "item_type":"weapon", "item_segment":"UGC", "account_id":"cool_guy@example.com", "character_id":"Wizard" }
												Node:
												(type) c
												(layer)4
													Element:p
														}
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: All parameters are required in JSON, except “account_id” and “character_id” which are optional.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Item Used (Event ID#16)
													Element:a
												Node:
												(type) c
												(layer)4
													Element:p
														This event records information regarding the usage of items in the game, such as the usage location, and includes account and character information for the user who used the item. To log an item's use, you need to pass the account and character IDs; the character level; the item ID, name, and count; the area ID, name, and position; as well as the timestamp. Optionally, you may pass the shard ID.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Impacted UI Features
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														KPI
													Element:li
														System Metrics (Items)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														String
													Element:td
														account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														character_id
													Element:td
														account_id
													Element:tr
													Element:td
														Long
													Element:td
														character_lvl
													Element:td
														If Generic Character then Account Level; If no concept of levels then 0.
													Element:tr
													Element:td
														Long
													Element:td
														shard_id
													Element:td
														0
													Element:tr
													Element:td
														Long
													Element:td
														item_id
													Element:td
														If ITEM_ID is empty and ITEM_NAME is not empty, use 0.
													Element:tr
													Element:td
														String
													Element:td
														item_name
													Element:td
														If ITEM_ID is not empty and ITEM_NAME is empty, use NA.
													Element:tr
													Element:td
														Integer
													Element:td
														item_count
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														Long
													Element:td
														area_id
													Element:td
														0
													Element:tr
													Element:td
														String
													Element:td
														area_name
													Element:td
														NA
													Element:tr
													Element:td
														Float
													Element:td
														position_x
													Element:td
														0
													Element:tr
													Element:td
														Float
													Element:td
														position_y
													Element:td
														0
													Element:tr
													Element:td
														Float
													Element:td
														position_z
													Element:td
														0
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log that an item was used
													Element:br
														public void
													Element:em
														aKApi.
														logItem(timestamp, account_id, character_id, character_lvl, shard_id,item_id, item_name, item_count, area_id, area_name, position_x, position_y, position_z);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log that an item was used
													Element:br
													Element:em
														aKApi.
														logItem(timestamp, account_id, character_id, character_lvl, shard_id,item_id, item_name, item_count, area_id, area_name, position_x, position_y, position_z);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
													Element:em
														//Log that an item was used
														$aKApi->''logItem(timestamp, account_id, character_id, character_lvl, shard_id, item_id, item_name, item_count, area_id, area_name, position_x, position_y, position_z);
													Element:br
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log that an item was used
													Element:br
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "timestamp":"2013-11-14T17:42:49.185Z", "data":{ "type":16, "account_id":"cool_guy@example.com", "character_id":"wizard", "character_lvl":52, "shard_id":42, "item_id":66, "item_name":"The Blaster Gun", "item_count":1, "area_id":42, "area_name":"Area_Name", "position_x":678, "position_y":231, "position_z":517 } }
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: All parameters are required in JSON, except “shard_id” which is optional.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Message (Event ID#20)
													Element:a
												Node:
												(type) c
												(layer)4
													Element:p
														This event records in-game messages between players for multiple channels of communication such as in-game chat, in-game mail, or a message broadcast to a group. To log an in-game message, you need to pass the sender account and character IDs; the receiver account and character IDs; the channel label; the message character count; and the timestamp. Optionally, you may pass the shard ID and the message description.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Impacted UI Features
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														System Metrics (Levels)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														String
													Element:td
														sender_account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														sender_character_id
													Element:td
														sender_account_id
													Element:tr
													Element:td
														String
													Element:td
														receiver_account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														receiver_character_id
													Element:td
														receiver_account_id
													Element:tr
													Element:td
														Long
													Element:td
														shard_id
													Element:td
														0
													Element:tr
													Element:td
														String
													Element:td
														message_ch_label
													Element:td
														Other
													Element:a
														(See Appendix for more types)
													Element:tr
													Element:td
														String
													Element:td
														message_desc
													Element:td
														Null
													Element:tr
													Element:td
														Long
													Element:td
														message_char_count
													Element:td
														1
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log an in-game message
													Element:br
														public void
													Element:em
														aKApi.
														logMessage(timestamp, sender_account_id, sender_character_id, receiver_account_id, receiver_character_id, shard_id, message_ch_label, message_desc, message_char_count);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log an in-game message
													Element:br
													Element:em
														aKApi.
														logMessage(timestamp, sender_account_id, sender_character_id, receiver_account_id, receiver_character_id, shard_id, message_ch_label, message_desc, message_char_count);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
														//Log an in-game message
													Element:br
														$aKApi->logMessage(timestamp, sender_account_id, sender_character_id, receiver_account_id, receiver_character_id, shard_id, message_ch_label, message_desc, message_char_count);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log an in-game message
													Element:br
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "timestamp":"2013-11-14T18:46:02.842Z", "data":{ "type":20, "sender_account_id":"cool_guy@example.com", "sender_character_id":"Wizard", "receiver_account_id":"cool_guy@example.com", "receiver_character_id":"Wizard", "shard_id":0, "message_ch_label":"Group:Pre-Defined", "message_desc":"A guild chat message", "message_char_count":140 } }
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: All parameters are required in JSON, except “shard_id” and “message_desc” which are optional.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Player Points (Event ID#24)
													Element:a
												Node:
												(type) c
												(layer)4
													Element:p
														This event records information regarding when a player gains points in the game. Points are used as an indicator of how well the player is doing in the game and how far they have progressed. Typically, gaining enough points leads the player to level-up to a higher level. To log player points, you need to pass the account and character IDs, the character level, the point amount and type, along with the timestamp. Optionally, you may pass the shard ID and whether or not the points are grouped.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Impacted UI Features
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														System Metrics (Levels)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														String
													Element:td
														account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														character_id
													Element:td
														account_id
													Element:tr
													Element:td
														Long
													Element:td
														character_lvl
													Element:td
														If Generic Character then Account Level; If no concept of Levels then 0.
													Element:tr
													Element:td
														Long
													Element:td
														shard_id
													Element:td
														0
													Element:tr
													Element:td
														Long
													Element:td
														point_type
													Element:td
														Default = XP, {XP, GENERIC_POINTS, OTHER}
													Element:tr
													Element:td
														Long
													Element:td
														xp_amount
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														Boolean
													Element:td
														grouped_flag
													Element:td
														N
												Node:
												(type) c
												(layer)4
													Element:p
													Element:span
														*Point Type default is XP, alternate options include 'Generic Point', and 'Other'.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log player XP
													Element:br
														public void
													Element:em
														aKApi.
														playerXp(timestamp, account_id, character_id, character_lvl, shard_id, point_type, xp_amount, grouped_flag);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log player XP
													Element:br
													Element:em
														aKApi.
														playerXp(timestamp, account_id, character_id, character_lvl, shard_id, point_type, xp_amount, grouped_flag);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
														//Log player XP
													Element:br
													Element:em
														$aKApi->
														playerXp(timestamp, account_id, character_id, character_lvl, shard_id, point_type, xp_amount, grouped_flag);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log player XP
													Element:br
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "timestamp":"2013-11-15T13:17:01.847Z", "data":{ "type":24, "account_id":"cool_guy@example.com", "character_id":"Wizard", "character_lvl":1, "shard_id":42, "point_type":"XP" "xp_amount":34, "grouped_flag":"Y" } }
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: All parameters are required in JSON, except “shard_id” and “grouped_flag” which are optional.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Level Begin (Event ID#27)
													Element:a
												Node:
												(type) c
												(layer)4
													Element:p
														This event records information regarding the time at which a player begins a level. To log when a player begins a level, you need to pass the account and character ID, the character level, the area ID and name, the position, and the timestamp. Optionally, you may pass the shard ID.
												Node:
												(type) c
												(layer)4
													Element:p
														Note that if there is no concept of levels in your application this event need not be used.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Impacted UI Features
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														KPI
													Element:li
														System Metrics (Levels)
													Element:li
														User Metrics (Churn)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														String
													Element:td
														account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														character_id
													Element:td
														account_id
													Element:tr
													Element:td
														Long
													Element:td
														character_lvl
													Element:td
														If Generic Character then Account Level.
													Element:tr
													Element:td
														Long
													Element:td
														shard_id
													Element:td
														0
													Element:tr
													Element:td
														Long
													Element:td
														area_id
													Element:td
														0
													Element:tr
													Element:td
														Float
													Element:td
														position_x
													Element:td
														0
													Element:tr
													Element:td
														Float
													Element:td
														position_y
													Element:td
														0
													Element:tr
													Element:td
														Float
													Element:td
														position_z
													Element:td
														0
													Element:tr
													Element:td
														String
													Element:td
														area_name
													Element:td
														NA
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player begins a level
													Element:br
														public void
													Element:em
														aKApi.
														levelBegin(timestamp, account_id, character_id, character_lvl, shard_id, area_id, position_x, position_y, position_z, area_name);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player begins a level
													Element:br
													Element:em
														aKApi.
														levelBegin(timestamp, account_id, character_id, character_lvl, shard_id, area_id, position_x, position_y, position_z, area_name);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player begins a level
													Element:br
													Element:em
														$aKApi->
														levelBegin(timestamp, account_id, character_id, character_lvl, shard_id, area_id, position_x, position_y, position_z, area_name);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player begins a level
													Element:br
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "timestamp":"2013-11-15T13:41:08.559Z", "data":{ "type":27, "account_id":"cool_guy@example.com", "character_id":"Wizard", "character_lvl":52, "shard_id":42, "area_id":2, "position_x":678, "position_y":231, "position_z":517, "area_name":"Area_Name" } }
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: All parameters are required in JSON, except “shard_id” which is optional.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Level End (Event ID#28)
													Element:a
												Node:
												(type) c
												(layer)4
													Element:p
														This event records information regarding the time at which a player ends or completes a level. To log when a player ends a level, you need to pass the account and character ID, the character level, the area ID and name, the position, and the timestamp. Optionally, you may pass the shard ID.
												Node:
												(type) c
												(layer)4
													Element:p
														Note that if there is no concept of levels in your application this event need not be used.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Impacted UI Features
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														KPI
													Element:li
														System Metrics (Levels)
													Element:li
														User Metrics (Churn)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														String
													Element:td
														account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														character_id
													Element:td
														account_id
													Element:tr
													Element:td
														Long
													Element:td
														character_lvl
													Element:td
														If Generic Character then Account Level.
													Element:tr
													Element:td
														Long
													Element:td
														shard_id
													Element:td
														0
													Element:tr
													Element:td
														Long
													Element:td
														area_id
													Element:td
														0
													Element:tr
													Element:td
														Float
													Element:td
														position_x
													Element:td
														0
													Element:tr
													Element:td
														Float
													Element:td
														position_y
													Element:td
														0
													Element:tr
													Element:td
														Float
													Element:td
														position_z
													Element:td
														0
													Element:tr
													Element:td
														String
													Element:td
														area_name
													Element:td
														NA
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player begins a level
													Element:br
														public void
													Element:em
														aKApi.
														levelBegin(timestamp, account_id, character_id, character_lvl, shard_id, area_id, position_x, position_y, position_z, area_name);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player begins a level
													Element:br
													Element:em
														aKApi.
														levelBegin(timestamp, account_id, character_id, character_lvl, shard_id, area_id, position_x, position_y, position_z, area_name);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player begins a level
													Element:br
													Element:em
														$aKApi->
														levelBegin(timestamp, account_id, character_id, character_lvl, shard_id, area_id, position_x, position_y, position_z, area_name);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player ends a level
													Element:br
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "timestamp":"2013-11-15T13:50:42.553Z", "data":{ "type":28, "account_id":"cool_guy@example.com", "character_id":"Wizard", "character_lvl":52, "shard_id":42, "area_id":2, "position_x":678, "position_y":231, "position_z":517, "area_name":"Area_Name" } }
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: All parameters are required in JSON, except “shard_id” which is optional.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Enter Area (Event ID#29)
													Element:a
												Node:
												(type) c
												(layer)4
													Element:p
														An Area refers to a geographical area or region that makes up a larger virtual world. This event records information regarding the time at which a player enters an area. To log when a player enters an area, you need to pass the account and character IDs; area ID, level, and position; and the timestamp. Optionally, you may pass the shard ID.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Impacted UI Features
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														KPI - Optional
													Element:li
														System Metrics (Location/Maps)
													Element:li
														User Metrics (Farming)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														String
													Element:td
														account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														character_id
													Element:td
														account_id
													Element:tr
													Element:td
														Long
													Element:td
														character_lvl
													Element:td
														0
													Element:tr
													Element:td
														Long
													Element:td
														shard_id
													Element:td
														0
													Element:tr
													Element:td
														Long
													Element:td
														area_id
													Element:td
														If AREA_ID is not empty, and AREA_NAME is empty, set AREA_NAME=NA.
													Element:tr
													Element:td
														Float
													Element:td
														position_x
													Element:td
														0
													Element:tr
													Element:td
														Float
													Element:td
														position_y
													Element:td
														0
													Element:tr
													Element:td
														Float
													Element:td
														position_z
													Element:td
														0
													Element:tr
													Element:td
														String
													Element:td
														area_name
													Element:td
														If AREA_ID is not empty, and AREA_NAME is empty, set AREA_NAME=NA.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player enters an area
													Element:br
														public void
													Element:em
														aKApi.log
														AreaEnter(timestamp, account_id, character_id, character_lvl, shard_id, area_id, position_x, position_y, position_z, area_name);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player enters an area
													Element:br
													Element:em
														aKApi.log
														AreaEnter(timestamp, account_id, character_id, character_lvl, shard_id, area_id, position_x, position_y, position_z, area_name)
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player enters an area
													Element:br
													Element:em
														$aKApi->log
														AreaEnter(timestamp, account_id, character_id, character_lvl, shard_id, area_id, position_x, position_y, position_z, area_name)
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player enters an area
													Element:br
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "timestamp":"2013-11-15T14:04:32.369Z", "data":{ "type":29, "account_id":"cool_guy@example.com", "character_id":"wizard", "character_lvl":52, "shard_id":42, "area_id":200, "position_x":678, "position_y":231, "position_z":517, "area_name":"Area_Name" } }
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: All parameters are required in JSON, except “shard_id” which is optional.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Exit Area (Event ID#30)
													Element:a
												Node:
												(type) c
												(layer)4
													Element:p
														This event records information regarding the time at which a player exits an area. To log when a player exits an area, you need to pass the account and character IDs; the area level, position, and ID; and the timestamp. Optionally, you may pass the shard ID.
												Node:
												(type) c
												(layer)4
													Element:p
														For related information, see
													Element:em
														Enter Area
														.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Impacted UI Features
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														KPI - Optional
													Element:li
														System Metrics (Levels, Location/Maps)
													Element:li
														User Metrics (Farming)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														String
													Element:td
														account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														character_id
													Element:td
														account_id
													Element:tr
													Element:td
														Long
													Element:td
														character_lvl
													Element:td
														0
													Element:tr
													Element:td
														Long
													Element:td
														shard_id
													Element:td
														0
													Element:tr
													Element:td
														Long
													Element:td
														area_id
													Element:td
														If AREA_ID is not empty, and AREA_NAME is empty, set AREA_NAME=NA.
													Element:tr
													Element:td
														Float
													Element:td
														position_x
													Element:td
														0
													Element:tr
													Element:td
														Float
													Element:td
														position_y
													Element:td
														0
													Element:tr
													Element:td
														Float
													Element:td
														position_z
													Element:td
														0
													Element:tr
													Element:td
														String
													Element:td
														area_name
													Element:td
														If AREA_ID is not empty, and AREA_NAME is empty, set AREA_NAME=NA.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player enters an area
													Element:br
														public void
													Element:em
														aKApi.log
														AreaEnter(timestamp, account_id, character_id, character_lvl, shard_id, area_id, position_x, position_y, position_z, area_name);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player enters an area
													Element:br
													Element:em
														aKApi.log
														AreaEnter(timestamp, account_id, character_id, character_lvl, shard_id, area_id, position_x, position_y, position_z, area_name)
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player enters an area
													Element:br
													Element:em
														$aKApi->log
														AreaEnter(timestamp, account_id, character_id, character_lvl, shard_id, area_id, position_x, position_y, position_z, area_name)
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player exits an area
													Element:br
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "timestamp":"2013-11-15T14:11:05.873Z", "data":{ "type":30, "account_id":"cool_guy@example.com", "character_id":"wizard", "character_lvl":52, "shard_id":42, "area_id":200, "position_x":678, "position_y":231, "position_z":517, "area_name":"Area_Name" } }
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: All parameters are required in JSON, except “shard_id” which is optional.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Buy Store Item (Event ID#37)
													Element:a
												Node:
												(type) c
												(layer)4
													Element:p
														This event records information regarding item purchases from an in-game store and includes details on the type of currency used. To log when a player buys a store item, you need to pass the account, character, and store IDs; the shard ID; the recipient account and character IDs; the item ID, name, and price; the currency type and value; and the timestamp. Optionally, you may pass the name of the virtual currency and the virtual currency count.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Impacted UI Features
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														KPI
													Element:li
														User Metrics (Churn)
													Element:li
														Basic Package (Summary)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														String
													Element:td
														sender_account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														sender_character_id
													Element:td
														account_id
													Element:tr
													Element:td
														String
													Element:td
														receiver_account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														receiver_character_id
													Element:td
														receiver_account_id
													Element:tr
													Element:td
														Long
													Element:td
														shard_id
													Element:td
														0
													Element:tr
													Element:td
														Long
													Element:td
														store_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														Long
													Element:td
														item_id
													Element:td
														If Item ID is empty and Item Name is not empty, use 0.
													Element:tr
													Element:td
														String
													Element:td
														item_name
													Element:td
														If Item ID is not empty and Item Name is empty, use NA.
													Element:tr
													Element:td
														Float
													Element:td
														item_price
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														Integer
													Element:td
														currency_type
													Element:td
													Element:em
														No Default Value
														*
													Element:tr
													Element:td
														String
													Element:td
														virtual_currency_label
													Element:td
														If Currency Type is 1 then mandatory, else NULL.
													Element:tr
													Element:td
														Float
													Element:td
														currency_value
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														Integer
													Element:td
														virtual_currency_count
													Element:td
														Null
												Node:
												(type) c
												(layer)4
													Element:p
													Element:span
														*Currency Type must be 0 or 1, where 0 equals 'Real' and 1 equals 'Virtual Currency'.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player buys a store item
													Element:br
														public void
													Element:em
														aKApi.
														storeBuyItem(timestamp, sender_account_id, sender_character_id, receiver_account_id, receiver_character_id, shard_id, store_id, item_id, item_name, item_price, currency_type, virtual_currency_label, currency_value, virtual_currency_count);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player buys a store item
													Element:br
													Element:em
														aKApi.
														storeBuyItem(timestamp, sender_account_id, sender_character_id, receiver_account_id, receiver_character_id, shard_id, store_id, item_id, item_name, item_price, currency_type, virtual_currency_label, currency_value, virtual_currency_count);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player buys a store item
													Element:br
														$aKApi->storeBuyItem(timestamp, sender_account_id, sender_character_id, receiver_account_id, receiver_character_id, shard_id, store_id, item_id,item_name, item_price, currency_type, virtual_currency_label, currency_value, virtual_currency_count);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log when a player buys a store item
													Element:br
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "timestamp":"2013-11-15T15:18:44.377Z", "data":{ "type":37, "sender_account_id":"cool_guy@example.com", "sender_character_id":"Wizard", "receiver_account_id":"small_cat@example.com", "receiver_character_id":"Wizard", "shard_id":42, "store_id":1, "item_id":66, "item_name":"The Blaster Gun", "item_price":3, "currency_type":1, "virtual_currency_label":"MCH", "currency_value":"4", "virtual_currency_count":1 } }
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: All parameters are required in JSON, except “shard_id”, “virtual_currency_label”, and “virtual_currency_count” which are optional.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Friend Addition (Event ID#43)
													Element:a
												Node:
												(type) c
												(layer)4
													Element:p
														This event records information regarding a player adding another player as a friend, despite whether the friendship is reciprocated. To log a friend addition, you need to pass the sender account and character IDs; the receiver account and character IDs; and the timestamp.
												Node:
												(type) c
												(layer)4
													Element:p
														Please note that this is a one-way, "follow" type of addition. If Bob is accepting a friend request from Alice, and they will subsequently appear on each other's friends list, then two events should be sent. One with Alice as the sender and Bob as the recipient, and another with Bob as the sender and Alice as the recipient. If Alice is simply following Bob without any action on his part, then you only need to send a single event with Alice as the sender and Bob as the recipient.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														String
													Element:td
														sender_account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														sender_character_id
													Element:td
														sender_account_id
													Element:tr
													Element:td
														String
													Element:td
														receiver_account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														receiver_character_id
													Element:td
														receiver_account_id
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log a friend addition
													Element:br
														public void
													Element:em
														aKApi
														.logFriendAdd(timestamp, sender_account_id, sender_character_id, receiver_account_id, receiver_character_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log a friend addition
													Element:br
													Element:em
														aKApi
														.logFriendAdd(timestamp, sender_account_id, sender_character_id, receiver_account_id, receiver_character_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
														//Log a friend addition
													Element:br
													Element:em
														$aKApi
														->logFriendAdd(timestamp, sender_account_id, sender_character_id, receiver_account_id, receiver_character_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log a friend addition
													Element:br
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "timestamp":"2013-11-15T17:35:00.091Z", "data":{ "type":43, "sender_account_id":"cool_guy@example.com", "sender_character_id":"Wizard", "receiver_account_id":"small_cat@example.com", "receiver_character_id":"Wizard" } }
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: All parameters are required in JSON.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
													Element:a
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Friend Deletion (Event ID#44)
												Node:
												(type) c
												(layer)4
													Element:p
														This event records information regarding the end of an in-game friendship. To log a friend deletion, you need to pass the sender account and character IDs; the receiver account and character IDs; along with the timestamp.
												Node:
												(type) c
												(layer)4
													Element:p
														For related information, see Friend Addition.
												Node:
												(type) c
												(layer)4
													Element:p
														Please note that this is a one-way, "unfollow" type of deletion. If Alice and Bob are currently in each other's friends list, and a removal from one party will cause them to be dropped from both lists, then you should send two deletion events. One with Alice as the sender and Bob as the recipient, and another with Bob as the sender and Alice as the recipient.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Impacted UI Features
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														System Metrics (Levels)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														String
													Element:td
														sender_account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														sender_character_id
													Element:td
														sender_account_id
													Element:tr
													Element:td
														String
													Element:td
														receiver_account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														receiver_character_id
													Element:td
														receiver_account_id
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log a friend addition
													Element:br
														public void
													Element:em
														aKApi
														.logFriendAdd(timestamp, sender_account_id, sender_character_id, receiver_account_id, receiver_character_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log a friend addition
													Element:br
													Element:em
														aKApi
														.logFriendAdd(timestamp, sender_account_id, sender_character_id, receiver_account_id, receiver_character_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
														//Log a friend addition
													Element:br
													Element:em
														$aKApi
														->logFriendAdd(timestamp, sender_account_id, sender_character_id, receiver_account_id, receiver_character_id);
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log a friend deletion
													Element:br
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "timestamp":"2013-11-15T17:40:17.868Z", "data":{ "type":44, "sender_account_id":"cool_guy@example.com", "sender_character_id":"Wizard", "receiver_account_id":"small_cat@example.com", "receiver_character_id":"Wizard" } }
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: “sender_account_id”, and “receiver_account_id” are required, while all other parameters are optional.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
													Element:strong
														Traffic Source (Event ID#59)
													Element:a
												Node:
												(type) c
												(layer)4
													Element:p
														This event records information regarding where your traffic is coming from, whether it’s from Facebook, an Email Campaign, or Direct Marketing. To log traffic source, you need to pass the account ID, traffic source, and traffic source type, along with the timestamp. Optionally, you may pass the shard ID.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:big
													Element:strong
														Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Type
													Element:th
														Parameter
													Element:th
														Default Value
													Element:tr
													Element:td
														Date
													Element:td
														timestamp
													Element:td
														(Current Time)
													Element:tr
													Element:td
														String
													Element:td
														account_id
													Element:td
													Element:em
														No Default Value
													Element:tr
													Element:td
														String
													Element:td
														traffic_source
													Element:td
														campaign_name | sub_site | publisher_name | sub_publisher
													Element:a
														(See Appendix for more types)
													Element:tr
													Element:td
														Long
													Element:td
														shard_id
													Element:td
														0
													Element:tr
													Element:td
														String
													Element:td
														traffic_source_type
													Element:td
														publisher_name
													Element:a
														(See Appendix for more types)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:span
														|| String || TRAFFIC SOURCE || Other
													Element:a
														(See Appendix for more types)
														||
													Element:span
														|| String || TRAFFIC SOURCE TYPE || Unknown
													Element:a
														(See Appendix for more types)
														||
													Element:big
													Element:strong
														Sample Use
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Java
												Node:
												(type) c
												(layer)4
													Element:p
														//Log that a traffic source event occurred
													Element:br
														public void
													Element:em
														aKApi
														.logTrafficSource(timestamp, account_id, traffic_source, shard_id, traffic_source_type) ;
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JavaScript
												Node:
												(type) c
												(layer)4
													Element:p
														//Log that a traffic source event occurred
													Element:br
													Element:em
														aKApi
														.logTrafficSource(timestamp, account_id, traffic_source, shard_id, traffic_source_type) ;
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														PHP
												Node:
												(type) c
												(layer)4
													Element:p
														//Log that a traffic source event occurred
													Element:br
													Element:em
														$aKApi
														->logTrafficSource(timestamp, account_id, traffic_source, shard_id, traffic_source_type) ;
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														JSON
												Node:
												(type) c
												(layer)4
													Element:p
														//Log that a traffic source event occurred
													Element:br
												Node:
												(type) c
												(layer)4
													Element:pre
														{ "timestamp":"2013-11-15T19:07:30.221Z", "data":{ "type":59, "account_id":"cool_guy@example.com", "traffic_source":"campaign_name | sub_site | publisher_name | sub_publisher", "shard_id":0, "traffic_source_type":"publisher_name" } }
												Node:
												(type) c
												(layer)4
													Element:p
														NOTE: All parameters are required in JSON, except “shard_id” which is optional.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Back to Top
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Search
												Node:
												(type) c
												(layer)4
													Element:fieldset
													Element:p
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														View
													Element:li
													Element:a
														Edit
													Element:li
													Element:a
														History
													Element:li
													Element:a
														Print
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Getting Started
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Integration Libraries
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														JavaScript
													Element:li
													Element:a
														Java
													Element:li
													Element:a
														PHP
													Element:li
													Element:a
														iOS
													Element:li
													Element:a
														Android
													Element:li
													Element:a
														Unreal
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														API Documentation
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Getting Started
													Element:li
													Element:a
														Quick Start Guide
													Element:li
													Element:a
														Advanced Setup Guide
													Element:li
													Element:a
														HTTPS & JSON API
													Element:li
													Element:a
														JSON Sample Events
													Element:li
													Element:a
														Recommended Country Codes
												Node:
												(type) c
												(layer)4
													Element:p
													Element:span
													Element:a
														edit SideBar
												Node:
												(type) c
												(layer)4
													Element:p
														Page last modified on April 21, 2015, at 07:20 PM
												Node:
												(type) c
												(layer)4
													Element:p
														© Ninja Metrics, Inc.
