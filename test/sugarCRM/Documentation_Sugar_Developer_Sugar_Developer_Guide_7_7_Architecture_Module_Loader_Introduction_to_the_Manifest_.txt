Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Introduction to the Manifest
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Overview
						Node:
						(type) c
						(layer)2
							Element:p
								Module loadable packages rely on a
							Element:code
								manifest.php
								file to define the basic properties and installation steps for the package. This documentation explains the various components that make up the manifest file.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Manifest Definitions
						Node:
						(type) c
						(layer)2
							Element:p
								Inside of the
							Element:code
								manifest.php
								file, there is a
							Element:code
								$manifest
								variable that defines the basic properties of the module loadable package. The various manifest properties are outlined below:
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:td
													Element:strong
														Name
													Element:td
													Element:strong
														Type
													Element:td
													Element:strong
														Displayed in
													Element:br
														Module Loader
													Element:td
													Element:strong
														Description
													Element:tr
													Element:td
													Element:h4
														key
													Element:td
														String
													Element:td
														no
													Element:td
														A unique identifier for the package
													Element:br
													Element:pre
													Element:code
														$manifest['key'] = '32837';
													Element:tr
													Element:td
													Element:h4
														name
													Element:td
														String
													Element:td
														yes
													Element:td
														The name of the package
													Element:br
													Element:pre
													Element:code
														$manifest['name'] = 'Example Package';
													Element:tr
													Element:td
													Element:h4
														description
													Element:td
														String
													Element:td
														yes
													Element:td
														The description of the package
													Element:br
													Element:pre
													Element:code
														$manifest['description'] = 'Example Package Description';
													Element:tr
													Element:td
													Element:h4
														built_in_version
													Element:td
														String
													Element:td
														no
													Element:td
														The version of Sugar that the package was designed for
													Element:br
													Element:pre
													Element:code
														$manifest['built_in_version'] = '7.2.0';
													Element:strong
														Note
														: Some packages designed for 6.x versions of Sugar are not compatible with 7.x and should not be installed.
													Element:tr
													Element:td
													Element:h4
														version
													Element:td
														String
													Element:td
														yes
													Element:td
														The version of the package, i.e. "1.0"
													Element:br
													Element:pre
													Element:code
														$manifest['version'] = '1.0';
													Element:tr
													Element:td
													Element:h4
														acceptable_sugar_versions
													Element:td
														Array
													Element:td
														no
													Element:td
														The Sugar versions that a package can be installed to
													Element:br
													Element:pre
													Element:code
														$manifest['acceptable_sugar_versions'] = array( 'exact_matches' => array( '6.4.0', '6.4.1', ), //or 'regex_matches' => array( '6\\.4\\.[0-1]$', ), );
													Element:strong
														Note
														: You can define exact versions and/or use a regex formula to define a range. Exact versions will be specified using the
													Element:code
														exact_matches
														index and will contain an array of exact version strings (i.e. '6.4.5' or '6.5.0'). Regex formulas will be specified using the
													Element:code
														regex_matches
														index and will contain an array of regular expressions designed to match a group of versions (i.e. '6\.4\.[0-1]$').
													Element:tr
													Element:td
													Element:h4
														acceptable_sugar_flavors
													Element:td
														Array
													Element:td
														no
													Element:td
														The Sugar editions that the package can be installed to
													Element:br
													Element:pre
													Element:code
														$manifest['acceptable_sugar_flavors'] = array('CE', 'PRO', 'CORP', 'ENT', 'ULT');
													Element:tr
													Element:td
													Element:h4
														author
													Element:td
														String
													Element:td
														no
													Element:td
														The author of the package (i.e. "SugarCRM")
													Element:br
													Element:pre
													Element:code
														$manifest['author'] = 'SugarCRM';
													Element:tr
													Element:td
													Element:h4
														readme
													Element:td
														String
													Element:td
														no
													Element:td
														The optional path to a readme document to be displayed to the user during installation
													Element:br
													Element:pre
													Element:code
														$manifest['readme'] = 'README.txt';
													Element:tr
													Element:td
													Element:h4
														icon
													Element:td
														String
													Element:td
														no
													Element:td
														The optional path (within the package ZIP file) to an icon image to be displayed during installation (e.g.
													Element:code
														./patch_directory/icon.gif
														and
													Element:code
														./patch_directory/images/theme.gif
														)
													Element:br
													Element:pre
													Element:code
														$manifest['icon'] = '';
													Element:tr
													Element:td
													Element:h4
														is_uninstallable
													Element:td
														Boolean
													Element:td
														no
													Element:td
														Whether or not the package can be uninstalled
													Element:br
													Element:br
														Acceptable values:
													Element:ul
													Element:li
														'true' will allow a Sugar administrator to uninstall the package
													Element:li
														'false' will disable the uninstall feature
													Element:pre
													Element:code
														$manifest['is_uninstallable'] = true;
													Element:tr
													Element:td
													Element:h4
														published_date
													Element:td
														String
													Element:td
														no
													Element:td
														The date the package was published
													Element:br
													Element:pre
													Element:code
														$manifest['published_date'] = '2014-04-09 14:15:12';
													Element:tr
													Element:td
													Element:h4
														remove_tables
													Element:td
														String
													Element:td
														no
													Element:td
														Whether or not tables generated by the
													Element:code
														$installdefs['beans']
														index should be removed from an installed module (acceptable values: empty or 'prompt')
													Element:br
													Element:pre
													Element:code
														$manifest['remove_tables'] = 'prompt';
													Element:tr
													Element:td
													Element:h4
														type
													Element:td
														String
													Element:td
														no
													Element:td
													Element:br
														Accceptable 'type' values:
													Element:br
													Element:ul
													Element:li
													Element:strong
														module
														: Use this type if you are installing a module or developing a plugin that should install via the Module Loader.
													Element:li
													Element:strong
														langpack
														: Use this type to install a language pack via the Module Loader. Any languages installed will automatically added to the available languages on the Sugar login screen. For an example of a module loadable language pack, refer to the
													Element:a
														Language Framework
														page.
													Element:li
													Element:strong
														theme
														: Use this type to install a Sugar theme via the Upgrade Wizard. Themes are only supported in Sugar 6.x, and will be added to the "Theme" dropdown on the Sugar Login screen.
													Element:li
													Element:strong
														patch
														: Use this type to install a patch via the Upgrade Wizard.
													Element:tr
													Element:td
													Element:h4
														dependencies
													Element:td
														Array
													Element:td
														no
													Element:td
														Required dependency packages:
													Element:pre
													Element:code
														$manifest['dependencies'] = array( array( 'id_name' => 'PackageName', 'version' => '1' ) );
												Node:
												(type) c
												(layer)4
									Node:
									(type) c
									(layer)3
										Element:h3
											Manifest Example
									Node:
									(type) c
									(layer)3
										Element:p
											An example of a manifest is shown below:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											$manifest = array( 'key' => 1397052912, 'name' => 'Example Manifest', 'description' => 'Example Description', 'author' => 'SugarCRM', 'version' => '1.0', 'is_uninstallable' => true, 'published_date' => '2014-04-09 14:15:12', 'type' => 'module', 'acceptable_sugar_versions' => array( 'exact_matches' => array( '7.2.0', '7.2.1', '7.6.0.0' ), //or 'regex_matches' => array( '7\\.2\\.[0-1]$', //7.2.0 - 7.2.1 '7\\.6\\.(.*?)\\.(.*?)' //any 7.6 release ), ), 'acceptable_sugar_flavors' => array( 'PRO', 'CORP', 'ENT', 'ULT' ); 'readme' => '', 'icon' => '', 'remove_tables' => '', );
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Installation Definitions
						Node:
						(type) c
						(layer)2
							Element:p
								The following section outlines the indexes specified in the
							Element:code
								$installdefs
								array contained in the
							Element:code
								./manifest.php
								file. The
							Element:code
								$installdefs
								array indexes are used by the Module Loader to determine the actual installation steps that need to be taken to install the package.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											$installdef Actions
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:td
													Element:strong
														Name
													Element:td
													Element:strong
														Type
													Element:td
													Element:strong
														Description
													Element:tr
													Element:td
													Element:h4
														action_file_map
													Element:td
														Array
													Element:td
													Element:a
														ActionFileMap
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														action_remap
													Element:td
														Array
													Element:td
													Element:a
														ActionReMap
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														action_view_map
													Element:td
														Array
													Element:td
													Element:a
														ActionViewMap
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														administration
													Element:td
														Array
													Element:td
													Element:a
														Administration
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														appscheduledefs
													Element:td
														Array
													Element:td
													Element:a
														Application ScheduledTasks
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														beans
													Element:td
														Array
													Element:td
													Element:a
														Include
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														connectors
													Element:td
														Array
													Element:td
													Element:p
														An array containing Connector definitions as outlined in the Connector documentation.
													Element:pre
													Element:code
														$installdefs['connectors'] = array ( array ( 'connector' => '<basepath>/example/source', 'formatter' => '<basepath>/example/formatter', 'name' => 'ext_rest_example', ), );
													Element:tr
													Element:td
													Element:h4
														copy
													Element:td
														Array
													Element:td
														An array detailing the files and folders to be copied to Sugar
													Element:br
													Element:br
														Required parameters for each file in the array:
													Element:ul
														Example:
													Element:li
													Element:strong
														from
														(string) : The location of the file in the module loadable package
													Element:br
													Element:pre
													Element:code
														$installdefs['copy'][0]['from'] = '<basepath>/Files/custom/modules/Accounts/accounts_save.php';
													Element:li
													Element:strong
														to
														(string) : The destination directory relative to the Sugar root
													Element:br
													Element:pre
													Element:code
														$installdefs['copy'][0]['to'] = 'custom/modules/Accounts/accounts_save.php';
													Element:pre
													Element:code
														$installdefs['copy'] = array( 0 => array( 'from' => '<basepath>/Files/custom/modules/Accounts/accounts_save.php', 'to' => 'custom/modules/Accounts/accounts_save.php', ), );
													Element:tr
													Element:td
													Element:h4
														custom_fields
													Element:td
														Array
													Element:td
														An array of custom fields to be installed for the new module
													Element:br
													Element:br
														Required sub-directives for each custom field fomatted as:
													Element:pre
													Element:code
														$installdefs['custom_fields'][0]['<attribute>'] = <value>;
													Element:ul
													Element:li
													Element:strong
														name
														(String) : The internal name of the custom field
													Element:br
													Element:strong
														Note
														: The suffix "_c" is appended to all custom field names (e.g. fieldname_c).
													Element:li
													Element:strong
														label
														(String) : The display label for the custom field
													Element:li
													Element:strong
														type
														(String) : The type of custom field (e.g. varchar, text, textarea, double, float, int, date, bool, enum, relate)
													Element:li
													Element:strong
														max_size
														(Integer) : The custom field's maximum character storage size
													Element:li
													Element:strong
														require_option
														(String) : Defines whether fields are 'required' or 'optional'
													Element:li
													Element:strong
														default_value
														(String) : The default value for the custom field
													Element:li
													Element:strong
														ext1
														(String) : Used to specify a dropdown name for enum and multienum type fields
													Element:li
													Element:strong
														ext2
														(String) : Not used
													Element:li
													Element:strong
														ext3
														(String) : Not used
													Element:li
													Element:strong
														audited
														(Boolean) : Denotes whether or not the custom field should be audited
													Element:li
													Element:strong
														module
														(String) : The module where the custom field will be added
													Element:p
														Example:
													Element:pre
													Element:code
														$installdefs['custom_fields'] = array(( 0 => array(( 'name' => 'text_c', 'label' => 'LBL_TEXT_C', 'type' => 'varchar', 'max_size' => 255, 'require_option' => 'optional', 'default_value' => '', 'ext1' => '', 'ext2' => '', 'ext3' => '', 'audited' => true, 'module' => 'Accounts', ), );
													Element:tr
													Element:td
													Element:h4
														console
													Element:td
														Array
													Element:td
													Element:a
														Console
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														dashlets
													Element:td
														Array
													Element:td
													Element:p
														An array containing the Dashlet definition.
													Element:p
														Required parameters for each file in the array:
													Element:ul
													Element:li
													Element:strong
														name
														(string) : The name of the dashlet. Used for the folder name where the Dashlet files will be stored in Sugar file system.
													Element:li
													Element:strong
														from
														(string) : The location of the dashlet files in the module loadable package.
													Element:pre
													Element:code
														$installdefs['dashlets'] = array( array( 'name' => 'MyDashlet', 'from' => '<basepath>/MyDashlet' ) );
													Element:tr
													Element:td
													Element:h4
														dependencies
													Element:td
														Array
													Element:td
													Element:a
														Dependencies
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														entrypoints
													Element:td
														Array
													Element:td
													Element:a
														EntryPointRegistry
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														extensions
													Element:td
														Array
													Element:td
													Element:a
														Extensions
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														file_access
													Element:td
														Array
													Element:td
													Element:a
														FileAccessControlMap
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														hookdefs
													Element:td
														Array
													Element:td
													Element:a
														LogicHooks
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														id
													Element:td
														String
													Element:td
														A unique id for the installdef definition
													Element:br
													Element:pre
													Element:code
														$installdefs['id'] = 'unique_name';
													Element:tr
													Element:td
													Element:h4
														image_dir
													Element:td
														String
													Element:td
														The directory that contains the icons for the module
													Element:br
													Element:pre
													Element:code
														$installdefs['image_dir'] = '<basepath>/icons';
													Element:tr
													Element:td
													Element:h4
														jsgroups
													Element:td
														Array
													Element:td
													Element:a
														JSGroupings
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														language
													Element:td
														Array
													Element:td
													Element:a
														Language
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														layoutdefs
													Element:td
														Array
													Element:td
													Element:a
														Layoutdefs
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														layoutdeffields
													Element:td
														Array
													Element:td
													Element:p
														An array of custom fields to be added to the edit and detail views of the target modules' existing layouts
													Element:tr
													Element:td
													Element:h4
														logic_hooks
													Element:td
														Array
													Element:td
													Element:p
														An array containing full LogicHook definitions, as outlined in the
													Element:a
														LogicHook
														documentation.
													Element:pre
													Element:code
														$installdefs['logic_hooks'] = array( array( 'module' => 'Accounts', 'hook' => 'before_save', 'order' => 99, 'description' => 'Example Logic Hook - Logs account name', 'file' => 'custom/modules/Accounts/accounts_save.php', 'class' => 'Accounts_Save', 'function' => 'before_save', ), );
													Element:p
														LogicHooks defined for install using the
													Element:code
														$installdefs['logic_hooks']
														index, will be added to the module or application folder in the custom directory, in the logic_hooks.php file. Examples:
													Element:p
													Element:code
														custom/modules/Accounts/logic_hooks.php
													Element:p
													Element:code
														custom/application/logic_hooks.php
													Element:p
													Element:strong
														Note
														: You will still need to utilize a
													Element:code
														$installdefs['copy']
														index to move the LogicHook class file into the system.
													Element:tr
													Element:td
													Element:h4
														pre_execute
													Element:td
														Array
													Element:td
														Executes logic from a file (or set of files) before a package is installed
													Element:br
													Element:br
														Example:
													Element:br
													Element:pre
														Where the content of
													Element:code
														$installdefs['pre_execute'] = array( 0 => '<basepath>/pre_execute.php', );
													Element:code
														<basepath>/pre_execute.php
														is:
													Element:pre
													Element:code
														<?php //pre_execute logic echo 'pre_execute script<br>';
													Element:tr
													Element:td
													Element:h4
														post_execute
													Element:td
														Array
													Element:td
														Executes logic from a file (or set of files) after a package is installed
													Element:br
													Element:br
														Example:
													Element:br
													Element:pre
														Where the content of
													Element:code
														$installdefs['post_execute'] = array( 0 => '<basepath>/post_execute.php', );
													Element:code
														<basepath>/post_execute.php
														is:
													Element:br
													Element:pre
													Element:code
														<?php //post_execute logic echo 'post_execute script<br>';
													Element:tr
													Element:td
													Element:h4
														pre_uninstall
													Element:td
														Array
													Element:td
														Executes logic from a file (or set of files) before a package is uninstalled
													Element:br
													Element:br
														Example:
													Element:br
													Element:pre
														Where the content of
													Element:code
														$installdefs['pre_uninstall'] = array( 0 => '<basepath>/pre_uninstall.php', );
													Element:code
														<basepath>/pre_uninstall.php
														is:
													Element:br
													Element:pre
													Element:code
														<?php //pre_uninstall logic echo 'pre_uninstall script<br>';
													Element:tr
													Element:td
													Element:h4
														post_uninstall
													Element:td
														Array
													Element:td
														Executes logic from a file (or set of files) after a package is uninstalled
													Element:br
													Element:br
														Example:
													Element:br
													Element:pre
														Where the content of
													Element:code
														$installdefs['post_uninstall'] = array( 0 => '<basepath>/post_uninstall.php', );
													Element:code
														<basepath>/post_uninstall.php
														is:
													Element:br
													Element:pre
													Element:code
														<?php //post_uninstall logic echo 'post_uninstall script<br>';
													Element:tr
													Element:td
													Element:h4
														relationships
													Element:td
														Array
													Element:td
														An array of relationship files used to link the new modules to existing modules
													Element:br
													Element:strong
														Note
														: A metadata path must be defined using
													Element:strong
														meta_data
														(string):
													Element:pre
														Where the content of
													Element:code
														$installdefs['relationships'][0]['meta_data'] = '<basepath>/SugarModules/relationships/relationships/my_module_accountsMetaData.php';
													Element:code
														my_module_accountsMetaData.php
														is:
													Element:br
													Element:pre
													Element:code
														<?php 'true_relationship_type' => 'many-to-many', 'relationships' => array(( 'my_module_accounts' => array(( 'lhs_module' => 'my_Module', 'lhs_table' => 'my_module', 'lhs_key' => 'id', 'rhs_module' => 'Accounts', 'rhs_table' => 'accounts', 'rhs_key' => 'id', 'relationship_type' => 'many-to-many', 'join_table' => 'my_module_accounts_c', 'join_key_lhs' => 'my_module_accountsmy_module_ida', 'join_key_rhs' => 'my_module_accountsaccounts_idb', ), ), 'table' => 'my_module_accounts_c', 'fields' => array(( 0 => array(( 'name' => 'id', 'type' => 'varchar', 'len' => 36, ), 1 => array(( 'name' => 'date_modified', 'type' => 'datetime', ), 2 => array(( 'name' => 'deleted', 'type' => 'bool', 'len' => '1', 'default' => '0', 'required' => true, ), 3 => array(( 'name' => 'my_module_accountsmy_module_ida', 'type' => 'varchar', 'len' => 36, ), 4 => array(( 'name' => 'my_module_accountsaccounts_idb', 'type' => 'varchar', 'len' => 36, ), ), 'indices' => array(( 0 => array(( 'name' => 'my_module_accountsspk', 'type' => 'primary', 'fields' => array(( 0 => 'id', ), ), 1 => array(( 'name' => 'my_module_accounts_alt', 'type' => 'alternate_key', 'fields' => array(( 0 => 'my_module_accountsmy_module_ida', 1 => 'my_module_accountsaccounts_idb', ), ), ), );
													Element:tr
													Element:td
													Element:h4
														scheduledefs
													Element:td
														Array
													Element:td
													Element:a
														ScheduledTasks
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														sidecar
													Element:td
														Array
													Element:td
													Element:a
														Sidecar
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														tinymce
													Element:td
														Array
													Element:td
													Element:a
														TinyMCE
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														user_page
													Element:td
														Array
													Element:td
													Element:a
														UserPage
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														utils
													Element:td
														Array
													Element:td
													Element:a
														Utils
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														vardefs
													Element:td
														Array
													Element:td
													Element:a
														Vardefs
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														wireless_modules
													Element:td
														Array
													Element:td
													Element:a
														WirelessModuleRegistery
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
													Element:tr
													Element:td
													Element:h4
														wireless_subpanels
													Element:td
														Array
													Element:td
													Element:a
														WirelessLayoutDefs
														is part of the Extension Framework. More detail can be found in the
													Element:a
														Extension Framework
														documentation.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Note
														: Anything printed to the screen in the pre_execute, post_execute, pre_uninstall, or post_uninstall scripts will be displayed when clicking on the Display Log link.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
									Node:
									(type) c
									(layer)3
										Element:p
											Last modified: 01/10/2017 10:16am
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														How helpful is this page?
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Provide Feedback About This Page
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:footer
													Element:ul
													Element:li
													Element:h4
														CRM Products & Solutions
													Element:li
													Element:a
														Products
													Element:li
													Element:a
														Editions & Pricing
													Element:li
													Element:a
														CRM Solutions
													Element:li
													Element:a
														SugarCRM Mobile
													Element:li
													Element:a
														Store
													Element:li
													Element:a
														SugarExchange
													Element:ul
													Element:li
													Element:h4
														Resources
													Element:li
													Element:a
														CRM Resources
													Element:li
													Element:a
														Case Studies
													Element:li
													Element:a
														Whitepapers
													Element:li
													Element:a
														Webcasts
													Element:li
													Element:a
														Demos
													Element:ul
													Element:li
													Element:h4
														Support & Community
													Element:li
													Element:a
														Support
													Element:li
													Element:a
														Training & Certification
													Element:li
													Element:a
														Partner Directory
													Element:li
													Element:a
														Developers
													Element:li
													Element:a
														Community Forums
													Element:li
													Element:a
														Partner Portal Login
													Element:ul
													Element:li
													Element:h4
														News
													Element:li
													Element:a
														Press Releases
													Element:li
													Element:a
														News
													Element:li
													Element:a
														Events
													Element:li
													Element:a
														Awards
													Element:li
													Element:a
														CRM Blog
													Element:li
													Element:a
														Partner News
													Element:ul
													Element:li
													Element:h4
														About
													Element:li
													Element:a
														Company Overview
													Element:li
													Element:a
														Careers
													Element:li
													Element:a
														Privacy Policy
													Element:li
													Element:a
														Security Policy
													Element:li
													Element:a
														Terms & Conditions
													Element:li
													Element:a
														Environmental Policy
													Element:li
													Element:a
														Impressum
													Element:h4
														Sugar Worldwide:
													Element:a
													Element:span
														Select Region
													Element:ul
													Element:li
													Element:a
														English (Americas)
													Element:li
													Element:a
														English (ANZ)
													Element:li
													Element:a
														English (UK)
													Element:li
													Element:a
														Deutsch (Germany)
													Element:li
													Element:a
														Français (France)
													Element:li
													Element:a
														Español (Europe)
													Element:li
													Element:a
														Español (Latin America)
													Element:li
													Element:a
														Português (Brazil)
													Element:li
													Element:a
														Italian (Italy)
													Element:h4
														Stay Connected:
												Node:
												(type) c
												(layer)4
													Element:a
													Element:span
														Back to top
												Node:
												(type) c
												(layer)4
													Element:a
													Element:span
														Contents
