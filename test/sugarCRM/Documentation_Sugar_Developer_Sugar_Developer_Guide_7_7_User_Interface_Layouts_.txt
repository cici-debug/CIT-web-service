Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Layouts
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Overview
						Node:
						(type) c
						(layer)2
							Element:p
								Layouts are component plugins that define the overall layout and positioning of the page. Layouts replace the previous concept of MVC views and are used system-wide to generate rows, columns, bootstrap fluid layouts, and pop-ups by wrapping and placing multiple views or nested layouts on a page.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								Layout components are typically made up of a controller JavaScript file (.js) and a PHP file (.php), however, layout types vary and are not dependent on having both files.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Hierarchy Diagram
									Node:
									(type) c
									(layer)3
										Element:p
											The layout components are loaded in the following manner:
									Node:
									(type) c
									(layer)3
										Element:p
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Note:
											The Sugar application client type is "base". For more information on the various client types, please refer to the
										Element:a
											User Interface
											page.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Sidecar Layout Routing
						Node:
						(type) c
						(layer)2
							Element:p
								Sidecar uses
							Element:a
								routing
								to determine where to direct the user. To route the user to a specific page in Sugar, refer to the following default URL formats:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tbody
							Element:tr
							Element:td
							Element:b
								Behavior
							Element:td
							Element:strong
								URL Format
							Element:tr
							Element:td
								Route the user to the list layout for a module
							Element:td
								http://{site url}/#<module>/
							Element:tr
							Element:td
								Route the user to the record layout for a specific record
							Element:td
								http://{site url}/#<module>/f82d09cb-48cd-a1fb-beae-521cf39247b5
							Element:tr
							Element:td
								Route the user to a custom layout for the module
							Element:td
								http://{site url}/#<module>/layout/<layout>
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Layout Example
						Node:
						(type) c
						(layer)2
							Element:p
								The list layout, located in
							Element:code
								./clients/base/layouts/list/
								, handles the layout for the list view. The sections below outline the various files that render this view.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											JavaScript
									Node:
									(type) c
									(layer)3
										Element:p
											The file
										Element:code
											list.js
											, shown below, contains the JavaScript used to place the layout content.
									Node:
									(type) c
									(layer)3
										Element:p
											./clients/base/layouts/list/list.js
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											/** * Layout that places components using bootstrap fluid layout divs * @class View.Layouts.ListLayout * @extends View.FluidLayout */ ({ /** * Places a view's element on the page. * @param {View.View} comp * @protected * @method */ _placeComponent: function(comp, def) { var size = def.size || 12; // Helper to create boiler plate layout containers function createLayoutContainers(self) { // Only creates the containers once if (!self.$el.children()[0]) { comp.$el.addClass('list'); } } createLayoutContainers(this); // All components of this layout will be placed within the // innermost container div. this.$el.append(comp.el); } })
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Layout Definition
									Node:
									(type) c
									(layer)3
										Element:p
											The layout definition is contained as an array in
										Element:code
											list.php
											. This layout definition contains four views:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											massupdate
										Element:li
											massaddtolist
										Element:li
											recordlist
										Element:li
											list-bottom
									Node:
									(type) c
									(layer)3
										Element:p
											./clients/base/layouts/list/list.php
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											<?php $viewdefs['base']['layout']['list'] = array( 'components' => array( array( 'view' => 'massupdate', ), array( 'view' => 'massaddtolist', ), array( 'view' => 'recordlist', 'primary' => true, ), array( 'view' => 'list-bottom', ), ), 'type' => 'simple', 'name' => 'list', 'span' => 12, );
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Application
						Node:
						(type) c
						(layer)2
							Element:p
								For information on working with layouts, please refer to the
							Element:a
								Creating Layouts
								and
							Element:a
								Overriding Layouts
								pages for practical examples.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Topics
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Creating Layouts
							Element:p
								This example explains how to create a custom layout to define the various components that load on a page.
							Element:li
							Element:a
								Overriding Layouts
							Element:p
								This page explains how to override a stock layout component. For this example, we will extend the stock record view and create a custom view named "my-record" that will be used in our record layout's override. This example involves two steps:
						Node:
						(type) c
						(layer)2
							Element:p
								Last modified: 03/30/2016 04:41pm
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														How helpful is this page?
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Provide Feedback About This Page
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:footer
													Element:ul
													Element:li
													Element:h4
														CRM Products & Solutions
													Element:li
													Element:a
														Products
													Element:li
													Element:a
														Editions & Pricing
													Element:li
													Element:a
														CRM Solutions
													Element:li
													Element:a
														SugarCRM Mobile
													Element:li
													Element:a
														Store
													Element:li
													Element:a
														SugarExchange
													Element:ul
													Element:li
													Element:h4
														Resources
													Element:li
													Element:a
														CRM Resources
													Element:li
													Element:a
														Case Studies
													Element:li
													Element:a
														Whitepapers
													Element:li
													Element:a
														Webcasts
													Element:li
													Element:a
														Demos
													Element:ul
													Element:li
													Element:h4
														Support & Community
													Element:li
													Element:a
														Support
													Element:li
													Element:a
														Training & Certification
													Element:li
													Element:a
														Partner Directory
													Element:li
													Element:a
														Developers
													Element:li
													Element:a
														Community Forums
													Element:li
													Element:a
														Partner Portal Login
													Element:ul
													Element:li
													Element:h4
														News
													Element:li
													Element:a
														Press Releases
													Element:li
													Element:a
														News
													Element:li
													Element:a
														Events
													Element:li
													Element:a
														Awards
													Element:li
													Element:a
														CRM Blog
													Element:li
													Element:a
														Partner News
													Element:ul
													Element:li
													Element:h4
														About
													Element:li
													Element:a
														Company Overview
													Element:li
													Element:a
														Careers
													Element:li
													Element:a
														Privacy Policy
													Element:li
													Element:a
														Security Policy
													Element:li
													Element:a
														Terms & Conditions
													Element:li
													Element:a
														Environmental Policy
													Element:li
													Element:a
														Impressum
													Element:h4
														Sugar Worldwide:
													Element:a
													Element:span
														Select Region
													Element:ul
													Element:li
													Element:a
														English (Americas)
													Element:li
													Element:a
														English (ANZ)
													Element:li
													Element:a
														English (UK)
													Element:li
													Element:a
														Deutsch (Germany)
													Element:li
													Element:a
														Français (France)
													Element:li
													Element:a
														Español (Europe)
													Element:li
													Element:a
														Español (Latin America)
													Element:li
													Element:a
														Português (Brazil)
													Element:li
													Element:a
														Italian (Italy)
													Element:h4
														Stay Connected:
												Node:
												(type) c
												(layer)4
													Element:a
													Element:span
														Back to top
												Node:
												(type) c
												(layer)4
													Element:a
													Element:span
														Contents
