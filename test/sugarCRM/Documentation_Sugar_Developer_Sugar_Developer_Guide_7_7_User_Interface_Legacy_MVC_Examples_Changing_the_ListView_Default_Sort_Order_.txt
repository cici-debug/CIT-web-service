Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Changing the ListView Default Sort Order
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Overview
						Node:
						(type) c
						(layer)2
							Element:p
								This article addresses the need to customize the advanced search layout options for modules in backward compatibility mode to change the default sort order from ascending to descending.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Customization Information
						Node:
						(type) c
						(layer)2
							Element:p
								This customization is only for modules in backward compatibility mode and involves creating custom files that extend stock files. Please note that when creating or moving files you will need to rebuild the file map. More information on rebulding the file map can be found in the
							Element:a
								SugarAutoLoader
								. You should also note that this customization does not address all scenarios within the view that may assign a sort order.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Extending the Search Form
						Node:
						(type) c
						(layer)2
							Element:p
								First, we will need to extend the SearchForm class. To do this, we will create a CustomSearchForm class that extends the original SearchForm class located in ./include/SearchForm/SearchForm2.php. We will then override the _displayTabs method to check the $_REQUEST['sortOrder'] and default it to descending if it isn't set.
						Node:
						(type) c
						(layer)2
							Element:p
								./custom/include/SearchForm/SearchForm2.php
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								<?php require_once 'include/SearchForm/SearchForm2.php'; class CustomSearchForm extends SearchForm { /** * displays the tabs (top of the search form) * * @param string $currentKey key in $this->tabs to show as the current tab * * @return string html */ function _displayTabs($currentKey) { //check and set the default sort order if (!isset($_REQUEST['sortOrder'])) { $_REQUEST['sortOrder'] = 'DESC'; } return parent::_displayTabs($currentKey);; } } ?>
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Extending the List View
						Node:
						(type) c
						(layer)2
							Element:p
								Next, we will need to extend the ListView. We will create a ViewCustomList class that extends the original ListView located in ./include/MVC/View/views/view.list.php. In the ViewCustomList class, we will override the prepareSearchForm and getSearchForm2 methods to call the CustomSearchForm class.
						Node:
						(type) c
						(layer)2
							Element:p
								./custom/include/MVC/View/views/view.customlist.php
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								<?php require_once 'include/MVC/View/views/view.list.php'; class ViewCustomList extends ViewList { function prepareSearchForm() { $this->searchForm = null; //search $view = 'basic_search'; if(!empty($_REQUEST['search_form_view']) && $_REQUEST['search_form_view'] == 'advanced_search') $view = $_REQUEST['search_form_view']; $this->headers = true; if(!empty($_REQUEST['search_form_only']) && $_REQUEST['search_form_only']) $this->headers = false; elseif(!isset($_REQUEST['search_form']) || $_REQUEST['search_form'] != 'false') { if(isset($_REQUEST['searchFormTab']) && $_REQUEST['searchFormTab'] == 'advanced_search') { $view = 'advanced_search'; } else { $view = 'basic_search'; } } $this->view = $view; $this->use_old_search = true; if (SugarAutoLoader::existingCustom('modules/' . $this->module . '/SearchForm.html') && !SugarAutoLoader::existingCustom('modules/' . $this->module . '/metadata/searchdefs.php')) { require_once('include/SearchForm/SearchForm.php'); $this->searchForm = new SearchForm($this->module, $this->seed); } else { $this->use_old_search = false; //Updated to require the extended CustomSearchForm class require_once('custom/include/SearchForm/SearchForm2.php'); $searchMetaData = SearchForm::retrieveSearchDefs($this->module); $this->searchForm = $this->getSearchForm2($this->seed, $this->module, $this->action); $this->searchForm->setup($searchMetaData['searchdefs'], $searchMetaData['searchFields'], 'SearchFormGeneric.tpl', $view, $this->listViewDefs); $this->searchForm->lv = $this->lv; } } /** * Returns the search form object * * @return SearchForm */ protected function getSearchForm2($seed, $module, $action = "index") { //Updated to use the extended CustomSearchForm class return new CustomSearchForm($seed, $module, $action); } } ?>
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Extending the Sugar Controller
						Node:
						(type) c
						(layer)2
							Element:p
								Finally, we will create a CustomSugarController class that extends the orginal SugarController located in ./include/MVC/Controller/SugarController.php. We will then need to override the do_action and post_action methods to execute their parent methods as well as the action_listview method to assign the custom view to the view attribute.
						Node:
						(type) c
						(layer)2
							Element:p
								./custom/include/MVC/Controller/SugarController.php
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								<?php /** * Custom SugarCRM controller * @api */ class CustomSugarController extends SugarController { /** * Perform the specified action. * This can be overridde in a sub-class */ private function do_action() { return parent::do_action(); } /** * Perform an action after to the specified action has occurred. * This can be overridde in a sub-class */ private function post_action() { return parent::post_action(); } /** * Perform the listview action */ protected function action_listview() { parent::action_listview(); //set the new custom view $this->view = 'customlist'; } } ?>
						Node:
						(type) c
						(layer)2
							Element:p
						Node:
						(type) c
						(layer)2
							Element:p
								Last modified: 03/29/2016 09:15am
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														How helpful is this page?
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Provide Feedback About This Page
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:footer
													Element:ul
													Element:li
													Element:h4
														CRM Products & Solutions
													Element:li
													Element:a
														Products
													Element:li
													Element:a
														Editions & Pricing
													Element:li
													Element:a
														CRM Solutions
													Element:li
													Element:a
														SugarCRM Mobile
													Element:li
													Element:a
														Store
													Element:li
													Element:a
														SugarExchange
													Element:ul
													Element:li
													Element:h4
														Resources
													Element:li
													Element:a
														CRM Resources
													Element:li
													Element:a
														Case Studies
													Element:li
													Element:a
														Whitepapers
													Element:li
													Element:a
														Webcasts
													Element:li
													Element:a
														Demos
													Element:ul
													Element:li
													Element:h4
														Support & Community
													Element:li
													Element:a
														Support
													Element:li
													Element:a
														Training & Certification
													Element:li
													Element:a
														Partner Directory
													Element:li
													Element:a
														Developers
													Element:li
													Element:a
														Community Forums
													Element:li
													Element:a
														Partner Portal Login
													Element:ul
													Element:li
													Element:h4
														News
													Element:li
													Element:a
														Press Releases
													Element:li
													Element:a
														News
													Element:li
													Element:a
														Events
													Element:li
													Element:a
														Awards
													Element:li
													Element:a
														CRM Blog
													Element:li
													Element:a
														Partner News
													Element:ul
													Element:li
													Element:h4
														About
													Element:li
													Element:a
														Company Overview
													Element:li
													Element:a
														Careers
													Element:li
													Element:a
														Privacy Policy
													Element:li
													Element:a
														Security Policy
													Element:li
													Element:a
														Terms & Conditions
													Element:li
													Element:a
														Environmental Policy
													Element:li
													Element:a
														Impressum
													Element:h4
														Sugar Worldwide:
													Element:a
													Element:span
														Select Region
													Element:ul
													Element:li
													Element:a
														English (Americas)
													Element:li
													Element:a
														English (ANZ)
													Element:li
													Element:a
														English (UK)
													Element:li
													Element:a
														Deutsch (Germany)
													Element:li
													Element:a
														Fran√ßais (France)
													Element:li
													Element:a
														Espa√±ol (Europe)
													Element:li
													Element:a
														Espa√±ol (Latin America)
													Element:li
													Element:a
														Portugu√™s (Brazil)
													Element:li
													Element:a
														Italian (Italy)
													Element:h4
														Stay Connected:
												Node:
												(type) c
												(layer)4
													Element:a
													Element:span
														Back to top
												Node:
												(type) c
												(layer)4
													Element:a
													Element:span
														Contents
