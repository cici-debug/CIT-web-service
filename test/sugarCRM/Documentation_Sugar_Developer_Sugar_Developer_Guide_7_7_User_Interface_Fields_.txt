Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Fields
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Overview
						Node:
						(type) c
						(layer)2
							Element:p
								Fields are component plugins that render and format field values. They are made up of a controller JavaScript file (.js) and at least one Handlebars template (.hbt). For more information regarding the data handling of a field, please refer the data framework
							Element:a
								fields
								documentation. For information on creating custom field types, please refer the
							Element:a
								Creating Custom Fields
								documentation.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Hierarchy Diagram
									Node:
									(type) c
									(layer)3
										Element:p
											The field components are loaded in the following manner:
									Node:
									(type) c
									(layer)3
										Element:p
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Note
											: The Sugar application's client type is "base". For more information on the various client types, please refer to the
										Element:a
											User Interface
											page.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Field Example
						Node:
						(type) c
						(layer)2
							Element:p
								The bool field, located in
							Element:code
								./clients/base/fields/bool/
								, handles the display of checkbox boolean values. The sections below outline the various files that render this field type.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Controller
									Node:
									(type) c
									(layer)3
										Element:p
											The
										Element:code
											bool.js
											, file shown below, overrides the base
										Element:code
											_render
											function to disable the field. The
										Element:code
											format
											and
										Element:code
											unformat
											functions handle the manipulation of the fields value.
									Node:
									(type) c
									(layer)3
										Element:p
											./clients/base/fields/bool/bool.js
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											({ _render: function() { app.view.Field.prototype._render.call(this); if(this.tplName === 'disabled') { this.$(this.fieldTag).attr("disabled", "disabled"); } }, unformat:function(value){ value = this.$el.find(".checkbox").prop("checked") ? "1" : "0"; return value; }, format:function(value){ value = (value=="1") ? true : false; return value; } })
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Attributes
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:td
													Element:strong
														Attribute
													Element:td
													Element:strong
														Description
													Element:tr
													Element:td
														_render
													Element:td
														Function to render the field.
													Element:tr
													Element:td
														unformat
													Element:td
														Function to dynamically check the checkbox based on the value.
													Element:tr
													Element:td
														format
													Element:td
														Function to format the value for storing in the database.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Handlebar Templates
									Node:
									(type) c
									(layer)3
										Element:p
											The
										Element:code
											edit.hbs
											file defines the display of the control when the edit view is used. This layout is for displaying the editable form element that renders a clickable checkbox control for the user.
									Node:
									(type) c
									(layer)3
										Element:p
											./clients/base/fields/bool/edit.hbs
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											{{#if def.text}} <label> <input type="checkbox" class="checkbox"{{#if value}} checked{{/if}}> {{str def.text this.module}} </label> {{else}} <input type="checkbox" class="checkbox"{{#if value}} checked{{/if}}> {{/if}}
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Helpers
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:td
													Element:strong
														Helpers
													Element:td
													Element:strong
														Description
													Element:tr
													Element:td
														str
													Element:td
														Handlebars helper to render the label string.
												Node:
												(type) c
												(layer)4
													Element:p
														The
													Element:code
														detail.hbs
														file defines the display of the control when the detail view is used. This layout is for viewing purposes only so the control is disabled by default.
												Node:
												(type) c
												(layer)4
													Element:p
														./clients/base/fields/bool/detail.hbs
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<input type="checkbox" class="checkbox"{{#if value}} checked{{/if}} disabled>
												Node:
												(type) c
												(layer)4
													Element:p
														The
													Element:code
														list.hbs
														file defines the display of the control when the list view is used. This view is also for viewing purposes only so the control is disabled by default.
												Node:
												(type) c
												(layer)4
													Element:p
														./clients/base/fields/bool/list.hbs
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<input type="checkbox" class="checkbox"{{#if value}} checked{{/if}} disabled>
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Topics
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Creating Custom Field Types
							Element:p
								In this example, we create a custom field type called "Highlightfield", which will mimic the base text field type with the added feature that the displayed text for the field will be highlighted in a color chosen when the field is created in Studio.
							Element:li
							Element:a
								Converting Address' Country Field to a Dropdown
							Element:p
								Address fields in SugarÂ® are normally text fields, which allow users to enter in the appropriate information (e.g. street, city, and country) for the record. However, with multiple users working in Sugar, it is possible for data (e.g. country) to be entered in a variety of different ways (e.g. USA, U.S.A, and United States) when creating or editing the record. This can cause some issues when creating a report grouped by the Billing Country field, for example, as records with the same country will be grouped separately based on the different ways the country was entered.
						Node:
						(type) c
						(layer)2
							Element:p
								Last modified: 03/31/2016 05:25pm
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														How helpful is this page?
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Provide Feedback About This Page
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:footer
													Element:ul
													Element:li
													Element:h4
														CRM Products & Solutions
													Element:li
													Element:a
														Products
													Element:li
													Element:a
														Editions & Pricing
													Element:li
													Element:a
														CRM Solutions
													Element:li
													Element:a
														SugarCRM Mobile
													Element:li
													Element:a
														Store
													Element:li
													Element:a
														SugarExchange
													Element:ul
													Element:li
													Element:h4
														Resources
													Element:li
													Element:a
														CRM Resources
													Element:li
													Element:a
														Case Studies
													Element:li
													Element:a
														Whitepapers
													Element:li
													Element:a
														Webcasts
													Element:li
													Element:a
														Demos
													Element:ul
													Element:li
													Element:h4
														Support & Community
													Element:li
													Element:a
														Support
													Element:li
													Element:a
														Training & Certification
													Element:li
													Element:a
														Partner Directory
													Element:li
													Element:a
														Developers
													Element:li
													Element:a
														Community Forums
													Element:li
													Element:a
														Partner Portal Login
													Element:ul
													Element:li
													Element:h4
														News
													Element:li
													Element:a
														Press Releases
													Element:li
													Element:a
														News
													Element:li
													Element:a
														Events
													Element:li
													Element:a
														Awards
													Element:li
													Element:a
														CRM Blog
													Element:li
													Element:a
														Partner News
													Element:ul
													Element:li
													Element:h4
														About
													Element:li
													Element:a
														Company Overview
													Element:li
													Element:a
														Careers
													Element:li
													Element:a
														Privacy Policy
													Element:li
													Element:a
														Security Policy
													Element:li
													Element:a
														Terms & Conditions
													Element:li
													Element:a
														Environmental Policy
													Element:li
													Element:a
														Impressum
													Element:h4
														Sugar Worldwide:
													Element:a
													Element:span
														Select Region
													Element:ul
													Element:li
													Element:a
														English (Americas)
													Element:li
													Element:a
														English (ANZ)
													Element:li
													Element:a
														English (UK)
													Element:li
													Element:a
														Deutsch (Germany)
													Element:li
													Element:a
														FranÃ§ais (France)
													Element:li
													Element:a
														EspaÃ±ol (Europe)
													Element:li
													Element:a
														EspaÃ±ol (Latin America)
													Element:li
													Element:a
														PortuguÃªs (Brazil)
													Element:li
													Element:a
														Italian (Italy)
													Element:h4
														Stay Connected:
												Node:
												(type) c
												(layer)4
													Element:a
													Element:span
														Back to top
												Node:
												(type) c
												(layer)4
													Element:a
													Element:span
														Contents
