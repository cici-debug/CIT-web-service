Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					How to Manipulate File Attachments
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Overview
						Node:
						(type) c
						(layer)2
							Element:p
								A PHP example demonstrating how to attach a file to a record using the v10
							Element:code
								<module>/:record/file/:field
								REST POST API endpoint, then retrieve it with the
							Element:code
								GET
								endpoint.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Manipulating File Attachments
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Authenticating
									Node:
									(type) c
									(layer)3
										Element:p
											First, you will need to authenticate to the Sugar API. An example is shown below:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											<?php $instance_url = "http://{site_url}/rest/v10"; $username = "admin"; $password = "password"; //Login - POST /oauth2/token $auth_url = $instance_url . "/oauth2/token"; $oauth2_token_arguments = array( "grant_type" => "password", //client id - default is sugar. //It is recommended to create your own in Admin > OAuth Keys "client_id" => "sugar", "client_secret" => "", "username" => $username, "password" => $password, //platform type - default is base. //It is recommend to change the platform to a custom name such as "custom_api" to avoid authentication conflicts. "platform" => "custom_api" ); $auth_request = curl_init($auth_url); curl_setopt($auth_request, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_0); curl_setopt($auth_request, CURLOPT_HEADER, false); curl_setopt($auth_request, CURLOPT_SSL_VERIFYPEER, 0); curl_setopt($auth_request, CURLOPT_RETURNTRANSFER, 1); curl_setopt($auth_request, CURLOPT_FOLLOWLOCATION, 0); curl_setopt($auth_request, CURLOPT_HTTPHEADER, array( "Content-Type: application/json" )); //convert arguments to json $json_arguments = json_encode($oauth2_token_arguments); curl_setopt($auth_request, CURLOPT_POSTFIELDS, $json_arguments); //execute request $oauth2_token_response = curl_exec($auth_request); //decode oauth2 response to get token $oauth2_token_response_obj = json_decode($oauth2_token_response); $oauth_token = $oauth2_token_response_obj->access_token;
									Node:
									(type) c
									(layer)3
										Element:p
											More information on authenticating can be found in the
										Element:a
											How to Authenticate and Log Out
											example and
										Element:a
											/oauth2/logout
											endpoint documentation.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Submitting a File Attachment
									Node:
									(type) c
									(layer)3
										Element:p
											Next, we can create a Note record using the
										Element:code
											/<module
											endpoint, and then submit a File to the Note record using the
										Element:code
											/<module>/:record/file/:field
											endpoint.
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											//Create Note - POST / $url = $instance_url . "/Notes"; //Set up the Record details $record = array( 'name' => 'Test Note' ); $curl_request = curl_init($url); curl_setopt($curl_request, CURLOPT_POST, 1); curl_setopt($curl_request, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_0); curl_setopt($curl_request, CURLOPT_HEADER, false); curl_setopt($curl_request, CURLOPT_SSL_VERIFYPEER, 0); curl_setopt($curl_request, CURLOPT_RETURNTRANSFER, 1); curl_setopt($curl_request, CURLOPT_FOLLOWLOCATION, 0); curl_setopt($curl_request, CURLOPT_HTTPHEADER, array( "Content-Type: application/json", "oauth-token: {$oauth_token}" )); //convert arguments to json $json_arguments = json_encode($record); curl_setopt($curl_request, CURLOPT_POSTFIELDS, $json_arguments); //execute request $curl_response = curl_exec($curl_request); //decode json $noteRecord = json_decode($curl_response); //display the created record echo "Created Record: ". $noteRecord->id; curl_close($curl_request); //Add An Attachment to the Note $url = $instance_url . "/Notes/{$noteRecord->id}/file/filename"; $file_arguments = array( "format" => "sugar-html-json", "delete_if_fails" => true, "oauth_token" => $oauth_token, ); if ((version_compare(PHP_VERSION, '5.5') >= 0)) { $file_arguments['filename'] = new CURLFile($path); } else { $file_arguments['filename'] = '@'.$path; } $curl_request = curl_init($url); curl_setopt($curl_request, CURLOPT_POST, 1); curl_setopt($curl_request, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_0); curl_setopt($curl_request, CURLOPT_HEADER, false); curl_setopt($curl_request, CURLOPT_SSL_VERIFYPEER, 0); curl_setopt($curl_request, CURLOPT_RETURNTRANSFER, 1); curl_setopt($curl_request, CURLOPT_FOLLOWLOCATION, 0); //Do NOT set Content Type Header to JSON curl_setopt($curl_request, CURLOPT_HTTPHEADER, array( "oauth-token: {$oauth_token}" )); curl_setopt($curl_request, CURLOPT_POSTFIELDS, $file_arguments); //execute request $curl_response = curl_exec($curl_request); //decode json $noteRecord = json_decode($curl_response); //print Note with attachment details print_r($noteRecord); curl_close($curl_request);
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Note:
											As of PHP 5.6, the '@' upload modifier is disabled for security reasons by the
										Element:code
											CURLOPT_SAFE_UPLOAD
											option. We recommending using
										Element:code
											CURLFILE
											if using PHP >= 5.5, If you would prefer to use the upload modifier, you can set the
										Element:code
											CURLOPT_SAFE_UPLOAD
											option to false.
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											curl_setopt($ch, CURLOPT_SAFE_UPLOAD, false);
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Request
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														//Raw Post - not json encoded Array ( [format] => sugar-html-json [delete_if_fails] => 1 [oauth_token] => 09eac950-c99e-4786-8b10-a3670f38fb3f [filename] => CURLFile Object ( [name] => /Library/WebServer/Documents/file_attachment_manipulation/testfile.txt [mime] => [postname] => ) )
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Response
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														{ "filename":{ "content-type":"text\/plain", "content-length":13, "name":"upload.txt", "uri":"http:\/\/<site url>\/rest\/v10\/Notes\/7b49aebd-8734-9773-8ef1-53553fa369c7\/file\/filename" }, "record":{ "my_favorite":false, "following":true, "id":"7b49aebd-8734-9773-8ef1-53553fa369c7", "name":"My Note", "date_modified":"2014-04-21T11:53:53-04:00", "modified_user_id":"1", "modified_by_name":"admin", "created_by":"1", "created_by_name":"Administrator", "doc_owner":"", "user_favorites":[ ], "description":"", "deleted":false, "assigned_user_id":"", "assigned_user_name":"", "team_count":"", "team_name":[ { "id":1, "name":"Global", "name_2":"", "primary":true } ], "file_mime_type":"text\/plain", "file_url":"", "filename":"upload.txt", "parent_type":"", "parent_id":"", "contact_id":"", "portal_flag":false, "embed_flag":false, "parent_name":"", "contact_name":"", "contact_phone":"", "contact_email":"", "account_id":"", "opportunity_id":"", "acase_id":"", "lead_id":"", "product_id":"", "quote_id":"", "_acl":{ "fields":{ } }, "_module":"Notes" } }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Getting a File Attachment
									Node:
									(type) c
									(layer)3
										Element:p
											Next, we can retrieve the file attachment stored in Sugar by utilizing the
										Element:code
											/<module>/:record/file/:field
										Element:code
											GET
											endpoint. The following code example, works when being accessed via a web browser, as it receives the response from Sugar, and sets the Headers received from Sugar on itself, so that the browser knows to download a file.
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											//Get An Attachment on a Note $url = $instance_url . "/Notes/{$noteRecord->id}/file/filename"; $curl_request = curl_init($url); curl_setopt($curl_request, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_0); //Return Headers curl_setopt($curl_request, CURLOPT_HEADER, true); curl_setopt($curl_request, CURLOPT_SSL_VERIFYPEER, 0); curl_setopt($curl_request, CURLOPT_RETURNTRANSFER, 1); curl_setopt($curl_request, CURLOPT_FOLLOWLOCATION, 0); //DO NOT set Content Type Header to JSON curl_setopt($curl_request, CURLOPT_HTTPHEADER, array( "oauth-token: {$oauth_token}" )); //execute request $curl_response = curl_exec($curl_request); //Get Return Headers $header_size = curl_getinfo($curl_request,CURLINFO_HEADER_SIZE); $headers = substr($curl_response, 0, $header_size); //Outputting the file contents echo 'File saved to download.txt'; $file = substr($curl_response, $header_size); file_put_contents('download.txt', $file); curl_close($curl_request);
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Request
												Node:
												(type) c
												(layer)4
													Element:pre
														http://{site_url}/rest/v10/Notes/bd490e66-2ea7-9349-19cf-535569400cca/file/filename
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Note:
														GET request arguments are passed in the form of a query string.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Response
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														HTTP/1.1 200 OK Date: Wed, 12 Mar 2014 15:15:03 GMT Server: Apache/2.2.22 (Unix) PHP/5.3.14 mod_ssl/2.2.22 OpenSSL/0.9.8o X-Powered-By: PHP/5.3.14 ZendServer/5.0 Set-Cookie: ZDEDebuggerPresent=php,phtml,php3; path=/ Expires: Cache-Control: max-age=0, private Pragma: Content-Disposition: attachment; filename="upload.txt" X-Content-Type-Options: nosniff ETag: d41d8cd98f00b204e9800998ecf8427e Content-Length: 16 Connection: close Content-Type: application/octet-stream This is the file contents.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Download
						Node:
						(type) c
						(layer)2
							Element:p
								You can download the full API example
							Element:a
								here
								.
						Node:
						(type) c
						(layer)2
							Element:p
								Last modified: 02/21/2017 03:56pm
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														How helpful is this page?
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Provide Feedback About This Page
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:footer
													Element:ul
													Element:li
													Element:h4
														CRM Products & Solutions
													Element:li
													Element:a
														Products
													Element:li
													Element:a
														Editions & Pricing
													Element:li
													Element:a
														CRM Solutions
													Element:li
													Element:a
														SugarCRM Mobile
													Element:li
													Element:a
														Store
													Element:li
													Element:a
														SugarExchange
													Element:ul
													Element:li
													Element:h4
														Resources
													Element:li
													Element:a
														CRM Resources
													Element:li
													Element:a
														Case Studies
													Element:li
													Element:a
														Whitepapers
													Element:li
													Element:a
														Webcasts
													Element:li
													Element:a
														Demos
													Element:ul
													Element:li
													Element:h4
														Support & Community
													Element:li
													Element:a
														Support
													Element:li
													Element:a
														Training & Certification
													Element:li
													Element:a
														Partner Directory
													Element:li
													Element:a
														Developers
													Element:li
													Element:a
														Community Forums
													Element:li
													Element:a
														Partner Portal Login
													Element:ul
													Element:li
													Element:h4
														News
													Element:li
													Element:a
														Press Releases
													Element:li
													Element:a
														News
													Element:li
													Element:a
														Events
													Element:li
													Element:a
														Awards
													Element:li
													Element:a
														CRM Blog
													Element:li
													Element:a
														Partner News
													Element:ul
													Element:li
													Element:h4
														About
													Element:li
													Element:a
														Company Overview
													Element:li
													Element:a
														Careers
													Element:li
													Element:a
														Privacy Policy
													Element:li
													Element:a
														Security Policy
													Element:li
													Element:a
														Terms & Conditions
													Element:li
													Element:a
														Environmental Policy
													Element:li
													Element:a
														Impressum
													Element:h4
														Sugar Worldwide:
													Element:a
													Element:span
														Select Region
													Element:ul
													Element:li
													Element:a
														English (Americas)
													Element:li
													Element:a
														English (ANZ)
													Element:li
													Element:a
														English (UK)
													Element:li
													Element:a
														Deutsch (Germany)
													Element:li
													Element:a
														Français (France)
													Element:li
													Element:a
														Español (Europe)
													Element:li
													Element:a
														Español (Latin America)
													Element:li
													Element:a
														Português (Brazil)
													Element:li
													Element:a
														Italian (Italy)
													Element:h4
														Stay Connected:
												Node:
												(type) c
												(layer)4
													Element:a
													Element:span
														Back to top
												Node:
												(type) c
												(layer)4
													Element:a
													Element:span
														Contents
