Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Architecture
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Overview
						Node:
						(type) c
						(layer)2
							Element:p
								This section of Sugar's Developer Guide begins with a high-level overview of the Sugar platform's architecture and contains documentation on granular concepts in Sugar such as logic hooks, caching, logging, extensions, job queue, and more.
						Node:
						(type) c
						(layer)2
							Element:p
								Please continue to the bottom of this page or use the navigation on the left to explore the related content.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Platform
						Node:
						(type) c
						(layer)2
							Element:p
								SugarÂ® is built on open standards and technology such as HTML5, PHP, and JavaScript, and runs on a variety of free and open-source technology like Linux, MySQL, and Elasticsearch. The Sugar platform also supports common proprietary databases such as Oracle, IBM DB2, and Microsoft SQL Server.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								All of Sugar's customers and partners have access to source code that they can choose to deploy on-premise or utilize Sugar On-Demand for a SaaS deployment.
						Node:
						(type) c
						(layer)2
							Element:p
								Out of the box, Sugar uses a consistent platform across all clients and devices (e.g. mobile, web, plug-ins, etc.).
							Element:br
							Element:img
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Front-End Framework
						Node:
						(type) c
						(layer)2
							Element:p
								Our clients are based on a front-end framework called Sidecar. Sidecar is built on open source technology:
							Element:a
								Backbone.js
								,
							Element:a
								jQuery
								,
							Element:a
								Handlebars.js
								, and
							Element:a
								Bootstrap
								. The Sidecar framework provides a responsive UI (to support a variety of form factors) and uses modern, single-page client architecture. Sugar clients connect to Sugar server application via our client REST API. The REST API is implemented in PHP and drives server-side business logic and interacts with a database. If it can be accomplished via one of our clients, then its equivalent functionality can be accomplished using our REST API.
						Node:
						(type) c
						(layer)2
							Element:p
								The Sugar platform uses modules. Modules are a vertically integrated application component that is traditionally organized around a single feature or record type (or underlying database table). For example, contact records are managed via a Contacts module that contains all the business logic, front-end interface definitions, REST APIs, data schema, and relationships with other modules.
						Node:
						(type) c
						(layer)2
							Element:p
								Custom modules can be created and deployed as needed in order to add new features to a Sugar application instance.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Metadata
						Node:
						(type) c
						(layer)2
							Element:p
								Sugar's modules are defined primarily using Metadata. There are two types of metadata definitions within Sugar:
							Element:a
								Vardefs
								, which define the data model for Sugar modules; and
							Element:a
								Viewdefs
								, which define the user interface components that are used with a module.
						Node:
						(type) c
						(layer)2
							Element:p
								Sugar Metadata is implemented as PHP files that can be modified directly by a Sugar Developer making filesystem changes, or indirectly through the use of
							Element:a
								Sugar Studio and Module Builder
								by a Sugar Administrator.
						Node:
						(type) c
						(layer)2
							Element:p
								Metadata allows you to configure solutions instead of having to write countless lines of custom code in order to implement common customizations such as adding custom fields, calculated values, and changing user interface layouts.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Extensions
						Node:
						(type) c
						(layer)2
							Element:p
								Beyond metadata, Sugar is highly customizable and includes an extensive
							Element:a
								Extensions Framework
								that provides Sugar Developers the capability to contribute to pre-defined extension points within the application in a way that is upgrade-safe and will not conflict with other customizations that exist in the system.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Topics
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Autoloader
							Element:p
								The autoloader is an API that allows the unified handling of customizations and customizable metadata while reducing the number of filesystem accesses and improving performance.
							Element:li
							Element:a
								Caching
							Element:p
								Much of Sugar's user interface is built dynamically using a combination of templates, metadata and language files. A file caching mechanism improves the performance of the system by reducing the number of static metadata and language files that need to be resolved at runtime. This cache directory stores the compiled files for JavaScript files, Handlebars templates, and language files.
							Element:li
							Element:a
								Uploads
							Element:p
								The upload directory is used to store files uploaded for imports, attachments, documents, and module loadable packages.
							Element:li
							Element:a
								Mailer Factory
							Element:p
								The Mailer Factory, located in ./modules/Mailer/MailerFactory.php, helps developers generate outbound mailers for the system account as well as individual user accounts. The Mailer Factory is a replacement for SugarPHPMailer which is now deprecated.
							Element:li
							Element:a
								Logging
							Element:p
								The SugarLogger class, located in ./include/SugarLogger/SugarLogger.php, allows for developers and system administrators to log system events to a log file. Sugar then determines which events to write to the log based on the system's Log Level, set in Admin > System Settings.
							Element:li
							Element:a
								Logic Hooks
							Element:p
								The Logic Hook framework allows you to add actions to specific events that occur within the system.
							Element:li
							Element:a
								Languages
							Element:p
								Sugar as an application platform is internationalized and localizable. Data is stored and presented in the UTF-8 codepage, allowing for all character sets to be used. Sugar provides a language-pack framework that allows developers to build support for any language in the display of user interface labels. Each language pack has its own set of display strings which is the basis of language localization. You can add or modify languages using the information in this guide.
							Element:li
							Element:a
								Extensions
							Element:p
								The extension framework, defined in ./ModuleInstall/extensions.php, provides the capability to modify Sugar metadata such as vardefs and layouts in a safe way that supports installing, uninstalling, enabling, and disabling without interfering with other customizations.
							Element:li
							Element:a
								Filters
							Element:p
								Filters are a way to predefine searches on views that render a list of records such as list views, pop-up searches, and lookups. This page explains how to implement the various types of filters for record list views.
							Element:li
							Element:a
								Duplicate Check
							Element:p
								The duplicate-check framework provides the capability to alter how the system searches for duplicate records in the database when creating records. For information on duplicate checking during imports, please refer to the index documentation. The duplicateCheck API endpoint utilizes this framework, which is called by default when saving a record from the user interface.
							Element:li
							Element:a
								Sugar Logic
							Element:p
								Sugar Logic, a feature in all commercial editions of Sugar, enables custom business logic that is easy to create, manage, and reuse on both the server and client.
							Element:li
							Element:a
								Administration
							Element:p
								The Administration class is used to manage settings stored in the database config table.
							Element:li
							Element:a
								Configurator
							Element:p
								The Configurator class, located in ./modules/Configurator/Configurator.php, handles the config settings found in ./config.php and ./config_override.php.
							Element:li
							Element:a
								Module Loader
							Element:p
								Module Loader is used to install custom file packages such as patches, integrations, and other customizations into a Sugar instance in the form of a Module Loadable Package. This documentation covers the basics and best practices for creating module loadable packages for a Sugar installation.
							Element:li
							Element:a
								Module Builder
							Element:p
								The Module Builder tool allows programmers to create custom modules without writing code and to create relationships between new and existing CRM modules. To illustrate how to use Module Builder, this article will show how to create and deploy a custom module.
							Element:li
							Element:a
								Entry Points
							Element:p
								Entry points, defined in ./include/MVC/Controller/entry_point_registry.php, were used to ensure that proper security and authentication steps are applied consistently across the entire application. While they are still used in some areas of Sugar, any developers using custom entry points should adjust their customizations to use the latest REST v10 API endpoints instead.
							Element:li
							Element:a
								Job Queue
							Element:p
								The Job Queue executes automated tasks in Sugar through a scheduler, which integrates with external UNIX systems and Windows systems to run jobs that are scheduled through those systems. Jobs are the individual runs of the specified function from a scheduler.
							Element:li
							Element:a
								Teams
							Element:p
								Teams provide the ability to limit access at the record level, allowing sharing flexibility across functional groups. Developers can manipulate teams programmatically provided they understand Sugar's visibility framework.
							Element:li
							Element:a
								TinyMCE
							Element:p
								This section contains information about working with the TinyMCE editor in Sugar.
							Element:li
							Element:a
								SugarPDF
							Element:p
								This section contains information on generating PDFs and configuring PDF settings and fonts in Sugar.
							Element:li
							Element:a
								DateTime
							Element:p
								The SugarDateTime class, located in, ./include/SugarDateTime.php, extends PHP's built in DateTime class and can be used to perform common operations on date and time values.
							Element:li
							Element:a
								Shortcuts
							Element:p
								Shortcuts is a framework to add shortcut keys to the application. When shortcut keys are registered, they are registered to a particular shortcut session. Shortcut sessions group shortcut keys, and they can be activated, deactivated, saved, and restored. Global shortcut keys can be registered, but they are not tied to a particular shortcut session. They are rather applied everywhere in the application and can only be applied once.
							Element:li
							Element:a
								Web Accessibility
							Element:p
								Learn about the Sugar Accessibility Plugin for Sidecar.
							Element:li
							Element:a
								CLI
							Element:p
								As of Sugar 7.7.1, Sugar includes a beta command line interface tool built using the Symfony Console Framework. Sugar's CLI is intended to be an administrator or developer level power tool to execute PHP code in the context of Sugar's code base. These commands are version specific and can be executed on a preinstalled Sugar instance or on an installed Sugar instance. Sugar's CLI is not intended to be used as a tool to interact remotely with an instance nor is it designed to interact with multiple instances.
							Element:li
							Element:a
								Performance Tuning
							Element:p
								The Performance Tuning section contains information that will help maximize system performance for your Sugar instance.
							Element:li
							Element:a
								Backward Compatibility
							Element:p
								As of SugarÂ® 7, modules are built using the Sidecar framework as the MVC architecture is being deprecated. Modules that have not yet been moved over to the Sidecar framework are set in what Sugar refers to as "backward compatibility" (BWC) mode.
						Node:
						(type) c
						(layer)2
							Element:p
								Last modified: 04/05/2016 11:28am
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														How helpful is this page?
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Provide Feedback About This Page
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:footer
													Element:ul
													Element:li
													Element:h4
														CRM Products & Solutions
													Element:li
													Element:a
														Products
													Element:li
													Element:a
														Editions & Pricing
													Element:li
													Element:a
														CRM Solutions
													Element:li
													Element:a
														SugarCRM Mobile
													Element:li
													Element:a
														Store
													Element:li
													Element:a
														SugarExchange
													Element:ul
													Element:li
													Element:h4
														Resources
													Element:li
													Element:a
														CRM Resources
													Element:li
													Element:a
														Case Studies
													Element:li
													Element:a
														Whitepapers
													Element:li
													Element:a
														Webcasts
													Element:li
													Element:a
														Demos
													Element:ul
													Element:li
													Element:h4
														Support & Community
													Element:li
													Element:a
														Support
													Element:li
													Element:a
														Training & Certification
													Element:li
													Element:a
														Partner Directory
													Element:li
													Element:a
														Developers
													Element:li
													Element:a
														Community Forums
													Element:li
													Element:a
														Partner Portal Login
													Element:ul
													Element:li
													Element:h4
														News
													Element:li
													Element:a
														Press Releases
													Element:li
													Element:a
														News
													Element:li
													Element:a
														Events
													Element:li
													Element:a
														Awards
													Element:li
													Element:a
														CRM Blog
													Element:li
													Element:a
														Partner News
													Element:ul
													Element:li
													Element:h4
														About
													Element:li
													Element:a
														Company Overview
													Element:li
													Element:a
														Careers
													Element:li
													Element:a
														Privacy Policy
													Element:li
													Element:a
														Security Policy
													Element:li
													Element:a
														Terms & Conditions
													Element:li
													Element:a
														Environmental Policy
													Element:li
													Element:a
														Impressum
													Element:h4
														Sugar Worldwide:
													Element:a
													Element:span
														Select Region
													Element:ul
													Element:li
													Element:a
														English (Americas)
													Element:li
													Element:a
														English (ANZ)
													Element:li
													Element:a
														English (UK)
													Element:li
													Element:a
														Deutsch (Germany)
													Element:li
													Element:a
														FranÃ§ais (France)
													Element:li
													Element:a
														EspaÃ±ol (Europe)
													Element:li
													Element:a
														EspaÃ±ol (Latin America)
													Element:li
													Element:a
														PortuguÃªs (Brazil)
													Element:li
													Element:a
														Italian (Italy)
													Element:h4
														Stay Connected:
												Node:
												(type) c
												(layer)4
													Element:a
													Element:span
														Back to top
												Node:
												(type) c
												(layer)4
													Element:a
													Element:span
														Contents
