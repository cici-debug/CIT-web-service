Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					ReadOnly
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Overview
						Node:
						(type) c
						(layer)2
							Element:p
								The SugarLogic
							Element:code
								ReadOnly
								action, located in
							Element:code
								./include/Expressions/Actions/ReadOnlyAction.php
								, is used to determine if a field is editable or not based on a formula.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Implementation
						Node:
						(type) c
						(layer)2
							Element:p
								While the dependency metadata for your module can be defined in
							Element:code
								./modules/<module>/metadata/dependencydefs.php
								and
							Element:code
								./custom/modules/<module>/metadata/dependencydef.php
								, it is recommended to use the
							Element:a
								extension framework
								when customizing stock modules to prevent third party plugins from conflicting with your customizations. The following section will demonstrate how to implement a read-only dependency.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								ReadOnly Parameters
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tbody
							Element:tr
							Element:td
							Element:strong
								Parameter
							Element:td
							Element:strong
								Type
							Element:td
							Element:strong
								Description
							Element:tr
							Element:td
								target
							Element:td
								String
							Element:td
								The name of the field to make read only.
							Element:tr
							Element:td
								value
							Element:td
								String
							Element:td
							Element:p
								This parameter can accept a boolean formula or
							Element:code
								true
								and
							Element:code
								false
								values. Normally you would put a
							Element:br
								SugarLogic formula here to set the boolean.
						Node:
						(type) c
						(layer)2
							Element:p
								For more information on the various parameters in the dependency definitions, please refer to the
							Element:a
								dependency actions
								documentation.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Example
						Node:
						(type) c
						(layer)2
							Element:p
								For our example, we will create a dependency on the Accounts module that makes the
							Element:code
								name
								field read-only when the
							Element:code
								lock_record_c
								field has been checked. The first step is to create the
							Element:code
								lock_record_c
								checkbox field in Studio and add it to your Record View layout. When this checkbox is checked, we will make the name field read-only. Our example extension definition is shown below:
						Node:
						(type) c
						(layer)2
							Element:p
								./custom/Extension/modules/<module>/Ext/Dependencies/custom_name_read_only.php
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								<?php $dependencies['Accounts']['readonly_fields'] = array( 'hooks' => array("edit"), 'trigger' => 'equal($lock_record_c,true)', //Optional, the trigger for the dependency. Defaults to 'true'. 'triggerFields' => array('lock_record_c'), 'onload' => true, //Actions is a list of actions to fire when the trigger is true // You could list multiple fields here each in their own array under 'actions' 'actions' => array( array( 'name' => 'ReadOnly', //The parameters passed in will depend on the action type set in 'name' 'params' => array( 'target' => 'name', 'value' => 'true', ), ), ), );
						Node:
						(type) c
						(layer)2
							Element:p
								Once you have all the files in place you will need to navigate to Admin > Repairs > and run a Quick Repair and Rebuild.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Note
								: It is important that the module name is plural ('Accounts' vs. 'Account') and that the name of the dependency, "readonly_fields" in this example, is unique.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Considerations
						Node:
						(type) c
						(layer)2
							Element:ol
							Element:li
							Element:p
								In some scenarios, you may want a specific field to always be read-only. To accomplish this, you can modify the
							Element:code
								$dependencies['Accounts']['readonly_fields']['trigger']
								attribute to always be "true". Given the above example, you would modify:
							Element:pre
							Element:code
								'trigger' => 'equal($lock_record_c,true)',
							Element:p
								to be:
							Element:pre
							Element:code
								'trigger' => 'true',
						Node:
						(type) c
						(layer)2
							Element:p
								Last modified: 04/01/2016 12:04pm
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														How helpful is this page?
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Provide Feedback About This Page
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:footer
													Element:ul
													Element:li
													Element:h4
														CRM Products & Solutions
													Element:li
													Element:a
														Products
													Element:li
													Element:a
														Editions & Pricing
													Element:li
													Element:a
														CRM Solutions
													Element:li
													Element:a
														SugarCRM Mobile
													Element:li
													Element:a
														Store
													Element:li
													Element:a
														SugarExchange
													Element:ul
													Element:li
													Element:h4
														Resources
													Element:li
													Element:a
														CRM Resources
													Element:li
													Element:a
														Case Studies
													Element:li
													Element:a
														Whitepapers
													Element:li
													Element:a
														Webcasts
													Element:li
													Element:a
														Demos
													Element:ul
													Element:li
													Element:h4
														Support & Community
													Element:li
													Element:a
														Support
													Element:li
													Element:a
														Training & Certification
													Element:li
													Element:a
														Partner Directory
													Element:li
													Element:a
														Developers
													Element:li
													Element:a
														Community Forums
													Element:li
													Element:a
														Partner Portal Login
													Element:ul
													Element:li
													Element:h4
														News
													Element:li
													Element:a
														Press Releases
													Element:li
													Element:a
														News
													Element:li
													Element:a
														Events
													Element:li
													Element:a
														Awards
													Element:li
													Element:a
														CRM Blog
													Element:li
													Element:a
														Partner News
													Element:ul
													Element:li
													Element:h4
														About
													Element:li
													Element:a
														Company Overview
													Element:li
													Element:a
														Careers
													Element:li
													Element:a
														Privacy Policy
													Element:li
													Element:a
														Security Policy
													Element:li
													Element:a
														Terms & Conditions
													Element:li
													Element:a
														Environmental Policy
													Element:li
													Element:a
														Impressum
													Element:h4
														Sugar Worldwide:
													Element:a
													Element:span
														Select Region
													Element:ul
													Element:li
													Element:a
														English (Americas)
													Element:li
													Element:a
														English (ANZ)
													Element:li
													Element:a
														English (UK)
													Element:li
													Element:a
														Deutsch (Germany)
													Element:li
													Element:a
														Français (France)
													Element:li
													Element:a
														Español (Europe)
													Element:li
													Element:a
														Español (Latin America)
													Element:li
													Element:a
														Português (Brazil)
													Element:li
													Element:a
														Italian (Italy)
													Element:h4
														Stay Connected:
												Node:
												(type) c
												(layer)4
													Element:a
													Element:span
														Back to top
												Node:
												(type) c
												(layer)4
													Element:a
													Element:span
														Contents
