Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					This method allows you to get one time delivery reports for sent messages using OMNI scenarios.
				Element:span
					get
					OMNI reports
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Definition
									Node:
									(type) c
									(layer)3
										Element:span
											{{ api_url }}
									Node:
									(type) c
									(layer)3
										Element:span
											{{ page_api_url }}
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Parameters
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Query Params
												Node:
												(type) c
												(layer)4
													Element:strong
														bulkId
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														The ID that uniquely identifies the request. Bulk ID will be received only when you send a message to [more than one destination address](http://dev.infobip.com/v1/docs/send-single-sms#section-single-textual-message-to-one-destination).
												Node:
												(type) c
												(layer)4
													Element:strong
														messageId
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														The ID that uniquely identifies the message sent.
												Node:
												(type) c
												(layer)4
													Element:strong
														limit
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														integer
														Maximal number of messages in returned reports. Default value is **50**.
												Node:
												(type) c
												(layer)4
													Element:strong
														channel
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Channel that was used for message delivering. Possible values are: `SMS`, `VOICE`, `PARSECO`, `VIBER`, `PUSH`, `EMAIL`.
												Node:
												(type) c
												(layer)4
													Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Result Format
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Documentation
											# Response format If successful, response header HTTP status code will be `200 OK` and delivery reports will be returned. If you try to get delivery reports without authorization, you will get a response with HTTP status code `401 Unauthorized`. ## OmniReportsResponse |Parameter|Type|Description| |-|-|-| |*results*|[OmniReport[]](#section-omnireport)|Collection of reports, one per every message.| ### OmniReport |Parameter|Type|Description| |-|-|-| |*bulkId*|String|The ID that uniquely identifies the request.| |*messageId*|String|The ID that uniquely identifies the message sent.| |*channel*|String|Channel that was used for message delivering. Possible values are: `SMS`, `VOICE`, `PARSECO`, `VIBER`, `PUSH`, `EMAIL`.| |*to*|String|The message destination address.| |*sentAt*|Date|Tells when the message was sent. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.| |*doneAt*|Date|Tells when the message was finished processing by Infobip (ie. delivered to destination, delivered to destination network, etc.)| |*messageCount*|int|The number of sent message segments.| |*mccMnc*|String|Mobile country and network codes.| |*price*|[Price](#section-price)|Sent message price.| |*status*|[Status](#section-status)|Indicates whether the message is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status.| |*error*|[Error](#section-error)|Indicates whether the error occurred during the query execution.| #### Price |Parameter|Type|Description| |-|-|-| |*pricePerMessage*|BigDecimal|Price per message.| |*currency*|String|The currency in which the price is expressed.| #### Status |Parameter|Type|Description| |-|-|-| |*groupId*|int|Status [group ID](http://dev.infobip.com/v1/docs/response-codes#status-object-example).| |*groupName*|String|Status [group name](http://dev.infobip.com/v1/docs/response-codes#status-object-example).| |*id*|int|Status [ID](http://dev.infobip.com/v1/docs/response-codes#status-object-example).| |*name*|String|Status [name](http://dev.infobip.com/v1/docs/response-codes#status-object-example).| |*description*|String|Human readable [description](http://dev.infobip.com/v1/docs/response-codes#status-object-example) of the status.| |*action*|String|[Action](http://dev.infobip.com/v1/docs/response-codes#status-object-example) that should be taken to eliminate the error.| #### Error |Parameter|Type|Description| |-|-|-| |*groupId*|int|Error [group ID](http://dev.infobip.com/v1/docs/response-codes#error-object-example).| |*groupName*|String|Error [group name](http://dev.infobip.com/v1/docs/response-codes#error-object-example).| |*id*|int|Error [ID](http://dev.infobip.com/v1/docs/response-codes#error-object-example).| |*name*|String|Error [name](http://dev.infobip.com/v1/docs/response-codes#error-object-example).| |*description*|String|Human readable [description](http://dev.infobip.com/v1/docs/response-codes#error-object-example) of the error.| |*permanent*|boolean|Tells if the error [is permanent](http://dev.infobip.com/v1/docs/response-codes#error-object-example).| [block:api-header] { "type": "basic", "title": "Additional examples" } [/block] # Getting reports without any query parameter **Request** [block:code] { "codes": [ { "code": "GET /omni/1/reports HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/json", "language": "json" }, { "code": "GET /omni/1/reports HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/xml", "language": "xml" }, { "code": "curl -X GET \n-H 'Accept: application/json' \n-H 'Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nhttps://api.infobip.com/omni/1/reports", "language": "curl" }, { "code": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n CURLOPT_URL => \"http://api.infobip.com/omni/1/reports\",\n CURLOPT_RETURNTRANSFER => true,\n CURLOPT_ENCODING => \"\",\n CURLOPT_MAXREDIRS => 10,\n CURLOPT_TIMEOUT => 30,\n CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n CURLOPT_CUSTOMREQUEST => \"GET\",\n CURLOPT_POSTFIELDS => \"\",\n CURLOPT_HTTPHEADER => array(\n \"accept: application/json\",\n \"authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\"\n ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n echo \"cURL Error #:\" . $err;\n} else {\n echo $response;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.infobip.com/omni/1/reports\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"accept\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.infobip.com\")\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'accept': \"application/json\"\n }\n\nconn.request(\"GET\", \"/omni/1/reports\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.get(\"https://api.infobip.com/omni/1/reports\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"accept\", \"application/json\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"https://api.infobip.com/omni/1/reports\");\n\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\n\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === this.DONE) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"GET\", \"https://api.infobip.com/omni/1/reports\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response** [block:code] { "codes": [ { "code": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{ \n \"results\":[ \n { \n \"bulkId\":\"bafdeb3d-719b-4cce-8762-54d47b40f3c5\",\n \"messageId\":\"07e03aae-fabc-44ad-b1ce-222e14094d70\",\n \"to\":\"41793026727\",\n \"messageCount\": 1,\n \"sentAt\":\"2015-02-23T17:41:11.833+0100\",\n \"doneAt\":\"2015-02-23T17:41:11.843+0100\",\n \"mccMnc\":\"22801\",\n \"price\":{ \n \"pricePerMessage\":0.0104,\n \"currency\":\"EUR\"\n },\n \"status\":{ \n \"groupId\":3,\n \"groupName\":\"DELIVERED\",\n \"id\":5,\n \"name\":\"DELIVERED_TO_HANDSET\",\n \"description\":\"Message delivered to handset\"\n },\n \"error\":{ \n \"groupId\":0,\n \"groupName\":\"OK\",\n \"id\":0,\n \"name\":\"NO_ERROR\",\n \"description\":\"No Error\",\n \"permanent\":false\n },\n \"channel\": \"VIBER\"\n },\n { \n \"bulkId\":\"06479ba3-5977-47f6-9346-fee0369bc76b\",\n \"messageId\":\"1f21d8d7-f306-4f53-9f6e-eddfce9849ea\",\n \"to\":\"41793026727\",\n \"sentAt\":\"2015-02-23T17:40:31.773+0100\",\n \"doneAt\":\"2015-02-23T17:40:31.787+0100\",\n \"messageCount\":1,\n \"mccMnc\":\"22801\",\n \"price\":{ \n \"pricePerMessage\":0.01,\n \"currency\":\"EUR\"\n },\n \"status\":{ \n \"groupId\":3,\n \"groupName\":\"DELIVERED\",\n \"id\":5,\n \"name\":\"DELIVERED_TO_HANDSET\",\n \"description\":\"Message delivered to handset\"\n },\n \"error\":{ \n \"groupId\":0,\n \"groupName\":\"OK\",\n \"id\":0,\n \"name\":\"NO_ERROR\",\n \"description\":\"No Error\",\n \"permanent\":false\n },\n \"channel\": \"SMS\"\n }\n ]\n}", "language": "json" }, { "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<omniReportsResponse>\n <results>\n <result>\n <bulkId>7944c32d-bf77-4f41-a752-c3aa89027adc</bulkId>\n <messageId>f97d3b99-fab2-468e-8acf-c8c8792b8ce6</messageId>\n <channel>VIBER</channel>\n <to>41793026727</to>\n <sentAt>2015-02-23T17:41:18.020+0100</sentAt>\n <doneAt>2015-02-23T17:41:18.027+0100</doneAt>\n <messageCount>1</messageCount>\n <mccmnc>22801</mccmnc>\n <price>\n <pricePerMessage>0.0104</pricePerMessage>\n <currency>EUR</currency>\n </price>\n <status>\n <groupId>3</groupId>\n <groupName>DELIVERED</groupName>\n <id>5</id>\n <name>DELIVERED_TO_HANDSET</name>\n <description>Message delivered to handset</description>\n </status>\n <error>\n <groupId>0</groupId>\n <groupName>Ok</groupName>\n <id>0</id>\n <name>NO_ERROR</name>\n <description>No Error</description>\n <permanent>false</permanent>\n </error>\n </result>\n <result>\n <bulkId>bafdeb3d-719b-4cce-8762-54d47b40f3c5</bulkId>\n <messageId>07e03aae-fabc-44ad-b1ce-222e14094d70</messageId>\n <channel>SMS</channel>\n <to>41793026727</to>\n <sentAt>2015-02-23T17:41:11.833+0100</sentAt>\n <doneAt>2015-02-23T17:41:11.843+0100</doneAt>\n <messageCount>1</messageCount>\n <mccmnc>22801</mccmnc>\n <price>\n <pricePerMessage>0.0100</pricePerMessage>\n <currency>EUR</currency>\n </price>\n <status>\n <groupId>3</groupId>\n <groupName>DELIVERED</groupName>\n <id>5</id>\n <name>DELIVERED_TO_HANDSET</name>\n <description>Message delivered to handset</description>\n </status>\n <error>\n <groupId>0</groupId>\n <groupName>Ok</groupName>\n <id>0</id>\n <name>NO_ERROR</name>\n <description>No Error</description>\n <permanent>false</permanent>\n </error>\n </result>\n </results>\n</omniReportsResponse>", "language": "xml" } ] } [/block] # Getting reports with `channel` as filter This request will return messages sent over specified omni PUSH channel. **Request** [block:code] { "codes": [ { "code": "GET /omni/1/reports?channel=PUSH HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/json", "language": "json" }, { "code": "GET /omni/1/reports?channel=PUSH HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/xml", "language": "xml" }, { "code": "curl -X GET \n-H 'Accept: application/json' \n-H 'Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==' \nhttps://api.infobip.com/omni/1/reports?channel=PUSH", "language": "curl" }, { "code": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n CURLOPT_URL => \"http://api.infobip.com/omni/1/reports?channel=PUSH\",\n CURLOPT_RETURNTRANSFER => true,\n CURLOPT_ENCODING => \"\",\n CURLOPT_MAXREDIRS => 10,\n CURLOPT_TIMEOUT => 30,\n CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n CURLOPT_CUSTOMREQUEST => \"GET\",\n CURLOPT_POSTFIELDS => \"\",\n CURLOPT_HTTPHEADER => array(\n \"accept: application/json\",\n \"authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\"\n ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n echo \"cURL Error #:\" . $err;\n} else {\n echo $response;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.infobip.com/omni/1/reports?channel=PUSH\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"accept\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.infobip.com\")\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'accept': \"application/json\"\n }\n\nconn.request(\"GET\", \"/omni/1/reports?channel=PUSH\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.get(\"https://api.infobip.com/omni/1/reports?channel=PUSH\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"accept\", \"application/json\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"https://api.infobip.com/omni/1/reports?channel=PUSH\");\n\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\n\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === this.DONE) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"GET\", \"https://api.infobip.com/omni/1/reports?channel=PUSH\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response** [block:code] { "codes": [ { "code": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{ \n \"results\":[ \n { \n \"bulkId\":\"bafdeb3d-719b-4cce-8762-54d47b40f3c5\",\n \"messageId\":\"07e03aae-fabc-44ad-b1ce-222e14094d70\",\n \"to\":\"41793026727\",\n \"sentAt\":\"2015-02-23T17:41:11.833+0100\",\n \"doneAt\":\"2015-02-23T17:41:11.843+0100\",\n \"messageCount\":1,\n \"mccMnc\":\"22801\",\n \"price\":{ \n \"pricePerMessage\":0,\n \"currency\":\"EUR\"\n },\n \"status\":{ \n \"groupId\":3,\n \"groupName\":\"DELIVERED\",\n \"id\":5,\n \"name\":\"DELIVERED_TO_HANDSET\",\n \"description\":\"Message delivered to handset\"\n },\n \"error\":{ \n \"groupId\":0,\n \"groupName\":\"OK\",\n \"id\":0,\n \"name\":\"NO_ERROR\",\n \"description\":\"No Error\",\n \"permanent\":false\n },\n \"channel\": \"PUSH\"\n },\n { \n \"bulkId\":\"1dece649-6c8f-404e-8c6e-c7e073be509a\",\n \"messageId\":\"faa48fe6-fe2c-4f36-a43b-a070e2906ecb\",\n \"to\":\"41793026727\",\n \"sentAt\":\"2015-02-23T16:22:37.413+0100\",\n \"doneAt\":\"2015-02-23T16:22:37.437+0100\",\n \"messageCount\":1,\n \"mccMnc\":\"22801\",\n \"price\":{ \n \"pricePerMessage\":0,\n \"currency\":\"EUR\"\n },\n \"status\":{ \n \"groupId\":2,\n \"groupName\":\"UNDELIVERABLE\",\n \"id\":9,\n \"name\":\"UNDELIVERABLE_NOT_DELIVERED\",\n \"description\":\"Message sent not delivered\"\n },\n \"error\":{ \n \"groupId\":0,\n \"groupName\":\"OK\",\n \"id\":0,\n \"name\":\"NO_ERROR\",\n \"description\":\"No Error\",\n \"permanent\":false\n },\n \"channel\": \"PUSH\"\n }\n ]\n}", "language": "json" }, { "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<omniReportsResponse>\n <results>\n <result>\n <bulkId>bafdeb3d-719b-4cce-8762-54d47b40f3c5</bulkId>\n <messageId>07e03aae-fabc-44ad-b1ce-222e14094d70</messageId>\n <channel>PUSH</channel>\n <to>41793026727</to>\n <sentAt>2015-02-23T17:41:11.833+0100</sentAt>\n <doneAt>2015-02-23T17:41:11.843+0100</doneAt>\n <messageCount>1</messageCount>\n <mccmnc>22801</mccmnc>\n <price>\n <pricePerMessage>0</pricePerMessage>\n <currency>EUR</currency>\n </price>\n <status>\n <groupId>3</groupId>\n <groupName>DELIVERED</groupName>\n <id>5</id>\n <name>DELIVERED_TO_HANDSET</name>\n <description>Message delivered to handset</description>\n </status>\n <error>\n <groupId>0</groupId>\n <groupName>Ok</groupName>\n <id>0</id>\n <name>NO_ERROR</name>\n <description>No Error</description>\n <permanent>false</permanent>\n </error>\n </result>\n <result>\n <bulkId>1dece649-6c8f-404e-8c6e-c7e073be509a</bulkId>\n <messageId>faa48fe6-fe2c-4f36-a43b-a070e2906ecb</messageId>\n <channel>PUSH</channel>\n <to>41793026727</to>\n <sentAt>2015-02-23T16:22:37.413+0100</sentAt>\n <doneAt>2015-02-23T16:22:37.437+0100</doneAt>\n <messageCount>1</messageCount>\n <mccmnc>22801</mccmnc>\n <price>\n <pricePerMessage>0</pricePerMessage>\n <currency>EUR</currency>\n </price>\n <status>\n <groupId>2</groupId>\n <groupName>UNDELIVERABLE</groupName>\n <id>9</id>\n <name>UNDELIVERABLE_NOT_DELIVERED</name>\n <description>Message sent not delivered</description>\n </status>\n <error>\n <groupId>0</groupId>\n <groupName>Ok</groupName>\n <id>0</id>\n <name>NO_ERROR</name>\n <description>No Error</description>\n <permanent>false</permanent>\n </error>\n </result>\n </results>\n</omniReportsResponse>", "language": "xml" } ] } [/block]
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											User Information
									Node:
									(type) c
									(layer)3
										Element:label
											username
									Node:
									(type) c
									(layer)3
										Element:label
											password
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								Try It Out
						Node:
						(type) c
						(layer)2
							Element:label
								{{ param.name }}
							Element:span
								*
						Node:
						(type) c
						(layer)2
							Element:span
								get
						Node:
						(type) c
						(layer)2
							Element:span
						Node:
						(type) c
						(layer)2
							Element:span
						Node:
						(type) c
						(layer)2
							Element:pre
								{{ tryResults.results }}
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Method
							Element:td
								{{ tryResults.method }}
							Element:tr
							Element:th
								Request Headers
							Element:td
							Element:pre
								{{ tryResults.requestHeaders }}
							Element:tr
							Element:th
								URL
							Element:td
								{{ tryResults.url }}
							Element:tr
							Element:th
								Request Data
							Element:td
							Element:pre
								{{ tryResults.data }}
							Element:tr
							Element:th
								Status
							Element:td
							Element:span
							Element:tr
							Element:th
								Response Headers
							Element:td
							Element:pre
								{{ tryResults.responseHeaders }}
						Node:
						(type) c
						(layer)2
							Element:footer
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Subscribe to our newsletter
												Node:
												(type) c
												(layer)4
													Element:noscript
												Node:
												(type) c
												(layer)4
													Element:noscript
