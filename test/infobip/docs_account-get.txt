Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					This method allows you to get accounts. Specific, all, and filtered accounts could be fetched with this method.
				Element:span
					get
					Account: Get
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Definition
									Node:
									(type) c
									(layer)3
										Element:span
											{{ api_url }}
									Node:
									(type) c
									(layer)3
										Element:span
											{{ page_api_url }}
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Parameters
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Path Params
												Node:
												(type) c
												(layer)4
													Element:strong
														key
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Key used to uniquely identify the account.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Query Params
												Node:
												(type) c
												(layer)4
													Element:strong
														name
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Account name.
												Node:
												(type) c
												(layer)4
													Element:strong
														enabled
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														boolean
														Status of the account (enabled or disabled).
												Node:
												(type) c
												(layer)4
													Element:strong
														limit
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														integer
														Number of accounts to fetch.
												Node:
												(type) c
												(layer)4
													Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Result Format
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Documentation
											# Response format If successful, response header HTTP status code will be `200 OK` and the account will be fetched. If you try to get account(s) without authorization, you will receive an `401 Unauthorized` error. ### Account |Parameter|Type|Description| |-|-|-| |*key*|String|Key used to uniquely identify the account.| |*ownerKey*|String|Key which uniquely identifies account's owner.| |*name*|String|Account name.| |*enabled*|Boolean|Whether account is enabled for use.| [block:api-header] { "type": "get", "title": "Additional examples" } [/block] # Get all accounts [block:callout] { "type": "info", "body": "If **all** accounts are wanted, the **key** parameter must be omitted." } [/block] **Request** [block:code] { "codes": [ { "code": "GET settings/1/accounts HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/json\nAccept: application/json", "language": "json" }, { "code": "GET settings/1/accounts HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/xml\nAccept: application/xml", "language": "xml" }, { "code": "curl -H \"Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\" -H \"Content-Type: application/json\" 'https://api.infobip.com/settings/1/accounts'", "language": "curl" }, { "code": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n CURLOPT_URL => \"https://api.infobip.com/settings/1/accounts\",\n CURLOPT_RETURNTRANSFER => true,\n CURLOPT_ENCODING => \"\",\n CURLOPT_MAXREDIRS => 10,\n CURLOPT_TIMEOUT => 30,\n CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n CURLOPT_CUSTOMREQUEST => \"GET\",\n CURLOPT_HTTPHEADER => array(\n \"authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\"\n ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n echo \"cURL Error #:\" . $err;\n} else {\n echo $response;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.infobip.com/settings/1/accounts\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"content-type\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.infobip.com\")\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'content-type': \"application/json\"\n }\n\nconn.request(\"GET\", \"/settings/1/accounts\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.get(\"https://api.infobip.com/settings/1/accounts\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"content-type\", \"application/json\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"https://api.infobip.com/settings/1/accounts\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === this.DONE) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"GET\", \"https://api.infobip.com/settings/1/accounts\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response** [block:code] { "codes": [ { "code": "{\n\t\"accounts\": [\n {\n \t\t\"key\": \"EF04794F718A3FC8C6DFA0B215B2CF24\", \n \t\t\"ownerKey\": \"28A3FC8C615B2CF24E1DFA0BF04794F7\",\n \t\t\"name\": \"AccountName\",\n \t\t\"enabled\": true\n\t\t},\n {\n \t\t\"key\": \"C599FEF17318256ACBF987F6D75A156D\", \n \t\t\"ownerKey\": \"28A3FC8C615B2CF24E1DFA0BF04794F7\",\n \t\t\"name\": \"SecondAccountName\",\n \t\t\"enabled\": true\n\t\t},\n {\n \t\t\"key\": \"02D7060AA84699271CD92369F2DEBABF\", \n \t\t\"ownerKey\": \"28A3FC8C615B2CF24E1DFA0BF04794F7\",\n \t\t\"name\": \"DisabledAccount\",\n \t\t\"enabled\": false\n\t\t}\n ]\n}", "language": "json", "name": "200 OK - JSON" }, { "code": "<?xml version='1.0' encoding='UTF-8'?>\n<accountsResponse>\n <accounts>\n <account>\n <name>AccountName</name>\n <key>EF04794F718A3FC8C6DFA0B215B2CF24</key>\n <ownerKey>28A3FC8C615B2CF24E1DFA0BF04794F7</ownerKey>\n <enabled>true</enabled>\n </account>\n <account>\n <name>SecondAccountName</name>\n <key>C599FEF17318256ACBF987F6D75A156D</key>\n <ownerKey>28A3FC8C615B2CF24E1DFA0BF04794F7</ownerKey>\n <enabled>true</enabled>\n </account>\n <account>\n <name>DisabledAccount</name>\n <key>02D7060AA84699271CD92369F2DEBABF</key>\n <ownerKey>28A3FC8C615B2CF24E1DFA0BF04794F7</ownerKey>\n <enabled>true</enabled>\n </account>\n </accounts>\n</accountsResponse>", "language": "xml", "name": "200 OK - XML" } ] } [/block] ## Response format If successful, response header HTTP status code will be `200 OK` and all accounts will be returned. If you try to get the accounts without authorization, you will receive an `401 Unauthorized` error. ### Accounts Response |Parameter|Type|Description| |-|-|-| |*accounts*|[Account[]](#section-account)|Array of accounts.| ### Account |Parameter|Type|Description| |-|-|-| |*key*|String|Key used to uniquely identify the account.| |*ownerKey*|String|Key which uniquely identifies account's owner.| |*name*|String|Account name.| |*enabled*|Boolean|Whether account is enabled for use.| # Get account by name [block:callout] { "type": "warning", "body": "Usage of **key** and **name**, **enabled** and **limit** parameters is **exclusive**. With *key* **path** parameter, specific account is returned, but with **query** parameter *name* (or *enabled*), list of accounts is returned, filtered by specified parameter value.", "title": "Caution!" } [/block] **Request** [block:code] { "codes": [ { "code": "GET settings/1/accounts?name=AccountName HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/json\nAccept: application/json", "language": "json" }, { "code": "GET settings/1/accounts?name=AccountName HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/json\nAccept: application/json", "language": "xml" }, { "code": "curl -H \"Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\" -H \"Content-Type: application/json\" 'https://api.infobip.com/settings/1/accounts?name=AccountName'", "language": "curl" }, { "code": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n CURLOPT_URL => \"https://api.infobip.com/settings/1/accounts?name=AccountName\",\n CURLOPT_RETURNTRANSFER => true,\n CURLOPT_ENCODING => \"\",\n CURLOPT_MAXREDIRS => 10,\n CURLOPT_TIMEOUT => 30,\n CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n CURLOPT_CUSTOMREQUEST => \"GET\",\n CURLOPT_HTTPHEADER => array(\n \"authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\"\n ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n echo \"cURL Error #:\" . $err;\n} else {\n echo $response;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.infobip.com/settings/1/accounts?name=AccountName\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"content-type\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.infobip.com\")\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'content-type': \"application/json\"\n }\n\nconn.request(\"GET\", \"settings/1/accounts?name=AccountName\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.get(\"https://api.infobip.com/settings/1/accounts?name=AccountName\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"content-type\", \"application/json\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"https://api.infobip.com/settings/1/accounts?name=AccountName\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === this.DONE) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"GET\", \"https://api.infobip.com/settings/1/accounts?name=AccountName\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response** [block:code] { "codes": [ { "code": "{\n \"accounts\":[\n {\n \t\t\"key\": \"EF04794F718A3FC8C6DFA0B215B2CF24\", \n \t\t\"ownerKey\": \"28A3FC8C615B2CF24E1DFA0BF04794F7\",\n \t\t\"name\": \"AccountName\",\n \t\t\"enabled\": true\n\t\t}\n ]\n}", "language": "json", "name": "200 OK - JSON" }, { "code": "<?xml version='1.0' encoding='UTF-8'?>\n<account>\n <key>EF04794F718A3FC8C6DFA0B215B2CF24</key>\n <ownerKey>28A3FC8C615B2CF24E1DFA0BF04794F7</ownerKey>\n <name>AccountName</name>\n <enabled>true</enabled>\n</account>", "language": "xml", "name": "200 OK - XML" } ] } [/block] # Get only enabled accounts **Request** [block:code] { "codes": [ { "code": "GET settings/1/accounts?enabled=true HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/json\nAccept: application/json\n", "language": "json" }, { "code": "GET settings/1/accounts?enabled=true HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/json\nAccept: application/json\n", "language": "xml" }, { "code": "curl -H \"Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\" -H \"Content-Type: application/json\" 'https://api.infobip.com/settings/1/accounts?enabled=true'", "language": "curl" }, { "code": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n CURLOPT_URL => \"https://api.infobip.com/settings/1/accounts?enabled=true\",\n CURLOPT_RETURNTRANSFER => true,\n CURLOPT_ENCODING => \"\",\n CURLOPT_MAXREDIRS => 10,\n CURLOPT_TIMEOUT => 30,\n CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n CURLOPT_CUSTOMREQUEST => \"GET\",\n CURLOPT_HTTPHEADER => array(\n \"authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\"\n ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n echo \"cURL Error #:\" . $err;\n} else {\n echo $response;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.infobip.com/settings/1/accounts?enabled=true\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"content-type\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.infobip.com\")\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'content-type': \"application/json\"\n }\n\nconn.request(\"GET\", \"settings/1/accounts?enabled=true\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.get(\"https://api.infobip.com/settings/1/accounts?enabled=true\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"content-type\", \"application/json\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"https://api.infobip.com/settings/1/accounts?enabled=true\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === this.DONE) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"GET\", \"https://api.infobip.com/settings/1/accounts?enabled=true\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response** [block:code] { "codes": [ { "code": "{\n \"accounts\":[\n {\n \t\t\"key\": \"EF04794F718A3FC8C6DFA0B215B2CF24\", \n \t\t\"ownerKey\": \"28A3FC8C615B2CF24E1DFA0BF04794F7\",\n \t\t\"name\": \"AccountName\",\n \t\t\"enabled\": true\n\t\t},\n {\n \t\t\"key\": \"C599FEF17318256ACBF987F6D75A156D\", \n \t\t\"ownerKey\": \"28A3FC8C615B2CF24E1DFA0BF04794F7\",\n \t\t\"name\": \"SecondAccountName\",\n \t\t\"enabled\": true\n\t\t}\n ]\n}", "language": "json", "name": "200 OK - JSON" }, { "code": "<?xml version='1.0' encoding='UTF-8'?>\n<accountsResponse>\n <accounts>\n <account>\n <name>AccountName</name>\n <key>EF04794F718A3FC8C6DFA0B215B2CF24</key>\n <ownerKey>28A3FC8C615B2CF24E1DFA0BF04794F7</ownerKey>\n <enabled>true</enabled>\n </account>\n <account>\n <name>SecondAccountName</name>\n <key>C599FEF17318256ACBF987F6D75A156D</key>\n <ownerKey>28A3FC8C615B2CF24E1DFA0BF04794F7</ownerKey>\n <enabled>true</enabled>\n </account>\n </accounts>\n</accountsResponse>", "language": "xml", "name": "200 OK - XML" } ] } [/block]
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											User Information
									Node:
									(type) c
									(layer)3
										Element:label
											username
									Node:
									(type) c
									(layer)3
										Element:label
											password
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								Try It Out
						Node:
						(type) c
						(layer)2
							Element:label
								{{ param.name }}
							Element:span
								*
						Node:
						(type) c
						(layer)2
							Element:span
								get
						Node:
						(type) c
						(layer)2
							Element:span
						Node:
						(type) c
						(layer)2
							Element:span
						Node:
						(type) c
						(layer)2
							Element:pre
								{{ tryResults.results }}
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Method
							Element:td
								{{ tryResults.method }}
							Element:tr
							Element:th
								Request Headers
							Element:td
							Element:pre
								{{ tryResults.requestHeaders }}
							Element:tr
							Element:th
								URL
							Element:td
								{{ tryResults.url }}
							Element:tr
							Element:th
								Request Data
							Element:td
							Element:pre
								{{ tryResults.data }}
							Element:tr
							Element:th
								Status
							Element:td
							Element:span
							Element:tr
							Element:th
								Response Headers
							Element:td
							Element:pre
								{{ tryResults.responseHeaders }}
						Node:
						(type) c
						(layer)2
							Element:footer
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Subscribe to our newsletter
												Node:
												(type) c
												(layer)4
													Element:noscript
												Node:
												(type) c
												(layer)4
													Element:noscript
