Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					This method allows you to create 2FA message for specific application.
				Element:span
					post
					Message: Create
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Definition
									Node:
									(type) c
									(layer)3
										Element:span
											{{ api_url }}
									Node:
									(type) c
									(layer)3
										Element:span
											{{ page_api_url }}
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Parameters
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Path Params
												Node:
												(type) c
												(layer)4
													Element:strong
														applicationId
														required
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														2FA application ID for which the message will be created.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Body Params
												Node:
												(type) c
												(layer)4
													Element:strong
														pinType
														required
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Type of PIN code that will be generated and sent as part of 2FA message. <br>You can set PIN type to numeric, alpha, alphanumeric or hex so parameter must have one of these values:<br> 1. **NUMERIC**<br> 2. **ALPHA**<br>3. **ALPHANUMERIC**<br>4. **HEX**<br>
												Node:
												(type) c
												(layer)4
													Element:strong
														pinPlaceholder
														required
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														PIN placeholder.<br>This value should be part of a message text and it will be replaced with generated PIN code.
												Node:
												(type) c
												(layer)4
													Element:strong
														messageText
														required
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Text of a message that will be sent. <br>Message text should contain PIN placeholder.
												Node:
												(type) c
												(layer)4
													Element:strong
														pinLength
														required
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														integer
														PIN code length. <br>PIN code length should be between **1** and **8** characters.
												Node:
												(type) c
												(layer)4
													Element:strong
														senderId
														required
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														The name that will appear as the sender of the 2FA message (*Example:* CompanyName).
												Node:
												(type) c
												(layer)4
													Element:strong
														language
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Code of the language in which message text is written. It is used for reading the message when it is sent over voice.<br>If no language is set, message will be read in English. Supported languages are listed in the [table below](#section-supported-languages).
												Node:
												(type) c
												(layer)4
													Element:strong
														repeatDTMF
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														DTMF code which enables repeating message if subscriber enters it.
												Node:
												(type) c
												(layer)4
													Element:strong
														speechRate
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														double
												Node:
												(type) c
												(layer)4
													Element:span
														1
														The speed of speech for the resulting message. Supported range is from 0.5 to 2.
												Node:
												(type) c
												(layer)4
													Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Result Format
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Documentation
											## Response format On success, response header HTTP status code will be `200 OK`. On error, you will receive an [error response status code](doc:2fa-status-codes-and-error-details) in the header and the response body will contain an [error object](doc:2fa-status-codes-and-error-details). If you try to create an application when you do not have the userâ€™s authorization, you will receive an error `401` Unauthorized. ### Response |Parameter|Type|Description| |-|-|-| |*messageId*|String|2FA message ID.| |*applicationId*|String|2FA application ID for which the message was created.| |*pinPlaceholder*|String|PIN code placeholder. Right before sending SMS, PIN code placeholder will be replaced with generated PIN code.| |*messageText*|String|Text of a message that will be sent. | |*pinLength*|Integer|PIN code length.| |*pinType*|String|Type of PIN code that will be generated and sent as part of 2FA message.| |*senderId*|String| The name that will appear as the sender of the 2FA message (Example: CompanyName).| |*language*|String|Language code of language in which message text is written. It is used for reading the message when it is sent via voice. If no language is set, message will be read in English. Supported languages are listed in the table below.| ## Supported languages |Language code|Language| |-|-| |*en*|English| |*es*|Spanish| |*ca*|Catalan| |*zh-cn*|Chinese - simplified| |*zh-tw*|Chinese - traditional| |*da*|Danish| |*nl*|Dutch| |*fr*|French| |*de*|German| |*it*|Italian| |*ja*|Japanese| |*ko*|Korean| |*no*|Norwegian| |*pl*|Polish| |*pt-pt*|Portuguese| |*ru*|Russian| |*sv*|Swedish| |*fi*|Finnish|
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											User Information
									Node:
									(type) c
									(layer)3
										Element:label
											username
									Node:
									(type) c
									(layer)3
										Element:label
											password
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								Try It Out
						Node:
						(type) c
						(layer)2
							Element:label
								{{ param.name }}
							Element:span
								*
						Node:
						(type) c
						(layer)2
							Element:span
								post
						Node:
						(type) c
						(layer)2
							Element:span
						Node:
						(type) c
						(layer)2
							Element:span
						Node:
						(type) c
						(layer)2
							Element:pre
								{{ tryResults.results }}
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Method
							Element:td
								{{ tryResults.method }}
							Element:tr
							Element:th
								Request Headers
							Element:td
							Element:pre
								{{ tryResults.requestHeaders }}
							Element:tr
							Element:th
								URL
							Element:td
								{{ tryResults.url }}
							Element:tr
							Element:th
								Request Data
							Element:td
							Element:pre
								{{ tryResults.data }}
							Element:tr
							Element:th
								Status
							Element:td
							Element:span
							Element:tr
							Element:th
								Response Headers
							Element:td
							Element:pre
								{{ tryResults.responseHeaders }}
						Node:
						(type) c
						(layer)2
							Element:footer
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Subscribe to our newsletter
												Node:
												(type) c
												(layer)4
													Element:noscript
												Node:
												(type) c
												(layer)4
													Element:noscript
