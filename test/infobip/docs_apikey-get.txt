Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					This method allows you to get API keys. Specific, all, and filtered API keys could be fetched with this method.
				Element:span
					get
					ApiKey: Get
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Definition
									Node:
									(type) c
									(layer)3
										Element:span
											{{ api_url }}
									Node:
									(type) c
									(layer)3
										Element:span
											{{ page_api_url }}
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Parameters
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Path Params
												Node:
												(type) c
												(layer)4
													Element:strong
														accountKey
														required
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Account key
												Node:
												(type) c
												(layer)4
													Element:strong
														key
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Key used to uniquely identify ApiKey
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Query Params
												Node:
												(type) c
												(layer)4
													Element:strong
														name
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														ApiKey name
												Node:
												(type) c
												(layer)4
													Element:strong
														publicApiKey
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														ApiKey value
												Node:
												(type) c
												(layer)4
													Element:strong
														enabled
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														boolean
														Status of ApiKey (enabled/disabled)
												Node:
												(type) c
												(layer)4
													Element:strong
														limit
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														integer
														Number of ApiKeys to fetch
												Node:
												(type) c
												(layer)4
													Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Result Format
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Documentation
											# Response format If successful, response header HTTP status code will be `200 OK` and the API key will be fetched. If you try to get API key(s) without authorization, you will receive an `401 Unauthorized` error. ### Api Key |Parameter|Type|Description| |-|-|-| |*name*|String|Api key name.| |*key*|String|Key used to uniquely identify API key.| |*publicApiKey*|String|Generated API Key for authorization.| |*accountKey*|String|Account key that generated API key belongs to.| |*allowedIPs*|String[]|Array of allowed IP addresses for API call origin. If allowedIPs is not included, there will be no IP restrictions for API requests.| |*validFrom*|Date|Date since the APi key is valid.| |*validTo*|Date|Date until the APi key is valid.| |*enabled*|Boolean|Whether API key is enabled for use.| [block:api-header] { "type": "basic", "title": "Additional examples" } [/block] # Get all ApiKeys [block:callout] { "type": "info", "body": "If **all** ApiKeys are wanted, **key** parameter must be omitted." } [/block] **Request** [block:code] { "codes": [ { "code": "GET settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/json\nAccept: application/json\n", "language": "json" }, { "code": "GET settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/xml\nAccept: application/xml\n", "language": "xml" }, { "code": "curl -H \"Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\" -H \"Content-Type: application/json\" 'https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys'", "language": "curl" }, { "code": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n CURLOPT_URL => \"https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys\",\n CURLOPT_RETURNTRANSFER => true,\n CURLOPT_ENCODING => \"\",\n CURLOPT_MAXREDIRS => 10,\n CURLOPT_TIMEOUT => 30,\n CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n CURLOPT_CUSTOMREQUEST => \"GET\",\n CURLOPT_HTTPHEADER => array(\n \"authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\"\n ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n echo \"cURL Error #:\" . $err;\n} else {\n echo $response;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"content-type\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.infobip.com\")\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'content-type': \"application/json\"\n }\n\nconn.request(\"GET\", \"/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.get(\"https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"content-type\", \"application/json\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === this.DONE) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"GET\", \"https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response** [block:code] { "codes": [ { "code": "{\n\t\"apiKeys\": [{\n\t\t\"name\": \"Api key 1\",\n\t\t\"key\": \"C6DFA0B215B2CF24EF04794F718A3FC8\",\n\t\t\"publicApiKey\": \"7bd7d59cfe90e4d32b1d2f20d39c86df-fbaa8670-1008-ac7a-398a-3c11ac797c77\",\n\t\t\"accountKey\": \"D0F64A8194B48B8BB2B86E6385D22792\",\n\t\t\"allowedIPs\": [\n\t\t\t\"127.0.0.1\",\n\t\t\t\"192.168.1.1\"\n\t\t],\n\t\t\"validFrom\": \"2015-02-12T09:58:20.323+0100\",\n\t\t\"validTo\": \"2016-02-12T09:58:20.323+0100\",\n\t\t\"enabled\": true\n\t}, {\n\t\t\"name\": \"Api key 2\",\n\t\t\"key\": \"9C815F8AF3328A8194B48B8BB2B86E62\",\n\t\t\"publicApiKey\": \"fe90e4d32b1d2f20d39c86df7bd7d59c-a8670fba-1108-398a-ac7a-c797c773c11a\",\n\t\t\"accountKey\": \"D0F64A8194B48B8BB2B86E6385D22792\",\n\t\t\"allowedIPs\": [\n\t\t\t\"127.0.0.1\",\n\t\t\t\"192.168.1.1\"\n\t\t],\n\t\t\"validFrom\": \"2015-02-12T09:58:20.323+0100\",\n\t\t\"validTo\": \"2016-09-12T07:58:20.323+0100\",\n\t\t\"enabled\": true\n\t}, {\n\t\t\"name\": \"Api key 3\",\n\t\t\"key\": \"28A8194B48B8BB2B86E629C815F8AF33\",\n\t\t\"publicApiKey\": \"a20d39c86df7bd7d59cfe90e4d32b1d2-a8670fba-ae02-afe3-1035-c7aef812411a\",\n\t\t\"accountKey\": \"D0F64A8194B48B8BB2B86E6385D22792\",\n\t\t\"validFrom\": \"2015-12-12T09:58:20.323+0100\",\n\t\t\"enabled\": false\n\t}]\n}", "language": "json", "name": "200 OK - JSON" }, { "code": "<?xml version='1.0' encoding='UTF-8'?>\n<apiKeysResponse>\n <apiKeys>\n <apiKey>\n <name>Api key 1</name>\n <key>C6DFA0B215B2CF24EF04794F718A3FC8</key>\n <publicApiKey>d0f64a8194b48b8bb2b86e6385d22792-5af80fc8-44b0-4998-9b64-d850f659bc97</publicApiKey>\n <accountKey>D0F64A8194B48B8BB2B86E6385D22792</accountKey>\n <allowedIPs>\n <allowedIP>127.0.0.1</allowedIP>\n <allowedIP>192.168.1.1</allowedIP>\n </allowedIPs>\n <validFrom>2015-02-12T09:58:20.323+0100</validFrom>\n <validTo>2016-02-12T09:58:20.323+0100</validTo>\n <enabled>true</enabled>\n </apiKey>\n <apiKey>\n <name>Api key 2</name>\n <key>9C815F8AF3328A8194B48B8BB2B86E62</key>\n <publicApiKey>fe90e4d32b1d2f20d39c86df7bd7d59c-a8670fba-1108-398a-ac7a-c797c773c11a</publicApiKey>\n <accountKey>D0F64A8194B48B8BB2B86E6385D22792</accountKey>\n <allowedIPs>\n <allowedIP>127.0.0.1</allowedIP>\n <allowedIP>192.168.1.1</allowedIP>\n </allowedIPs>\n <validFrom>2015-02-12T09:58:20.323+0100</validFrom>\n <validTo>2016-09-12T07:58:20.323+0100</validTo>\n <enabled>true</enabled>\n </apiKey>\n <apiKey>\n <name>Api key 3</name>\n <key>28A8194B48B8BB2B86E629C815F8AF33</key>\n <publicApiKey>a20d39c86df7bd7d59cfe90e4d32b1d2-a8670fba-ae02-afe3-1035-c7aef812411a</publicApiKey>\n <accountKey>D0F64A8194B48B8BB2B86E6385D22792</accountKey>\n <allowedIPs>\n <allowedIP>127.0.0.1</allowedIP>\n <allowedIP>192.168.1.1</allowedIP>\n </allowedIPs>\n <validFrom>2015-12-12T09:58:20.323+0100</validFrom>\n <enabled>false</enabled>\n </apiKey>\n </apiKeys>\n</apiKeysResponse>", "language": "xml", "name": "200 OK - XML" } ] } [/block] ## Response format If successful, response header HTTP status code will be `200 OK` and all api keys will be returned. If you try to get the api keys without authorization, you will receive an `401 Unauthorized` error. ### Api Key Response |Parameter|Type|Description| |-|-|-| |*apiKeys*|[ApiKey[]](#section-api-key)|Array of api keys.| # Get api key by name [block:callout] { "type": "warning", "body": "Usage of **key** and **name**, **enabled** and **publicApiKey** parameters is **exclusive**. With *key* **path** parameter, specific api key is returned, but with **query** parameter *name* (or *enabled*, or *publicApiKey*), list of api keys is returned, filtered by specified parameter value.", "title": "Caution!" } [/block] **Request** [block:code] { "codes": [ { "code": "GET settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?name=Api+key+2 HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/json\nAccept: application/json\n", "language": "json" }, { "code": "GET settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?name=Api+key+2 HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/json\nAccept: application/json\n", "language": "xml" }, { "code": "curl -H \"Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\" -H \"Content-Type: application/json\" 'https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?name=Api+key+2'", "language": "curl" }, { "code": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n CURLOPT_URL => \"https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?name=Api+key+2\",\n CURLOPT_RETURNTRANSFER => true,\n CURLOPT_ENCODING => \"\",\n CURLOPT_MAXREDIRS => 10,\n CURLOPT_TIMEOUT => 30,\n CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n CURLOPT_CUSTOMREQUEST => \"GET\",\n CURLOPT_HTTPHEADER => array(\n \"authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\"\n ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n echo \"cURL Error #:\" . $err;\n} else {\n echo $response;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?name=Api+key+2\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"content-type\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.infobip.com\")\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'content-type': \"application/json\"\n }\n\nconn.request(\"GET\", \"/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?name=Api+key+2\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.get(\"https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?name=Api+key+2\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"content-type\", \"application/json\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?name=Api+key+2\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === this.DONE) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"GET\", \"https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?name=Api+key+2\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response** [block:code] { "codes": [ { "code": "{\n \"name\": \"Api key 2\",\n \"key\": \"9C815F8AF3328A8194B48B8BB2B86E62\",\n \"publicApiKey\": \"fe90e4d32b1d2f20d39c86df7bd7d59c-a8670fba-1108-398a-ac7a-c797c773c11a\",\n \"accountKey\": \"D0F64A8194B48B8BB2B86E6385D22792\",\n \"allowedIPs\": [\n \"127.0.0.1\",\n \"192.168.1.1\"\n ],\n \"validFrom\": \"2015-02-12T09:58:20.323+0100\",\n \"validTo\": \"2016-09-12T07:58:20.323+0100\",\n \"enabled\": true\n}", "language": "json", "name": "200 OK - JSON" }, { "code": "<?xml version='1.0' encoding='UTF-8'?>\n<apiKey>\n <name>Api key 2</name>\n <key>9C815F8AF3328A8194B48B8BB2B86E62</key>\n <publicApiKey>fe90e4d32b1d2f20d39c86df7bd7d59c-a8670fba-1108-398a-ac7a-c797c773c11a</publicApiKey>\n <accountKey>D0F64A8194B48B8BB2B86E6385D22792</accountKey>\n <allowedIPs>\n <allowedIP>127.0.0.1</allowedIP>\n <allowedIP>192.168.1.1</allowedIP>\n </allowedIPs>\n <validFrom>2015-02-12T09:58:20.323+0100</validFrom>\n <validTo>2016-09-12T07:58:20.323+0100</validTo>\n <enabled>true</enabled>\n</apiKey>", "language": "xml", "name": "200 OK - XML" } ] } [/block] # Get api key by it's publicApiKey value **Request** [block:code] { "codes": [ { "code": "GET settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?publicApiKey=a20d39c86df7bd7d59cfe90e4d32b1d2-a8670fba-ae02-afe3-1035-c7aef812411a HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/json\nAccept: application/json\n", "language": "json" }, { "code": "GET settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?publicApiKey=a20d39c86df7bd7d59cfe90e4d32b1d2-a8670fba-ae02-afe3-1035-c7aef812411a HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/json\nAccept: application/json\n", "language": "xml" }, { "code": "curl -H \"Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\" -H \"Content-Type: application/json\" 'https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?publicApiKey=a20d39c86df7bd7d59cfe90e4d32b1d2-a8670fba-ae02-afe3-1035-c7aef812411a'", "language": "curl" }, { "code": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n CURLOPT_URL => \"https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?publicApiKey=a20d39c86df7bd7d59cfe90e4d32b1d2-a8670fba-ae02-afe3-1035-c7aef812411a\",\n CURLOPT_RETURNTRANSFER => true,\n CURLOPT_ENCODING => \"\",\n CURLOPT_MAXREDIRS => 10,\n CURLOPT_TIMEOUT => 30,\n CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n CURLOPT_CUSTOMREQUEST => \"GET\",\n CURLOPT_HTTPHEADER => array(\n \"authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\"\n ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n echo \"cURL Error #:\" . $err;\n} else {\n echo $response;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?publicApiKey=a20d39c86df7bd7d59cfe90e4d32b1d2-a8670fba-ae02-afe3-1035-c7aef812411a\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"content-type\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.infobip.com\")\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'content-type': \"application/json\"\n }\n\nconn.request(\"GET\", \"/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?publicApiKey=a20d39c86df7bd7d59cfe90e4d32b1d2-a8670fba-ae02-afe3-1035-c7aef812411a\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.get(\"https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?publicApiKey=a20d39c86df7bd7d59cfe90e4d32b1d2-a8670fba-ae02-afe3-1035-c7aef812411a\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"content-type\", \"application/json\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?publicApiKey=a20d39c86df7bd7d59cfe90e4d32b1d2-a8670fba-ae02-afe3-1035-c7aef812411a\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === this.DONE) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"GET\", \"https://api.infobip.com/settings/1/accounts/D0F64A8194B48B8BB2B86E6385D22792/api-keys?publicApiKey=a20d39c86df7bd7d59cfe90e4d32b1d2-a8670fba-ae02-afe3-1035-c7aef812411a\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response** [block:code] { "codes": [ { "code": "{\n \"name\": \"Api key 3\",\n \"key\": \"28A8194B48B8BB2B86E629C815F8AF33\",\n \"publicApiKey\": \"a20d39c86df7bd7d59cfe90e4d32b1d2-a8670fba-ae02-afe3-1035-c7aef812411a\",\n \"accountKey\": \"D0F64A8194B48B8BB2B86E6385D22792\",\n \"validFrom\": \"2015-12-12T09:58:20.323+0100\",\n \"enabled\": false\n}", "language": "json", "name": "200 OK - JSON" }, { "code": "<?xml version='1.0' encoding='UTF-8'?>\n<apiKey>\n <name>Api key 3</name>\n <key>28A8194B48B8BB2B86E629C815F8AF33</key>\n <publicApiKey>a20d39c86df7bd7d59cfe90e4d32b1d2-a8670fba-ae02-afe3-1035-c7aef812411a</publicApiKey>\n <accountKey>D0F64A8194B48B8BB2B86E6385D22792</accountKey>\n <allowedIPs>\n <allowedIP>127.0.0.1</allowedIP>\n <allowedIP>192.168.1.1</allowedIP>\n </allowedIPs>\n <validFrom>2015-12-12T09:58:20.323+0100</validFrom>\n <enabled>false</enabled>\n</apiKey>", "language": "xml", "name": "200 OK - XML" } ] } [/block]
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											User Information
									Node:
									(type) c
									(layer)3
										Element:label
											username
									Node:
									(type) c
									(layer)3
										Element:label
											password
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								Try It Out
						Node:
						(type) c
						(layer)2
							Element:label
								{{ param.name }}
							Element:span
								*
						Node:
						(type) c
						(layer)2
							Element:span
								get
						Node:
						(type) c
						(layer)2
							Element:span
						Node:
						(type) c
						(layer)2
							Element:span
						Node:
						(type) c
						(layer)2
							Element:pre
								{{ tryResults.results }}
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Method
							Element:td
								{{ tryResults.method }}
							Element:tr
							Element:th
								Request Headers
							Element:td
							Element:pre
								{{ tryResults.requestHeaders }}
							Element:tr
							Element:th
								URL
							Element:td
								{{ tryResults.url }}
							Element:tr
							Element:th
								Request Data
							Element:td
							Element:pre
								{{ tryResults.data }}
							Element:tr
							Element:th
								Status
							Element:td
							Element:span
							Element:tr
							Element:th
								Response Headers
							Element:td
							Element:pre
								{{ tryResults.responseHeaders }}
						Node:
						(type) c
						(layer)2
							Element:footer
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Subscribe to our newsletter
												Node:
												(type) c
												(layer)4
													Element:noscript
												Node:
												(type) c
												(layer)4
													Element:noscript
