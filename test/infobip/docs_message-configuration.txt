Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Configuration
					Create and manage application configurations for receiving messages.
			Node:
			(type) c
			(layer)1
				Element:hr
					Besides sending SMS messages, our platform fully supports **the reception of incoming SMS messages from your users**. Configuration and Action setup will enable you to achieve that. [block:callout] { "type": "warning", "title": "How to receive incoming SMS?", "body": "Setup for receiving incoming SMS messages is a two step process, assuming you have already [puchased a phone number](/docs/phone-number).\n1. Configuration setup\n2. Action setup\n\nDuring the Action setup, you can decide about the method how to receive messages:\n* Pull method\n* Forward method" } [/block] [block:image] { "images": [ { "image": [ "https://files.readme.io/10760f4-sms1.PNG", "sms1.PNG", 489, 88, "#e1d3d6" ] } ] } [/block] **Configuration **is a logical container for Actions. You can choose a method of incoming message delivery through the Action setup, but before you do that, Configuration must be created since the Action can only exist inside of the Configuration container. ###Configuration with the keyword Each phone number can have one or many Configuration containers. Configuration container may be assigned a **keyword**. Only one container without keyword is allowed, and others must all have unique keywords. When SMS is received on this phone number, the first word of the message will be compared with Configuration keywords, and if matched, Action rule of matched container will be executed as message delivery method (Pull or Forward). [block:callout] { "type": "info", "title": "Configuration with no keyword", "body": "Besides Configurations with keywords, we recommend always to have a Configuration without a keyword-enabled to serve as \"catch all\" fail safe in case of SMS with no keyword match is received." } [/block] ###Available methods * [Create new Configuration](#create-new-configuration) * [List all Configurations](#list-all-configurations) * [Get single Configuration](#get-single-configuration) * [Update Configuration](#update-configuration) * [Delete Configuration](#delete-configuration) ##Configuration model |Property name|Type|Description| |-|-|-| |configurationKey|string|Unique ID of the Confguration.| |keyword|string|Keyword expected in received message.| |activeFrom|string|Date since when Configuration is active.| |activeUntil|string|Expiration date of the Configuration.| |isActive|bool|Current status of the Configuration.| [block:api-header] { "type": "post", "title": "Create new Configuration" } [/block] This method allows you to create Configuration container for the new Action. ``` https://api.infobip.com/sms/1/numbers/{numberKey}/configurations ``` Request example [block:code] { "codes": [ { "code": "POST /sms/1/numbers/78D8394AC5EG0460B4CF0E723FC31B49/configurations HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/json", "language": "json" } ] } [/block] Response [block:code] { "codes": [ { "code": "{\n \"configurationKey\": \"64GD2CA328536A09DD2CA328536A09D8\",\n \"activeFrom\": \"2016-12-14T13:21:14.806+0000\",\n \"isActive\": true\n}", "language": "json" } ] } [/block] The success response is represented by an HTTP status code `200 OK`. ###Configuration with the keyword Request example [block:code] { "codes": [ { "code": "POST /sms/1/numbers/78D8394AC5EG0460B4CF0E723FC31B49/configurations HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/json\n\n{\n\t\"keyword\": \"INFOBIP\"\n}", "language": "json" } ] } [/block] Response [block:code] { "codes": [ { "code": "{\n \"configurationKey\": \"54AD2CA328536A09AD2CA328536A09D8\",\n \"keyword\": \"INFOBIP\",\n \"activeFrom\": \"2016-12-14T13:21:51.349+0000\",\n \"isActive\": true\n}", "language": "json" } ] } [/block] The success response is represented by an HTTP status code `200 OK`. [block:api-header] { "type": "get", "title": "List all Configurations" } [/block] This method will list all of your Configurations for selected number. ``` https://api.infobip.com/sms/1/numbers/{numberKey}/configurations ``` Request example [block:code] { "codes": [ { "code": "GET /sms/1/numbers/78D8394AC5EG0460B4CF0E723FC31B49/configurations HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/json", "language": "json" } ] } [/block] Response [block:code] { "codes": [ { "code": "{\n \"configurations\": [\n {\n \"configurationKey\": \"64GD2CA328536A09DD2CA328536A09D8\",\n \"activeFrom\": \"2016-12-14T13:21:14.807+0000\",\n \"isActive\": true\n },\n {\n \"configurationKey\": \"54AD1CA328536A09AD1CA328536A09D8\",\n \"keyword\": \"INFOBIP\",\n \"activeFrom\": \"2016-12-14T13:21:51.350+0000\",\n \"isActive\": true\n }\n ],\n \"configurationCount\": 2\n}", "language": "text" } ] } [/block] The success response is represented by an HTTP status code `200 OK`. [block:api-header] { "type": "get", "title": "Get single Configuration" } [/block] This method will get a single Configurations by configuration key. ``` https://api.infobip.com/sms/1/numbers/{numberKey}/configurations/{configurationKey} ``` Request example [block:code] { "codes": [ { "code": "GET /sms/1/numbers/78D8394AC5EG0460B4CF0E723FC31B49/configurations/54AD1CA328536A09AD1CA328536A09D8 HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/json", "language": "json" } ] } [/block] Response [block:code] { "codes": [ { "code": "{\n \"configurationKey\": \"54D053219829339BAD1CA328536A09D8\",\n \"keyword\": \"INFOBIP\",\n \"activeFrom\": \"2016-12-14T13:21:51.350+0000\",\n \"isActive\": true\n}", "language": "json" } ] } [/block] The success response is represented by an HTTP status code `200 OK`. [block:api-header] { "type": "put", "title": "Update Configuration" } [/block] This method allows you to update keyword and validity period for single Configurations by configuration key. ``` https://api.infobip.com/sms/1/numbers/{numberKey}/configurations/{configurationKey} ``` Request example [block:code] { "codes": [ { "code": "PUT /sms/1/numbers/78D8394AC5EG0460B4CF0E723FC31B49/configurations/54AD1CA328536A09AD1CA328536A09D8 HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/json\n\n{\n \"keyword\": \"API\",\n \"activeFrom\": \"2016-09-29T11:50:16.000+0000\",\n \"activeUntil\": \"2017-09-29T11:50:16.000+0000\"\n}", "language": "json" } ] } [/block] Response [block:code] { "codes": [ { "code": "{\n \"configurationKey\": \"54AD1CA328536A09AD1CA328536A09D8\",\n \"keyword\": \"API\",\n \"activeFrom\": \"2016-09-29T11:50:16.000+0000\",\n \"activeUntil\": \"2017-09-29T11:50:16.000+0000\",\n \"isActive\": true\n}", "language": "json" } ] } [/block] The success response is represented by an HTTP status code `200 OK`. [block:api-header] { "type": "delete", "title": "Delete Configuration" } [/block] This method allows you to delete a Configuration by configuration key. ``` https://api.infobip.com/sms/1/numbers/{numberKey}/configurations/{configurationKey} ``` [block:code] { "codes": [ { "code": "DELETE /sms/1/numbers/78D8394AC5EG0460B4CF0E723FC31B49/configurations/54AD1CA328536A09AD1CA328536A09D8 HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/json", "language": "json" } ] } [/block] The success response is presented by an HTTP status code `204 No Content`. There is no response body.
			Node:
			(type) c
			(layer)1
				Element:footer
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Subscribe to our newsletter
												Node:
												(type) c
												(layer)4
													Element:noscript
												Node:
												(type) c
												(layer)4
													Element:noscript
