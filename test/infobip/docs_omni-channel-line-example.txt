Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					OMNI channel: LINE example
					This page will describe simple methods which will allow you to send messages and retrieve message reports using the LINE and SMS communication channels.
			Node:
			(type) c
			(layer)1
				Element:hr
					[block:callout] { "type": "warning", "title": "Prerequisites", "body": "To be able to send LINE messages using Infobip platform you need to have configured the LINE service. Please follow the [detailed instructions](/docs/line-chat-api-introduction-and-setup) for service activation and configuration." } [/block] In the following examples we'll show you how to configure the LINE messaging - SMS OMNI failover scenario, send your first messages and retrieve message reports. There are three easy steps to follow: [block:callout] { "type": "info", "title": "LINE messaging - SMS OMNI process", "body": "1. Create an OMNI Scenario\n2. Send message using an OMNI scenario\n3. Get Delivery Reports" } [/block] Available methods: * [Create OMNI scenario](#create-an-omni-scenario) * [Send OMNI text message](#send-omni-text-message) * [Send rich OMNI message](#send-rich-omni-message) * [Get delivery reports](#get-delivery-reports) [block:api-header] { "type": "basic", "title": "Create an OMNI scenario" } [/block] The first step is to create an **OMNI scenario**. In the OMNI scenario configuration, you need to define the OMNI steps which will be sequentially executed. The key parameters are the **`channel`** and **`from`**, respectively identifying the communication channels and senders for each communication channel. For Line sender (**"channel": "LINE"** flow) You should use the Line application **`key`** obtained during the LINE channel activation process. [block:code] { "codes": [ { "code": "POST /omni/1/scenarios HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/json\n\n{\n \"name\":\"Line test scenario\",\n \"flow\": [\n {\n \"from\": \"37B94F4D2BA3C58B58526EAEAA1AB35C\",\n \"channel\": \"LINE\"\n },\n {\n \"from\": \"385971006006\",\n \"channel\": \"SMS\"\n }\n ],\n \"default\": false\n}", "language": "json" } ] } [/block] Response [block:code] { "codes": [ { "code": "{\n \"key\": \"1E094D5C820B067G2B3DBA6B414F4CF5\",\n \"name\": \"Line test scenario\",\n \"flow\": [\n {\n \"from\": \"37B94F4D2BA3C58B58526EAEAA1AB35C\",\n \"channel\": \"LINE\"\n },\n {\n \"from\": \"385951006026\",\n \"channel\": \"SMS\"\n }\n ],\n \"default\": false\n}", "language": "json" } ] } [/block] If successful, the response header HTTP status code will be `200 OK` and the scenario will be created, as shown in the example bellow. If you try to create the scenario without authorization, you will receive a `401 Unauthorized` error. The **`key`** parameter needs to be stored as it will be used when sending the OMNI message. [block:callout] { "type": "info", "title": "Info", "body": "More information about creating an OMNI scenario can be found at the following page: [Scenario: Create](doc:omni-create-scenario)." } [/block] The response: If successful, the response header HTTP status code will be `200 OK` and the message will be sent. If you try to send the message without authorization, you will receive a `401 Unauthorized` error. [block:api-header] { "type": "post", "title": "Send OMNI text message" } [/block] LINE messages are sent to `lineUserKey`. The `phoneNumber` will be used only as SMS destination. [block:callout] { "type": "warning", "title": "LINE User Key", "body": "Each registered application user has a unique 'key' which can be used as LINE messaging destination address. Learn how to access your user keys in [**User documentation**](/docs/line-chat-user)." } [/block] Request example [block:code] { "codes": [ { "code": "POST /omni/1/advanced HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/json\n\n{ \n \"scenarioKey\": \"1E094D5C820B067G2B3DBA6B414F4CF5\",\n \"destinations\":[ \n { \n \"to\": {\n \"phoneNumber\": \"385977666618\",\n \"lineUserKey\": \"e3e95e22-0235-49bc-bd1c-812ef33da3d5\"\n }\n }\n ],\n \"line\": {\n \"text\": \"Original Line message.\"\n },\n \"sms\": {\n \"text\": \"Fallback SMS message.\"\n }\n}\n\n", "language": "json" } ] } [/block] The response [block:code] { "codes": [ { "code": "{\n \"messages\": [\n {\n \"to\": {\n \"phoneNumber\": \"385977666618\",\n \"lineUserKey\": \"e3e95e22-0235-49bc-bd1c-812ef33da3d5\"\n },\n \"status\": {\n \"groupId\": 1,\n \"groupName\": \"PENDING\",\n \"id\": 7,\n \"name\": \"PENDING_ENROUTE\",\n \"description\": \"Message sent to next instance\"\n },\n \"messageId\": \"d61a683e-fa26-411f-9d4d-0b84eb223605\"\n }\n ]\n}", "language": "json" } ] } [/block] [block:api-header] { "type": "post", "title": "Send rich OMNI message" } [/block] Besides the text message, the media file can also be sent over API. Before sending the message, you will need to upload your media to publicly accessible server and supply `url` of the file. Supported media types are: `IMAGE`, `AUDIO`, `VIDEO` and `STICKER`. If `type` is defined, additional parameters need to be included in the request: IMAGE and VIDEO `url` and `thumbnailUrl` AUDIO `url` and `duration` STICKER `packageId` and `stickerId` Image request example: [block:code] { "codes": [ { "code": "POST /omni/1/advanced HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/json\n\n{ \n\t\"scenarioKey\":\"1E094D5C820B067G2B3DBA6B414F4CF5\", \n \"destinations\":[ \n \t{ \n \t\"to\":{\n \"phoneNumber\": \"385977666618\",\n \"lineUserKey\": \"e3e95e22-0235-49bc-bd1c-812ef33da3d5\"\n }\n }\n ],\n \"line\": {\n \"type\": \"IMAGE\",\n \"url\": \"https://somedomain.com/images/image.jpg\",\n \"thumbnailUrl\":\"https://example.com/preview.jpg\"\n },\n \"sms\": {\n \t\"text\": \"This is the SMS failover message\"\n }\n}", "language": "json" } ] } [/block] Response: [block:code] { "codes": [ { "code": "{\n \"messages\": [\n {\n \"to\": {\n \"phoneNumber\": \"385977666618\",\n \"lineUserKey\": \"e3e95e22-0235-49bc-bd1c-812ef33da3d5\"\n },\n \"status\": {\n \"groupId\": 1,\n \"groupName\": \"PENDING\",\n \"id\": 7,\n \"name\": \"PENDING_ENROUTE\",\n \"description\": \"Message sent to next instance\"\n },\n \"messageId\": \"04fc5784-97e4-45c3-a6e9-81ac91b38638\"\n }\n ]\n}", "language": "json" } ] } [/block] [block:api-header] { "type": "get", "title": "Get Delivery Reports" } [/block] Once you've successfully sent your message using the **advanced** API method you'll be able to check the status of sent messages using the [OMNI reports](doc:omni-reports) method. The simplest way is to use the method without any query parameters. In that case, the response will contain all the messages sent to a specific account. [block:code] { "codes": [ { "code": "GET /omni/1/reports HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/json", "language": "json" } ] } [/block] The response will contain all messages, rejected and delivered, as shown in the example below. [block:code] { "codes": [ { "code": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{ \n \"results\":[ \n { \n \"messageId\":\"1215f543ab19-345f-adbd-12ad31451ed25f35\",\n \"to\":\"41793026731\",\n \"messageCount\": 1,\n \"sentAt\":\"2016-02-23T17:41:11.833+0100\",\n \"doneAt\":\"2016-02-23T17:41:11.843+0100\",\n \"mccMnc\":\"22801\",\n \"price\":{ \n \"pricePerMessage\":0.0104,\n \"currency\":\"EUR\"\n },\n \"status\":{ \n \"groupId\":2,\n \"groupName\":\"UNDELIVERABLE\",\n \"id\":9,\n \"name\":\"UNDELIVERABLE_NOT_DELIVERED\",\n \"description\":\"Message sent not delivered\"\n },\n \"error\":{ \n \"groupId\":1,\n \"groupName\":\"HANDSET_ERRORS\",\n \"id\":6,\n \"name\":\"EC_ABSENT_SUBSCRIBER_SM\",\n \"description\":\"Absent Subscriber\",\n \"permanent\":false\n },\n \"channel\": \"LINE\"\n },\n { \n \"messageId\":\"2315d543441c-335f-1d3d-142d31451ed25f35\",\n \"to\":\"41793026731\",\n \"sentAt\":\"2016-06-23T17:40:31.773+0100\",\n \"doneAt\":\"2016-06-23T17:40:31.787+0100\",\n \"messageCount\":1,\n \"mccMnc\":\"22801\",\n \"price\":{ \n \"pricePerMessage\":0.01,\n \"currency\":\"EUR\"\n },\n \"status\":{ \n \"groupId\":3,\n \"groupName\":\"DELIVERED\",\n \"id\":5,\n \"name\":\"DELIVERED_TO_HANDSET\",\n \"description\":\"Message delivered to handset\"\n },\n \"error\":{ \n \"groupId\":0,\n \"groupName\":\"OK\",\n \"id\":0,\n \"name\":\"NO_ERROR\",\n \"description\":\"No Error\",\n \"permanent\":false\n },\n \"channel\": \"SMS\"\n }\n ]\n}", "language": "json" } ] } [/block]
			Node:
			(type) c
			(layer)1
				Element:footer
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Subscribe to our newsletter
												Node:
												(type) c
												(layer)4
													Element:noscript
												Node:
												(type) c
												(layer)4
													Element:noscript
