Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					This method allows you to get one time delivery reports for sent voice message.
				Element:span
					endpoint
					Delivery reports for voice messages
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Definition
									Node:
									(type) c
									(layer)3
										Element:span
											{{ api_url }}
									Node:
									(type) c
									(layer)3
										Element:span
											{{ page_api_url }}
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Parameters
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Query Params
												Node:
												(type) c
												(layer)4
													Element:strong
														bulkId
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														The ID that uniquely identifies the request. Bulk ID will be received only when you send a message to [more than one destination address](http://dev.infobip.com/v1/docs/send-single-sms#section-single-textual-message-to-one-destination).
												Node:
												(type) c
												(layer)4
													Element:strong
														messageId
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														The ID that uniquely identifies the message sent.
												Node:
												(type) c
												(layer)4
													Element:strong
														limit
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														The maximum number of returned delivery reports. Default value is **50**.
												Node:
												(type) c
												(layer)4
													Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Result Format
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Documentation
											# Response format On success, response header HTTP status code will be `200 OK` and delivery reports will be returned in the response body. If you try to send a message without authorization, you will get a response with HTTP status code `401 Unauthorized`. ## VoiceReportResponse |Parameter|Type|Description| |-|-|-| |*results*|[VoiceReport[]](#voicereport)|Collection of reports, one per every message.| ### VoiceReport |Parameter|Type|Description| |-|-|-| |*bulkId*|String|Bulk ID.| |*messageId*|String|Message ID.| |*to*|String|Destination address.| |*sentAt*|Date|Tells when the voice message was sent. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.| |*doneAt*|Date|Tells when the voice message was processed by Infobip (ie. delivered to destination, delivered to destination network, etc.)| |*duration*|int|Call duration in seconds.| |*mccMnc*|String|Mobile country and network codes.| |*dtmfCodes*|String|DTMF code entered by user.| |*recordedAudioFileUrl*|String|Url to retrieve recorded calls that were made by messages with the record feature activated.| |*price*|[Price](#price)|Sent voice message price.| |*status*|[Status](#status)|Indicates whether the message is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status.| |*error*|[Error](#error)|Indicates whether the error occurred during the query execution.| #### Price |Parameter|Type|Description| |-|-|-| |*pricePerMessage*|BigDecimal|Price per one second of the voice message.| |*currency*|String|The currency in which the price is expressed.| #### Status |Parameter|Type|Description| |-|-|-| |*groupId*|int|Status [group ID](http://dev.infobip.com/v1/docs/response-codes#status-object-example).| |*groupName*|String|Status [group name](http://dev.infobip.com/v1/docs/response-codes#status-object-example).| |*id*|int|Status [ID](http://dev.infobip.com/v1/docs/response-codes#status-object-example).| |*name*|String|Status [name](http://dev.infobip.com/v1/docs/response-codes#status-object-example).| |*description*|String|Human readable [description](http://dev.infobip.com/v1/docs/response-codes#status-object-example) of the status.| #### Error |Parameter|Type|Description| |-|-|-| |*groupId*|int|Error [group ID](http://dev.infobip.com/v1/docs/response-codes#error-object-example).| |*groupName*|String|Error [group name](http://dev.infobip.com/v1/docs/response-codes#error-object-example).| |*id*|int|Error [ID](http://dev.infobip.com/v1/docs/response-codes#error-object-example).| |*name*|String|Error [name](http://dev.infobip.com/v1/docs/response-codes#error-object-example).| |*description*|String|Human readable [description](http://dev.infobip.com/v1/docs/response-codes#error-object-example) of the error.| |*permanent*|boolean|Tells if the error [is permanent](http://dev.infobip.com/v1/docs/response-codes#error-object-example).| [block:callout] { "type": "warning", "title": "Delivery report will be returned only once!", "body": "Delivery reports are returned **only once**. Additional delivery report request will return empty collection." } [/block] [block:api-header] { "type": "basic", "title": "Additional examples" } [/block] # Getting reports without any query parameter **Request** [block:code] { "codes": [ { "code": "GET /tts/3/reports HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/json", "language": "json" }, { "code": "GET /tts/3/reports HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/xml", "language": "xml" }, { "code": "curl -X GET \\\n-H \"Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\" \\\n-H \"Content-Type: application/json\" \\\n-H \"Accept: application/json\" \\\n\"http://api.infobip.com/tts/3/reports\"", "language": "curl" }, { "code": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n CURLOPT_URL => \"http://api.infobip.com/tts/3/reports\",\n CURLOPT_RETURNTRANSFER => true,\n CURLOPT_ENCODING => \"\",\n CURLOPT_MAXREDIRS => 10,\n CURLOPT_TIMEOUT => 30,\n CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n CURLOPT_CUSTOMREQUEST => \"GET\",\n CURLOPT_POSTFIELDS => \"\",\n CURLOPT_HTTPHEADER => array(\n \"accept: application/json\",\n \"authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n \"content-type: application/json\"\n ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n echo \"cURL Error #:\" . $err;\n} else {\n echo $response;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"http://api.infobip.com/tts/3/reports\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"content-type\"] = 'application/json'\nrequest[\"accept\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "import http.client\n\nconn = http.client.HTTPConnection(\"api.infobip.com\")\n\npayload = \"\"\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'content-type': \"application/json\",\n 'accept': \"application/json\"\n }\n\nconn.request(\"GET\", \"/tts/3/reports\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.get(\"http://api.infobip.com/tts/3/reports\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"content-type\", \"application/json\")\n .header(\"accept\", \"application/json\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"http://api.infobip.com/tts/3/reports\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var data = JSON.stringify(false);\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === 4) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"GET\", \"http://api.infobip.com/tts/3/reports\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response** [block:code] { "codes": [ { "code": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{ \n \"results\":[ \n { \n \"bulkId\":\"8c20f086-d82b-48cc-b2b3-3ca5f7aca9fb\",\n \"messageId\":\"ff4804ef-6ab6-4abd-984d-ab3b1387e852\",\n \"to\":\"385981178\",\n \"sentAt\":\"2015-02-12T09:58:20.323+0100\",\n \"doneAt\":\"2015-02-12T09:58:20.337+0100\",\n \"duration\":10,\n \"mccMnc\": \"21901\",\n \"dtmfCodes\":\"1\",\n \"recordedAudioFileUrl\":\"https://api.infobip.com/tts/3/files/ff4804ef-6ab6-4abd-984d-ab3b1387e852/385981178\",\n \"price\":{ \n \"pricePerSecond\":0.01,\n \"currency\":\"EUR\"\n },\n \"status\":{ \n \"id\":5,\n \"groupId\":3,\n \"groupName\":\"DELIVERED\",\n \"name\":\"DELIVERED_TO_HANDSET\",\n \"description\":\"Message delivered to handset\"\n },\n \"error\":{ \n \"groupId\":0,\n \"groupName\":\"OK\",\n \"id\": 5000,\n \"name\": \"VOICE_ANSWERED\",\n \"description\": \"Call answered by human\",\n \t\t\"permanent\": true\n }\n }\n ]\n}", "language": "json" }, { "code": "HTTP/1.1 200 OK\nContent-Type: application/xml\n\n<reportResponse>\n <results>\n <result>\n <bulkId>8c20f086-d82b-48cc-b2b3-3ca5f7aca9fb</bulkId>\n <messageId>ff4804ef-6ab6-4abd-984d-ab3b1387e852</messageId>\n <to>385981178</to>\n <sentAt>2015-02-12T09:58:20.323+0100</sentAt>\n <doneAt>2015-02-12T09:58:20.337+0100</doneAt>\n <duration>10</duration>\n <mccMnc>21901</mccMnc>\n <dtmfCodes>1</dtmfCodes>\n <recordedAudioFileUrl>https://api.infobip.com/tts/3/files/ff4804ef-6ab6-4abd-984d-ab3b1387e852/385981178</recordedAudioFileUrl>\n <price>\n <pricePerMessage>0.01</pricePerMessage>\n <currency>EUR</currency>\n </price>\n <status>\n <id>5</id>\n <groupId>3</groupId>\n <groupName>DELIVERED</groupName>\n <name>DELIVERED_TO_HANDSET</name>\n <description>Message delivered to handset</description>\n </status>\n <error>\n <groupId>0</groupId>\n <groupName>OK</groupName>\n <id>5000</id>\n <name>VOICE_ANSWERED</name>\n <description>Call answered by human</description>\n <permanent>true</permanent>\n </error>\n </result>\n </results>\n</reportResponse>", "language": "xml" } ] } [/block] # Getting the two initial delivery reports **Request** [block:code] { "codes": [ { "code": "GET /tts/3/reports?limit=2 HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/json", "language": "json" }, { "code": "GET /tts/3/reports?limit=2 HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/xml", "language": "xml" }, { "code": "curl -X GET \n-H \"Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\" \n-H \"Content-Type: application/json\" \n-H \"Accept: application/json\" \n\"http://api.infobip.com/tts/3/reports?limit=2\"", "language": "curl" }, { "code": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n CURLOPT_URL => \"http://api.infobip.com/tts/3/reports?limit=2\",\n CURLOPT_RETURNTRANSFER => true,\n CURLOPT_ENCODING => \"\",\n CURLOPT_MAXREDIRS => 10,\n CURLOPT_TIMEOUT => 30,\n CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n CURLOPT_CUSTOMREQUEST => \"GET\",\n CURLOPT_POSTFIELDS => \"\",\n CURLOPT_HTTPHEADER => array(\n \"accept: application/json\",\n \"authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n \"content-type: application/json\"\n ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n echo \"cURL Error #:\" . $err;\n} else {\n echo $response;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"http://api.infobip.com/tts/3/reports?limit=2\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"content-type\"] = 'application/json'\nrequest[\"accept\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "import http.client\n\nconn = http.client.HTTPConnection(\"api.infobip.com\")\n\npayload = \"\"\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'content-type': \"application/json\",\n 'accept': \"application/json\"\n }\n\nconn.request(\"GET\", \"/tts/3/reports?limit=2\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.get(\"http://api.infobip.com/tts/3/reports?limit=2\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"content-type\", \"application/json\")\n .header(\"accept\", \"application/json\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"http://api.infobip.com/tts/3/reports?limit=2\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var data = JSON.stringify(false);\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === 4) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"GET\", \"http://api.infobip.com/tts/3/reports?limit=2\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response** [block:code] { "codes": [ { "code": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{ \n \"results\":[ \n { \n \"bulkId\":\"80664c0c-e1ca-414d-806a-5caf146463df\",\n \"messageId\":\"bcfb828b-7df9-4e7b-8715-f34f5c61271a\",\n \"to\":\"38598111\",\n \"sentAt\":\"2015-02-12T09:58:20.323+0100\",\n \"doneAt\":\"2015-02-12T09:58:20.337+0100\",\n \"duration\":10,\n \"mccMnc\": \"21901\",\n \"dtmfCodes\":\"1\",\n \"recordedAudioFileUrl\":\"https://api.infobip.com/tts/3/files/bcfb828b-7df9-4e7b-8715-f34f5c61271a/38598111\",\n \"price\":{ \n \"pricePerSecond\":0.01,\n \"currency\":\"EUR\"\n },\n \"status\":{ \n \"groupId\":3,\n \"groupName\":\"DELIVERED\",\n \"id\":5,\n \"name\":\"DELIVERED_TO_HANDSET\",\n \"description\":\"Message delivered to handset\"\n },\n \"error\":{ \n \"groupId\":0,\n \"groupName\":\"OK\",\n \"id\": 5000,\n \"name\": \"VOICE_ANSWERED\",\n \"description\": \"Call answered by human\",\n \t\t\"permanent\": true\n }\n },\n { \n \"bulkId\":\"08fe4407-c48f-4d4b-a2f4-9ff583c985b8\",\n \"messageId\":\"12db39c3-7822-4e72-a3ec-c87442c0ffc5\",\n \"to\":\"385981112\",\n \"sentAt\":\"2015-02-12T09:58:20.345+0100\",\n \"doneAt\":\"2015-02-12T09:58:20.350+0100\",\n \"duration\":10,\n \"dtmfCodes\":\"1\",\n \"recordedAudioFileUrl\":\"https://api.infobip.com/tts/3/files/12db39c3-7822-4e72-a3ec-c87442c0ffc5/385981112\",\n \"price\":{ \n \"pricePerSecond\":0.01,\n \"currency\":\"EUR\"\n },\n \"status\":{ \n \"groupId\":3,\n \"groupName\":\"DELIVERED\",\n \"id\":5,\n \"name\":\"DELIVERED_TO_HANDSET\",\n \"description\":\"Message delivered to handset\"\n },\n \"error\":{ \n \"groupId\":0,\n \"groupName\":\"OK\",\n \"id\": 5000,\n \"name\": \"VOICE_ANSWERED\",\n \"description\": \"Call answered by human\",\n \t\t\"permanent\": true\n }\n }\n ]\n}", "language": "json" }, { "code": "HTTP/1.1 200 OK\nContent-Type: application/xml\n\n<reportResponse>\n <results>\n <result>\n <bulkId>80664c0c-e1ca-414d-806a-5caf146463df</bulkId>\n <messageId>bcfb828b-7df9-4e7b-8715-f34f5c61271a</messageId>\n <to>38598111</to>\n <sentAt>2015-02-12T09:58:20.323+0100</sentAt>\n <doneAt>2015-02-12T09:58:20.337+0100</doneAt>\n <duration>10</duration>\n <mccMnc>21901</mccMnc>\n <dtmfCodes>1</dtmfCodes>\n <recordedAudioFileUrl>https://api.infobip.com/tts/3/files/bcfb828b-7df9-4e7b-8715-f34f5c61271a/38598111</recordedAudioFileUrl>\n <price>\n <pricePerMessage>0.01</pricePerMessage>\n <currency>EUR</currency>\n </price>\n <status>\n <groupId>3</groupId>\n <groupName>DELIVERED</groupName>\n <id>5</id>\n <name>DELIVERED_TO_HANDSET</name>\n <description>Message delivered to handset</description>\n </status>\n <error>\n <groupId>0</groupId>\n <groupName>OK</groupName>\n <id>5000</id>\n <name>VOICE_ANSWERED</name>\n <description>Call answered by human</description>\n <permanent>true</permanent>\n </error>\n </result>\n <result>\n <bulkId>08fe4407-c48f-4d4b-a2f4-9ff583c985b8</bulkId>\n <messageId>12db39c3-7822-4e72-a3ec-c87442c0ffc5</messageId>\n <to>385981112</to>\n <sentAt>2015-02-12T09:58:20.345+0100</sentAt>\n <doneAt>2015-02-12T09:58:20.350+0100</doneAt>\n <duration>10</duration>\n <mccMnc>21901</mccMnc>\n <dtmfCodes>1</dtmfCodes>\n <recordedAudioFileUrl>https://api.infobip.com/tts/3/files/12db39c3-7822-4e72-a3ec-c87442c0ffc5/385981112</recordedAudioFileUrl>\n <price>\n <pricePerMessage>0.01</pricePerMessage>\n <currency>EUR</currency>\n </price>\n <status>\n <groupId>3</groupId>\n <groupName>DELIVERED</groupName>\n <id>5</id>\n <name>DELIVERED_TO_HANDSET</name>\n <description>Message delivered to handset</description>\n </status>\n <error>\n <groupId>0</groupId>\n <groupName>OK</groupName>\n <id>5000</id>\n <name>VOICE_ANSWERED</name>\n <description>Call answered by human</description>\n <permanent>true</permanent>\n </error>\n </result>\n </results>\n</reportResponse>", "language": "xml" } ] } [/block]
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											User Information
									Node:
									(type) c
									(layer)3
										Element:label
											username
									Node:
									(type) c
									(layer)3
										Element:label
											password
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								Try It Out
						Node:
						(type) c
						(layer)2
							Element:label
								{{ param.name }}
							Element:span
								*
						Node:
						(type) c
						(layer)2
							Element:span
								endpoint
						Node:
						(type) c
						(layer)2
							Element:span
						Node:
						(type) c
						(layer)2
							Element:span
						Node:
						(type) c
						(layer)2
							Element:pre
								{{ tryResults.results }}
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Method
							Element:td
								{{ tryResults.method }}
							Element:tr
							Element:th
								Request Headers
							Element:td
							Element:pre
								{{ tryResults.requestHeaders }}
							Element:tr
							Element:th
								URL
							Element:td
								{{ tryResults.url }}
							Element:tr
							Element:th
								Request Data
							Element:td
							Element:pre
								{{ tryResults.data }}
							Element:tr
							Element:th
								Status
							Element:td
							Element:span
							Element:tr
							Element:th
								Response Headers
							Element:td
							Element:pre
								{{ tryResults.responseHeaders }}
						Node:
						(type) c
						(layer)2
							Element:footer
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Subscribe to our newsletter
												Node:
												(type) c
												(layer)4
													Element:noscript
												Node:
												(type) c
												(layer)4
													Element:noscript
