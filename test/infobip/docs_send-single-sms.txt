Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					This method allows you to send a single textual message to one destination address.
				Element:span
					post
					Single textual message
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Definition
									Node:
									(type) c
									(layer)3
										Element:span
											{{ api_url }}
									Node:
									(type) c
									(layer)3
										Element:span
											{{ page_api_url }}
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Parameters
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Body Params
												Node:
												(type) c
												(layer)4
													Element:strong
														from
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Represents sender ID and it can be alphanumeric or numeric. *Alphanumeric* sender ID length should be between 3 and 11 characters (Example: `CompanyName`). *Numeric* sender ID length should be between 3 and 14 characters.
												Node:
												(type) c
												(layer)4
													Element:strong
														to
														required
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														array of strings
														Array of message destination addresses. If you want to send a [message to one destination](#section-single-textual-message-to-one-destination), a single String is supported instead of an Array. Destination addresses must be in international format (Example: `41793026727`).
												Node:
												(type) c
												(layer)4
													Element:strong
														text
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Text of the message that will be sent.
												Node:
												(type) c
												(layer)4
													Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Result Format
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Documentation
											# Response format On success, response header HTTP status code will be `200 OK` and the message will be sent. If you try to send message without authorization, you will receive an error `401 Unauthorized`. ### SMSResponse |Parameter|Type|Description| |-|-|-| |*bulkId*|String|The ID that uniquely identifies the request. Bulk ID will be received only when you send a message to [more than one destination address](#section-single-textual-message-to-multiple-destinations).| |*messages*|[SMSResponseDetails[]](#section-smsresponsedetails)|Array of sent message objects, one object per every message.| ### SMSResponseDetails |Parameter|Type|Description| |-|-|-| |*to*|String|The message destination address.| |*status*|[Status](#section-status)|Indicates whether the message is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status.| |*smsCount*|int|The number of sent message segments.| |*messageId*|String|The ID that uniquely identifies the message sent.| #### Status |Parameter|Type|Description| |-|-|-| |*groupId*|int|Status [group ID](http://dev.infobip.com/v1/docs/response-codes#status-object-example).| |*groupName*|String|Status [group name](http://dev.infobip.com/v1/docs/response-codes#status-object-example).| |*id*|int|Status [ID](http://dev.infobip.com/v1/docs/response-codes#status-object-example).| |*name*|String|Status [name](http://dev.infobip.com/v1/docs/response-codes#section-status-object-example).| |*description*|String|Human readable [description](http://dev.infobip.com/v1/docs/response-codes#status-object-example) of the status.| |*action*|String|[Action](http://dev.infobip.com/v1/docs/response-codes#status-object-example) that should be taken to eliminate the error.| [block:callout] { "type": "info", "title": "Long SMS:", "body": "Maximum length for one message is 160 characters for GSM7 standard or 70 characters Unicode encoded messages. If you send text which exceeds the maximum number of supported characters for one message, the sent message will be [segmented and charged accordingly](doc:long-sms). One Long SMS that consists of two SMS [counts as two SMS](doc:long-sms)." } [/block] [block:api-header] { "type": "basic", "title": "Additional examples" } [/block] # Single textual message to one destination **Request** [block:code] { "codes": [ { "code": "POST /sms/1/text/single HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/json\nAccept: application/json\n\n{ \n \"from\":\"InfoSMS\",\n \"to\":\"41793026727\",\n \"text\":\"Test SMS.\"\n}", "language": "json" }, { "code": "POST /sms/1/text/single HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/xml\nAccept: application/xml\n\n<request>\n <from>InfoSMS</from>\n <to>\n <to>41793026727</to>\n </to>\n <text>Test SMS.</text>\n</request>", "language": "xml" }, { "code": "curl -X POST \\\n -H 'Content-Type: application/json' \\\n -H 'Accept: application/json' \\\n -H 'Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==' \\\n -d '{ \n \"from\":\"InfoSMS\",\n \"to\":\"41793026727\",\n \"text\":\"Test SMS.\"\n}' https://api.infobip.com/sms/1/text/single", "language": "curl" }, { "code": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n CURLOPT_URL => \"http://api.infobip.com/sms/1/text/single\",\n CURLOPT_RETURNTRANSFER => true,\n CURLOPT_ENCODING => \"\",\n CURLOPT_MAXREDIRS => 10,\n CURLOPT_TIMEOUT => 30,\n CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n CURLOPT_CUSTOMREQUEST => \"POST\",\n CURLOPT_POSTFIELDS => \"{ \\\"from\\\":\\\"InfoSMS\\\", \\\"to\\\":\\\"41793026727\\\", \\\"text\\\":\\\"Test SMS.\\\" }\",\n CURLOPT_HTTPHEADER => array(\n \"accept: application/json\",\n \"authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n \"content-type: application/json\"\n ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n echo \"cURL Error #:\" . $err;\n} else {\n echo $response;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.infobip.com/sms/1/text/single\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"content-type\"] = 'application/json'\nrequest[\"accept\"] = 'application/json'\n\nrequest.body = \"{\\\"from\\\":\\\"InfoSMS\\\",\\\"to\\\":\\\"41793026727\\\", \\\"text\\\":\\\"Test SMS.\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "conn = http.client.HTTPSConnection(\"api.infobip.com\")\n\npayload = \"{\\\"from\\\":\\\"InfoSMS\\\",\\\"to\\\":\\\"41793026727\\\",\\\"text\\\":\\\"Test SMS.\\\"}\"\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'content-type': \"application/json\",\n 'accept': \"application/json\"\n }\n\nconn.request(\"POST\", \"/sms/1/text/single\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.post(\"https://api.infobip.com/sms/1/text/single\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"content-type\", \"application/json\")\n .header(\"accept\", \"application/json\")\n .body(\"{\\\"from\\\":\\\"InfoSMS\\\",\\\"to\\\":\\\"41793026727\\\",\\\"text\\\":\\\"Test SMS.\\\"}\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"https://api.infobip.com/sms/1/text/single\");\n\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nrequest.AddParameter(\"application/json\", \"{\\\"from\\\":\\\"InfoSMS\\\", \\\"to\\\":\\\"41793026727\\\",\\\"text\\\":\\\"Test SMS.\\\"}\", ParameterType.RequestBody);\n\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var data = JSON.stringify({\n \"from\": \"InfoSMS\",\n \"to\": \"41793026727\",\n \"text\": \"Test SMS.\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = false;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === this.DONE) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"POST\", \"https://api.infobip.com/sms/1/text/single\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response** [block:code] { "codes": [ { "code": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{ \n \"messages\":[ \n { \n \"to\":\"41793026727\",\n \"status\":{ \n \"groupId\":0,\n \"groupName\":\"Queue/Accepted\",\n \"id\":0,\n \"name\":\"MESSAGE_ACCEPTED\",\n \"description\":\"Message accepted\"\n },\n \"smsCount\":1,\n \"messageId\":\"2250be2d4219-3af1-78856-aabe-1362af1edfd2\"\n }\n ]\n}", "language": "json" }, { "code": "HTTP/1.1 200 OK\nContent-Type: application/xml\n\n<smsResponse>\n <messages>\n <message>\n <to>41793026727</to>\n <status>\n <id>0</id>\n <groupId>0</groupId>\n <groupName>ACCEPTED</groupName>\n <name>MESSAGE_ACCEPTED</name>\n <description>Message accepted</description>\n </status>\n <smsCount>1</smsCount>\n <messageId>2250be2d4219-3af1-78856-aabe-1362af1edfd2</messageId>\n </message>\n </messages>\n</smsResponse>", "language": "xml" } ] } [/block] # Single textual message to multiple destinations **Request** [block:code] { "codes": [ { "code": "POST /sms/1/text/single HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/json \nAccept: application/json\n\n{ \n \"from\":\"InfoSMS\",\n \"to\":[ \n \"41793026727\",\n \"41793026834\"\n ],\n \"text\":\"Test SMS.\"\n}", "language": "json" }, { "code": "POST /sms/1/text/single HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/xml\nAccept: application/xml\n\n<request>\n <from>InfoSMS</from>\n <to>\n <to>41793026727</to>\n <to>41793026834</to>\n </to>\n <text>Test SMS.</text>\n</request>", "language": "xml" }, { "code": "curl -X POST \n -H 'Content-Type: application/json' \n -H 'Accept: application/json'\n -H 'Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==' \n -d '{ \n \"from\":\"InfoSMS\",\n \"to\":[ \n \"41793026727\",\n \"41793026834\"\n ],\n \"text\":\"Test SMS.\"\n}' https://api.infobip.com/sms/1/text/single", "language": "curl" }, { "code": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n CURLOPT_URL => \"http://api.infobip.com/sms/1/text/single\",\n CURLOPT_RETURNTRANSFER => true,\n CURLOPT_ENCODING => \"\",\n CURLOPT_MAXREDIRS => 10,\n CURLOPT_TIMEOUT => 30,\n CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n CURLOPT_CUSTOMREQUEST => \"POST\",\n CURLOPT_POSTFIELDS => \"{ \\\"from\\\":\\\"InfoSMS\\\", \\\"to\\\":[ \\\"41793026727\\\", \\\"41793026834\\\" ], \\\"text\\\":\\\"Test SMS.\\\" }\",\n CURLOPT_HTTPHEADER => array(\n \"accept: application/json\",\n \"authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n \"content-type: application/json\"\n ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n echo \"cURL Error #:\" . $err;\n} else {\n echo $response;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.infobip.com/sms/1/text/single\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"content-type\"] = 'application/json'\nrequest[\"accept\"] = 'application/json'\n\nrequest.body = \"{\\\"from\\\":\\\"InfoSMS\\\",\\\"to\\\":[\\\"41793026727\\\", \\\"41793026834\\\"],\\\"text\\\":\\\"Test SMS.\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.infobip.com\")\n\npayload = \"{\\\"from\\\":\\\"InfoSMS\\\",\\\"to\\\":[\\\"41793026727\\\", \\\"41793026834\\\"],\\\"text\\\":\\\"Test SMS.\\\"}\"\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'content-type': \"application/json\",\n 'accept': \"application/json\"\n }\n\nconn.request(\"POST\", \"/sms/1/text/single\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.post(\"https://api.infobip.com/sms/1/text/single\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"content-type\", \"application/json\")\n .header(\"accept\", \"application/json\")\n .body(\"{\\\"from\\\":\\\"InfoSMS\\\",\\\"to\\\":[\\\"41793026727\\\", \\\"41793026834\\\"],\\\"text\\\":\\\"Test SMS.\\\"}\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"https://api.infobip.com/sms/1/text/single\");\n\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nrequest.AddParameter(\"application/json\", \"{\\\"from\\\":\\\"InfoSMS\\\", \\\"to\\\":[ \\\"41793026727\\\",\\\"41793026834\\\"],\\\"text\\\":\\\"Test SMS.\\\"}\", ParameterType.RequestBody);\n\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var data = JSON.stringify({\n \"from\": \"InfoSMS\",\n \"to\": [\n \"41793026727\",\n \"41793026834\"\n ],\n \"text\": \"Test SMS.\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = false;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === this.DONE) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"POST\", \"https://api.infobip.com/sms/1/text/single\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response** [block:code] { "codes": [ { "code": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{ \n \"bulkId\":\"f5c4322c-10e7-a41e-5528-34fa0b032134\",\n \"messages\":[ \n { \n \"to\":\"41793026727\",\n \"status\":{ \n \"groupId\":0,\n \"groupName\":\"ACCEPTED\",\n \"id\":0,\n \"name\":\"MESSAGE_ACCEPTED\",\n \"description\":\"Message accepted\"\n },\n \"smsCount\":1,\n \"messageId\":\"4a54f0242f19-b832-1c39-a7e7a2095f351ed2\"\n },\n { \n \"to\":\"41793026834\",\n \"status\":{ \n \"groupId\":0,\n \"groupName\":\"ACCEPTED\",\n \"id\":0,\n \"name\":\"MESSAGE_ACCEPTED\",\n \"description\":\"Message accepted\"\n },\n \"smsCount\":1,\n \"messageId\":\"9404a69cef19-7a31-ba39-92ace76a5f351ed2\"\n }\n ]\n}", "language": "json" }, { "code": "HTTP/1.1 200 OK\nContent-Type: application/xml\n\n<smsResponse>\n <bulkId>f5c4322c-10e7-a41e-5528-34fa0b032134</bulkId>\n <messages>\n <message>\n <to>41793026727</to>\n <status>\n <id>0</id>\n <groupId>0</groupId>\n <groupName>ACCEPTED</groupName>\n <name>MESSAGE_ACCEPTED</name>\n <description>Message accepted</description>\n </status>\n <smsCount>1</smsCount>\n <messageId>2250be2d4219-3af1-78856-aabe-1362af1edfd2</messageId>\n </message>\n <message>\n <to>41793026834</to>\n <status>\n <id>0</id>\n <groupId>0</groupId>\n <groupName>ACCEPTED</groupName>\n <name>MESSAGE_ACCEPTED</name>\n <description>Message accepted</description>\n </status>\n <smsCount>1</smsCount>\n <messageId>9404a69cef19-7a31-ba39-92ace76a5f351ed2</messageId>\n </message>\n </messages>\n</smsResponse>\n", "language": "xml" } ] } [/block]
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											User Information
									Node:
									(type) c
									(layer)3
										Element:label
											username
									Node:
									(type) c
									(layer)3
										Element:label
											password
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								Try It Out
						Node:
						(type) c
						(layer)2
							Element:label
								{{ param.name }}
							Element:span
								*
						Node:
						(type) c
						(layer)2
							Element:span
								post
						Node:
						(type) c
						(layer)2
							Element:span
						Node:
						(type) c
						(layer)2
							Element:span
						Node:
						(type) c
						(layer)2
							Element:pre
								{{ tryResults.results }}
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Method
							Element:td
								{{ tryResults.method }}
							Element:tr
							Element:th
								Request Headers
							Element:td
							Element:pre
								{{ tryResults.requestHeaders }}
							Element:tr
							Element:th
								URL
							Element:td
								{{ tryResults.url }}
							Element:tr
							Element:th
								Request Data
							Element:td
							Element:pre
								{{ tryResults.data }}
							Element:tr
							Element:th
								Status
							Element:td
							Element:span
							Element:tr
							Element:th
								Response Headers
							Element:td
							Element:pre
								{{ tryResults.responseHeaders }}
						Node:
						(type) c
						(layer)2
							Element:footer
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Subscribe to our newsletter
												Node:
												(type) c
												(layer)4
													Element:noscript
												Node:
												(type) c
												(layer)4
													Element:noscript
