Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					This method allows you to get one time delivery reports for sent e-mails.
				Element:span
					get
					Email delivery reports
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Definition
									Node:
									(type) c
									(layer)3
										Element:span
											{{ api_url }}
									Node:
									(type) c
									(layer)3
										Element:span
											{{ page_api_url }}
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Parameters
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Query Params
												Node:
												(type) c
												(layer)4
													Element:strong
														bulkId
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														The ID uniquely identifies a group of Email requests. This filter will enable you to query delivery reports for all the messages with the same bulk id using just one request.
												Node:
												(type) c
												(layer)4
													Element:strong
														messageId
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Message ID for which report is requested
												Node:
												(type) c
												(layer)4
													Element:strong
														limit
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														integer
														Maximum number of reports
												Node:
												(type) c
												(layer)4
													Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Result Format
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Documentation
											# Response format On success, response header HTTP status code will be `200 OK` and delivery reports will be returned in the response body. If you try to send a message without authorization, you will get a response with HTTP status code `401 Unauthorized`. |Parameter|Type|Description| |-|-|-| |*results*|[SentEmailReport[]](#section-sentemailreport)|Collection of reports, one per e-mail.| ### SentEmailReport |Parameter|Type|Description| |-|-|-| |*messageId*|String|Message ID.| |*to*|String|Destination address.| |*sentAt*|Date|Tells when the e-mail was sent. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.| |*doneAt*|Date|Tells when the e-mail was finished processing by Infobip (ie. delivered to destination)| |*messageCount*|int|How many parts the message was split into. Always will be 1 for e-mail.| |*price*|[Price](#section-price)|Sent e-mail price.| |*status*|[Status](#section-status)|Indicates whether the message is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status.| |*error*|[Error](#section-error)|Indicates whether any error occurred during query execution.| #### Price |Parameter|Type|Description| |-|-|-| |*pricePerMessage*|BigDecimal|Price per one Email.| |*currency*|String|The currency in which the price is expressed.| #### Status |Parameter|Type|Description| |-|-|-| |*groupId*|int|Status group ID| |*groupName*|String|Status [group name](/docs/response-codes).| |*id*|int|Status ID| |*name*|String|Status [name](/docs/response-codes).| |*description*|String|Human readable description of the status.| |*action*|String|Action that should be taken to eliminate the error.| #### Error |Parameter|Type|Description| |-|-|-| |*groupId*|int|Error group ID| |*groupName*|String|Error [group name](/docs/response-codes#error-object-example)| |*id*|int|Error ID| |*name*|String|Error [name](/docs/response-codes#error-object-example)| |*description*|String|Human readable description of the error.| |*permanent*|boolean|Tells if the error is permanent| [block:api-header] { "type": "basic", "title": "Additional examples" } [/block] # Get reports by message id **Request:** [block:code] { "codes": [ { "code": "GET /email/1/reports?messageId=bbcc6960-1fcb-497c-b7ea-83ccba41492e HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/json", "language": "http", "name": "JSON" }, { "code": "GET /email/1/reports HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/xml", "language": "http", "name": "XML" }, { "code": "curl -X GET \\\n-H 'Accept: application/json' \\\n-H \"Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\" \\\nhttps://api.infobip.com/email/1/reports", "language": "curl" }, { "code": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.infobip.com/email/1/reports');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n 'accept' => 'application/json',\n 'authorization' => 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\n));\n\ntry {\n $response = $request->send();\n\n echo $response->getBody();\n} catch (HttpException $ex) {\n echo $ex;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.infobip.com/email/1/reports\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"accept\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.infobip.com\")\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'accept': \"application/json\"\n }\n\nconn.request(\"GET\", \"/email/1/reports\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.get(\"https://api.infobip.com/email/1/reports\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"accept\", \"application/json\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"https://api.infobip.com/email/1/reports\");\n\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\n\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === this.DONE) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"GET\", \"https://api.infobip.com/email/1/reports\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response:** [block:code] { "codes": [ { "code": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n \"results\": [\n {\n \"messageId\": \"bbcc6960-1fcb-497c-b7ea-83ccba41492e\",\n \"to\": \"recipient@infobip.com\",\n \"sentAt\": \"2016-08-31T13:25:18.477+0000\",\n \"doneAt\": \"2016-08-31T13:25:50.893+0000\",\n \"messageCount\": 1,\n \"price\": {\n \"pricePerMessage\": 0,\n \"currency\": \"UNKNOWN\"\n },\n \"status\": {\n \"groupId\": 3,\n \"groupName\": \"DELIVERED\",\n \"id\": 5,\n \"name\": \"DELIVERED_TO_HANDSET\",\n \"description\": \"Message delivered to handset\"\n },\n \"error\": {\n \"groupId\": 0,\n \"groupName\": \"OK\",\n \"id\": 0,\n \"name\": \"NO_ERROR\",\n \"description\": \"No Error\",\n \"permanent\": false\n },\n \"channel\": \"EMAIL\"\n }\n\t]\n}", "language": "json" }, { "code": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n<?xml version='1.0' encoding='UTF-8'?>\n<ReportsResponse>\n <results>\n <result>\n <messageId>bbcc6960-1fcb-497c-b7ea-83ccba41492e</messageId>\n <to>recipient@infobip.com</to>\n <sentAt>2016-08-31T13:25:18.477+0000</sentAt>\n <doneAt>2016-08-31T13:25:50.893+0000</doneAt>\n <messageCount>1</messageCount>\n <price>\n <pricePerMessage>0</pricePerMessage>\n <currency>UNKNOWN</currency>\n </price>\n <status>\n <groupId>3</groupId>\n <groupName>DELIVERED</groupName>\n <id>5</id>\n <name>DELIVERED_TO_HANDSET</name>\n <description>Message delivered to handset</description>\n </status>\n <error>\n <groupId>0</groupId>\n <groupName>OK</groupName>\n <id>0</id>\n <name>NO_ERROR</name>\n <description>No Error</description>\n <permanent>false</permanent>\n </error>\n <channel>EMAIL</channel>\n </result>\n </results>\n</ReportsResponse>", "language": "xml" } ] } [/block] # Get initial two delivery reports **Request:** [block:code] { "codes": [ { "code": "GET /email/1/reports?limit=2 HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/json", "language": "http", "name": "JSON" }, { "code": "GET /email/1/reports?limit=2 HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/xml", "language": "http", "name": "XML" }, { "code": "curl -X GET \\\n-H 'Accept: application/json' \\\n-H \"Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\" \\\nhttps://api.infobip.com/email/1/reports?limit=2", "language": "curl" }, { "code": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.infobip.com/email/1/reports');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n 'limit' => '2'\n));\n\n$request->setHeaders(array(\n 'accept' => 'application/json',\n 'authorization' => 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\n));\n\ntry {\n $response = $request->send();\n\n echo $response->getBody();\n} catch (HttpException $ex) {\n echo $ex;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.infobip.com/email/1/reports?limit=2\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"accept\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.infobip.com\")\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'accept': \"application/json\"\n }\n\nconn.request(\"GET\", \"/email/1/reports?limit=2\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.get(\"https://api.infobip.com/email/1/reports?limit=2\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"accept\", \"application/json\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"https://api.infobip.com/email/1/reports?limit=2\");\n\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\n\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === this.DONE) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"GET\", \"https://api.infobip.com/email/1/reports?limit=2\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response:** [block:code] { "codes": [ { "code": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n \"results\": [\n {\n \"messageId\": \"bbcc6960-1fcb-497c-b7ea-83ccba41492e\",\n \"to\": \"recipient@infobip.com\",\n \"sentAt\": \"2016-08-31T13:25:18.477+0000\",\n \"doneAt\": \"2016-08-31T13:25:50.893+0000\",\n \"messageCount\": 1,\n \"price\": {\n \"pricePerMessage\": 0,\n \"currency\": \"UNKNOWN\"\n },\n \"status\": {\n \"groupId\": 3,\n \"groupName\": \"DELIVERED\",\n \"id\": 5,\n \"name\": \"DELIVERED_TO_HANDSET\",\n \"description\": \"Message delivered to handset\"\n },\n \"error\": {\n \"groupId\": 0,\n \"groupName\": \"OK\",\n \"id\": 0,\n \"name\": \"NO_ERROR\",\n \"description\": \"No Error\",\n \"permanent\": false\n },\n \"channel\": \"EMAIL\"\n },\n {\n \"messageId\": \"a3ee6933-1fcb-497c-b7ea-83cdda55543f\",\n \"to\": \"recipient2@infobip.com\",\n \"sentAt\": \"2016-08-31T13:25:19.455+0000\",\n \"doneAt\": \"2016-08-31T13:25:51.233+0000\",\n \"messageCount\": 1,\n \"price\": {\n \"pricePerMessage\": 0,\n \"currency\": \"UNKNOWN\"\n },\n \"status\": {\n \"groupId\": 3,\n \"groupName\": \"DELIVERED\",\n \"id\": 5,\n \"name\": \"DELIVERED_TO_HANDSET\",\n \"description\": \"Message delivered to handset\"\n },\n \"error\": {\n \"groupId\": 0,\n \"groupName\": \"OK\",\n \"id\": 0,\n \"name\": \"NO_ERROR\",\n \"description\": \"No Error\",\n \"permanent\": false\n },\n \"channel\": \"EMAIL\"\n }\n\t]\n}", "language": "json" }, { "code": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n<?xml version='1.0' encoding='UTF-8'?>\n<ReportsResponse>\n <results>\n <result>\n <messageId>bbcc6960-1fcb-497c-b7ea-83ccba41492e</messageId>\n <to>recipient@infobip.com</to>\n <sentAt>2016-08-31T13:25:18.477+0000</sentAt>\n <doneAt>2016-08-31T13:25:50.893+0000</doneAt>\n <messageCount>1</messageCount>\n <price>\n <pricePerMessage>0</pricePerMessage>\n <currency>UNKNOWN</currency>\n </price>\n <status>\n <groupId>3</groupId>\n <groupName>DELIVERED</groupName>\n <id>5</id>\n <name>DELIVERED_TO_HANDSET</name>\n <description>Message delivered to handset</description>\n </status>\n <error>\n <groupId>0</groupId>\n <groupName>OK</groupName>\n <id>0</id>\n <name>NO_ERROR</name>\n <description>No Error</description>\n <permanent>false</permanent>\n </error>\n <channel>EMAIL</channel>\n </result>\n \t<result>\n <messageId>a3ee6933-1fcb-497c-b7ea-83cdda55543f</messageId>\n <to>recipient2@infobip.com</to>\n <sentAt>2016-08-31T13:25:19.455+0000</sentAt>\n <doneAt>2016-08-31T13:25:51.233+0000</doneAt>\n <messageCount>1</messageCount>\n <price>\n <pricePerMessage>0</pricePerMessage>\n <currency>UNKNOWN</currency>\n </price>\n <status>\n <groupId>3</groupId>\n <groupName>DELIVERED</groupName>\n <id>5</id>\n <name>DELIVERED_TO_HANDSET</name>\n <description>Message delivered to handset</description>\n </status>\n <error>\n <groupId>0</groupId>\n <groupName>OK</groupName>\n <id>0</id>\n <name>NO_ERROR</name>\n <description>No Error</description>\n <permanent>false</permanent>\n </error>\n <channel>EMAIL</channel>\n </result>\n </results>\n</ReportsResponse>", "language": "xml" } ] } [/block] # Get reports by bulkId **Request:** [block:code] { "codes": [ { "code": "GET /email/1/reports?bulkId=lrzkq6gatdkxouhrkgni HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/json", "language": "http", "name": "JSON" }, { "code": "GET /email/1/reports?bulkId=lrzkq6gatdkxouhrkgni HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/xml", "language": "http", "name": "XML" }, { "code": "curl -X GET \\\n-H 'Accept: application/json' \\\n-H \"Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\" \\\nhttps://api.infobip.com/email/1/reports?bulkId=lrzkq6gatdkxouhrkgni", "language": "curl" }, { "code": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://api.infobip.com/email/1/reports');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n 'bulkId' => 'lrzkq6gatdkxouhrkgni'\n));\n\n$request->setHeaders(array(\n 'accept' => 'application/json',\n 'authorization' => 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\n));\n\ntry {\n $response = $request->send();\n\n echo $response->getBody();\n} catch (HttpException $ex) {\n echo $ex;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.infobip.com/email/1/reports?bulkId=lrzkq6gatdkxouhrkgni\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"accept\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.infobip.com\")\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'accept': \"application/json\"\n }\n\nconn.request(\"GET\", \"/email/1/reports?bulkId=lrzkq6gatdkxouhrkgni\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.get(\"https://api.infobip.com/email/1/reports?bulkId=lrzkq6gatdkxouhrkgni\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"accept\", \"application/json\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"https://api.infobip.com/email/1/reports?bulkId=lrzkq6gatdkxouhrkgni\");\n\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\n\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === this.DONE) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"GET\", \"https://api.infobip.com/email/1/reports?bulkId=lrzkq6gatdkxouhrkgni\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response:** [block:code] { "codes": [ { "code": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n \"results\": [\n {\n \"bulkId\": \"lrzkq6gatdkxouhrkgni\",\n \"messageId\": \"bbcc6960-1fcb-497c-b7ea-83ccba41492e\",\n \"to\": \"recipient@infobip.com\",\n \"sentAt\": \"2016-08-31T13:25:18.477+0000\",\n \"doneAt\": \"2016-08-31T13:25:50.893+0000\",\n \"messageCount\": 1,\n \"price\": {\n \"pricePerMessage\": 0,\n \"currency\": \"UNKNOWN\"\n },\n \"status\": {\n \"groupId\": 3,\n \"groupName\": \"DELIVERED\",\n \"id\": 5,\n \"name\": \"DELIVERED_TO_HANDSET\",\n \"description\": \"Message delivered to handset\"\n },\n \"error\": {\n \"groupId\": 0,\n \"groupName\": \"OK\",\n \"id\": 0,\n \"name\": \"NO_ERROR\",\n \"description\": \"No Error\",\n \"permanent\": false\n },\n \"channel\": \"EMAIL\"\n },\n {\n \"bulkId\": \"lrzkq6gatdkxouhrkgni\",\n \"messageId\": \"a3ee6933-1fcb-497c-b7ea-83cdda55543f\",\n \"to\": \"recipient2@infobip.com\",\n \"sentAt\": \"2016-08-31T13:25:19.455+0000\",\n \"doneAt\": \"2016-08-31T13:25:51.233+0000\",\n \"messageCount\": 1,\n \"price\": {\n \"pricePerMessage\": 0,\n \"currency\": \"UNKNOWN\"\n },\n \"status\": {\n \"groupId\": 3,\n \"groupName\": \"DELIVERED\",\n \"id\": 5,\n \"name\": \"DELIVERED_TO_HANDSET\",\n \"description\": \"Message delivered to handset\"\n },\n \"error\": {\n \"groupId\": 0,\n \"groupName\": \"OK\",\n \"id\": 0,\n \"name\": \"NO_ERROR\",\n \"description\": \"No Error\",\n \"permanent\": false\n },\n \"channel\": \"EMAIL\"\n }\n\t]\n}", "language": "json" }, { "code": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n<?xml version='1.0' encoding='UTF-8'?>\n<ReportsResponse>\n <results>\n <result>\n <bulkId>lrzkq6gatdkxouhrkgni</bulkId>\n <messageId>bbcc6960-1fcb-497c-b7ea-83ccba41492e</messageId>\n <to>recipient@infobip.com</to>\n <sentAt>2016-08-31T13:25:18.477+0000</sentAt>\n <doneAt>2016-08-31T13:25:50.893+0000</doneAt>\n <messageCount>1</messageCount>\n <price>\n <pricePerMessage>0</pricePerMessage>\n <currency>UNKNOWN</currency>\n </price>\n <status>\n <groupId>3</groupId>\n <groupName>DELIVERED</groupName>\n <id>5</id>\n <name>DELIVERED_TO_HANDSET</name>\n <description>Message delivered to handset</description>\n </status>\n <error>\n <groupId>0</groupId>\n <groupName>OK</groupName>\n <id>0</id>\n <name>NO_ERROR</name>\n <description>No Error</description>\n <permanent>false</permanent>\n </error>\n <channel>EMAIL</channel>\n </result>\n \t<result>\n <bulkId>lrzkq6gatdkxouhrkgni</bulkId>\n <messageId>a3ee6933-1fcb-497c-b7ea-83cdda55543f</messageId>\n <to>recipient2@infobip.com</to>\n <sentAt>2016-08-31T13:25:19.455+0000</sentAt>\n <doneAt>2016-08-31T13:25:51.233+0000</doneAt>\n <messageCount>1</messageCount>\n <price>\n <pricePerMessage>0</pricePerMessage>\n <currency>UNKNOWN</currency>\n </price>\n <status>\n <groupId>3</groupId>\n <groupName>DELIVERED</groupName>\n <id>5</id>\n <name>DELIVERED_TO_HANDSET</name>\n <description>Message delivered to handset</description>\n </status>\n <error>\n <groupId>0</groupId>\n <groupName>OK</groupName>\n <id>0</id>\n <name>NO_ERROR</name>\n <description>No Error</description>\n <permanent>false</permanent>\n </error>\n <channel>EMAIL</channel>\n </result>\n </results>\n</ReportsResponse>", "language": "xml" } ] } [/block]
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											User Information
									Node:
									(type) c
									(layer)3
										Element:label
											username
									Node:
									(type) c
									(layer)3
										Element:label
											password
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								Try It Out
						Node:
						(type) c
						(layer)2
							Element:label
								{{ param.name }}
							Element:span
								*
						Node:
						(type) c
						(layer)2
							Element:span
								get
						Node:
						(type) c
						(layer)2
							Element:span
						Node:
						(type) c
						(layer)2
							Element:span
						Node:
						(type) c
						(layer)2
							Element:pre
								{{ tryResults.results }}
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Method
							Element:td
								{{ tryResults.method }}
							Element:tr
							Element:th
								Request Headers
							Element:td
							Element:pre
								{{ tryResults.requestHeaders }}
							Element:tr
							Element:th
								URL
							Element:td
								{{ tryResults.url }}
							Element:tr
							Element:th
								Request Data
							Element:td
							Element:pre
								{{ tryResults.data }}
							Element:tr
							Element:th
								Status
							Element:td
							Element:span
							Element:tr
							Element:th
								Response Headers
							Element:td
							Element:pre
								{{ tryResults.responseHeaders }}
						Node:
						(type) c
						(layer)2
							Element:footer
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Subscribe to our newsletter
												Node:
												(type) c
												(layer)4
													Element:noscript
												Node:
												(type) c
												(layer)4
													Element:noscript
