Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					This method allows you to send multiple binary messages to one or more destination addresses.
				Element:span
					post
					Multiple binary message
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Definition
									Node:
									(type) c
									(layer)3
										Element:span
											{{ api_url }}
									Node:
									(type) c
									(layer)3
										Element:span
											{{ page_api_url }}
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Parameters
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Body Params
												Node:
												(type) c
												(layer)4
													Element:strong
														from
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Represents sender ID and it can be alphanumeric or numeric. *Alphanumeric* sender ID length should be between 3 and 11 characters (Example: `CompanyName`). *Numeric* sender ID length should be between 3 and 14 characters.
												Node:
												(type) c
												(layer)4
													Element:strong
														to
														required
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														array of strings
														Array of message destination addresses. If you want to send a [message to one destination](http://dev.infobip.com/v1/docs/send-single-binary-sms#section-single-binary-message-to-one-destination), a single String is supported instead of an Array. Destination addresses must be in international format (Example: `41793026727`).
												Node:
												(type) c
												(layer)4
													Element:strong
														hex
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Hexadecimal string. This is the representation of your binary data. Two hex digits represent one byte. They should be separated by space character (Example: `"0f c2 4a bf 34 13 ba"`).
												Node:
												(type) c
												(layer)4
													Element:strong
														dataCoding
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														integer
														Binary content data coding. Default value is (`0`) for GSM7. Example: (`8`) for Unicode data.
												Node:
												(type) c
												(layer)4
													Element:strong
														esmClass
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														integer
														“Esm_class” parameter. Indicate a special message attributes associated with the SMS. Default value is `(0)`.
												Node:
												(type) c
												(layer)4
													Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Result Format
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Documentation
											# Response format If successful, response header HTTP status code will be `200 OK` and the messages will be sent. If you try to send messages without authorization, you will receive an error `401 Unauthorized`. ## SMSResponse |Parameter|Type|Description| |-|-|-| |*bulkId*|String|The ID that uniquely identifies the request. Bulk ID will be received only when you send the message to [more than one destination address](#section-multiple-binary-messages-to-multiple-destinations).| |*messages*|[SMSResponseDetails](#section-sendsmsresponsedetails)[]|Array of sent message objects, one object per every message.| ### SMSResponseDetails |Parameter|Type|Description| |-|-|-| |*to*|String|The message destination address.| |*status*|[Status](#section-status)|Indicates whether the message is successfully sent, not sent, delivered, not delivered, waiting for delivery or any other possible status.| |*smsCount*|int|The number of sent message segments.| |*messageId*|String|The ID that uniquely identifies the message sent.| #### Status |Parameter|Type|Description| |-|-|-| |*groupId*|int|Status [group ID](http://dev.infobip.com/v1/docs/response-codes#status-object-example).| |*groupName*|String|Status [group name](http://dev.infobip.com/v1/docs/response-codes#status-object-example).| |*id*|int|Status [ID](http://dev.infobip.com/v1/docs/response-codes#status-object-example).| |*name*|String|Status [name](http://dev.infobip.com/v1/docs/response-codes#status-object-example).| |*description*|String|Human readable [description](http://dev.infobip.com/v1/docs/response-codes#status-object-example) of the status.| |*action*|String|[Action](http://dev.infobip.com/v1/docs/response-codes#status-object-example) that should be taken to eliminate the error.| [block:callout] { "type": "info", "body": "Find out more about Data coding and Esm_class usage [here](http://www.3gpp.org/DynaReport/23038.htm).", "title": "Note:" } [/block] [block:api-header] { "type": "basic", "title": "Additional examples" } [/block] # Multiple binary messages to multiple destinations **Request** [block:code] { "codes": [ { "code": "POST /sms/1/binary/multi HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nAccept: application/json\nContent-Type: application/json\n\n{\n\t\"messages\":[\n\t\t{\n\t\t\t\"from\":\"InfoSMS\",\n\t\t\t\"to\":[\n\t\t\t\t\"41793026727\",\n\t\t\t\t\"41793026731\"\n\t\t\t],\n\t\t\t\"binary\":{\n\t\t\t\t\"hex\":\"54 65 73 74 20 6d 65 73 73 61 67 65 2e\",\n\t\t\t\t\"dataCoding\":0,\n\t\t\t\t\"esmClass\":0\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"from\":\"41793026700\",\n\t\t\t\"to\":\"41793026785\",\n\t\t\t\"binary\":{\n\t\t\t\t\"hex\":\"6d 4b 8B d5 77 ed 4f e1 30 02\",\n\t\t\t\t\"dataCoding\":8,\n\t\t\t\t\"esmClass\":0\n\t\t\t}\n\t\t}\n\t]\n}", "language": "json" }, { "code": "POST /sms/1/binary/multi HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/xml\nAccept: application/xml\n\n<request>\n <messages>\n <message>\n <from>InfoSMS</from>\n <to>\n <to>41793026727</to>\n <to>41793026731</to>\n </to>\n <binary>\n <hex>54 65 73 74 20 6d 65 73 73 61 67 65 2e</hex>\n <dataCoding>0</dataCoding>\n <esmClass>0</esmClass>\n </binary>\n </message>\n <message>\n <from>41793026700</from>\n <to>\n <to>41793026785</to>\n </to>\n <binary>\n <hex>6d 4b 8B d5 77 ed 4f e1 30 02</hex>\n <dataCoding>8</dataCoding>\n <esmClass>0</esmClass>\n </binary>\n </message>\n </messages>\n</request>", "language": "xml" }, { "code": "curl -X POST \\\n-H 'Content-Type: application/json' \\\n-H 'Accept: application/json' \\\n-H 'Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==' \\\n-d '{ \n \"messages\":[ \n { \n \"from\":\"InfoSMS\",\n \"to\":[ \n \"41793026727\",\n \"41793026731\"\n ],\n \"binary\":{ \n \"hex\":\"54 65 73 74 20 6d 65 73 73 61 67 65 2e\",\n \"dataCoding\":0,\n \"esmClass\":0\n }\n },\n { \n \"from\":\"41793026700\",\n \"to\":\"41793026785\",\n \"binary\":{ \n \"hex\":\"6d 4b 8B d5 77 ed 4f e1 30 02\",\n \"dataCoding\":8,\n \"esmClass\":0\n }\n }\n ]\n}' https://api.infobip.com/sms/1/binary/multi", "language": "curl" }, { "code": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n CURLOPT_URL => \"http://api.infobip.com/sms/1/binary/multi\",\n CURLOPT_RETURNTRANSFER => true,\n CURLOPT_ENCODING => \"\",\n CURLOPT_MAXREDIRS => 10,\n CURLOPT_TIMEOUT => 30,\n CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n CURLOPT_CUSTOMREQUEST => \"POST\",\n CURLOPT_POSTFIELDS => \"{ \\\"messages\\\":[ { \\\"from\\\":\\\"InfoSMS\\\", \\\"to\\\":[ \\\"41793026727\\\", \\\"41793026731\\\" ], \\\"binary\\\":{ \\\"hex\\\":\\\"54 65 73 74 20 6d 65 73 73 61 67 65 2e\\\", \\\"dataCoding\\\":0, \\\"esmClass\\\":0 } }, { \\\"from\\\":\\\"41793026700\\\", \\\"to\\\":\\\"41793026785\\\", \\\"binary\\\":{ \\\"hex\\\":\\\"6d 4b 8B d5 77 ed 4f e1 30 02\\\", \\\"dataCoding\\\":8, \\\"esmClass\\\":0 } } ] }\",\n CURLOPT_HTTPHEADER => array(\n \"accept: application/json\",\n \"authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n \"content-type: application/json\"\n ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n echo \"cURL Error #:\" . $err;\n} else {\n echo $response;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.infobip.com/sms/1/binary/multi\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"content-type\"] = 'application/json'\nrequest[\"accept\"] = 'application/json'\n\nrequest.body = \"{\\\"messages\\\":[{\\\"from\\\":\\\"InfoSMS\\\", \\\"to\\\":[\\\"41793026727\\\", \\\"41793026731\\\"], \\\"binary\\\":{\\\"hex\\\":\\\"54 65 73 74 20 6d 65 73 73 61 67 65 2e\\\", \\\"dataCoding\\\":0, \\\"esmClass\\\":0}}, {\\\"from\\\":\\\"41793026700\\\", \\\"to\\\":\\\"41793026785\\\", \\\"binary\\\":{\\\"hex\\\":\\\"6d 4b 8B d5 77 ed 4f e1 30 02\\\", \\\"dataCoding\\\":8, \\\"esmClass\\\":0}}]}\"\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.infobip.com\")\n\npayload = \"{\\\"messages\\\":[{\\\"from\\\":\\\"InfoSMS\\\", \\\"to\\\":[\\\"41793026727\\\", \\\"41793026731\\\"], \\\"binary\\\":{\\\"hex\\\":\\\"54 65 73 74 20 6d 65 73 73 61 67 65 2e\\\", \\\"dataCoding\\\":0, \\\"esmClass\\\":0}}, {\\\"from\\\":\\\"41793026700\\\", \\\"to\\\":\\\"41793026785\\\", \\\"binary\\\":{\\\"hex\\\":\\\"6d 4b 8B d5 77 ed 4f e1 30 02\\\", \\\"dataCoding\\\":8, \\\"esmClass\\\":0}}]}\"\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'content-type': \"application/json\",\n 'accept': \"application/json\"\n }\n\nconn.request(\"POST\", \"/sms/1/binary/multi\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.post(\"https://api.infobip.com/sms/1/binary/multi\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"content-type\", \"application/json\")\n .header(\"accept\", \"application/json\")\n .body(\"{\\\"messages\\\":[{\\\"from\\\":\\\"InfoSMS\\\", \\\"to\\\":[\\\"41793026727\\\", \\\"41793026731\\\"], \\\"binary\\\":{\\\"hex\\\":\\\"54 65 73 74 20 6d 65 73 73 61 67 65 2e\\\", \\\"dataCoding\\\":0, \\\"esmClass\\\":0}}, {\\\"from\\\":\\\"41793026700\\\", \\\"to\\\":\\\"41793026785\\\", \\\"binary\\\":{\\\"hex\\\":\\\"6d 4b 8B d5 77 ed 4f e1 30 02\\\", \\\"dataCoding\\\":8, \\\"esmClass\\\":0}}]}\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"https://api.infobip.com/sms/1/binary/multi\");\n\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nrequest.AddParameter(\"application/json\", \"{\\\"messages\\\":[{\\\"from\\\":\\\"InfoSMS\\\", \\\"to\\\":[\\\"41793026727\\\", \\\"41793026731\\\"], \\\"binary\\\":{\\\"hex\\\":\\\"54 65 73 74 20 6d 65 73 73 61 67 65 2e\\\", \\\"dataCoding\\\":0, \\\"esmClass\\\":0}}, {\\\"from\\\":\\\"41793026700\\\", \\\"to\\\":\\\"41793026785\\\", \\\"binary\\\":{\\\"hex\\\":\\\"6d 4b 8B d5 77 ed 4f e1 30 02\\\", \\\"dataCoding\\\":8, \\\"esmClass\\\":0}}]}\", ParameterType.RequestBody);\n\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var data = JSON.stringify({\n \"messages\": [\n {\n \"from\": \"InfoSMS\",\n \"to\": [\n \"41793026727\",\n \"41793026731\"\n ],\n \"binary\": {\n \"hex\": \"54 65 73 74 20 6d 65 73 73 61 67 65 2e\",\n \"dataCoding\": 0,\n \"esmClass\": 0\n }\n },\n {\n \"from\": \"41793026700\",\n \"to\": \"41793026785\",\n \"binary\": {\n \"hex\": \"6d 4b 8B d5 77 ed 4f e1 30 02\",\n \"dataCoding\": 8,\n \"esmClass\": 0\n }\n }\n ]\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === this.DONE) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"POST\", \"https://api.infobip.com/sms/1/binary/multi\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response** [block:code] { "codes": [ { "code": "HTTP/1.1 200 OK\nContent-Type: application/json\n\t\n{ \n \"bulkId\":\"1036A4cb-803a-4a73-a5a6-7e4fc3791722\",\n \"messages\":[ \n { \n \"to\":\"41793026727\",\n \"status\":{ \n \"groupId\":7,\n \"groupName\":\"PENDING\",\n \"id\":7,\n \"name\":\"PENDING_ENROUTE\",\n \"description\":\"Message sent to next instance\"\n },\n \"smsCount\":1,\n \"messageId\":\"1254df3e-ab62-15af5-230b-14d8e65c7540\"\n },\n { \n \"to\":\"41793026731\",\n \"status\":{ \n \"groupId\":1,\n \"groupName\":\"PENDING\",\n \"id\":7,\n \"name\":\"PENDING_ENROUTE\",\n \"description\":\"Message sent to next instance\"\n },\n \"smsCount\":1,\n \"messageId\":\"a5b7df3e-1b62-4af5-840b-1b5de65c2ad7\"\n },\n { \n \"to\":\"41793026785\",\n \"status\":{ \n \"groupId\":1,\n \"groupName\":\"PENDING\",\n \"id\":7,\n \"name\":\"PENDING_ENROUTE\",\n \"description\":\"Message sent to next instance\"\n },\n \"smsCount\":1,\n \"messageId\":\"1877df3e-4b62-46f5-819b-14d8e65c2291\"\n }\n ]\n}", "language": "json" }, { "code": "HTTP/1.1 200 OK\nContent-Type: application/xml\n\n<smsResponse>\n <bulkId>1036A4cb-803a-4a73-a5a6-7e4fc3791722</bulkId>\n <messages>\n <message>\n <to>41793026727</to>\n <status>\n <groupId>1</groupId>\n <groupName>PENDING</groupName>\n <id>7</id>\n <name>PENDING_ENROUTE</name>\n <description>Message sent to next instance</description>\n </status>\n <smsCount>1</smsCount>\n <messageId>1254df3e-ab62-15af5-230b-14d8e65c7540</messageId>\n </message>\n <message>\n <to>41793026731</to>\n <status>\n <groupId>1</groupId>\n <groupName>PENDING</groupName>\n <id>7</id>\n <name>PENDING_ENROUTE</name>\n <description>Message sent to next instance</description>\n </status>\n <smsCount>1</smsCount>\n <messageId>a5b7df3e-1b62-4af5-840b-1b5de65c2ad7</messageId>\n </message>\n <message>\n <to>41793026785</to>\n <status>\n <groupId>1</groupId>\n <groupName>PENDING</groupName>\n <id>7</id>\n <name>PENDING_ENROUTE</name>\n <description>Message sent to next instance</description>\n </status>\n <smsCount>1</smsCount>\n <messageId>1877df3e-4b62-46f5-819b-14d8e65c2291</messageId>\n </message>\n </messages>\n</smsResponse>", "language": "xml" } ] } [/block]
									Node:
									(type) c
									(layer)3
										Element:footer
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Subscribe to our newsletter
												Node:
												(type) c
												(layer)4
													Element:noscript
												Node:
												(type) c
												(layer)4
													Element:noscript
