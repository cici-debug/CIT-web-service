Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Receiving messages: Introduction
					Learn how to receive SMS messages sent by your customers
			Node:
			(type) c
			(layer)1
				Element:hr
					Besides sending SMS to your customers, you will also need an elegant solution for your customers to contact you back. After all, real dialog happens only when messages flow in both directions. Having an option to **receive SMS from your customers** can open a whole new range of possibilities for your organization! One time setup for receiving messages consists of three easy steps. 1. [Purchase number for receiving messages](#step-1-purchase-phone-number-for-receiving-message) 2. [Setup Configuration container](#step-2-configuration-container-setup) 3. [Setup Action method](#step-3-action-setup) [block:image] { "images": [ { "image": [ "https://files.readme.io/35d0aac-sms2.PNG", "sms2.PNG", 491, 90, "#dfd8d6" ] } ] } [/block] [block:callout] { "type": "info", "title": "Receiving the messages", "body": "After the three-step setup you can start receiving incoming messages by using any of two available methods:\n1. [Forward method](/docs/forward-received-messages) - messages are forwarded to your system in real time\n3. [Pull method](/docs/pull-received-messages) - messages can be collected by API call" } [/block] [block:api-header] { "type": "basic", "title": "Step 1: Purchase phone number for receiving messages" } [/block] In order to receive messages, you will need a number which has the ability to receive messages. There are two basic types of numbers: * **Virtual Long Number (VLN)** - a standard looking phone number most often not different than any other personal phone number (eg. 441212859469). * **Short code** - number containing fewer digits than VLN and therefore more distinctive looking, with no country and network prefix, great for getting extra attention from your customers (eg. 32456). Both types of numbers best operate on a country level so you might need to get multiple numbers if your organization operates in multiple countries. [block:callout] { "type": "warning", "title": "Phone number API", "body": "Use [**Phone number API**](/v1/docs/phone-number) to purchase and manage your numbers." } [/block] [block:callout] { "type": "info", "title": "Short code", "body": "Short codes cannot be purchased over the API. Please contact your account manager for more information." } [/block] [block:api-header] { "type": "basic", "title": "Step 2: Configuration container setup" } [/block] Each number you own can be configured to handle different scenarios for receiving messages. Rules are set on **Configuration **level and delivery methods for each rule are is set on **Action **level. Each number can have** one or more** Configurations and each Configuration can be associated with the **keyword**. Keywords **must be unique** on number level. **First word** of each received message is compared against Configuration keywords, and if matched, message delivery method described within Configuration Action will be used to deliver the message. ###Example Your company would like to hear from your customers if they like your latest service. You decide to send out a message with simple yes or no question. ``` Dear customers, we were wondering if you liked our latest product. Please answer to this message with simple YES or NO and add an additional comment if you have one. ``` Consider the following setup of your number on Infobip platform. [block:image] { "images": [ { "image": [ "https://files.readme.io/56c7c02-sms3.PNG", "sms3.PNG", 500, 295, "#ded9d7" ] } ] } [/block] Now let's see what wold happened when you receive different replays from your customers. ``` Oh YES, of course, I love your product! Keep up the good work! ``` The message like this would match Configuration 1 since it **does not start** with **YES **or **NO **keywords. On Action level **Pull method** is defined which means that you will be able to access this messages by calling the [**Pull API method**](/docs/pull-received-messages). Let's examine this reply ``` YES! I love your product. Thank you. ``` The message starts with the **YES **keyword which means that Configuration 2 will be used to handle incoming message. Action inside Configuration 2 has a **Forward **URL defined so Infobip platform will initiate a [**HTTP POST or HTTP GET request**](/docs/forward-received-messages) and send message inside of the request body in JSON format if you choose POST, or through the URL parameters (query string) if you choose GET. In order for this to work you need to set up a web page which will listen for requests and accept received messages. URL of the page needs to be provided during the Action setup. [block:callout] { "type": "warning", "title": "Configuration container API", "body": "We offer a complete set of Configuration management tools over our API. Visit [**Configuration documentation**](/docs/message-configuration) to learn more." } [/block] [block:api-header] { "type": "basic", "title": "Step 3: Action setup" } [/block] Actions live inside Configuration containers. When creating a new Action you must choose one of two possible message delivery methods: 1. Pull 2. Forward There can be only one Action inside of the each Configuration container. If an incoming message matches the rule of the Configuration container, selected Action delivery method will be used to deliver the incoming message to your platform. [block:callout] { "type": "warning", "title": "Action API", "body": "We offer a complete set of Action management tools over our API. Visit [**Action documentation**](/docs/action) to learn more." } [/block] ##Pull method Pull method means that all messages received at your number will be saved in Infobip message inbox. Messages that we collect will patiently sit there until you decide to collect them. Messages can be collected by calling our Pull API method. [block:callout] { "type": "warning", "title": "Pull API method", "body": "Messages can be collected over the [**Pull API method**](/docs/pull-received-messages) only once! This means that with each API call you will only get the new messages that arrived after the previous API call." } [/block] ##Http Forward method With this method, you can receive incoming messages in real time. In order for this to work, you need to expose a web page and listen for HTTP request. URL of the page must be provided during Action setup process. Every time a new message is received on your number, we will initiate an HTTP request which will contain the received message. [block:callout] { "type": "warning", "title": "Forward method", "body": "Find out how to receive forwarded messages in [**Receive forwarded messages**](/docs/forward-received-messages) documentation page." } [/block]
			Node:
			(type) c
			(layer)1
				Element:footer
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Subscribe to our newsletter
												Node:
												(type) c
												(layer)4
													Element:noscript
												Node:
												(type) c
												(layer)4
													Element:noscript
