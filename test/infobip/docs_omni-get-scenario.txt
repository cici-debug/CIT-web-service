Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					This method allows you to get OMNI scenarios. Specific, all or default scenario could be caught with this method.
				Element:span
					get
					Scenario: Get
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Definition
									Node:
									(type) c
									(layer)3
										Element:span
											{{ api_url }}
									Node:
									(type) c
									(layer)3
										Element:span
											{{ page_api_url }}
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Parameters
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Path Params
												Node:
												(type) c
												(layer)4
													Element:strong
														key
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Key used to uniquely identify OMNI scenario.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Query Params
												Node:
												(type) c
												(layer)4
													Element:strong
														default
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														boolean
														Get default scenario.
												Node:
												(type) c
												(layer)4
													Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Result Format
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Documentation
											# Response format If successful, response header HTTP status code will be `200 OK` and the requested scenario will be returned. If you try to get the scenario without authorization, you will receive an `401 Unauthorized` error. ### Scenario |Parameter|Type|Description| |-|-|-| |*key*|String|Key used to uniquely identify OMNI scenario.| |*name*|String|OMNI scenario name.| |*flow*|[Step[]](#section-step)|Sender used in OMNI scenario's step for sending message.| |*default*|Boolean|Whether scenario is default. ### Step |Parameter|Type|Description| |-|-|-| |*from*|String|Sender used in OMNI scenario's step for sending message.| |*channel*|String|Channel used in scenario's step for delivering message ("`SMS`", "`PARSECO`", `"VOICE"`, "`VIBER`")| [block:api-header] { "type": "basic", "title": "Additional example" } [/block] # Get all scenarios [block:callout] { "type": "info", "title": "", "body": "If **all** scenarios are wanted, **key** parameter must be omitted." } [/block] **Request** [block:code] { "codes": [ { "code": "GET /omni/1/scenarios HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/json", "language": "json" }, { "code": "GET /omni/1/scenarios HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/xml", "language": "xml" }, { "code": "curl -X GET\n-H 'Accept: application/json' \n-H 'Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nhttps://api.infobip.com/omni/1/scenarios", "language": "curl" }, { "code": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n CURLOPT_URL => \"http://api.infobip.com/omni/1/scenarios\",\n CURLOPT_RETURNTRANSFER => true,\n CURLOPT_ENCODING => \"\",\n CURLOPT_MAXREDIRS => 10,\n CURLOPT_TIMEOUT => 30,\n CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n CURLOPT_CUSTOMREQUEST => \"GET\",\n CURLOPT_POSTFIELDS => \"\",\n CURLOPT_HTTPHEADER => array(\n \"accept: application/json\",\n \"authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\"\n ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n echo \"cURL Error #:\" . $err;\n} else {\n echo $response;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.infobip.com/omni/1/scenarios\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"accept\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "import http.client\n\nconn = http.client.HTTPConnection(\"api.infobip.com\")\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'accept': \"application/json\"\n }\n\nconn.request(\"GET\", \"/omni/1/scenarios\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.get(\"https://api.infobip.com/omni/1/scenarios\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"accept\", \"application/json\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"https://api.infobip.com/omni/1/scenarios\");\n\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\n\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === this.DONE) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"GET\", \"https://api.infobip.com/omni/1/scenarios\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response** [block:code] { "codes": [ { "code": "{\n \"scenarios\": [\n {\n \"key\": \"CD265875E3A6EA43478D5F37A635BE4A\",\n \"name\": \"Test SMS or Parseco\",\n \"flow\": [\n {\n \"from\": \"InfoSMS\",\n \"channel\": \"SMS\"\n },\n {\n \"from\": \"256\",\n \"channel\": \"PARSECO\"\n }\n ],\n \"default\": false\n },\n {\n \"key\": \"37B93A3C58EAAF4D2B1B35B58526EAAC\",\n \"name\": \"New scenario\",\n \"flow\": [\n {\n \"from\": \"TestSender\",\n \"channel\": \"SMS\"\n },\n {\n \"from\": \"511\",\n \"channel\": \"PARSECO\"\n }\n ],\n \"default\": true\n }\n ]\n}", "language": "json", "name": "200 OK - JSON" }, { "code": "<scenariosResponse>\n <scenarios>\n <scenario>\n <key>CD265875E3A6EA43478D5F37A635BE4A</key>\n <name>Test SMS or Parseco</name>\n <flow>\n <step>\n <from>InfoSMS</from>\n <channel>SMS</channel>\n </step>\n <step>\n <from>256</from>\n <channel>PARSECO</channel>\n </step>\n </flow>\n <default>false</default>\n </scenario>\n <scenario>\n <key>37B93A3C58EAAF4D2B1B35B58526EAAC</key>\n <name>New scenario</name>\n <flow>\n <step>\n <from>TestSender</from>\n <channel>SMS</channel>\n </step>\n <step>\n <from>511</from>\n <channel>PARSECO</channel>\n </step>\n </flow>\n <default>true</default>\n </scenario>\n </scenarios>\n</scenariosResponse>", "language": "xml", "name": "200 OK - XML" }, { "code": "{\n \"requestError\": {\n \"serviceException\": {\n \"messageId\": \"INVALID_ARGUMENT\",\n \"text\": \"Invalid argument\"\n }\n }\n}", "language": "json", "name": "400 Invalid argument" } ] } [/block] ## Response format If successful, response header HTTP status code will be `200 OK` and all scenarios will be returned. If you try to get the scenarios without authorization, you will receive an `401 Unauthorized` error. ### ScenariosResponse |Parameter|Type|Description| |-|-|-| |*scenarios*|[Scenario[]](#section-scenario)|Array of OMNI scenarios.| # Get default scenario [block:callout] { "type": "warning", "title": "Caution!", "body": "Usage of **default** and **key** parameter is **exclusive**. With *key* **path** parameter, specific scenario is returned, but with *default* **query** parameter, default scenario is returned." } [/block] **Request** [block:code] { "codes": [ { "code": "GET /omni/1/scenarios?default=true HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/json", "language": "json" }, { "code": "GET /omni/1/scenarios?default=true HTTP/1.1\nHost: api.infobip.com\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nContent-Type: application/xml", "language": "xml" }, { "code": "curl -X GET\n-H 'Accept: application/json' \n-H 'Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nhttps://api.infobip.com/omni/1/scenarios?default=true", "language": "curl" }, { "code": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n CURLOPT_URL => \"http://api.infobip.com/omni/1/scenarios?default=true\",\n CURLOPT_RETURNTRANSFER => true,\n CURLOPT_ENCODING => \"\",\n CURLOPT_MAXREDIRS => 10,\n CURLOPT_TIMEOUT => 30,\n CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n CURLOPT_CUSTOMREQUEST => \"GET\",\n CURLOPT_POSTFIELDS => \"\",\n CURLOPT_HTTPHEADER => array(\n \"accept: application/json\",\n \"authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\"\n ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n echo \"cURL Error #:\" . $err;\n} else {\n echo $response;\n}", "language": "php" }, { "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.infobip.com/omni/1/scenarios?default=true\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"authorization\"] = 'Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='\nrequest[\"accept\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body", "language": "ruby" }, { "code": "import http.client\n\nconn = http.client.HTTPConnection(\"api.infobip.com\")\n\nheaders = {\n 'authorization': \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n 'accept': \"application/json\"\n }\n\nconn.request(\"GET\", \"/omni/1/scenarios?default=true\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))", "language": "python" }, { "code": "HttpResponse<String> response = Unirest.get(\"https://api.infobip.com/omni/1/scenarios?default=true\")\n .header(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\")\n .header(\"accept\", \"application/json\")\n .asString();", "language": "java" }, { "code": "var client = new RestClient(\"https://api.infobip.com/omni/1/scenarios?default=true\");\n\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\n\nIRestResponse response = client.Execute(request);", "language": "csharp" }, { "code": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n if (this.readyState === this.DONE) {\n console.log(this.responseText);\n }\n});\n\nxhr.open(\"GET\", \"https://api.infobip.com/omni/1/scenarios?default=true\");\nxhr.setRequestHeader(\"authorization\", \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);", "language": "javascript" } ] } [/block] **Response** [block:code] { "codes": [ { "code": "{\n \"scenarios\": [\n {\n \"key\": \"37B93A3C58EAAF4D2B1B35B58526EAAC\",\n \"name\": \"New scenario\",\n \"flow\": [\n {\n \"from\": \"TestSender\",\n \"channel\": \"SMS\"\n },\n {\n \"from\": \"511\",\n \"channel\": \"PARSECO\"\n }\n ],\n \"default\": true\n }\n ]\n}", "language": "json", "name": "200 OK - JSON" }, { "code": "<scenariosResponse>\n <scenarios>\n <scenario>\n <key>37B93A3C58EAAF4D2B1B35B58526EAAC</key>\n <name>New scenario</name>\n <flow>\n <step>\n <from>TestSender</from>\n <channel>SMS</channel>\n </step>\n <step>\n <from>511</from>\n <channel>PARSECO</channel>\n </step>\n </flow>\n <default>true</default>\n </scenario>\n </scenarios>\n</scenariosResponse>", "language": "xml", "name": "200 OK - XML" }, { "code": "{\n \"requestError\": {\n \"serviceException\": {\n \"messageId\": \"NOT_FOUND\",\n \"text\": \"Scenario not found.\"\n }\n }\n}", "language": "json", "name": "404 Not Found" } ] } [/block]
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											User Information
									Node:
									(type) c
									(layer)3
										Element:label
											username
									Node:
									(type) c
									(layer)3
										Element:label
											password
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								Try It Out
						Node:
						(type) c
						(layer)2
							Element:label
								{{ param.name }}
							Element:span
								*
						Node:
						(type) c
						(layer)2
							Element:span
								get
						Node:
						(type) c
						(layer)2
							Element:span
						Node:
						(type) c
						(layer)2
							Element:span
						Node:
						(type) c
						(layer)2
							Element:pre
								{{ tryResults.results }}
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Method
							Element:td
								{{ tryResults.method }}
							Element:tr
							Element:th
								Request Headers
							Element:td
							Element:pre
								{{ tryResults.requestHeaders }}
							Element:tr
							Element:th
								URL
							Element:td
								{{ tryResults.url }}
							Element:tr
							Element:th
								Request Data
							Element:td
							Element:pre
								{{ tryResults.data }}
							Element:tr
							Element:th
								Status
							Element:td
							Element:span
							Element:tr
							Element:th
								Response Headers
							Element:td
							Element:pre
								{{ tryResults.responseHeaders }}
						Node:
						(type) c
						(layer)2
							Element:footer
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Subscribe to our newsletter
												Node:
												(type) c
												(layer)4
													Element:noscript
												Node:
												(type) c
												(layer)4
													Element:noscript
