Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Documentation Homepage
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								1. Orientation to the Indicative Platform
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Behavioral Analytics Overview
										Element:p
										Element:span
											Indicative is a behavioral analytics platform that guides growth marketers, product managers, and data analysts to understand and optimize customer engagement with their product or service.
										Element:p
										Element:span
											Indicative connects to all your behavioral data sources, synthesizes it into a 360 degree view of behavior, and helps you identify ways to better acquire, convert, and retain customers.
										Element:p
										Element:span
											“Behavioral Data” is data generated by or in response to a customer’s engagement with a business. Common sources of behavioral data include websites, mobile apps, CRM systems, marketing automation systems, call centers, help desks, and billing systems.
										Element:p
										Element:span
											This synthesized data creates a complete baseline for understanding behavior, but it’s missing an important piece – the ability to understand WHY customers have done certain actions of behavior.
										Element:p
										Element:span
											This is where behavioral analytics comes in.
										Element:p
										Element:span
											Indicative’s behavioral analytics platform helps you understand why customers do things, which allows you to optimize your full acquisition, conversion, and retention lifecycle, and generate critical insights day-to-day.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Data Model and Basic Principles
										Element:p
										Element:span
											Indicative uses Events and Properties to model your business. Events are any user action (e.g. a Subscription), while Properties are the context of each action (e.g. Gender of Subscriber).
										Element:p
										Element:span
											It can be helpful to think of events as the “what,” and properties as the “who, when, where.” Analyzing them together in Indicative helps you find out the the “why.”
										Element:p
										Element:span
											This simple framework allows you to use Indicative to analyze and optimize almost any type of customer behavior.
										Element:p
										Element:span
											Every event that is sent to Indicative also identifies a user, whether they are known (e.g. have logged into your app) or unknown (e.g. have visited your website for the first time).
										Element:p
										Element:span
											Indicative tracks behavior of users over time as described in their events and properties, and also allows you to analyze events and properties by user or group of users.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Tutorials & Demo Data Sets
										Element:p
										Element:span
											Indicative includes a set of six tutorials that walk new users through each analysis tool. Using a sample E-commerce dataset, the tutorials demonstrate a handful of common use cases. The tutorial includes three sections on Segmentation, one on Funnels, and two on Cohorts. After each tutorial you have the option to play around with the sample data set to get comfortable with the tool. The tutorials are accessible at any time from the book icon in the upper right corner of the window when logged into the application.
										Element:p
										Element:span
											There are also two demo data sets (E-commerce and SaaS) that allow you to familiarize yourself with Indicative and get hands on practice with the Segmentation, Funnel, Cohorts, User Insights, and Data Manager tools.
										Element:p
										Element:span
											The E-commerce dataset allows you to build analyses around the customer journey and identify opportunities to increase purchase conversion.
										Element:p
										Element:span
											The Saas dataset lets you build analyses that help you optimize free trial conversion rates, identify the most profitable user segments, and increase your user retention.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Data Definitions
										Element:p
										Element:span
											Indicative has several standard data elements that are used throughout the platform.
										Element:p
										Element:span
										Element:strong
											Events:
											Events are actions your users have taken within your projects. Every analysis in Indicative starts with at least one event to analyze behavioral patterns. You can think of events as the “what” that a user has done.
										Element:p
										Element:span
										Element:strong
											Properties:
											Properties are attributes that describe the context of each event to help you gain deeper insights about customer behavior. You can think of properties as the “who, when, where” that describe the event.
										Element:p
										Element:span
										Element:strong
											User Attributes:
											User Attributes are regular event properties that are associated with all the events a user did, rather than just a single event. In Indicative, you can switch any event property on and off to become a User Attribute. User Attributes are then associated with any event that the underlying user does, and not just the original event they were sent with.
										Element:p
										Element:span
											For example, assume that you send a ‘Sign Up’ event with an event property called ‘Email’ that contains the user’s email. Switching ‘Email’ on to a User Attribute will allow you to query on other events you send (say, ‘Login’ or ‘Purchase’) by email. This means you won’t have to send an event property of ‘Email’ with every event to be able to do analysis by email. See more in the Data Manager section for managing User Attributes.
										Element:p
										Element:span
										Element:strong
											Revenue:
											Revenue is a special type of event that can be analyzed in the Segmentation and Cohort tools. When you build a revenue query, the tool returns financial data rather than event frequency counts. You can filter and segment revenue just like a regular event to calculate how much revenue you’re generating for specific customer groups and behaviors.
										Element:p
										Element:span
											Revenue is enabled when you map it to an event in the Data Manager in the Mappings section within the Revenue & Lifetime Value block. When you open that block, you will be prompted to select a Revenue property and a Purchase event.
										Element:p
										Element:span
											Revenue is the price of your product, service, or subscription. In the drop down box, choose a numerical property attached to a revenue-generating event, recording the transaction amount.
										Element:p
										Element:span
										Element:strong
											Channels:
											Indicative automatically grabs the UTM parameters (also known as campaign parameters) from the URL of a website visitor when you have instrumented using our Javascript client, and puts them into the Channel section of the data panel. Segment by channel to identify where users are coming from when they take an action.
										Element:p
										Element:span
										Element:strong
											Mappings:
											Mappings chart key events and KPIs to help you create useful dashboard widgets and analysis. You can manage your Mappings in the Data Manager tool.
										Element:p
										Element:a
										Element:i
											Back To Top
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								2. Overview of Common Feature Elements
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Query Builder
										Element:p
										Element:span
											The Query Builder is the green area at the top of the screen in the Segmentation, Funnel, Cohorts, and User Insights tool. This is where you conduct analysis. You can add events, properties, user attributes, and channels to build up your analysis, and add breakouts and filters to further refine your analysis.
										Element:p
										Element:span
											You can label parts of a query within the query builder in any analysis tool. This allows you to add context to your queries when looking at multiple datasets and to distinguish which dataset corresponds to what filters. Clicking on the minus symbol at the left of the dataset collapses complex queries to show only the dataset label, enabling a much more organized and customizable view of the query. These labels remain a part of the query when saved as a Bookmark, Dashboard, or shared by URL.
										Element:p
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Breakouts (By Clause)
										Element:p
										Element:span
											“By clauses,” also referred to as “breakouts,” allow you to segment your data based on event properties and user characteristics. This allows you to break an event out by its property components and see behavior in more granularity. A breakout will create multiple data series in the Segmentation, Funnel, and Cohorts tools. You can break any query out by multiple properties.
										Element:p
										Element:span
											Breakout queries are limited to display a maximum of 50 breakout results in order to increase the utility of the visualizations when there are many breakout values. Use the selector in the query builder to show the top or bottom 5, 10, 15, 20, 30, 40, or 50 results, or view all if there are 50 or less. To view more than 50 breakouts, you can download the data from the tool as a CSV file.
										Element:p
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Filtering (Where Clause)
										Element:p
										Element:span
											“Where” clauses in the query builder allow you to filter and drill down on specific components of an event by property, rather than viewing all of these components on the chart as you would with breakouts. Instead of breaking the data into segments, you are filtering the data to hone in on a specific set of properties or user attributes. Filtering takes the original chart and recalculates it around a specific property value or user attribute to make a new single chart.
										Element:p
										Element:span
											You will have different filtering options for “where” dropdowns depending on whether the filtered property or user attribute is numeric or non-numeric.
										Element:p
										Element:span
											When you filter on a
										Element:strong
											non-numeric
											property, you have the following selection options:
										Element:ul
										Element:li
										Element:span
											“Is equal to” shows you only the data for values equal to that specific property value.
										Element:li
										Element:span
											“Contains” shows you the data where the string contains the selected value.
										Element:li
										Element:span
											“Does not contain” shows you all data that does not include the selected property value.
										Element:li
										Element:span
											“Is defined” shows you all data where there are values for the selected property value.
										Element:li
										Element:span
											“Is not defined” shows you all data where there are no values for a selected property.
										Element:p
										Element:span
											When you filter on a
										Element:strong
											numeric
											property, you have the following selection options:
										Element:ul
										Element:li
										Element:span
											“Is equal to” shows you only the data for values equal that specific property value.
										Element:li
										Element:span
											“Is not equal to” shows you only the data for values that are not equal that specific property value.
										Element:li
										Element:span
											“Is greater than” shows you the data for values greater than the selected property value.
										Element:li
										Element:span
											“Is less than” shows you all data for values less than the selected property value.
										Element:li
										Element:span
											“Is greater than or equal to” shows you the data for all values that are greater than or equal to the selected property value.
										Element:li
										Element:span
											“Is less than or equal to” shows you the data for all values that are less than or equal to the selected property value.
										Element:li
										Element:span
											“Is defined” shows you all data where there are values for the selected property value.
										Element:li
										Element:span
											“Is not defined” shows you all data where are no values for a selected property.
										Element:p
										Element:span
											Note: In the Data Manager, you can manually assign a data type to a property as a string or numeric value. This allows you to override Indicative’s auto-detection to tell the platform how to parse property values and thus determine which “Where” clause operations are available.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Data Panel
										Element:p
										Element:span
											The Data Panel is the right-hand sidebar that organizes your data into Events, Properties, User Attributes, Revenue and Channels. It also contains your Annotations (further described
										Element:a
											here
											).
										Element:p
										Element:span
											Every analysis starts with events, and you can layer in an unlimited amount of additional events, and further filter or enhance your analysis with Properties, User Attributes, Channels, and Revenue.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Chart Area
										Element:p
										Element:span
											The chart area is directly beneath the query builder window in the tool. At the top of the chart window is a gray section with several drop down lists. Each tool has the option to modify the date range that is visualized, view annotations, and export the underlying data. Each tool also has its own unique features for modifying the chart visualization and these are covered in the individual tool sections.
										Element:p
										Element:span
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Annotations
										Element:p
										Element:span
											Annotations make it easy for you to contextualize your data, capture your learnings and insights, and share them with your team. Click on the flag icon under the query builder window to add a new annotation and use the right-hand sidebar to pull up your existing annotations.
										Element:p
										Element:span
											Note that annotations are associated with a specific event and time window, so to view annotations you have to make sure the chart you are viewing is in the same timeframe as the annotation you’d like to see.
										Element:p
										Element:span
											The flag icon opens a dropdown menu where you can Add an Annotation, Hide Annotations, Manage Annotations, and Manage Labels. Adding an annotation opens a window where you can name, label, describe, assign a date, and apply your annotation to an event. Hiding annotations will hide any flags from the chart window. Unhide annotations by selecting “Show Annotations” from the dropdown menu. Manage Annotations takes you into the Data Manager where you can see and edit all annotations. Lastly, use the Manage Labels tool to help you classify your annotations. Each label is attached to a colored flag and you can filter by Annotation label in the Data Panel.
										Element:p
										Element:span
											Any internal user can also subscribe themselves or other team members to an annotation. Annotations subscribers receive email notifications any time the title or description of the annotation changes. For example, if you create an annotation, you can add team members as subscribers so that you can communicate back and forth within the annotation and receive email updates every time a change is made. This empowers your team to collaborate and converse within the tool and share insights and context.
										Element:p
										Element:span
											Annotations appear differently in the different tools. In the Segmentation tool, you are able to click on any datapoint to add an annotation. These annotations appear as flags in the chart window. In the other tools, you create annotations that are associated with the event time window and they are only accessible from the data panel.
										Element:p
										Element:span
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Data Export
										Element:p
										Element:span
											Indicative allows you to export the underlying data of each analysis from within the Segmentation, Funnel, Cohorts, and User Insights tools. The drop down arrow icon in the upper right corner of the chart window gives you the option to export your data as a CSV file from any of the tools, and offers additional printing and image downloading capabilities within the Segmentation and Cohorts tools.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Bookmarking
										Element:p
										Element:span
											You can name and save the charts you create for later use by selecting Add a Bookmark above the Data Panel. This feature lets you save the queries you create to access, update, or continue building them at a later time.
										Element:p
										Element:span
											To find or open a bookmarked analysis, click on the bookmark icon in the tool sidebar. Here you can search for bookmarks, rename them, and open them in the tool.
										Element:p
										Element:span
											Bookmarks are covered in depth in the
										Element:a
											Bookmarks section
											.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Adding to Dashboard
										Element:p
										Element:span
											If you create an analysis that you would like to monitor on a regular basis, you can add it as a widget to your dashboard using the “Add to Dashboard” button on the top-right corner of the Segmentation, Funnel, and Cohorts tools. Depending on your plan, you can create multiple dashboards, each with different widgets.
										Element:p
										Element:span
											From your dashboard, you can re-open any analysis right back into a tool.
										Element:p
										Element:span
											Dashboards are covered in more depth in the
										Element:a
											Dashboards section
											.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Autorun
										Element:p
										Element:span
											The Autorun feature allows you to control whether or not Indicative automatically re-calculates as you make changes to a query. Turning Autorun off allows you to make multiple changes before running the updates. This can speed up your analysis process if you are making a lot of changes on large data sets. The Autorun button can be found in the top right corner of the query builder window.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Reset
										Element:p
										Element:span
											The reset button allows you to clear your query and start a new one in the same tool. If you are finished with an analysis and would like to build a new one, you can use the reset button in the top right corner of the query builder to reset the tool.
										Element:p
										Element:a
										Element:i
											Back To Top
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								3. Overview of Interaction
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Click and Drag
										Element:p
										Element:span
											There are two ways to build up queries in Indicative using the elements in the Data Panel, 1) drag-and-drop and 2) double-clicking. You can drag and drop the events into the query builder itself or directly into the chart window in the highlighted drop zones. You can also
										Element:span
											drag and drop to replace an event in-place in the query builder of any tool
											. To add properties or attributes you can again drag them into the query builder itself and modify your clause using the drop down boxes. Alternatively, drop these properties directly into the chart window under “Segment By” or “Filter Where” and it will modify the query for you.
										Element:p
										Element:span
											You can also build queries by double clicking on the event or property in the Data Panel, and then using the drop down boxes in the query builder window to modify the clauses.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Interoperability
										Element:p
										Element:span
											Each tool in Indicative can be thought of as just a different way to visualize the same underlying data. Thus when you are looking at an analysis within a tool, the underlying data shown is not specific only to that tool.
										Element:p
										Element:span
											Indicative has a built-in concept of interoperability that allows you to push data between tools to analyze it from a different perspective.
										Element:p
										Element:span
											This means you can drill down into a group of users within any data point from the Segmentation, Funnel, and Cohorts analysis tools. For example, if you are analyzing a funnel where the last step is “Purchase” and want to drill deeper into the user attributes of those who completed the entire funnel, you can click on the “Purchase” step and push the data into the User Insights tool. This allows you to view all of the attributes for each customer who completed the funnel as well as their activity history.
										Element:p
										Element:span
											Additionally, when using funnels you can break out more fine-grained cohorts of users by drilling down on those users in a cohort analysis. To return to the original analysis, select the tool you came from in the sidebar and your original analysis will open.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Hide / Duplicate Query Lines
										Element:p
										Element:span
											Instead of deleting a line in your query, you can hide certain clauses to recalculate your chart as if the clause had been deleted. This makes it easy to look at different variations of a query without having to delete the original query and then rebuild it.
										Element:p
										Element:span
											You can also duplicate query lines by hovering over the query line you want to duplicate and clicking on the gear symbol on the right side of the query line. This is an easy way to create a similar query with minor alterations to compare the two.
										Element:p
										Element:a
										Element:i
											Back To Top
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								4. Segmentation
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Overview of Segmentation
										Element:p
										Element:span
											The Segmentation tool is the most flexible and powerful tool in the Indicative platform, and allows you to chart any combination of events, properties, and user attributes over time. The Segmentation tool is often the best way to get a snapshot of “what happened” in terms of your overall event activity. There are a variety of different chart types, such as line charts, bar charts, stacked bar charts, and pie charts to help you visualize your analysis.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Use Cases
										Element:p
										Element:span
											Segmentation is most often used for:
										Element:ol
										Element:li
										Element:span
											Exploring general patterns of events and properties over time
										Element:li
										Element:span
											Understanding the frequency of activity that users take, such as the volume of visits to certain website pages or the usage of specific app features
										Element:li
										Element:span
											Understanding the volume of unique users that do certain events relative to the total of number of occurrences of those events
										Element:li
										Element:span
											Charting KPIs and event ratios using the Calculator tool
										Element:li
										Element:span
											Understanding the activity patterns of different user groups that have done certain combinations of behavior using the For clause
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Orientation to Features
										Element:p
										Element:span
											Segmentation has to the following features and options to help you analyze your data:
										Element:p
										Element:span
										Element:span
										Element:a
											Total vs Uniques
										Element:span
											– Choose whether you want to see the unique number of users who did an event or the total occurrences of that event.
										Element:p
										Element:span
										Element:span
										Element:a
											Time Windows & Time Groupings
										Element:span
											– Select the time period and measurement in which to view an event.
										Element:p
										Element:span
										Element:a
										Element:span
											Cumulative
										Element:span
										Element:a
											vs Non-Cumulative
											-Choose whether you want to see the individual data for each time period or chart it as a running total over the whole visible time window.
										Element:p
										Element:span
										Element:span
										Element:a
											Breakouts (By clause)
										Element:span
											– Segment your data by specific properties and user attributes.
										Element:p
										Element:span
										Element:span
										Element:a
											Filtering (Where clause)
										Element:span
											– Focus in on specific properties or user attributes by viewing only a specific segment of the data.
										Element:p
										Element:span
										Element:span
										Element:a
											And / Or Clauses
										Element:span
											– Add additional logic to your query to require a value to match multiple conditions (“and” clause) or match one of several options (“or” clause).
										Element:p
										Element:p
										Element:span
										Element:strong
											Advanced Features
										Element:p
										Element:span
										Element:a
											Table View
											– View the underlying data values in your analysis.
										Element:p
										Element:span
										Element:a
											Calculator
											– Make advanced calculations on your events and properties.
										Element:p
										Element:span
										Element:span
										Element:a
											In-Line And/Or Clauses
										Element:span
											– Add and/or clauses in the same line as your initial query using ampersand and pipe characters.
										Element:p
										Element:span
										Element:span
										Element:a
											For Clause
										Element:span
											– Add in logic to show users who have done activity that meets certain conditions in order to track user patterns over time.
										Element:p
										Element:span
										Element:span
										Element:a
											Chart Types
										Element:span
											– Select the type of graph in which you want to view your data (bar, line, pie, and stacked bar).
										Element:p
										Element:span
											Paging – Breakout data with more than five property values will break out across multiple pages in the chart window. Navigate these pages using the key at the bottom of the chart window.
										Element:p
										Element:span
										Element:span
										Element:a
											Annotations in Segmentation
										Element:span
											– Capture and share insights from your analysis with your team.
										Element:p
										Element:span
										Element:span
										Element:a
											Data Export in Segmentation
										Element:span
											– Download and print your chart as an image or CSV file.
										Element:p
										Element:span
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Total vs Uniques
										Element:p
										Element:span
											The Totals vs Uniques toggle allows you to choose whether you want to see the unique number of users who did any combination of events or the total occurrences of that event.
										Element:p
										Element:span
											Uniqueness for events in Indicative is defined as unique to the underlying User ID of the user that did the event.
										Element:p
										Element:span
											After an event has been added to the query builder in the segmentation tool, you can toggle between “Total” or “Unique” in front of the event in the query. Total shows you the total occurrences of that event for the time window selected, while Unique shows the number of occurrences for each unique user (defined by the unique identifier for that user) who has performed that event within the time window.
										Element:p
										Element:span
											For example, if there are 10 unique users who did 100 of the same “Purchase” event in the underlying data, a query with “Total” selected will graph 100 “Purchase” events, while a query with “Unique” selected will graph 10 “Purchase” events.
										Element:p
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Time Windows & Time Groupings
										Element:p
										Element:span
											Time Windows and Time Groupings menus allow you to select the time period and measure of time in which to view an event.
										Element:p
										Element:span
											On the bar beneath the query builder in Segmentation, there is a series of drop downs that allow you to select the Time Window and Time Grouping. Going from left to right, you will first be able to select the Time Window, which is the specific period of time you want to view for an event. The tool automatically defaults to the last 7 days, but if you click the drop down, you can choose from a selection of preset time windows, or select “Add a Custom Date Range” to set a custom number of previous days in which to view your data.
										Element:p
										Element:img
										Element:p
										Element:p
										Element:span
											The drop down menu next to Time Window is the Time Groupings tool. Here you can choose which measurement of time you want to see – hourly, daily, weekly, or an aggregate total within the time window you selected.
										Element:p
										Element:img
										Element:p
										Element:p
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Cumulative vs Non-Cumulative
										Element:p
										Element:span
											The Cumulative and Non-Cumulative drop down lets you choose whether you want to see the individual data for each time grouping or chart it as a running total.
										Element:p
										Element:span
											Right next to the time groupings tool, below the query builder, you can select Cumulative or Non-Cumulative. “Non-cumulative” is the default setting and shows you the amount of occurrences for an event at each point in time as defined by your current time grouping.
										Element:p
										Element:span
											Selecting “Cumulative” plots points that show you the running total of users performing this event over time by adding each new event occurrence to the running total over the period of time selected.
										Element:p
										Element:span
											For example, if 10 people made a purchase on February 20th and 5 people made a purchase on February 21st, the Non-cumulative would show 10 and 5 “Purchase” events, but the Cumulative view would show 10 and 15.
										Element:p
										Element:span
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Breakouts (By Clause)
										Element:p
										Element:span
											Breakouts allow you to segment your data by specific properties and user attributes.
										Element:p
										Element:span
											After adding an event to the query builder, you can then create Breakouts using a “By clause.” This gives you more granular information about the event properties and specific user attributes such as platform, age, and gender. Double click or drag and drop an event property into one of the “by” drop zones to segment the event by that property. The graph will now show a data series for each property category.
										Element:p
										Element:span
											For instance, if you are looking at “Purchase” events, and you want to know which browser customers were using to make their purchases, you would drag the “Browser” property into the “Segment By” field and it would create a different data series for each browser used to make a purchase.
										Element:p
										Element:span
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Filtering (Where Clause)
										Element:p
										Element:span
											Filtering allows you to focus in on specific properties or user attributes by viewing only a specific segment of the data.
										Element:p
										Element:span
											When dragging a new property or user attribute into the chart area or query builder you will be given the option to “Segment by” or “Filter where.” Dropping it in the “Filter where” drop zone creates a “Where Clause” in the query. Alternatively, you can double click the property and change “by” to “where” in the query builder. Then select the property characteristic you want to view from the drop down menu in the query to create a chart that shows only events with your selected property.
										Element:p
										Element:span
											For example, if you are looking at “Purchases” and only want to see where visitors used their iPhone to complete a purchase, you would drag “Platform” into the “Where” drop zone. Then you would choose iPhone from the drop down menu in the query builder and your chart would recalculate to only show purchases made using an iPhone. In contrast, a breakout by “Platform” would create a chart for each platform used (e.g. iPhone, Android, Windows, etc).
										Element:p
										Element:span
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											And / Or Clauses
										Element:p
										Element:span
											Using an “And” or an “Or” clause lets you add additional logic to your query to require a value to match multiple conditions (“and” clause) or match one of several options (“or” clause).
										Element:p
										Element:span
											After using a Where clause to filter your event, you can drag another property or user attribute onto the “where” drop zone to build an “and” or an “or” clause.
										Element:p
										Element:span
										Element:span
											For example, you may want to look at Purchases where the Platform is equal to iPhone
										Element:i
										Element:span
											and
										Element:span
											the users are Female. This would help you understand how many female customers are using iPhones to make their purchases. Alternatively, you could use “or” to look at Purchases where the Platform is equal to iPhone
										Element:i
										Element:span
											or
										Element:span
											the Platform is equal to Android to see the total purchases made by anyone who used either an iPhone or an Android device. This can help you when you’re looking for very granular behavior patterns.
										Element:p
										Element:span
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								5. Segmentation - Advanced Features
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Table View
										Element:p
										Element:span
											Selecting Table View allows you to view at the underlying data of your analysis.
										Element:p
										Element:span
											On the upper right corner the chart window, there is a “Table View” icon. Selecting this tool allows you to view the underlying data values and associated statistics in a table rather than visualizing it in a graph (deselecting it returns it to the graph format).
										Element:p
										Element:span
											Once you select Table View, you can toggle between “Count” and “Stats.” Count shows you underlying data that is visualized the amount of users for each time period. These are the same values that you see when hovering over data points on the graph.
										Element:p
										Element:span
											Stats shows statistical summaries that is automatically calculated from the raw data, such as Count, Observations, Average, Minimum, Maximum, Range, Standard Deviation, Time Trend, and Confidence. This gives you access to information that can help you identify important trends in your data and build out your analysis.
										Element:p
										Element:span
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Calculator
										Element:p
										Element:span
											The built in Calculator tool allows you to make advanced calculations on your events and properties.
										Element:p
										Element:span
											The Calculator tool has an icon containing mathematical symbols, and is located in the upper right hand corner of the chart area, next to the table Table View tool.
										Element:p
										Element:p
										Element:span
										Element:img
										Element:p
										Element:span
											Opening the calculator allows you to create calculations from events and arbitrary numbers and chart them alongside or in place of the initial query. To remove the calculated function and revert the chart to the initial query, click on the function in the query builder and choose “Deconstruct” in the window that opens.
										Element:p
										Element:span
											You can create any combination of events using addition, subtraction, multiplication, and division, and even combine multiple calculations.
										Element:p
										Element:span
											For example, if you want to calculate purchase per session (e.g. a ratio using division), add both the “Session” and “Purchase” events to the query builder, then open the Calculator tool and set Purchase as your numerator and Session as your denominator. To add this to the chart window select “Replace in Query,” which will replace the two separate event charts with the newly calculated query, or select “Add as New” to graph the new query alongside the existing events.
										Element:p
										Element:span
										Element:img
										Element:p
										Element:span
											Using arbitrary numbers in calculation gives you the ability to scale datasets, calculate averages when looking at aggregate charts, or even just use numbers to create a metric directly on the chart. Simply click in the calculator box and type a number to use arbitrary calculations.
										Element:p
										Element:img
										Element:p
										Element:img
										Element:p
										Element:span
											Note that you can create nested functions by using an existing function in a new calculation.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											In-Line And / Or Clauses
										Element:p
										Element:span
											You can also add And/Or clauses in-line within the filter drop down itself using the symbols & and | to represent And and Or.
										Element:p
										Element:span
											Rather than starting a new line in the query for each additional specification in the same property key, click within the property type box and use an ampersand (and) or a pipe character (or) to quickly add And/Or clauses in the same line.
										Element:p
										Element:span
										Element:span
											For example, if you wanted to see how many signups came from the referring browsers Chrome
										Element:i
										Element:span
											and
										Element:span
											Firefox, you can choose Chrome, click inside of the drop down box, add an ampersand after Chrome, and type Firefox. This only works for attributes within the same property key so if you wanted to filter by user gender as well, you would have to start a new query line.
										Element:p
										Element:span
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											For Clause
										Element:p
										Element:span
											Using a “For clause” lets you focus in on conditional behaviors of users in order to track user patterns over time.
										Element:p
										Element:span
											To build out basic event sequences, click and drag an event from the data panel and a drop zone will appear that says “For users who did/not” in line with the existing query. You
										Element:span
											can then click the clause and a drop down menu will appear where they can select “did” or “did not.”
										Element:p
										Element:img
										Element:p
										Element:span
											You can use multiple For clauses in Segmentation to drill down into activity of users who did or did not perform a specific set of events within a given period of time. Simply drag events into the query builder and drop them into the “For users who did/not” drop zone.
										Element:p
										Element:span
											As you add events you can adjust the amount of times the users performed this event such as “greater than or equal to 1 time” as well as the time frame, which defaults to “within the prior 7 days.” When using a relative time frame, it always refer to the initial event in the query and not the other For clauses.
										Element:p
										Element:img
										Element:p
										Element:span
											For example, you could see how many people did a “Free Trial Start” for users who did not do a “Login” within the prior 7 days, but did do a “Pricing Page View” at least once within the prior 7 days.
										Element:p
										Element:span
											Note that the data displayed in the chart window is the count of the initial query events subject to the time window for the chart, however the “For clause” events are counted relative to the occurrence of the initial query event.
										Element:p
										Element:span
											Practically, this means that the conditional “For clause” events can occur outside the time window that is displayed on the chart.
										Element:p
										Element:span
											In the example below, “Free Trial Start” events displayed all will have occurred within the Last 7 Days of the current date (as set by the gray chart time window toggle at the bottom). However, the “Landing Page View” and “Pricing Page View” events must have occurred only within the prior 7 days of the “Free Trial Start” event.
										Element:p
										Element:span
											If a “Free Trial Start” event occurred 6 days ago, and the “Landing Page View” event for that user occurred 6 days prior to that, the “Free Trial Start” event will be counted. Relative to today, the “Landing Page View” event occurred 12 days ago.
										Element:p
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Chart Types
										Element:p
										Element:span
											Different chart types allow you to visualize your analysis in different ways.
										Element:p
										Element:span
											Next to the calculator tool is a drop down menu that allows you to select from line graph, bar graph, and stacked bar chart options. When looking only at aggregates, you also have an option to view data in a pie chart.
										Element:p
										Element:span
											For example, it may be clearer to see which platforms were used by users who made a purchase on February 20 as a pie chart. However, if you wanted to compare the amount of purchases made by males and females for each day over the past week, a line or bar chart would be a more useful representation.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Annotations in Segmentation
										Element:p
										Element:span
											Annotations let you capture and share insights from your analysis with your team.
										Element:p
										Element:span
											As you discover more about your data, you may want to add context for yourself or your colleagues about findings, next steps, or additional business context that helps explain certain behaviors patterns. In the Segmentation tool you can click on any point on the chart to add an annotation.
										Element:p
										Element:span
											For example, if there is a clear user drop off on your chart, you may want to make a note on that data point to yourself or even use it to notify a colleague to further investigate the drop off.
										Element:p
										Element:span
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Data Export in Segmentation
										Element:p
										Element:span
											Our Data Export function enables you to print and download your chart.
										Element:p
										Element:span
											Once you find the information that you need from Segmentation and want to save or capture it, you can use the Data Export tool next to the Chart Type icon to export it in the format that best suits your need. Export your data as an image and CSV file or send your chart directly to the printer.
										Element:p
										Element:span
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								6. Funnels
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Overview of Funnels
										Element:p
										Element:span
											The Funnel tool shows how users progress through a series of events. Each circle represents a group of users that performed a specific event. There is no concept of “total events” in funnels – only users who did an event. Subsequent events in the funnel will only count users who completed an event after also sequentially completing all prior events. Funnels help you see both where users are dropping off as well as how many users are contributed to an event by a preceding event.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Use Cases
										Element:p
										Element:span
											Funnels are most often used for:
										Element:ol
										Element:li
										Element:span
											Understanding conversion rates
										Element:li
										Element:span
											Charting how people progress through different stages of the user journey
										Element:li
										Element:span
											Investigating drop off in customer conversion or engagement
										Element:li
										Element:span
											Understanding how users arrived at a specific event
										Element:li
										Element:span
											Understanding how quickly certain users progress through an event sequence
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Orientation to Features
										Element:p
										Element:span
											Funnels have the following features and options to help you analyze your data:
										Element:p
										Element:span
										Element:span
										Element:a
											Metrics on Funnel
										Element:span
											– View snapshot metrics such as average funnel completion time and conversion rates.
										Element:p
										Element:span
										Element:span
										Element:a
											Adding / Removing Steps
										Element:span
											– Add and remove steps in the query builder itself or in the chart window.
										Element:p
										Element:span
										Element:span
										Element:a
											Reordering Steps
										Element:span
											– Drag and drop steps in the query builder to put them in the order you want.
										Element:p
										Element:span
										Element:span
										Element:a
											Breakouts and Filtering
										Element:span
											– Use breakouts and filtering to view specific characteristics of users in each step of the funnel.
										Element:p
										Element:span
										Element:span
										Element:a
											Tooltip Information
										Element:span
											– Click on any step in the funnel to see a variety of step metrics such as average step time and conversion rate.
										Element:p
										Element:span
										Element:span
										Element:a
											Completion Time Window
										Element:span
											– Narrow in on users who completed the funnel within a specific amount of time.
										Element:p
										Element:p
										Element:span
										Element:strong
											Advanced Features
										Element:p
										Element:span
										Element:a
											Optional Steps / Multi-Path Funnels
											– View all of the different paths users take to get from the first step to the last step in the funnel.
										Element:p
										Element:span
										Element:span
										Element:a
											Forward vs Reverse
										Element:span
											– View user drop off using forward funnels and see how many users got to the final step from each prior step using reverse funnels.
										Element:p
										Element:span
										Element:span
										Element:a
											Zoom
										Element:span
											– Zoom in and out of your funnel chart to make it fit inside of the chart window.
										Element:p
										Element:span
										Element:span
										Element:a
											Annotations in Funnels
										Element:span
											– Leave notes on data series to share or access later.
										Element:p
										Element:span
										Element:a
											Exports in Funnels
											– Export the funnels that you build as a CSV file.
										Element:p
										Element:span
										Element:span
										Element:a
											Interoperability in Funnels
										Element:span
											– Drill into underlying users or view funnel participants as cohort groupings over time.
										Element:p
										Element:span
										Element:a
											Additional Notes on Funnel Tool
										Element:p
										Element:span
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Metrics on Funnel
										Element:p
										Element:span
											Once you build your sequence of events, the chart window shows you a variety of information about your funnel such as average completion time and conversion rates.
										Element:p
										Element:span
											The top of the chart window shows you the “average time through the funnel,” which is the average time it took users to get from the first point through each step to the last. Next to this figure is the “total conversion rate,” which is the percentage of users who successfully completed the entire funnel.
										Element:p
										Element:span
											The area between each event in the funnel is called webbing. This part of the funnel shows the conversion rates between each step. Funnels are user-centric, so all of the data is presented as unique counts. It wouldn’t make sense to show total events since a funnel explores the journey of each user through a specific sequence of events.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Adding / Removing Steps
										Element:p
										Element:span
											Adding steps is as simple as dragging and dropping the events you want in your funnel into the chart area or into the query builder. You can also add steps by double clicking on the event you want to add to the funnel.
										Element:p
										Element:span
											Each event is labeled directly above the step in the funnel, if you want to remove a step, click the “x” on the right of the step label in the chart window and it will recalculate the funnel without this step. You can also delete steps right in the query builder window or click on the eye icon to hide and unhide steps.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Reordering Steps
										Element:p
										Element:span
											To reorder steps in the funnel, open the query builder and drag the event queries into the order that you want them.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Breakouts and Filtering
										Element:p
										Element:span
											After setting up your funnel, you can get even more specific information by using breakouts and filtering to reveal more about the property and user characteristics of each event.
										Element:p
										Element:span
											Dragging a property or user attribute into the Segment By drop zone breaks out each event circle into a pie chart to show the percentage of users that correspond to each property or user attribute. Once you add a breakout, you can also click on each section of the pie chart to see metrics specific to this segment.
										Element:p
										Element:span
											For example, if you want to see how female and male users traverse the funnel differently, you can break out your funnel by a gender property. This will reveal drop offs or interesting patterns in how male and female users complete the sequence.
										Element:p
										Element:span
											You can also filter each event by properties and user attributes to identify interesting patterns or changes in platform, browser, or user characteristics over the course of the funnel.
										Element:p
										Element:span
											For example, if you want to know how many people are signing up on an iPhone and making purchases on an Android, you can filter signups to show only signups where the platform is equal to iPhone, and then filter the purchase step show only purchases where the platform is equal to Android.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Tooltip Information
										Element:p
										Element:span
											The Tooltip allows you to click on each event in the funnel to see a variety of metrics.
										Element:p
										Element:span
											Within the tooltip are a several features. The conversion rate tells you the percentage of users that made it from the previous step to that step. The total drop gives you the percentage of users lost in the progression from the previous step to that step in the funnel. The average step time shows you the average amount of time it took users to get from the previous step to that step.
										Element:p
										Element:span
											On the tooltip you can also click the Cohorts or User Insights icon to view the funnel information in these other contexts. See
										Element:a
											interoperability section
											below for more information.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Completion Time Window
										Element:p
										Element:span
											The Completion Time Window lets you narrow in on users who completed the funnel in a specific amount of time.
										Element:p
										Element:span
											The Completion Time Window drop down is located in the toolbar between the query builder window and the chart window in the upper-left hand corner of the chart area. The Completion Time Window lets you filter your analysis to only users who completed the full funnel in a certain time frame. The selection options are Full Timeframe, 5 Minutes, 1 Hour, or 1 Day.
										Element:p
										Element:span
											The Full Timeframe shows all users who completed the funnel steps within the designated time window.
										Element:p
										Element:span
											For example, if you wanted to know how many people in the last 30 days went through the entire funnel in 5 minutes or less, you would set the Completion Time Window to 5 minutes.
										Element:p
										Element:a
										Element:i
											Back To Top
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								7. Funnels - Advanced Features
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Optional Steps / Multi-Path Funnels
										Element:p
										Element:span
											Multi-path funnels show you all of the different paths users take to go from the first step to the last step in the funnel.
										Element:p
										Element:span
											Not every user takes the same step by step path, so it can be useful to make some steps in the funnel optional. You can do this by clicking on the pushpin icon that appears next to the event name both in the query builder and the chart itself. You can also check the checkbox in the Tooltip Information box that says “Optional Step.” Taking any of these actions will show an additional path that describes how many users completed the funnel without completing the optional step.
										Element:p
										Element:span
											For example, say your funnel shows a user signing up, adding to cart, proceeding to checkout, and then purchasing. If you make adding to cart an optional step you can see how many of the users who signed up made purchases directly from the product’s page rather than adding it to their cart.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Forward vs Reverse
										Element:p
										Element:span
											Forward funnels allow you to view what percentage of users progress to each step. Reverse funnels show you how many users were contributed to each step by the previous step.
										Element:p
										Element:span
											To create a reverse funnel from an existing forward funnel, use the “Forward” drop down menu to select “Reverse.” In reverse funnels, the percentages shown in the webbing correspond to the percentage of users that completed a completed a certain event prior to another event. A common usecase for reverse funnels is to identify how many overall conversions happened via a selected path. This helps you identify out of the users who completed the final step, how many actually took the path you created.
										Element:p
										Element:span
											For example, for a 4-step forward funnel with user signup, add to cart, proceed to checkout, and purchase, at each step we see how many users completed the sequence of events.
										Element:p
										Element:span
											When looking at the same funnel in reverse, you see the total number of users who made purchases and of these purchases, you would see how many came from people who proceeded to checkout, and of those who proceeded to checkout you would see how many added items to their cart, and of those who did those three steps you would see how many signed up. Reverse funnels show you how many of the users who take the final step are actually following this series of steps.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Zoom
										Element:p
										Element:span
											You can easily zoom in and out of your funnel by using the drop down menu in the top right corner of the chart window. This feature is especially useful when you have many steps in your funnel or when you have a multi-path funnel that doesn’t fit in the window at 100%.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Annotations in Funnels
										Element:p
										Element:span
											Similarly to the Segmentation tool, you can annotate your funnel. However, instead of leaving notes on individual data points, you select the flag icon on the right of the bar beneath the query builder window to leave a note about the funnel in the given timeframe. To retrieve this later you click the annotations icon in the Data Panel. Filter annotations by the note category to easily access later.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Exports in Funnels
										Element:p
										Element:span
											You can export the funnels that you build as a CSV file. This will allow you to see the data from the funnels as a value chart that you can edit, send, and print.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Interoperability of Funnels
										Element:p
										Element:span
											The interoperability of our tools allows you drill into the underlying users who performed a sequence of steps or split out funnel steps into fine-grained user cohorts.
										Element:p
										Element:span
											Funnel interoperability lets you take the underlying data that you query in your funnel and view it in the Cohorts and User Insights tools. This lets you see your data in different contexts and allows you to smoothly move from tool to tool as you get deeper into your data exploration. Click on a specific step in the event sequence and then click on the Cohorts icon to view the cohort information for that step of the funnel.
										Element:p
										Element:span
											For example, if you use the example funnel from above (user signup, add to cart, proceed to checkout, and purchase) and you segment it by platform, you can select “add to cart” and click on the Cohorts icon. This would show you the shared behaviors of users over time who took this step based on platform. You could also drill down further into the users by pushing the data into the User Insights tool.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Additional Notes on Funnel Tool
										Element:p
										Element:span
											You currently can only have 5 optional steps in your funnel, however you can add an unlimited amount of required steps.
										Element:p
										Element:span
											Also note that if you add a property breakout to your funnel and the property you are using to segment doesn’t directly apply to a certain event, the step will say “N/A” on the chart.
										Element:p
										Element:span
											Lastly, you can only export funnels as a CSV file and not as an image file.
										Element:p
										Element:a
										Element:i
											Back To Top
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								8. Cohorts
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Overview of Cohorts
										Element:p
										Element:span
											The Cohorts tool helps you identify user behavioral patterns by organizing them into groups over time. A cohort is a group of users who all performed a certain sequence of events. It is similar to a funnel analysis in that users within a cohort must have completed all the necessary steps, however the visualization allows to you view what is essentially many funnels all at once, and compare fine-grained slices by time period or property to one another.
										Element:p
										Element:span
											To build out your query, you filter the cohort by the amount of those users who also performed an additional event and then segment this by time-based generations or event properties.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Use Cases
										Element:p
										Element:span
											Cohorts are most commonly used for:
										Element:ol
										Element:li
										Element:span
											Understanding user engagement over time
										Element:li
										Element:span
											Understanding user retention and churn over time
										Element:li
										Element:span
											Grouping users to identify behavioral trends
										Element:li
										Element:span
											Calculating Lifetime Value by identifying repeated user performance
										Element:li
										Element:span
											Understanding long-term results of A/B test groups
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Orientation to Features
										Element:p
										Element:span
										Element:strong
											Initial Cohort Setup
										Element:span
										Element:strong
											–
											To build a cohort, you start with a query area that asks you to identify a cohort-identifying event, filter it with another event that cohort users also performed, and then segment this by cohort generation or property. Once you calculate this analysis, you choose whether you want to view the data cumulatively or non-cumulatively over time, and as a count of users or as a percentage of users. Additionally, choose between “First Time” and “Recurring” depending on whether you want to look at the first time a user did the cohort sequence or see the ongoing pattern of behavior.
										Element:p
										Element:span
										Element:strong
											Metrics on Cohorts
										Element:span
										Element:strong
											–
											Generations are time based user groupings, which break users out by a period of time. Rows in the cohort chart correspond to these different generations and you can add any properties to break out or filter the generations down further. Columns in the cohort chart correspond to the time based groupings to show how the cohort performs over time.
										Element:p
										Element:span
										Element:strong
											Summary Chart
										Element:span
											Above the cohort chart, there is a chart displaying the simple average of the displayed generations for each interval of time after the cohort-identifying event.
										Element:strong
											–
										Element:p
										Element:span
										Element:strong
											First Time vs Recurring
										Element:span
										Element:strong
											–
											Monitor how long it takes users to perform the succeeding action for the first time or monitor customer retention of users who repeat that action over time.
										Element:p
										Element:span
										Element:strong
											Non-Cumulative vs Cumulative
										Element:span
										Element:strong
											–
											View your cohorts as a cumulative running total or as a non-cumulative figure over time. Choose to view this figure as a user count or as a percentage of users.
										Element:p
										Element:span
										Element:strong
											Property Breakout vs Time Generation Breakout
										Element:span
										Element:strong
											–
											Segment your cohorts by period of time or by user characteristic to track their behavior over time and compare results.
										Element:p
										Element:span
										Element:strong
											Charting Options
										Element:span
										Element:strong
											–
											View your cohorts as a dot graph, a stacked line chart, or a spaghetti chart.
										Element:p
										Element:span
										Element:strong
											Annotations in Cohorts
										Element:span
										Element:strong
											–
											Leave notes on specific data points using the stacked line or spaghetti chart view.
										Element:p
										Element:span
										Element:strong
											Exports in Cohorts
										Element:span
										Element:strong
											–
											Print and download spaghetti and stacked line charts as image files or download a CSV file.
										Element:p
										Element:span
										Element:strong
											Interoperability in Cohorts
										Element:span
										Element:strong
											–
											Drill down into user attributes of a specific cohort by clicking on a dot in the chart and selecting “view users in this cohort.” You can also push funnel events into cohort analysis.
										Element:p
										Element:span
										Element:strong
											Additional Note on the Cohorts Tool
										Element:span
										Element:strong
											–
											Cohorts only allow you to filter queries with one Where clause at the aggregate Cohort level.
										Element:p
										Element:span
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								9. User Insights
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Overview of User Insights
										Element:p
										Element:span
											The User Insights tool allows you to query groups of users who performed any sequence of events and properties, and drill down into the complete activity timeline of any individual user.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Use Cases
										Element:p
										Element:span
											The User Insights Tool is most commonly used to:
										Element:ol
										Element:li
										Element:span
											Understand users who have common behavior patterns
										Element:li
										Element:span
											View individual user profiles and activity history
										Element:li
										Element:span
											Export users to action via marketing automation or email platforms
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Orientation to Features
										Element:p
										Element:span
										Element:strong
											User-Centricity of Output
										Element:span
										Element:strong
											–
											The User Insights tool is different than the other tools in Indicative. Rather than visualizing a chart of activity, the output in the User Insights tool is a very straightforward list of users who performed that event or sequence of events and all of the data collected about each user.
										Element:p
										Element:span
										Element:strong
											User Attributes
										Element:span
										Element:strong
											–
											View a chart of users who performed an event and the characteristics of each of these users.
										Element:p
										Element:span
										Element:strong
											Managing User Attributes
										Element:span
										Element:strong
											–
											Use the user attributes tool in the
										Element:a
											Data Manager
											to configure the properties that describe your users.
										Element:p
										Element:span
										Element:strong
											Event Sequencing
										Element:span
										Element:strong
											–
											Build event sequences in the query builder to see attributes of the users who performed these steps.
										Element:p
										Element:span
										Element:strong
											User Activity Stream
										Element:span
										Element:strong
											–
											Click on any user in the chart to see their individual activity timeline.
										Element:p
										Element:span
										Element:strong
											Searching
										Element:span
										Element:strong
											–
											Search for users and their user attributes by any matching value by using the search box in the upper right corner of the chart window.
										Element:p
										Element:span
										Element:strong
											Additional Notes on User Insights Tool –
											User Insights currently only shows up to 1000 users in a query result, however you can always export the full list of users. Additionally, when viewing the user’s Activity Stream currently you can only view the 100 most recent events.
										Element:p
										Element:span
										Element:img
										Element:p
										Element:p
										Element:a
										Element:i
											Back To Top
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								10. Data Manager
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Overview of Data Manager
										Element:p
										Element:span
											The Data Manager is home to all events and properties tracked in the project and allows you to reference and manage all of your data. In this tool, you can view the full list of events and associated properties that are being tracked. Additionally, you can modify labels and definitions of both events and properties.
										Element:p
										Element:span
											The Data Manager is divided into four sections: Library, Mapping, User Attributes, and Annotations.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Use Cases
										Element:p
										Element:span
											The Data Manager is most often used to:
										Element:ol
										Element:li
										Element:span
											Rename/relabel events,
										Element:li
										Element:span
											View and edit event properties
										Element:li
										Element:span
											Edit, delete, and manage all annotations
										Element:li
										Element:span
											Join events to create a new data series from the sum of the selected events
										Element:li
										Element:span
											Mapping events to receive useful analysis recommendations and insights
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Orientation to Features
										Element:p
										Element:span
										Element:strong
											Widget Library
										Element:span
										Element:strong
											–
											View, rename, hide, join, and search for events in the Widget Library.
										Element:p
										Element:span
										Element:strong
											User Attribute Management
										Element:span
										Element:strong
											–
											Track the user attributes that describe your users and label and define these properties.
										Element:p
										Element:span
										Element:strong
											Annotation Management
										Element:span
										Element:strong
											–
											View, add, hide, edit, or delete annotations in a project and also configure label and privacy settings.
										Element:p
										Element:span
										Element:strong
											Renaming Events / Properties
										Element:span
										Element:strong
											–
											Rename events or properties by clicking in the Event Label or Attribute Label box in line with the appropriate Event or Attribute Key.
										Element:p
										Element:span
										Element:strong
											Hiding Events / Properties
										Element:span
										Element:strong
											–
											Hide events from the Events Panel by clicking the eye icon next to the event. Move the “User Attribute?” toggle to No for attributes that don’t describe your users.
										Element:p
										Element:span
										Element:strong
											Event Definitions
										Element:span
										Element:strong
											–
											Describe what an event is measuring by clicking in the text box to add the event definition.
										Element:p
										Element:span
										Element:strong
											Event Categories
										Element:span
										Element:strong
											–
											Classify your events by category to see them organized accordingly on the data panel.
										Element:p
										Element:span
										Element:strong
											Joined Events
										Element:span
										Element:strong
											–
											Create a new data series from the sum of two or more selected events
										Element:p
										Element:span
										Element:strong
											Property Data Definitions
										Element:span
										Element:strong
											–
											Manually assign a data type to a property as a string or numeric value. Click on any event in the Data Manager to view all associated properties. Then use the dropdown menu to select Numeric, String, or Auto.
										Element:p
										Element:span
										Element:strong
											Mappings
										Element:span
										Element:strong
											–
											Mappings chart key events and KPIs to help you create useful dashboard widgets and analyses.
										Element:p
										Element:span
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								11. Bookmarks
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Orientation to Bookmarks
										Element:p
										Element:span
											The Bookmarks tool allows you to name and save the analyses you produce so that you can access and update them later. Bookmarks are a way to re-access useful queries or ones that you want to check back in on at a later time. All of your bookmarks are listed and can be accessed from the left-hand tool sidebar by clicking on the bookmark icon.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Use Cases
										Element:p
										Element:span
											Bookmarks are most commonly used to:
										Element:ol
										Element:li
										Element:span
											Save commonly used reports
										Element:li
										Element:span
											Save work in progress
										Element:li
										Element:span
											Save analysis to be shared with others
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Orientation to Features
										Element:p
										Element:span
										Element:strong
											Save
										Element:span
										Element:strong
											–
											Save any analyses by clicking the Add Bookmark button above the events sidebar.
										Element:p
										Element:span
										Element:strong
											Edit
										Element:span
										Element:strong
											–
											Save updated queries by selecting Add Bookmark and choose whether you want to save it as a new version or update the original bookmark.
										Element:p
										Element:span
										Element:strong
											Search
										Element:span
										Element:strong
											–
											Search saved bookmarks by opening the bookmark tool and typing in the Search Bar in the upper right corner of the screen
										Element:p
										Element:span
										Element:strong
											Rename
										Element:span
										Element:strong
											–
											Rename bookmarks in the query builder window, within the bookmark tool itself, or when you save an updated version.
										Element:p
										Element:span
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								12. Dashboards
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Overview of Dashboards
										Element:p
										Element:span
											Dashboards allow you to monitor key metrics in real-time. Any analysis you can create in Indicative can be added to the dashboard with a few clicks. You can also drill down into charts directly from your dashboard in their original tool to take a deeper look or make changes to the query.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Use Cases
										Element:p
										Element:span
											Dashboards are most often used to:
										Element:ol
										Element:li
										Element:span
											Monitor all your core KPIs on a regular basis
										Element:li
										Element:span
											Quickly explore data anomalies
										Element:li
										Element:span
											Create multiple department and end-user specific dashboards
										Element:li
										Element:span
											Share KPI dashboards with other teams and executives
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Orientation to Features
										Element:p
										Element:span
										Element:strong
											Creation of Dashboards
										Element:span
										Element:strong
											–
											The Add to Dashboard button sits right next to the bookmark button in the top right corner of the page of the Segmentation, Funnel, and Cohorts tools.
										Element:p
										Element:span
										Element:strong
											Dialogs in Each Tool
										Element:span
										Element:strong
											–
											Each analysis tool has several configurable timeframes and views that are customized for generating insight at a glance
										Element:p
										Element:span
										Element:strong
											Chart Types and Nuances
										Element:span
										Element:strong
											–
											Use the widget settings to customize the appearance of widgets, such as chart type for segmentation, conversion time window for all funnels, and cumulative vs non-cumulative for cohorts.
										Element:p
										Element:span
										Element:strong
											Moving –
											Reorganize your dashboard by clicking and dragging the charts into any order you like.
										Element:p
										Element:span
										Element:strong
											Settings Menu
										Element:span
										Element:strong
											–
											Rename or delete dashboards using the Dashboard Settings tool in the upper right corner of the window. You can also configure the appearance of each widget using the settings tool on each individual widget.
										Element:p
										Element:span
										Element:strong
											Widget Menu
										Element:span
										Element:strong
											–
											Use the widget menu to view the query in place of the chart, duplicate the widget, move the widget to another dashboard, or delete the widget from the dashboard.
										Element:p
										Element:span
										Element:strong
											Re-Open in Tool
										Element:span
										Element:strong
											–
											Select Open In [Tool] from the widget menu to open up the original chart and query in the Segmentation, Funnel, or Cohorts tool.
										Element:p
										Element:span
										Element:strong
											Saving / Updating Options
										Element:span
										Element:strong
											–
											Save updates to dashboard queries by selecting Add to Dashboard and then choosing to update it or save it as a new widget.
										Element:p
										Element:span
										Element:img
										Element:p
										Element:a
										Element:i
											Back To Top
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								13. Integration - Getting Started
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Integration Overview
										Element:p
										Element:span
											There are multiple methods to get data into Indicative for analysis:
										Element:p
										Element:span
										Element:strong
											REST API –
											Send events directly to our REST API endpoint.
										Element:p
										Element:span
										Element:strong
											SDKs –
											Send events to our REST API endpoint facilitated by SDKs for a variety of programming languages. Our javascript and mobile clients have additional benefits of automatically collecting Page View and Screen View events, and our javascript client autocollects a variety of properties as well.
										Element:p
										Element:span
										Element:strong
											Data warehouse –
											We have integrations with a variety of different cloud and on-premise databases. Please contact support for more information at support@indicative.com.
										Element:p
										Element:span
										Element:strong
											Semi-structured files –
											We can process a variety of different semi-structured file types such as JSON and CSV – please contact support for more detail at support@indicative.com.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Implementation Best Practices
										Element:p
										Element:span
										Element:strong
											Naming Events and Properties
										Element:ul
										Element:li
										Element:span
											Make your event names simple and intuitive. If you find yourself about to assign a long, complex name to an event, think about whether there’s a better way to record that data. For example, rather than having two events named “One-Month Subscription Purchase” and “Six-Month Subscription Purchase”, you could have one “Subscription Purchase” event tagged with a “Billing Term” property value.
										Element:li
										Element:span
											As in the above example, event and property names can contain spaces and punctuation marks. Take advantage of that feature to make your event and property names more easily readable.
										Element:li
										Element:span
											Be sure to name properties consistently across events. If you interchangeably record a property name as either “Color” or “Colour”, those will be treated as two separate properties, making it much more difficult to accurately segment your data.
										Element:p
										Element:span
										Element:strong
											Adding New Events
										Element:ul
										Element:li
										Element:span
											Before you tag an event somewhere in your code, make sure you fully understand the implications of choosing that particular spot. Remember that the event will be recorded every time that block of code is executed. The overwhelming majority of data consistency issues come from incorrect assumptions about your own code.
										Element:li
										Element:span
											Create a project for testing purposes, and make good use of it. To create a new project, click on the name of your current project in the navigation bar at the top of the screen, and click “New Project”. Use the new API Key associated with this project in your development environment to ensure that your test data remains separate from your production data. Before deploying to production, test each new event in your development environment and verify that your test project is correctly receiving the data.
										Element:p
										Element:span
										Element:strong
											Adding Properties
										Element:ul
										Element:li
										Element:span
											There will likely be certain properties that you want to be recorded for every event. To accomplish this, we recommend modifying our existing clients. Add a method that takes as an argument the Object representation of one of your users. In the body of this method, add to the event’s properties map any properties you want to be recorded for every event. This will allow you to conveniently record a group of properties using a single method call.
										Element:p
										Element:span
										Element:strong
											Unique User Identifiers
										Element:ul
										Element:li
										Element:span
											Each user of your app should have a unique, persistent identifier associated with them. Setting this unique ID each time you record an event will let you dig deeper into your data, allowing for funnel and cohort analysis as well as unique counts in the segmentation tool.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Accessing the REST API
										Element:ol
										Element:li
										Element:span
										Element:b
											Identify the correct API key to use.
										Element:span
										Element:span
											You can find this on the Project Settings page after you log in. Each API Key corresponds to a collection of events belonging to a specific project. If you want to track events for multiple projects (say, two completely unrelated apps), you should use a different API Key for each one. We also recommend that you create a “Testing” project and use that API Key in your development environment. Avoid sharing your API Keys among different projects so that data flows into the correct area from your application or website.
										Element:span
										Element:li
										Element:span
										Element:b
											Add a call tagging an event.
										Element:span
										Element:span
											Once you’ve identified a location in your code that represents an occurrence of an event, you’ll drop in a single line specifying that event’s name.
										Element:span
										Element:li
										Element:span
										Element:b
											Provide a unique user identifier for the event.
										Element:span
										Element:span
											In many cases you’ll want to see just the number of unique users who performed an action, rather than the total number of actions that occurred. To make that kind of analysis possible, we’ll need you to provide a unique identifier for the user performing each action. The exact format of this identifier is up to you, as long as it’s consistent for each user across multiple events.
										Element:span
										Element:li
										Element:span
										Element:b
											Add property data to the event.
										Element:span
										Element:span
											Next, you’ll add name-value pairs of properties, our term for contextual metadata about an event or the user associated with it. This requires indicating which specific properties you want to be recorded every time this event occurs.
										Element:span
										Element:li
										Element:span
										Element:b
											Send us the event!
										Element:span
											With the above steps completed, you’re all set to send the event our way. This can be accomplished through a simple HTTP POST to our REST API, or using one of the handy methods provided in our packaged clients.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											SDKs Overview
										Element:p
										Element:span
											We also offer packaged clients written in a variety of languages including Java and Python, as well as special clients for iOS and Android apps. These clients are designed to be fail proof, asynchronous, and able to be modified as suits your needs.
										Element:p
										Element:a
										Element:i
											Back To Top
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								14. SDKs
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Java
										Element:p
										Element:span
											If you’re integrating with a Maven project, just add the following dependency to your pom.xml file:
										Element:br
										Element:span
										Element:br
										Element:span
										Element:span
											Otherwise,
										Element:a
										Element:span
											download the client
										Element:span
											and add the Indicative.java file (located in /src/main/java/com/indicative/client/java) to your project.
										Element:p
										Element:span
											To start tracking events, first call the apiKey() method and pass in your API key, like so:
										Element:br
										Element:span
										Element:br
										Element:span
											You should only have to do that once. Alternatively, you can hardcode the value of API_KEY at the top of the file. Once your API key is set, you can record events with a single line of code:
										Element:p
										Element:span
										Element:br
										Element:span
											The static method event() takes the name of the event as a String argument. It returns a newly instantiated Event object. Note that all of the following methods (aside from done()) return the modified Event object, allowing them to be chained together as in the example.
										Element:p
										Element:span
											Next, the uniqueId() method takes one String argument, which is the unique identifier associated with the user performing the action.
										Element:p
										Element:span
											The addProperty() method takes two String arguments for the name and value of the property, respectively. This method is overloaded so that you can pass in int, long, float, double, and boolean property values without having to convert them to Strings yourself.
										Element:p
										Element:span
											Finally, you must call done() to asynchronously post the event to our REST endpoint.
										Element:p
										Element:span
											This client also includes several unit tests in the IndicativeTest.java file (located in /src/test/java/com/indicative/client/java).
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Python
										Element:p
										Element:span
										Element:a
											Download on GitHub
										Element:p
										Element:span
											After downloading the client, add the
										Element:tt
											file to your project. Before you start recording events, call the
										Element:span
											indicative.py
										Element:tt
											method and pass in your project’s API key:
										Element:span
											init()
										Element:br
										Element:span
										Element:br
										Element:span
											You should only have to do this once. Next, to record an event, set up a dictionary object with your property names and value, and then call the
										Element:tt
											method. Its usage looks like this:
										Element:span
											record()
										Element:br
										Element:span
										Element:br
										Element:span
											The
										Element:tt
											method takes three arguments: the event name, the user’s unique ID, and a dictionary containing the event’s property names and values. This method creates a JSON representation of your event and sends it to our API endpoint. Note that this is done synchronously.
										Element:span
											record()
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Android
										Element:p
										Element:span
										Element:a
											Download on GitHub
										Element:p
										Element:span
											Our Android library is available on Maven Central as an AAR artifact. If your project uses Gradle, you can integrate by adding the following dependency:
										Element:br
										Element:span
										Element:br
										Element:span
											Otherwise, download the client and add the
										Element:tt
											file (located in /src/com/indicative/client/java/android/) to your project.
										Element:span
											Indicative.java
										Element:p
										Element:span
											To start recording events, you’ll first have to create an instance of our
										Element:tt
											object and initialize it with your API key. You can do this by calling our
										Element:span
											Indicative
										Element:tt
											method in the
										Element:span
											launch()
										Element:tt
											method of your main Application class, like so:
										Element:span
											onCreate()
										Element:br
										Element:span
										Element:br
										Element:span
											To record an event, first create a
										Element:tt
											of your property names and values:
										Element:span
											Map
										Element:br
										Element:span
										Element:br
										Element:span
											Next, simply call our
										Element:tt
											method, passing in the event name, a unique user identifier, and the property map you just created:
										Element:span
											recordEvent()
										Element:br
										Element:span
										Element:p
										Element:span
											This method creates a JSON representation of your event and adds it to a queue. Every 60 seconds, the events in that queue will be sent to our Rest API endpoint via HTTP POST requests. If debug mode is enabled via the debug
										Element:tt
											in
										Element:span
											boolean
										Element:tt
											, the status code and body of our response will be outputted to your device’s logs.
										Element:span
											Indicative.java
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											iOS
										Element:p
										Element:span
											After downloading the client, drop the Indicative project files into a Group in your app. To start using it, specify your Indicative API key by calling Indicative‘s launch: method in the didFinishLaunchingWithOptions: method of your app delegate:
										Element:p
										Element:span
										Element:br
										Element:span
											To record an event, simply call the record: method, passing in the name of your event. For example:
										Element:br
										Element:span
										Element:br
										Element:span
											To record an event with properties call the record:withProperties: method, like so:
										Element:br
										Element:span
										Element:p
											The record: and record:withProperties: methods add an event object to a queue. Every 60 seconds, the events on this queue will be asynchronously sent to our servers via HTTP POST requests. If debug mode is enabled via the debug BOOL in Indicative.m, the status code and body of our response will be outputted to your device’s logs.
										Element:p
											To specify the user who performs an event, call the identifyUser: method, passing in the user’s unique identifier. If you choose to not identify the user, Indicative will automatically generate an identifier for the user based on their device’s MAC address.
										Element:p
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											JavaScript
										Element:p
										Element:span
											First, you’ll need to asynchronously load our script into your site. Add this script in either your site’s
										Element:tt
											or
										Element:span
											<head>
										Element:tt
											tag:
										Element:span
											<body>
										Element:br
										Element:span
										Element:br
										Element:span
											This script tag asynchronously loads Indicative.js from our CDN and initializes the JavaScript code with your unique API key. You will need to set your API key in quotes where it says “YOUR_API_KEY_GOES_HERE”.
										Element:p
										Element:span
											To choose between your site’s
										Element:tt
											or
										Element:span
											<head>
										Element:tt
											tags, note the pros and cons of each. The
										Element:span
											<body>
										Element:tt
											tag will allow you to access the Indicative object earlier (on load), however your site will not load until everything in the
										Element:span
											<head>
										Element:tt
											tag is loaded. So, if you do not need the Indicative object immediately, we recommend putting this snippet in the
										Element:span
											<head>
										Element:tt
											tag.
										Element:span
											<body>
										Element:p
										Element:span
										Element:strong
											Building and Sending an Event
										Element:p
										Element:span
											Recording an event is easy and customizable. It can be as simple as:
										Element:br
										Element:span
										Element:br
										Element:span
											The above line will build and send an event named ‘event-name’ with a unique ID set as a random UUID, you can set a unique ID for this event only (explained here) or a stateful unique ID (explained under the Stateful Variables header). The following call will set the unique id for this event only:
										Element:span
										Element:p
										Element:span
										Element:br
										Element:span
											If you have a stateful unique ID set, the unique ID in this call will override that unique ID. If you want to add properties to a call, it’s fairly simple. Call buildEvent with any of the following forms:
										Element:span
										Element:p
										Element:span
										Element:br
										Element:span
											Building without the uniqueID is just as simple. You’ll mostly be using these cases if you’ve set a stateful unique ID or have no unique ID and will use the random UUID we set for you:
										Element:p
										Element:span
										Element:br
										Element:span
											Indicative also allows callbacks, which will be fired after a successful or unsuccessful stat post. You can include a callback function in any of the buildEvent methods, like so:
										Element:span
										Element:p
										Element:span
										Element:p
										Element:span
											With so many different ways to build an event, you’ll have a lot of flexibility to build and send any custom events you need. For further references, refer to the Indicative object API table below.
										Element:span
										Element:strong
											Stateful Variables
										Element:span
										Element:span
											We allow you to set stateful variables across every page. Stateful variables are stored as a persistent cookie, so every page will be able to share the same common properties and a uniqueID for the user triggering events on your site. Anywhere in your JavaScript, after Indicative was initialized, call:
										Element:p
										Element:span
										Element:span
											This will allow you to log events without having to refer to a unique ID every time you build an event. Indicative also allows for stateful properties, as well, which can be added with the following calls:
										Element:p
										Element:span
										Element:p
										Element:span
											These properties will be appended to subsequent event calls. They will not override the properties passed into a buildEvent call, rather append to the list of properties. If a common property isn’t applicable anymore, call:
										Element:br
										Element:span
										Element:p
										Element:span
											This will remove a single property. It’s just as easy to clear the entire common properties list:
										Element:p
										Element:span
										Element:p
										Element:span
										Element:strong
											How to Track Links
										Element:p
										Element:span
											Tracking
										Element:tt
											link clicks can be challenging, because once the page changes we lose our chance to fire an event. To solve this problem, we’ve added a callback to our build object. Use the following function to track link clicks and then send the user to the linked page:
										Element:span
											href
										Element:br
										Element:span
										Element:br
										Element:span
											To call this function in your HTML, set up a link like so:
										Element:span
										Element:p
										Element:span
										Element:br
										Element:span
										Element:strong
											Automatic Tracking
										Element:p
										Element:span
											We automatically track the following properties: browser (
										Element:tt
											), operating system (
										Element:span
											browser
										Element:tt
											), referrer (
										Element:span
											browser_os
										Element:tt
											), language (
										Element:span
											browser_referrer
										Element:tt
											), page title (
										Element:span
											browser_language
										Element:tt
											), and url (
										Element:span
											page_title
										Element:tt
											).
										Element:span
											page_url
										Element:p
										Element:span
											We also automatically track marketing channels provided by UTM search parameters. You’ll be able to see the following properties if you have users loading your page with UTM properties in the URL:
										Element:tt
											,
										Element:span
											campaign_source
										Element:tt
											,
										Element:span
											campaign_medium
										Element:tt
											,
										Element:span
											campaign_term
										Element:tt
											, and
										Element:span
											campaign_content
										Element:tt
											. We will also provide these channel properties in their own section of the data panel, titled as Channels.
										Element:span
											campaign_name
										Element:p
										Element:span
										Element:strong
											Indicative Object API
										Element:table
										Element:thead
										Element:tr
										Element:th
										Element:span
											Method Call
										Element:th
										Element:span
											Parameters
										Element:th
										Element:span
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:span
											Indicative.initialize(apiKey)
										Element:td
										Element:span
											String
										Element:td
										Element:span
											Initializes the Indicative object to be ready for use. Must contain your project’s unique apiKey.
										Element:tr
										Element:td
										Element:span
											Indicative.getProperties();
										Element:td
										Element:span
											N/A
										Element:td
										Element:span
											Returns an object of the stateful properties.
										Element:tr
										Element:td
										Element:span
											Indicative.addProperties(obj);
										Element:td
										Element:span
											Obj | Array
										Element:td
										Element:span
											Adds a list or object of properties to the object of stateful properties. Can be an object or an array, see docs for further info.
										Element:tr
										Element:td
										Element:span
											Indicative.addProperty(name, value);
										Element:td
										Element:span
											name: String & value: String | Number | Boolean
										Element:td
										Element:span
											Add a single property to the object of stateful properties. Must include a String name and String or Number or Boolean value.
										Element:tr
										Element:td
										Element:span
											Indicative.removeProperty(name);
										Element:td
										Element:span
											String
										Element:td
										Element:span
											Removes a single property from the stateful properties object.
										Element:tr
										Element:td
										Element:span
											Indicative.clearProperties();
										Element:td
										Element:span
											N/A
										Element:td
										Element:span
											Clears all stateful properties.
										Element:tr
										Element:td
										Element:span
											Indicative.setUniqueID(id);
										Element:td
										Element:span
											String
										Element:td
										Element:span
											Sets a stateful uniqueID to be used for all events built without a uniqueID.
										Element:tr
										Element:td
										Element:span
											Indicative.clearUniqueID();
										Element:td
										Element:span
											N/A
										Element:td
										Element:span
											Clears the stateful uniqueID.
										Element:tr
										Element:td
										Element:span
											Indicative.buildEvent(eventName);
										Element:td
										Element:span
											eventName: String
										Element:td
										Element:span
											Records an event with the given eventName, using the unique ID stored as a cookie (RandomUUID if not manually set using
										Element:tt
											). More information provided in documentation on building an event.
										Element:span
											Indicative.setUniqueId(id)
										Element:tr
										Element:td
										Element:span
											Indicative.buildEvent(eventName, id);
										Element:td
										Element:span
											eventName: String & id: String
										Element:td
										Element:span
											Records an event with the given eventName and unique id. It will only set this event’s unique id. More information provided in documentation on building an event.
										Element:tr
										Element:td
										Element:span
											Indicative.buildEvent(eventName, id, propmap);
										Element:td
										Element:span
											eventName: String & id: String & propmap: Obj | Array
										Element:td
										Element:span
											Records an event with the given eventName, unique id, and property map. The property map can be an object or an array and will only be used for this event. See how to format these in the subsection on building an event.
										Element:tr
										Element:td
										Element:span
											Indicative.buildEvent(eventName, propmap);
										Element:td
										Element:span
											eventName: String & propmap: Obj | Array
										Element:td
										Element:span
											Records an event with the given eventName and property map. It will use the default unique id. The property map can be an object or an array and will only be used for this event. Refer to building an event subsection for more information.
										Element:tr
										Element:td
										Element:span
											Indicative.buildEvent(eventName, callback);
										Element:td
										Element:span
											eventName: String & callback: Func
										Element:td
										Element:span
											Records an event with the given eventName and callback function. It will use the default unique id. The callback function will be called after successful or unsuccessful POST. Refer to building an event for more information.
										Element:tr
										Element:td
										Element:span
											Indicative.buildEvent(eventName, id, callback);
										Element:td
										Element:span
											eventName: String & id: String & callback: Func
										Element:td
										Element:span
											Records an event with the given eventName, unique id, and callback function. It will record this event’s unique id. The callback function will be called after successful or unsuccessful POST. Refer to building an event for more information.
										Element:tr
										Element:td
										Element:span
											Indicative.buildEvent(eventName, id, propmap, callback);
										Element:td
										Element:span
											eventName: String & id: String & propmap: Obj | Array & callback: Func
										Element:td
										Element:span
											Records an event with the given eventName, unique id, property map, and callback function. The property map can be an object or an array and will only be used for this event. The callback function will be called after successful or unsuccessful POST. Refer to building an event for more information.
										Element:tr
										Element:td
										Element:span
											Indicative.buildEvent(eventName, propmap, callback);
										Element:td
										Element:span
											eventName: String & propmap: Obj | Array & callback: Func
										Element:td
										Element:span
											Records an event with the given eventName, property map, and call back function. The property map can be an object or an array and will only be used for this event. The callback function will be called after successful or unsuccessful POST. Refer to building an event for more information.
										Element:tr
										Element:td
										Element:span
											Indicative.setUniqueID(id, true);
										Element:td
										Element:span
											id: String
										Element:td
										Element:span
											This will automatically call
										Element:tt
											after setting the new unique ID. If you just call
										Element:span
											Indicative.sendAlias()
										Element:tt
											(without ‘true’) it will not send the alias call.
										Element:span
											Indicative.setUniqueID(id)
										Element:tr
										Element:td
										Element:span
											Indicative.sendAlias();
										Element:td
										Element:span
											N/A
										Element:td
										Element:span
											The Indicative client automatically generates a default unique ID (a UUID) to use on all events until
										Element:tt
											is called. At that point,
										Element:span
											Indicative.setUniqueID(id)
										Element:tt
											can be called to alias the UUID to the ‘id’ parameter set within
										Element:span
											Indicative.sendAlias()
										Element:tt
										Element:span
											Indicative.setUniqueID(id)
										Element:p
										Element:a
										Element:i
											Back To Top
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								15. Integration - Advanced Capabilites
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											REST API Methods
										Element:p
										Element:span
											We offer two options for submitting events to our REST API: submitting one event at a time, or submitting batches of events.
										Element:p
										Element:span
										Element:b
											Single Events
										Element:p
										Element:span
											Our REST API’s single event endpoint can be found at: https://api.indicative.com/service/event
										Element:p
										Element:span
											To send us an event, you’ll need to make a POST request to that URL with a Content-Type of ‘application/json’. In the POST body, include a JSON object with the following fields:
										Element:table
										Element:thead
										Element:tr
										Element:th
										Element:span
											Name
										Element:th
										Element:span
											Type
										Element:th
										Element:span
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:span
											apiKey
										Element:td
										Element:span
											String
										Element:td
										Element:span
											The API Key for this project. If the key you provide is invalid, we’ll return a 400 Bad Request error.
										Element:tr
										Element:td
										Element:span
											eventName
										Element:td
										Element:span
											String
										Element:td
										Element:span
											The name of the event. Must be between 1 and 255 characters in length, and cannot be null.
										Element:tr
										Element:td
										Element:span
											eventUniqueId
										Element:td
										Element:span
											String
										Element:td
										Element:span
											The unique identifier for the user triggering the event. Must be between 1 and 255 characters in length, and cannot be null.
										Element:tr
										Element:td
										Element:span
											properties
										Element:td
										Element:span
											JSON Object
										Element:td
										Element:span
											An internal JSON Object, listing property names and values as Strings. Values will be truncated at 255 characters.
										Element:tr
										Element:td
										Element:span
											eventTime
										Element:td
										Element:span
											Number
										Element:td
										Element:span
											The time that the event occurred. The value should be in unix timestamp (either in seconds or milliseconds) or ISO 8601 format. This field is optional, and will default to the current time if not set. Events with negative timestamps (i.e., dates before 1970 UTC) will be rejected.
										Element:p
										Element:p
										Element:span
											As an example, your JSON Object would resemble the following:
										Element:br
										Element:span
										Element:br
										Element:span
											Our servers will respond with one of a few status codes indicating the outcome of your request:
										Element:table
										Element:thead
										Element:tr
										Element:th
										Element:span
											Status Code
										Element:th
										Element:span
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:span
											200 OK
										Element:td
										Element:span
											Your request successfully reached our servers and used the correct syntax.
										Element:tr
										Element:td
										Element:span
											400 Bad Request
										Element:td
										Element:span
											Your request contained malformed syntax. This may indicate that the API Key you used is incorrect.
										Element:tr
										Element:td
										Element:span
											422 Unprocessable Entity
										Element:td
										Element:span
											Your request used the correct syntax, but one or more JSON field values violated the constraints listed above.
										Element:p
										Element:p
										Element:span
										Element:b
											Batched Events
										Element:p
										Element:span
											To send multiple events at once, you’ll want to use our batch endpoint at: https://api.indicative.com/service/event/batch
										Element:p
										Element:span
											It works similarly to the single event endpoint – it requires a POST with Content-Type: ‘application/json’ and a POST body containing the following:
										Element:table
										Element:thead
										Element:tr
										Element:th
										Element:span
											Name
										Element:th
										Element:span
											Type
										Element:th
										Element:span
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:span
											apiKey
										Element:td
										Element:span
											String
										Element:td
										Element:span
											The API Key for this project. If the key you provide is invalid, we’ll return a 400 Bad Request error.
										Element:tr
										Element:td
										Element:span
											events
										Element:td
										Element:span
											JSON Array
										Element:td
										Element:span
											The events to be recorded, in an array. Each object in this array should adhere to the format used to send up a single event, indicated above. The ‘apiKey’ field used in the single event is unnecessary here, and will be disregarded if included.
										Element:p
										Element:span
											We recommend that your implementation include up to 100 events per batch. All events sent in a batch default to the current time. To override this, you can set the “eventTime” key for each event to a specific Unix timestamp value. As an example, a batch of two events that would be assigned with the current time would resemble the following:
										Element:p
										Element:span
										Element:p
										Element:span
											The status codes returned by the batch endpoint are the same as the single event endpoint specified above. When sending either single or batched events, there is a rate limit of 250 events per second. If you need a higher rate limit, please contact
										Element:a
											support@indicative.com
											.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:article
																Element:h3
																Element:a
																Element:i
																	Aliasing
																Element:p
																Element:span
																	Indicative supports aliasing between anonymous IDs and user IDs to allow customers to unify event streams submitted with separate unique keys.
																Element:p
																Element:span
																	Aliasing is typically used to connect the activity stream of an anonymous user to their known activity stream after they have been identified as a known user.
																Element:p
																Element:span
																	For example, when a user first visits your website, either they are assigned an anonymous ID by the Indicative client or you can set an anonymous ID yourself. After the user signs up, logs in, or otherwise identifies themselves, their activity should now be recorded under a known user ID. Aliasing the two IDs together ensures a seamless activity stream in Indicative under one unique user ID vs two unique user IDs.
																Element:p
																Element:span
																	An aliasing API call consists of three components: an anonymous ID, a user ID, and your API key. An anonymous ID is an ID used to identify a user before they’ve registered, logged in, or otherwise identified themselves. A user ID is the ID used to uniquely identify a single user within your application – this should probably be an immutable field that’s tied to the user table in your database.
																Element:p
																Element:span
																	After receiving an alias call, all data submitted in the future from either the anonymous ID or a user ID will be processed as coming from the same user. Alias calls can be done retroactively to combine two event streams that have already been submitted. However, this needs to be coordinated through your Customer Success Manager.
																Element:p
																Element:span
																	As a best practice, we recommend that an alias call between a pair of IDs is made exactly once. It’s sensible to make this call the first time a user identifies themselves, such as upon registration within your application.
																Element:p
																Element:span
																	Note that improper use of aliasing can cause irreparable damage to data. Alias calls are permanent, and cannot be undone.
																Element:p
																Element:span
																Element:strong
																	Caveats
																Element:ul
																Element:li
																Element:span
																	An anonymous ID can be aliased to only one user ID (there is a many-to-one relationship between anonymous IDs and User IDs)
																Element:li
																Element:span
																	You cannot alias a user ID to another user ID
																Element:li
																Element:span
																	You cannot “chain” alias calls with multiple user IDs (i.e. Anon1 -> User1 -> User2 is invalid)
																Element:li
																Element:span
																	Alias calls do not affect data received in the past (only future data), but can be supported retroactively when coordinated with your Customer Success Manager
																Element:p
																Element:span
																Element:b
																	Aliasing API
																Element:p
																Element:span
																	URL:
																Element:span
																	POST
																Element:span
																	https://api.indicative.com/service/alias
																Element:p
																Element:span
																	Required Request Headers:
																Element:span
																	Content-Type:
																Element:span
																	application/json
																Element:span
																	Example Request Body:
																Element:p
																Element:span
																Element:span
																	Method Calls:
																Element:h5
																Element:span
																	Indicative.sendAlias()
																Element:p
																Element:span
																Element:span
																	The Indicative client automatically generates a default unique ID (a UUID) to use on all events until
																Element:span
																	Indicative.setUniqueID(id)
																Element:span
																	is called. At that point,
																Element:span
																	Indicative.sendAlias()
																Element:span
																	can be called to alias the UUID to the ‘id’ parameter set within
																Element:span
																	Indicative.setUniqueID(id)
																Element:h5
																Element:span
																	Indicative.setUniqueID(id, true)
																Element:p
																Element:span
																Element:span
																	This will automatically call
																Element:span
																	Indicative.sendAlias()
																Element:span
																	after setting the new unique ID. If you just call
																Element:span
																	Indicative.setUniqueID(id)
																Element:span
																	(without ‘true’) it will not send the alias call.
																Element:span
																Element:span
																Element:p
																Element:a
																Element:i
																	Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Server-Side vs Client Side
										Element:p
										Element:span
											Sending data server-side (e.g. directly to the Indicative API) requires you to configure all of your events and properties directly within your code to send to our REST API.
										Element:p
										Element:span
											On the client side, our javascript and our SDKs capture several auto-collected properties
										Element:p
										Element:span
											Additionally, we automatically generate an anonymous UUID if a userID is not specified.
										Element:p
										Element:span
											The following properties are auto-collected from our javascript client:
										Element:ul
										Element:li
										Element:span
											browser (browser)
										Element:li
										Element:span
											operating system (browser_os)
										Element:li
										Element:span
											referrer (browser_referrer)
										Element:li
										Element:span
											language (browser_language)
										Element:li
										Element:span
											page title (page_title)
										Element:li
										Element:span
											url (page_url).
										Element:p
										Element:span
											We also automatically track marketing channels provided by UTM search parameters. You’ll be able to see the following properties if you have users loading your page with UTM properties in the URL: campaign_source, campaign_medium, campaign_term, campaign_content, and campaign_name. We will also provide these marketing channel properties in their own section of the data panel, titled as Channels.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Data Warehouse & Semi-Structured Files
										Element:p
										Element:span
										Element:span
											For more information on supported integrations with existing data warehouses and semi-structured files, please contact support at
										Element:span
										Element:a
											support@indicative.com
											.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											Partner Integrations
										Element:p
										Element:span
										Element:a
										Element:span
											Segment
										Element:span
											is a customer data hub for easily installing analytics and growth tools.
										Element:p
										Element:span
											There are three reasons we recommend using Segment:
										Element:ol
										Element:li
										Element:span
										Element:span
											With one integration you can send the same customer data you send to Indicative to over
										Element:a
										Element:span
											100 other complimentary services
										Element:span
											.
										Element:li
										Element:span
											Segment offers client libraries for iOS, Android, Xamarin, JavaScript, Ruby, Node.js, Python, PHP, Java, .NET, Go and Clojure. When you integrate with Segment, you don’t need to worry about updating any of these libraries – they’ll take care of maintenance for you.
										Element:li
										Element:span
											You can start using Segment with zero code via their one click-to-install plugins for popular e-commerce and blogging platforms.
										Element:p
										Element:span
										Element:span
											Indicative’s integration with Segment is fully supported by us and
										Element:a
										Element:span
											Segment
										Element:span
											.
										Element:p
										Element:span
										Element:a
										Element:span
											Read Segment’s docs for Indicative.
										Element:p
										Element:a
										Element:i
											Back To Top
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:article
										Element:h3
										Element:a
										Element:i
											3rd Party Integrations
										Element:p
										Element:span
											Indicative supports a wide variety of 3rd party integrations with additional ones being added regularly.
										Element:p
										Element:span
											These integrations enable you to send behavioral data from 3rd party sources to Indicative to generate a full 360 degree view of user behavior.
										Element:p
										Element:span
											Our most popular integrations include Salesforce, Marketo, and Sailthru.
										Element:p
										Element:span
										Element:span
											Questions on whether we support your favorite 3rd party application? Email
										Element:span
										Element:a
											support@indicative.com
											.
										Element:p
										Element:a
										Element:i
											Back To Top
									Node:
									(type) c
									(layer)3
										Element:aside
										Element:ul
										Element:li
										Element:b
										Element:i
										Element:a
											1. Orientation to the Indicative Platform
										Element:li
										Element:i
										Element:a
											Behavioral Analytics Overview
										Element:li
										Element:i
										Element:a
											Data Model and Basic Principles
										Element:li
										Element:i
										Element:a
											Tutorials & Demo Data Sets
										Element:li
										Element:i
										Element:a
											Data Definitions
										Element:ul
										Element:li
										Element:b
										Element:i
										Element:a
											2. Overview of Common Feature Elements
										Element:li
										Element:i
										Element:a
											Query Builder
										Element:li
										Element:i
										Element:a
											Breakouts (By Clause)
										Element:li
										Element:i
										Element:a
											Filtering (Where Clause)
										Element:li
										Element:i
										Element:a
											Data Panel
										Element:li
										Element:i
										Element:a
											Chart Area
										Element:li
										Element:i
										Element:a
											Annotations
										Element:li
										Element:i
										Element:a
											Data Export
										Element:li
										Element:i
										Element:a
											Bookmarking
										Element:li
										Element:i
										Element:a
											Adding to Dashboard
										Element:li
										Element:i
										Element:a
											Autorun
										Element:li
										Element:i
										Element:a
											Reset
										Element:ul
										Element:li
										Element:b
										Element:i
										Element:a
											3. Overview of Interaction
										Element:li
										Element:i
										Element:a
											Click and Drag
										Element:li
										Element:i
										Element:a
											Interoperability
										Element:li
										Element:i
										Element:a
											Hide / Duplicate Query Lines
										Element:ul
										Element:li
										Element:b
										Element:i
										Element:a
											4. Segmentation
										Element:li
										Element:i
										Element:a
											Overview of Segmentation
										Element:li
										Element:i
										Element:a
											Use Cases
										Element:li
										Element:i
										Element:a
											Orientation to Features
										Element:li
										Element:i
										Element:a
											Total vs Uniques
										Element:li
										Element:i
										Element:a
											Time Windows & Time Groupings
										Element:li
										Element:i
										Element:a
											Cumulative vs Non-Cumulative
										Element:li
										Element:i
										Element:a
											Breakouts (By Clause)
										Element:li
										Element:i
										Element:a
											Filtering (Where Clause)
										Element:li
										Element:i
										Element:a
											And / Or Clauses
										Element:ul
										Element:li
										Element:b
										Element:i
										Element:a
											5. Segmentation - Advanced Features
										Element:li
										Element:i
										Element:a
											Table View
										Element:li
										Element:i
										Element:a
											Calculator
										Element:li
										Element:i
										Element:a
											In-Line And / Or Clauses
										Element:li
										Element:i
										Element:a
											For Clause
										Element:li
										Element:i
										Element:a
											Chart Types
										Element:li
										Element:i
										Element:a
											Annotations in Segmentation
										Element:li
										Element:i
										Element:a
											Data Export in Segmentation
										Element:ul
										Element:li
										Element:b
										Element:i
										Element:a
											6. Funnels
										Element:li
										Element:i
										Element:a
											Overview of Funnels
										Element:li
										Element:i
										Element:a
											Use Cases
										Element:li
										Element:i
										Element:a
											Orientation to Features
										Element:li
										Element:i
										Element:a
											Metrics on Funnel
										Element:li
										Element:i
										Element:a
											Adding / Removing Steps
										Element:li
										Element:i
										Element:a
											Reordering Steps
										Element:li
										Element:i
										Element:a
											Breakouts and Filtering
										Element:li
										Element:i
										Element:a
											Tooltip Information
										Element:li
										Element:i
										Element:a
											Completion Time Window
										Element:ul
										Element:li
										Element:b
										Element:i
										Element:a
											7. Funnels - Advanced Features
										Element:li
										Element:i
										Element:a
											Optional Steps / Multi-Path Funnels
										Element:li
										Element:i
										Element:a
											Forward vs Reverse
										Element:li
										Element:i
										Element:a
											Zoom
										Element:li
										Element:i
										Element:a
											Annotations in Funnels
										Element:li
										Element:i
										Element:a
											Exports in Funnels
										Element:li
										Element:i
										Element:a
											Interoperability of Funnels
										Element:li
										Element:i
										Element:a
											Additional Notes on Funnel Tool
										Element:ul
										Element:li
										Element:b
										Element:i
										Element:a
											8. Cohorts
										Element:li
										Element:i
										Element:a
											Overview of Cohorts
										Element:li
										Element:i
										Element:a
											Use Cases
										Element:li
										Element:i
										Element:a
											Orientation to Features
										Element:ul
										Element:li
										Element:b
										Element:i
										Element:a
											9. User Insights
										Element:li
										Element:i
										Element:a
											Overview of User Insights
										Element:li
										Element:i
										Element:a
											Use Cases
										Element:li
										Element:i
										Element:a
											Orientation to Features
										Element:ul
										Element:li
										Element:b
										Element:i
										Element:a
											10. Data Manager
										Element:li
										Element:i
										Element:a
											Overview of Data Manager
										Element:li
										Element:i
										Element:a
											Use Cases
										Element:li
										Element:i
										Element:a
											Orientation to Features
										Element:ul
										Element:li
										Element:b
										Element:i
										Element:a
											11. Bookmarks
										Element:li
										Element:i
										Element:a
											Orientation to Bookmarks
										Element:li
										Element:i
										Element:a
											Use Cases
										Element:li
										Element:i
										Element:a
											Orientation to Features
										Element:ul
										Element:li
										Element:b
										Element:i
										Element:a
											12. Dashboards
										Element:li
										Element:i
										Element:a
											Overview of Dashboards
										Element:li
										Element:i
										Element:a
											Use Cases
										Element:li
										Element:i
										Element:a
											Orientation to Features
										Element:ul
										Element:li
										Element:b
										Element:i
										Element:a
											13. Integration - Getting Started
										Element:li
										Element:i
										Element:a
											Integration Overview
										Element:li
										Element:i
										Element:a
											Implementation Best Practices
										Element:li
										Element:i
										Element:a
											Accessing the REST API
										Element:li
										Element:i
										Element:a
											SDKs Overview
										Element:ul
										Element:li
										Element:b
										Element:i
										Element:a
											14. SDKs
										Element:li
										Element:i
										Element:a
											Java
										Element:li
										Element:i
										Element:a
											Python
										Element:li
										Element:i
										Element:a
											Android
										Element:li
										Element:i
										Element:a
											iOS
										Element:li
										Element:i
										Element:a
											JavaScript
										Element:ul
										Element:li
										Element:b
										Element:i
										Element:a
											15. Integration - Advanced Capabilites
										Element:li
										Element:i
										Element:a
											REST API Methods
										Element:li
										Element:i
										Element:a
											Aliasing
										Element:li
										Element:i
										Element:a
											Server-Side vs Client Side
										Element:li
										Element:i
										Element:a
											Data Warehouse & Semi-Structured Files
										Element:li
										Element:i
										Element:a
											Partner Integrations
										Element:li
										Element:i
										Element:a
											3rd Party Integrations
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:p
											© 2016 Indicative. All Rights Reserved.
