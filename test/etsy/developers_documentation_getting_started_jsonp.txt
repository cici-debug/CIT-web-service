Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					JSONP and JavaScript
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Using the JSONP interface with JavaScript
							Element:a
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								JavaScript programmers will be familiar with the
							Element:a
								Same-Origin Policy
								, which limits requests made with the
							Element:code
								XMLHttpRequest
								object to servers on the same domain name as the page running the JavaScript code. For this reason, you won't be able to call the Etsy API directly using
							Element:code
								XMLHttpRequest
								. One way to get around this limitation is to build a proxy application to make requests to
							Element:code
								beta-api.etsy.com
								and serve the response to your JavaScript code. This can be useful if you want to implement caching. Another solution is to use the Etsy API's built-in
							Element:a
								JSONP
								interface, which uses
							Element:code
								<script>
								tag injection as an alternative to
							Element:code
								XMLHttpRequest
								. (
							Element:a
								Here is an in-depth description of JSONP
								.) To use the JSONP interface, you will need to make some small changes to the way you call and process the Etsy API:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								The URI must end in
							Element:code
								.js
							Element:li
								An additional parameter,
							Element:code
								callback,
								must be specified
							Element:li
								Callback values may only contain the letters
							Element:code
								A-Z
								, the digits
							Element:code
								0-9
								, periods ("
							Element:code
								.
								"), underscores ("
							Element:code
								_
								") and square brackets ("
							Element:code
								[
								" and "
							Element:code
								]
								").
							Element:li
								Callback values must be shorter than 100 characters.
						Node:
						(type) c
						(layer)2
							Element:p
								Here's an example of an API method, first called using the standard JSON interface, and then with the alternate JSONP interface:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tbody
							Element:tr
							Element:th
								JSON Interface
							Element:td
							Element:code
								https://openapi.etsy.com/v2/users/testusername?api_key=
							Element:em
								your_api_key
							Element:tr
							Element:th
								JSONP Interface
							Element:td
							Element:code
								https://openapi.etsy.com/v2/users/testusername.js?callback=getData&api_key=
							Element:em
								your_api_key
						Node:
						(type) c
						(layer)2
							Element:p
								To call this request, you would first define a JavaScript function
							Element:code
								getData()
								to process the response, and then insert a
							Element:code
								<script>
								tag to make the request, like so:
						Node:
						(type) c
						(layer)2
							Element:pre
								<script type="text/javascript"> function getData(data) { if (data.ok) { // do something with the data here } else { alert(data.error); } } </script> <script src="https://openapi.etsy.com/v2/users/testusername.js?callback=getData&api_key=
							Element:em
								your_api_key
								"></script>
						Node:
						(type) c
						(layer)2
							Element:p
								Notice that we need to explicitly check the value of
							Element:code
								data.ok
								before proceeding with the
							Element:code
								getData()
								function. This is because the normal error handling rules of the Etsy API don't apply when using the JSONP interface. Under JSONP, every API call results in a
							Element:code
								200 OK
								regardless of its actual error state (this is because the
							Element:code
								<script>
								tag injection won't work with any other status code). When they occur, errors will be reported as part of the result object using the following special fields:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tbody
							Element:tr
							Element:th
							Element:strong
								JSONP Response Field
							Element:td
							Element:strong
								Purpose
							Element:td
							Element:strong
								Equivalent using normal JSON
							Element:tr
							Element:th
							Element:code
								data.ok
							Element:td
								Indicates success (
							Element:code
								true
								) or failure (
							Element:code
								false
								)
							Element:td
							Element:em
								none
							Element:tr
							Element:th
							Element:code
								data.status
							Element:td
								Indicates the response
							Element:a
								status code
							Element:td
								HTTP response status
							Element:tr
							Element:th
							Element:code
								data.error
							Element:td
								Indicates the error message, if any
							Element:td
								HTTP response body, or
							Element:code
								X-Error-Detail
								HTTP header
						Node:
						(type) c
						(layer)2
							Element:p
								Starting with version 1.2, the
							Element:a
								jQuery
								JavaScript framework includes native support for JSONP. Note that when using jQuery, it's not necessary to pick your own value for
							Element:code
								callback.
								jQuery recognizes the standard parameter name and will pick its own value and create a function to handle it. jQuery will also clean up the callback function after the call is finished.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
								jQuery Example Code
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Developers Home
							Element:li
							Element:a
								Documentation
							Element:li
							Element:a
								Discussion
							Element:li
							Element:a
								API Terms of Use
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Your Developer Account
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Register as a developer
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Looking for Etsy Apps?
						Node:
						(type) c
						(layer)2
							Element:p
								Check out our new
							Element:br
							Element:a
								App Gallery
								!
						Node:
						(type) c
						(layer)2
							Element:p
								It's the best way to find cool and useful tools built upon Etsy's API.
						Node:
						(type) c
						(layer)2
							Element:img
