Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					PuSH Subscriber Example
			Node:
			(type) c
			(layer)1
				Element:p
					Sample Python PubSubHubbub client. There is a dependency on the CherryPy webserver. Some modifications will need to be made; please read the comments.
			Node:
			(type) c
			(layer)1
				Element:pre
					from datetime import datetime from xml.dom.minidom import parseString import cherrypy SERVER_HOST = '' # Replace with your host name or ip address SERVER_PORT = 80 class PuSHSubscriber: def callback(self, *args, **kwargs): '''Reply to a hub.challenge or process a fat ping This function is the callback URL that receives data from the PuSH hub (ie https://etsy.superfeedr.com): 1) Reply to a GET request with a hub.challenge param with an OK that you really did subscribe to the feed. Below, for simplicity we simple reply 200 to any subscribe request, but in a production subscriber, you'll want to check the hub.mode and hub.topic parameters to avoid being spammed or overloaded by PuSH pings. 2) Process an incoming POST request whose body contains the data of the "fat ping". This is the meat of the subscriber. Replace the logic below with your own to add the incoming data to your database or queue''' # REPLACE ME # Here we are simply appending the incoming data to a file with open('output.txt', 'a') as outfile: outfile.write('Retrieved at: ' + str(datetime.now()) + '\n') if cherrypy.request.body: atom_ping = str(cherrypy.request.body.read()) parseString(atom_ping) outfile.write(atom_ping+'\n') # Check if this is a verification request if 'hub.challenge' in kwargs: # VERIFY THIS IS THE FEED YOU WANT TO SUBSCRIBE TO # Here we don't verify and simply reply 200 OK with the challenge return kwargs['hub.challenge'] # Was a fat ping. Don't need to reply with a specific message actually. else: return 'Feed update received\n' callback.exposed = True if __name__ == '__main__': cherrypy.config.update({ 'server.socket_host': SERVER_HOST, 'server.socket_port': SERVER_PORT, }) cherrypy.quickstart(PuSHSubscriber())
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Developers Home
				Element:li
				Element:a
					Documentation
				Element:li
				Element:a
					Discussion
				Element:li
				Element:a
					API Terms of Use
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Your Developer Account
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Register as a developer
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Looking for Etsy Apps?
						Node:
						(type) c
						(layer)2
							Element:p
								Check out our new
							Element:br
							Element:a
								App Gallery
								!
						Node:
						(type) c
						(layer)2
							Element:p
								It's the best way to find cool and useful tools built upon Etsy's API.
						Node:
						(type) c
						(layer)2
							Element:img
