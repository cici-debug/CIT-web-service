Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
				Element:span
					Editorial Services API
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:aside
													Element:h4
														Search Documentation
													Element:label
														Search for:
													Element:h4
														Documentation Menu
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Editorial Services API
												Node:
												(type) c
												(layer)4
													Element:p
														This API is used to access the weekly lists and the assets they contain (check out the
													Element:a
														IVA blog
														for examples of our lists). The API uses an Application Key obtained through Media Manager for paid subscribers or through our free developer program. Authentication is done in the same way as with Entertainment Express using OAuth 2.0. Certain features in the API response will be limited for users of the free service. For more information on our editorial services
													Element:a
														click here
														or
													Element:a
														contact sales
														. To see an example of our lists check out our
													Element:a
														blog
														.
												Node:
												(type) c
												(layer)4
													Element:p
														Endpoints: These endpoints have been added to the Entertainment Express API
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								/GetEditorialLists
						Node:
						(type) c
						(layer)2
							Element:span
								Returns a collection of Editorial Lists
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
							Element:strong
								Parameters:
							Element:th
							Element:th
							Element:tbody
							Element:tr
							Element:td
							Element:td
								appid (required)
							Element:td
								Generate this ID either inside of Media Manager (Pro version) or you can use an appid from our free developer account(Standard version)
							Element:tr
							Element:td
							Element:td
								skip (integer)
							Element:td
								Use this for paging through the results. Default is 0.
							Element:tr
							Element:td
							Element:td
								take (integer)
							Element:td
								Use this for paging or to limit the number of lists that get returned. Default is 10.
							Element:tr
							Element:td
							Element:td
								includepublic (Boolean)
							Element:td
								Default = True. ***only used for paid versions of Editorial Services. Allows you to exclude the public lists from the response.
						Node:
						(type) c
						(layer)2
							Element:h4
								Example URL:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								https://ee.internetvideoarchive.net/api/ExpressStandard/GetEditorialLists/?skip=0&take=10&appid=xyz or https://ee.internetvideoarchive.net/api/ExpressPro/GetEditorialLists/?skip=0&take=10&appid=xyz
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								/GetEditorialList
						Node:
						(type) c
						(layer)2
							Element:span
								Returns a specific EditorialList by ID.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
							Element:strong
								Parameters:
							Element:th
							Element:th
							Element:tbody
							Element:tr
							Element:td
							Element:td
								appid (required)
							Element:td
								Application key obtained through Media Manager (Pro Version) or from a free developer account (Standard).
							Element:tr
							Element:td
							Element:td
								ID (required)
							Element:td
								Id of the specific list you want returned.
						Node:
						(type) c
						(layer)2
							Element:h4
								Example URL:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								https://ee.internetvideoarchive.net/api/ExpressStandard/GetEditorialList/30?appid=xyz or https://ee.internetvideoarchive.net/api/ExpressPro/GetEditorialList/30?appid=xyz
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								Example JSON Response
						Node:
						(type) c
						(layer)2
							Element:p
								Note that some elements have been left blank intentionally.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								{ "ID": 76, "CustomerId": 0, "Title": "Movie Mutants", "Description": "It's mutants, mutants, and more mutants in X-MEN: APOCALYPSE, the sixth installment of the X-Men movie franchise. Genetic mutations, whether they come from within or without, can be a tricky proposition at best. Here are ten films featuring mutants of all shapes and sizes, and we mean that literally!", "Published": true, "Created": "2016-05-11T20:08:22", "Modified": "2016-05-17T15:00:42", "EditorialListPhotos": [ { "ID": 90, "ListId": 76, "Url": "http://content.internetvideoarchive.com/content/lists/fbd7-76/fd547461fde9403d9f1e30a3236b3001.png", "Width": 1100, "Height": 630, "Created": "2016-05-16T15:10:18" } ], "EditorialListItems": [ { "ID": 633, "ListId": 76, "PublishedId": 567, "Title": "Basket Case", "ContextDetail": "A young man carries his mutated twin brother in a basket while seeking vengeance on the doctors who separated them against their will.", "SortOrder": 1, "Asset": { "PublishedId": 567, "Title": "Basket Case", "isDefault": true, "MediaType": "Movie", "Mature": false, "OriginalVideoWidth": 636, "OriginalVideoHeight": 480, "DurationInSeconds": 62, "AllowAdvertising": true, "EncodeDate": "2016-05-10T08:59:42", "TargetAudience": "en-US", "Images": [ { "URL": "http://content.internetvideoarchive.com/content/photos/014/567_018.jpg", "width": 320, "height": 240 }, { "URL": "", "width": 120, "height": 90 }, { "URL": "", "width": 240, "height": 135 }, { "URL": "", "width": 600, "height": 338 } ], "Captions": null, "Encodes": [ { "URL": "", "Format": "mp4", "BitRate": 750 }, { "URL": "", "Format": "mp4", "BitRate": 8000 }, { "URL": "", "Format": "mp4", "BitRate": 80 }, { "URL": "", "Format": "mp4", "BitRate": 212 }, { "URL": "", "Format": "mp4", "BitRate": 450 }, { "URL": "", "Format": "mp4", "BitRate": 1500 }, { "URL": "", "Format": "hls", "BitRate": 600 }, { "URL": "", "Format": "hds", "BitRate": 600 }, { "URL": "", "Format": "hss", "BitRate": 600 }, { "URL": "", "Format": "dash", "BitRate": 600 } ], "EmbedCodes": [ { "Type": "free-flash", "EmbedHTML": "<iframe src="\"https://syndication.videodetective.com/widget/inview/player.htm?publishedid=567&autostart=false&randomize=false&mute=false&sub=expressapi\"" width="\"560\"" height="\"315\"" frameborder="\"0\"" allowfullscreen="allowfullscreen"></iframe>" }, { "Type": "html5-mp4", "EmbedHTML": "<video poster="\"http://content.internetvideoarchive.com/content/photos/014/567_018.jpg\"" preload="\"auto\"" controls="controls" width="300" height="\"448\""><source src="\""" type="\"video/mp4\"/" /></video>" }, { "Type": "html5-hls", "EmbedHTML": "<video poster="\"http://content.internetvideoarchive.com/content/photos/014/567_018.jpg\"" preload="\"auto\"" controls="controls" width="300" height="\"448\""><source src="\""" type="\"application/x-mpegURL\"/" /></video>" }, { "Type": "html5-dash", "EmbedHTML": "<video poster="\"http://content.internetvideoarchive.com/content/photos/014/567_018.jpg\"" preload="\"auto\"" controls="controls" width="300" height="\"448\""><source src="\""/" /></video>\"" } ], "ProprietaryCustomerId": -1 } }, { "ID": 635, "ListId": 76, "PublishedId": 50, "Title": "The Fly", "ContextDetail": "David Cronenberg's horrifying tale of a scientist (Jeff Goldblum) who accidentally becomes fused with fly DNA and slowly, inexorably, mutates into a monster.", "SortOrder": 2, "Asset": { "PublishedId": 50, "Title": "The Fly", "isDefault": true, "MediaType": "Movie", "Mature": false, "OriginalVideoWidth": 704, "OriginalVideoHeight": 464, "DurationInSeconds": 104, "AllowAdvertising": true, "EncodeDate": "2009-11-03T00:00:00", "TargetAudience": "en-US", "Images": [ { "URL": "http://content.internetvideoarchive.com/content/photos/000/50_006.jpg", "width": 320, "height": 240 }, { "URL": "", "width": 120, "height": 90 }, { "URL": "", "width": 240, "height": 135 }, { "URL": "", "width": 600, "height": 338 } ], "Captions": null, "Encodes": [ { "URL": "", "Format": "mp4", "BitRate": 750 }, { "URL": "", "Format": "mp4", "BitRate": 8000 }, { "URL": "", "Format": "mp4", "BitRate": 80 }, { "URL": "", "Format": "mp4", "BitRate": 212 }, { "URL": "", "Format": "mp4", "BitRate": 450 }, { "URL": "", "Format": "mp4", "BitRate": 1500 }, { "URL": "", "Format": "hls", "BitRate": 600 }, { "URL": "", "Format": "hds", "BitRate": 600 }, { "URL": "", "Format": "hss", "BitRate": 600 }, { "URL": "", "Format": "dash", "BitRate": 600 } ], "EmbedCodes": [ { "Type": "free-flash", "EmbedHTML": "<iframe src="\"https://syndication.videodetective.com/widget/inview/player.htm?publishedid=50&autostart=false&randomize=false&mute=false&sub=expressapi\"" width="\"560\"" height="\"315\"" frameborder="\"0\"" allowfullscreen="allowfullscreen"></iframe>" }, { "Type": "html5-mp4", "EmbedHTML": "<video poster="\""" preload="\"auto\"" controls="controls" width="300" height="\"448\""></video>" }, { "Type": "html5-hls", "EmbedHTML": "<video poster="\"http://content.internetvideoarchive.com/content/photos/000/50_006.jpg\"" preload="\"auto\"" controls="controls" width="300" height="\"448\""><source src="\""" type="\"application/x-mpegURL\"/" /></video>" }, { "Type": "html5-dash", "EmbedHTML": "<video poster="\"http://content.internetvideoarchive.com/content/photos/000/50_006.jpg\"" preload="\"auto\"" controls="controls" width="300" height="\"448\""><source src="\"/" /></video>\"" } ], "ProprietaryCustomerId": -1 } }, ] }
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								HTTP Status Codes
						Node:
						(type) c
						(layer)2
							Element:span
								HTTP status codes supported by the API.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
							Element:strong
								Code
							Element:th
							Element:strong
								Description
							Element:tbody
							Element:tr
							Element:td
								200
							Element:td
								OK. Request was received and a response with content is delivered.
							Element:tr
							Element:td
								204
							Element:td
								No Content. The request was received, but the response was intentionally left empty. We did not have a matching video for your request.
							Element:tr
							Element:td
								401
							Element:td
								Not Authorized. If valid AppID is missing from request, authorization will fail.
							Element:tr
							Element:td
								429
							Element:td
								Too many requests. If you exceed the request limit, no content will be returned.
							Element:tr
							Element:td
								500
							Element:td
								Internal Server Error. The API could not process your request due to an internal server error.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								Authentication
						Node:
						(type) c
						(layer)2
							Element:p
								EntertainmentExpress API (PRO) requires a bearer token header be included in all of your requests. To obtain a bearer token, your application must first authenticate with our oAuth server by providing your appid and secret key
							Element:br
								which can be found at
							Element:a
								http://mediamanager.internetvideoarchive.com/Account/Appprofiles/profiles.aspx
								under Accounts. Here you register your application and access your appid and secret key.
						Node:
						(type) c
						(layer)2
							Element:h4
								Important: Your SECRET_KEY is a password and should not be exposed, visible or shared with untrusted users.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Step 1: oAuth Request for Token
									Node:
									(type) c
									(layer)3
										Element:p
											Your client application will make a request to the oAuth server located at:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											https://ee.internetvideoarchive.net/token
									Node:
									(type) c
									(layer)3
										Element:p
											The POST request needs to include grant_type, client_id, and client_secret parameters.
									Node:
									(type) c
									(layer)3
										Element:h4
											CURL:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											$ curl -d grant_type="client_credentials" \ -d client_id=APPID \ -d client_secret=SECRET_KEY \ 'https://ee.internetvideoarchive.net/token'
									Node:
									(type) c
									(layer)3
										Element:h4
											JQUERY:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											$.ajax({ async: false, type: "POST", dataType: "json", url: 'https://ee.internetvideoarchive.net/token', data: { 'grant_type': "client_credentials", 'client_id': '{Your_APP_ID}', 'client_secret': '{Your_Secret_Key}' }, ...rest of code removed... })
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Step 2: oAuth Response with token
									Node:
									(type) c
									(layer)3
										Element:p
											The response object returned will include your access_token, token_type and expires_in parameters.
										Element:br
											The response is in JSON and can be easily parse using javascript.
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											{ "access_token": "sadf6d81159easdf3424kjdfg90345345hhh_fdf349d408f2f", "token_type":"bearer", "expires_in":405600543 }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Step 3: Include Access_Token in Requests to Entertainment Express Pro
									Node:
									(type) c
									(layer)3
										Element:p
											For each api request (https://ee.internetvideoarchive.net/api/expresspro/geteditoriallists/?appid={APPID}) you will need to include the access_token in the header.
									Node:
									(type) c
									(layer)3
										Element:p
											For Example:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											$.ajax({ dataType: "json", headers: { Authorization: 'Bearer ' + 'sadf6d83424kjdfg90345345hhh_fdf349d408f2f', 'X-Api-Version': '1' }, url: 'https://ee.internetvideoarchive.net/api/expresspro/GetEditorialLists', ... remaining code ....
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Step 4: Entertainment Express Pro Response
									Node:
									(type) c
									(layer)3
										Element:p
											Express API will return Editorial List object(s) requests if the Bearer token is valid in the header is valid.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Other Security Considerations
									Node:
									(type) c
									(layer)3
										Element:h4
											Tokens are passwords
									Node:
									(type) c
									(layer)3
										Element:p
											Keep in mind that the APPID, SECRET_KEY, and bearer token (access_token) grant access to make requests on behalf of an application. These values should be considered as sensitive as passwords and must not be shared or distributed to untrusted parties.
									Node:
									(type) c
									(layer)3
										Element:h4
											SSL Required
									Node:
									(type) c
									(layer)3
										Element:p
											This manner of authentication is only secure if SSL is used. All requests (both to obtain the tokens and the APIs themselves) must use HTTPS endpoints.
									Node:
									(type) c
									(layer)3
										Element:h4
											Rate Limiting
									Node:
									(type) c
									(layer)3
										Element:p
											Access_tokens expire in 14 day. We recommend you cache your bearer access_token for 24 hours and re-authenticate to get a new access_token daily. Do not attempt to request a new access_token for each request or you will be rate limited and authentication will eventually fail.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:a
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								API Response Objects
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
							Element:br
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								List Object
						Node:
						(type) c
						(layer)2
							Element:span
								The information in this object is specific to the the editorial list being returned.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
								Property
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								ID
							Element:td
								Unique ID to identify this specific list.
							Element:tr
							Element:td
								CustomerId
							Element:td
								Free lists put out by IVA will be listed as 0 any lists created for a customer will contain their customer ID. Customer lists will only get returned for app keys created from their account.
							Element:tr
							Element:td
								Title
							Element:td
								Title of the list.
							Element:tr
							Element:td
								Description
							Element:td
								Description of the list.
							Element:tr
							Element:td
								Published
							Element:td
								true or false.
							Element:tr
							Element:td
								Created
							Element:td
								Date Created.
							Element:tr
							Element:td
								Modified
							Element:td
								Date last modified.
							Element:tr
							Element:td
								Editorial Photos
							Element:td
								Array of photos created by our staff to represent the list. Usually will only contain one unless specified by a paid subscription customer.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
							Element:br
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								Assets Object
						Node:
						(type) c
						(layer)2
							Element:span
								This is a collection of video assets for the program. Use the encodes or the embed codes to display the video.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
							Element:strong
								Property
							Element:th
							Element:strong
								Description
							Element:tbody
							Element:tr
							Element:td
								PublishedID
							Element:td
								The IVA unique ID for the video asset for the video.
							Element:tr
							Element:td
								Title
							Element:td
								Title of the video asset. {data.videoasset.title}
							Element:tr
							Element:td
								IsDefault
							Element:td
								True or False. Identifies the default video asset for the program/title. IVA editorially selects the "Best" video for a program based on where the program is in the release cycle (theatrical, VOD, etc) as well as overall video quality.
							Element:tr
							Element:td
								MediaType
							Element:td
								The type of video asset. Example: Movie, Movie Alternate, Behind the Scenes, Interview, etc... See the full list in our
							Element:a
								documentation
								.
							Element:tr
							Element:td
								Mature
							Element:td
								True or False. Denotes if the content contains explicit material.
							Element:tr
							Element:td
								OriginalVideoWidth
							Element:td
								Width of the source video before encoding.
							Element:tr
							Element:td
								OriginalVideoHeight
							Element:td
								Height of the source video before encoding
							Element:tr
							Element:td
								DurationInSeconds
							Element:td
								Length of the video in seconds.
							Element:tr
							Element:td
								AllowAdvertising
							Element:td
								True or False. Some content providers provide content with the restriction that no ads be displayed around the content. This type of content can be filtered out based on the app config.
							Element:tr
							Element:td
								EncodeDate
							Element:td
								Date the source video asset was encoded.
							Element:tr
							Element:td
								TargetAudience
							Element:td
								A combination of target country, language spoken and language subtitled of the video asset. It is intended to be used to filter assets based on territory.
							Element:tr
							Element:td
							Element:a
								Images
							Element:td
								A collection of images in various sizes.
							Element:tr
							Element:td
							Element:a
								Captions
							Element:td
								This will be null for anyone not using IVA's Caption API to order captions. If you have ordered a caption and there is one available, the API will display an array of links to the caption files.
							Element:tr
							Element:td
							Element:a
								Encodes
							Element:td
								Encodes are a list of directly link video renditions including HLS, mp4 and others. Encodes requires a paid subscription to Pro.
							Element:tr
							Element:td
							Element:a
								EmbedCodes
							Element:td
								HTML code used to place on web pages or HTML5 applications to display video. EmbedCodes Type=free-flash is the only embedcode available in Standard. Access to other embed code options requires a paid subscription to Pro.
							Element:tr
							Element:td
								ProprietaryCustomerID
							Element:td
								The customer Id of the customer this asset belongs. You will only see proprietary assets that belong to you.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
							Element:br
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								Images Object
						Node:
						(type) c
						(layer)2
							Element:span
								A list of URLs, and sizes to display with the video asset. Note: only the 320x240 image is available in Standard. Access to other sizes requires a paid subscription to Pro.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
							Element:strong
								Property
							Element:th
							Element:strong
								Description
							Element:tbody
							Element:tr
							Element:td
								URL
							Element:td
								URL to the image.
							Element:tr
							Element:td
								Width
							Element:td
								The width of the image.
							Element:tr
							Element:td
								Width
							Element:td
								The height of the image.
							Element:tr
							Element:td
								Note: only the 320x240 image is available for Standard.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
							Element:br
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								Captions Object
						Node:
						(type) c
						(layer)2
							Element:span
								Captions in the entertainment express response.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
							Element:strong
								Property
							Element:th
							Element:strong
								Description
							Element:tfoot
							Element:tr
							Element:th
								Note: Captions require a paid subscription to Pro.
							Element:a
								Click here for more information.
							Element:tbody
							Element:tr
							Element:td
								URL
							Element:td
								URL to the caption file.
							Element:tr
							Element:td
								Format
							Element:td
								The format of the caption file.
							Element:tr
							Element:td
								Language
							Element:td
								The language of the text in the caption. Ex: If you wanted Spanish captions on an English spoken trailer the language would be Spanish.
							Element:tr
							Element:td
								CustomerId
							Element:td
								The customerid assigned to you for your Pro Subscription.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
							Element:br
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								Encodes Object
						Node:
						(type) c
						(layer)2
							Element:span
								A collection of the available encodes for each video asset. This object also contains live links to stream the video assets. For more information on our video formats please see our
							Element:a
								documentation
								.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
							Element:strong
								Property
							Element:th
							Element:strong
								Description
							Element:tbody
							Element:tr
							Element:td
								URL
							Element:td
								A live URL to IVA's Video API to stream the video.
							Element:tr
							Element:td
								Format
							Element:td
								Video Format: MP4, HLS, HSS, HDS, DASH
							Element:tr
							Element:td
								Bitrate
							Element:td
								Bitrate of the specific encode.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
							Element:br
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								EmbedCodes Object
						Node:
						(type) c
						(layer)2
							Element:span
								This object contains a collection of embed codes users can use to embed a video player with the video into an application, website or guide.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
							Element:strong
								Property
							Element:th
							Element:strong
								Description
							Element:tbody
							Element:tr
							Element:td
								Type
							Element:td
								There are 4 types of embed codes to choose from in the array. Free-Flash that is an iframe of our free ad supported player. Enterprise customers will have 3 HTML5 embed code options with different formats (HLS, Dash, MP4)
							Element:tr
							Element:td
								EmbedHTML
							Element:td
								Embed code to embed the video in your application, website or guide.
						Node:
						(type) c
						(layer)2
																		Node:
																		(type) c
																		(layer)6
																			Element:footer
																			Element:img
																			Element:span
																			Element:a
																			Element:span
																			Element:i
																			Element:span
																			Element:a
																			Element:span
																			Element:i
																			Element:a
																			Element:img
																			Element:span
																			Element:a
																			Element:span
																			Element:i
																			Element:span
																				Phone: +1 856 310 1981
																			Element:a
																			Element:span
																			Element:i
																			Element:br
																				Fax: +1 856 310 1956 E-mail Us:
																			Element:a
																				support@internetvideoarchive.com
																			Element:h6
																				RECENT BLOG POSTS
																			Element:ul
																			Element:li
																			Element:a
																				IVA Trailers of the Week – First Contact
																			Element:span
																				March 15, 2017
																			Element:li
																			Element:a
																				Video Hack Day 3
																			Element:span
																				March 14, 2017
																			Element:li
																			Element:a
																				AdQ Announcement
																			Element:span
																				March 13, 2017
																			Element:h6
																				MORE LINKS
																			Element:ul
																			Element:li
																			Element:a
																				Developers
																			Element:li
																			Element:a
																				Contact Us
																			Element:li
																			Element:a
																				Privacy Policy
																			Element:li
																			Element:a
																				Charts
																			Element:li
																			Element:a
																				Client Login
																			Element:li
																			Element:a
																				Legacy Documentation
																			Element:h6
																				EVENTS
																				»
																			Element:a
																				Mar. 11-12, Video Hack Day 3, New York City
																				»
																			Element:a
																				Apr. 24-27, NAB Show, Las Vegas, NV
																			Element:h6
																				SUBMIT CONTENT
																			Element:ul
																			Element:li
																			Element:a
																				Movie
																			Element:li
																			Element:a
																				TV
																			Element:li
																			Element:a
																				Video Game
																			Element:span
																				© Copyright Internet Video Archive LLC.
