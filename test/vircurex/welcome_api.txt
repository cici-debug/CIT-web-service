Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Info API
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Mailing list
									Node:
									(type) c
									(layer)3
										Element:p
											We have a mailing list for all those who want to get informed in advance by email in case of changes to the API. Send an email to
										Element:a
											[email protected]
											to request to be added to the list.
									Node:
									(type) c
									(layer)3
										Element:br
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											API Server
											The server name for API calls is https://api.vircurex.com.
									Node:
									(type) c
									(layer)3
										Element:br
											Please do not make API calls against https://vircurex.com, this will be discontinued from February 2014 onwards.
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:br
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Returned formats
											The API supportes the following formats:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											XML
										Element:li
											JSON
									Node:
									(type) c
									(layer)3
										Element:br
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Functions
											We currently provide the following API calls to extract information from the Exchange
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tr
										Element:th
											API Function
										Element:th
											Parameters
										Element:th
											Description
										Element:tr
										Element:td
											get_lowest_ask
										Element:td
											base
										Element:br
											alt
										Element:td
											Returns the lowest asking price for a currency pair. Specify the base and alt currency name.
										Element:tr
										Element:td
											get_highest_bid
										Element:td
											base
										Element:br
											alt
										Element:td
											Returns the highest bid price for a currency pair. Specify the base and alt currency name.
										Element:tr
										Element:td
											get_last_trade
										Element:td
											base
										Element:br
											alt
										Element:td
											Returns executed unitprice of the last trade for a currency pair. Specify the base and alt currency name.
										Element:tr
										Element:td
											get_volume
										Element:td
											base
										Element:br
											alt
										Element:td
											Returns the trading volume within the last 24 hours for a currency pair. Specify the base and alt currency name.
										Element:tr
										Element:td
											get_info_for_currency
										Element:td
											- none -
										Element:td
											Returns a summary information for all supported currencies
										Element:tr
										Element:td
											get_info_for_1_currency
										Element:td
											base
										Element:br
											alt
										Element:td
											Returns a summary information for a currency pair
										Element:tr
										Element:td
											orderbook
										Element:td
											base
										Element:br
											alt
										Element:td
											Returns the complete orderbook for the given currency pair. Note: mutliple items may appear for the same price
										Element:tr
										Element:td
											orderbook_alt
										Element:td
											alt
										Element:td
											Returns the complete orderbook for all currency pair for alt given. This is more efficient than calling api/orderbook for each combination
										Element:tr
										Element:td
											trades
										Element:td
											base
										Element:br
											alt
										Element:br
											since
										Element:td
											Returns all executed trades of the past 7 days. If the parameter "since" is provided, then only trades with an order ID greater than "since" will be returned. The function will return a max. of 1000 trades, hence you will need to take the ID of the last returned trade and pass it in the parameter "since" to recall the transaction to traverse through all possible trades within the period of 7 days if required.
										Element:tr
										Element:td
											get_currency_info
										Element:td
										Element:td
											Returns information about withdrawal fees, number of required confirmations for deposits and max. daily withdrawal
										Element:tr
										Element:td
											get_trading_fee
										Element:td
											- none -
										Element:td
											Returns current trading fee. This does not consider possible referral fee reductions, this function returns the general trading fee, e.g. a value of 0.005 is equal to 0.5%
									Node:
									(type) c
									(layer)3
										Element:br
											You will need to append .xml or .json respectively to define the format you want returned.
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:br
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Supported currencies
											Valid values for currency names (case-insensitive):
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											ANC
										Element:li
											BC
										Element:li
											BTC
										Element:li
											DGC
										Element:li
											DOGE
										Element:li
											DVC
										Element:li
											FRC
										Element:li
											FTC
										Element:li
											LTC
										Element:li
											NMC
										Element:li
											PPC
										Element:li
											QRK
										Element:li
											TRC
										Element:li
											XPM
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tr
										Element:td
										Element:strong
											Frequency for the above API calls:
											The API returns live values. We reserve the right to block IPs that are continuously polling the API in less than 5 Seconds intervals. Should you have the need to call the API more frequently, let us know, we'll work out a solution for you.
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:br
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											https://api.vircurex.com/api/get_info_for_currency.xml will return a summary for all currencies in XML format
										Element:li
											https://api.vircurex.com/api/get_highest_bid.json?base=BTC&alt=NMC will return the highest bid (buy price) in NMC for 1 BTC in JSON format
									Node:
									(type) c
									(layer)3
										Element:br
									Node:
									(type) c
									(layer)3
										Element:br
			Node:
			(type) h1
			(layer)1
				Element:h1
					Trade API
			Node:
			(type) c
			(layer)1
				Element:br
					The trade API provides functions that allow to perform trading activities.
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:h3
					Notice
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:td
					The trading API is released in its version 1.0. If we change the API call's then we will be releasing a new version and keep the previous version available for a specified period of time. Any changes will of course be communicated in the Announcement and News section but if you wish to subscribe to our API mailing lists then send us a short email (
				Element:a
					[email protected]
					).
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:h3
					Activating the API
			Node:
			(type) c
			(layer)1
				Element:p
					The trading API needs to be activated before it can be used. The API accesses your account information and allows to create and execute orders, hence all connections are via HTTPS only. In addition, you need to specify a security word for each of the API functions. The trading API is activated in your user profile.
				Element:br
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:h3
					List of API functions
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					API Function
				Element:th
					Parameters In
				Element:th
					Parameters Out
				Element:th
					Description
				Element:th
					Token calculation
				Element:tbody
				Element:tr
				Element:td
					get_balance
				Element:td
					currency
				Element:td
					balance
				Element:br
					available_balance
				Element:td
					Provide the name of the currency for which you want to inquire the balance.
				Element:td
					Input token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;ID;get_balance;CurrencyName
				Element:br
					Output token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;get_balance;Balance
				Element:tr
				Element:td
					get_balances
				Element:td
				Element:td
					balance
				Element:br
					available_balance
				Element:td
				Element:td
					Input token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;ID;get_balances
				Element:br
					Note: the security word of this function is the security word from function "get_balance".
				Element:br
					Output token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;get_balances
				Element:tr
				Element:td
					create_order
				Element:td
					ordertype
				Element:br
					amount
				Element:br
					currency1
				Element:br
					unitprice
				Element:br
					currency2
				Element:br
				Element:td
					orderid
				Element:td
					Creates a new order. A maximum of 100 open orders are allowed at any point in time. The order is only saved but not released, hence it will not be traded before you release it.
				Element:br
					Values for ordertype: BUY, SELL
				Element:td
					Input token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;ID;create_order;ordertype;amount;currency1;unitprice;currency2
				Element:br
					Output token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;create_order;order_id
				Element:tr
				Element:td
					create_released_order
				Element:td
					ordertype
				Element:br
					amount
				Element:br
					currency1
				Element:br
					unitprice
				Element:br
					currency2
				Element:br
				Element:td
					orderid
				Element:td
					Creates a new order and release it for trading immediately. A maximum of 100 open orders are allowed at any point in time.
				Element:br
					Values for ordertype: BUY, SELL
				Element:br
					Note: take note that the function name used to calculate the token is create_order and not create_released_order
				Element:td
					Input token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;ID;create_order;ordertype;amount;currency1;unitprice;currency2
				Element:br
					Output token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;create_order;order_id
				Element:tr
				Element:td
					release_order
				Element:td
					orderid
				Element:td
					orderid
				Element:td
					Release the order for trading.
				Element:br
					IMPORTANT: The input orderid is NOT the same as the output orderid, you must use the output orderID for further API calls pertaining to an order. Though the two numbers might be identical, they are independent, unreleased order IDs are not the same as the released order IDs
				Element:td
					Input token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;ID;release_order;orderid
				Element:br
					Output token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;release_order;orderid
				Element:tr
				Element:td
					delete_order
				Element:td
					orderid
				Element:br
					otype
				Element:td
					orderid
				Element:td
					Deletes/closes an order.
				Element:td
					Input token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;ID;delete_order;orderid;otype
				Element:br
					Output token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;delete_order;orderid
				Element:tr
				Element:td
					read_order
				Element:td
					orderid
				Element:br
					otype
				Element:td
					currency1
				Element:br
					currency2
				Element:br
					open_quantity
				Element:br
					quantity
				Element:br
					unitprice
				Element:br
					ordertype
				Element:br
					orderstatus
				Element:br
					lastchangedat
				Element:br
					releasedat
				Element:td
					Returns order information
				Element:td
					Input token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;ID;read_order;orderid
				Element:br
					Output token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;read_order;orderid
				Element:tr
				Element:td
					read_orders
				Element:td
					otype
				Element:td
					numberorders
				Element:br
					otype
				Element:br
				Element:u
					For each order:
				Element:br
					currency1
				Element:br
					currency2
				Element:br
					openquantity
				Element:br
					quantity
				Element:br
					unitprice
				Element:br
					ordertype
				Element:br
					orderstatus
				Element:br
					lastchangedat
				Element:br
					releasedat
				Element:td
					Returns order information for all users' saved or released orders. It does not return information on closed (either manually closed or closed due to order execution) or deleted orders.
				Element:td
					Input token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;ID;read_orders
				Element:br
					Output token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;read_order
				Element:tr
				Element:td
					read_orderexecutions
				Element:td
					orderid
				Element:td
					currency1
				Element:br
					currency2
				Element:br
					quantity
				Element:br
					unitprice
				Element:br
					feepaid
				Element:br
					ordertype
				Element:td
					Returns the order execution info, i.e. the actual trades that were executed against the order
				Element:td
					Input token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;ID;read_orderexecutions;orderid
				Element:br
					Output token:
				Element:br
					YourSecurityWord;YourUserName;Timestamp;
			Node:
			(type) c
			(layer)1
				Element:br
					Notes on the parameters:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Timestamp format: Make sure you have the correct Timezone settings and your timestamp follows the format 2014-01-04T14:00:00 which is equivalent to January 4th, 2014, 2:00 PM. Be sure to use an uppercase letter "T" to separate the date and time and not a space (" ").
				Element:li
					The sequence of the parameters is irrelevant. The sequence when putting together the token is crucial.
				Element:li
					YourUserName: Provide your login name, not your eMail address. The value is case sensitive.
				Element:li
					Securityword: The security word you have entered for the respective API call in your user settings. The value is case sensitive.
				Element:li
					Ordertype: values are SELL or BUY
				Element:li
					currency: Use the currency short forms, e.g. USD, BTC, NMC, etc.
				Element:li
					Prices and quantities: Use . as a decimal seperator. Do not use thousands separator
				Element:li
					Otype: Set otype=0 for unreleased orders, otype=1 for released orders
			Node:
			(type) c
			(layer)1
				Element:br
					Apart from the parameters listed on the table above, the following four parameters must always be supplied:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Parameter
				Element:th
					Description
				Element:tr
				Element:td
					account
				Element:td
					Your login name, not the email address
				Element:tr
				Element:td
					id
				Element:td
					Any value. The ID value cannot be reused within a period of 10 minutes. This is to safeguard against accidental double postings as well as URL replays by malicious sources.
				Element:tr
				Element:td
					token
				Element:td
					A SHA2 hash across a number of input values. See below detils on how to calculate it
				Element:tr
				Element:td
					timestamp
				Element:td
					A UTC timestamp, must be within 5 minutes of the current time
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:h3
					Calculation of the Token
					The token is calculated by concatenating the input parameters, separated by a semi-colon and then calculating a SHA2-256 hash over the complete string. See the column "Token calculation" in the above function API list for the required fields that need to be included to calculate the hash.
			Node:
			(type) c
			(layer)1
				Element:br
					Here an examples (in Ruby) for creating an order:
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:br
					t = Time.now.gmtime.strftime("%Y-%m-%dT%H:%M:%S")
			Node:
			(type) c
			(layer)1
				Element:br
					trx_id = Digest::SHA2.hexdigest("#{t}-#{rand}")
			Node:
			(type) c
			(layer)1
				Element:br
					user_name = "MY_USER_NAME"
			Node:
			(type) c
			(layer)1
				Element:br
					secret_word = "123456789"
			Node:
			(type) c
			(layer)1
				Element:br
					tok = Digest::SHA2.hexdigest("#{secret_word};#{user_name};#{t};#{trx_id};create_order;sell;10;btc;50;nmc")
			Node:
			(type) c
			(layer)1
				Element:br
					Order.call_https("https://api.vircurex.com","/api/create_order.json?account=#{user_name}&id=#{trx_id}&token=#{tok}&timestamp=#{t}&ordertype=sell&amount=10&currency1=btc&unitprice=50&currency2=nmc")
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:br
					def self.call_https(my_url,my_params)
			Node:
			(type) c
			(layer)1
				Element:br
					uri = URI.parse(my_url)
			Node:
			(type) c
			(layer)1
				Element:br
					http = Net::HTTP.new(uri.host, '443')
			Node:
			(type) c
			(layer)1
				Element:br
					http.use_ssl = true
			Node:
			(type) c
			(layer)1
				Element:br
					http.verify_mode = OpenSSL::SSL::VERIFY_PEER
			Node:
			(type) c
			(layer)1
				Element:br
					response=""
			Node:
			(type) c
			(layer)1
				Element:br
					resp=""
			Node:
			(type) c
			(layer)1
				Element:br
					http.start do |http|
			Node:
			(type) c
			(layer)1
				Element:br
					cmd = my_params
			Node:
			(type) c
			(layer)1
				Element:br
					req = Net::HTTP::Get.new(cmd)
			Node:
			(type) c
			(layer)1
				Element:br
					response = http.request(req)
			Node:
			(type) c
			(layer)1
				Element:br
					resp = response.body
			Node:
			(type) c
			(layer)1
				Element:br
					end
			Node:
			(type) c
			(layer)1
				Element:br
					return ActiveSupport::JSON.decode(resp)
			Node:
			(type) c
			(layer)1
				Element:br
					end
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:h3
					Error codes
			Node:
			(type) c
			(layer)1
				Element:br
					The functions return status with a status code 0 if no error occurred, otherwise the following list gives details on the returned status code. If status is not equal 0 then statustext will return a long text with further details.
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Error Code
				Element:th
					Description
				Element:tr
				Element:td
					1
				Element:td
					Order does not exist
				Element:tr
				Element:td
					2
				Element:td
					Order does not belong to the user
				Element:tr
				Element:td
					3
				Element:td
					Order is already released
				Element:tr
				Element:td
					4
				Element:td
					Unknown account name
				Element:tr
				Element:td
					5
				Element:td
					Unknown order type
				Element:tr
				Element:td
					6
				Element:td
					Missing parameter
				Element:tr
				Element:td
					7
				Element:td
					Order is not released
				Element:tr
				Element:td
					8
				Element:td
					Unknown currency
				Element:tr
				Element:td
					9
				Element:td
					API not configured, either not active or blank security word
				Element:tr
				Element:td
					10
				Element:td
					Insufficient funds. Your available balance is less than the quantity you have specified in the API call
				Element:tr
				Element:td
					12
				Element:td
					Currency is missing
				Element:tr
				Element:td
					13
				Element:td
					Currency is not allowed. Currency1 cannot be a fiat currency
				Element:tr
				Element:td
					14
				Element:td
					Order type is missing
				Element:tr
				Element:td
					15
				Element:td
					Unknown order type
				Element:tr
				Element:td
					16
				Element:td
					Trading the specified currency pair is not allowed
				Element:tr
				Element:td
					17
				Element:td
					Order is already closed
				Element:tr
				Element:td
					18
				Element:td
					Unknown order type. Only values 0 or 1 are allowed.
				Element:tr
				Element:td
					100
				Element:td
					The ID was used already within the last 10 minutes.
				Element:tr
				Element:td
					200
				Element:td
					The order volume (quantity * unitprice) must be at least 0.0001
				Element:tr
				Element:td
					201
				Element:td
					Maximum number of open orders reached. A maximum of 50 are allowed
				Element:tr
				Element:td
					7999
				Element:td
					Functions not active. You have not activated this function in your user profile
				Element:tr
				Element:td
					8000
				Element:td
					Timestamp is off by more than 5 Minutes.
				Element:tr
				Element:td
					8001
				Element:td
					API function is not activated
				Element:tr
				Element:td
					8002
				Element:td
					User is banned from using the API
				Element:tr
				Element:td
					8003
				Element:td
					Authentication failed
				Element:tr
				Element:td
					9001
				Element:td
					API function is not availabel any nmore
				Element:tr
				Element:td
					9999
				Element:td
					Unspecified error. Please contact customerservice.
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:td
					We reserve the right to block API calls from users whom we believe are making the API calls without the true intention of executing orders, but merely trying to disrupt the operation of the exchange.
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:a
					Help
			Node:
			(type) c
			(layer)1
				Element:a
					Terms
			Node:
			(type) c
			(layer)1
				Element:a
					Fees
			Node:
			(type) c
			(layer)1
				Element:a
					API
			Node:
			(type) c
			(layer)1
				Element:a
					Privacy
			Node:
			(type) c
			(layer)1
				Element:a
					Investors
			Node:
			(type) c
			(layer)1
				Element:a
					Changelog
			Node:
			(type) c
			(layer)1
				Element:a
					Contact us
