Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Sending iOS in-app notifications
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Introduction
						Node:
						(type) c
						(layer)2
							Element:p
								Mixpanel allows you to create and send richer notifications that appear while your iOS app is running. If you are using our
							Element:a
								in-app notifications product
								, there are 3 things you need to make sure of.
						Node:
						(type) c
						(layer)2
							Element:ol
							Element:li
								Include the latest version of the
							Element:a
								Mixpanel iOS library
								in your app
							Element:li
								Make sure you are
							Element:a
								identifying your users
								in the app.
							Element:li
								Create an in-app notification on the Notifications tab of the Mixpanel website.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Integration
								The Mixpanel iOS library will automatically check for a notification when your app loads or resumes from the background. If a notification is available for the current user that they haven't already seen, it will be displayed immediately in an overlay view.
						Node:
						(type) c
						(layer)2
							Element:p
								That's it, you're done!
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Controlling when to show an in-app notification
						Node:
						(type) c
						(layer)2
							Element:p
								You may not want the notifications to show immediately when your app loads. If, for example, you have a game and would like to show a notification when a user accomplishes a goal, you need to turn off the automatic showing of notifications by setting
							Element:a
								showNotificationOnActive
								to
							Element:code
								NO
								and call
							Element:a
								showNotificationWithID:
								at the appropriate point in your app.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
								// In application:didFinishLaunchingWithOptions:
							Element:span
								Mixpanel
							Element:span
								*
							Element:span
								mixpanel
							Element:span
								=
							Element:span
								[
							Element:span
								Mixpanel
							Element:span
								sharedInstanceWithToken
							Element:span
								:
							Element:span
								YOUR_MIXPANEL_TOKEN
							Element:span
								];
							Element:span
								// Turn this off so the notification doesn't pop up automatically.
							Element:span
								mixpanel
							Element:span
								.
							Element:span
								showNotificationOnActive
							Element:span
								=
							Element:span
								NO
							Element:span
								;
							Element:span
								-
							Element:span
								(
							Element:span
								void
							Element:span
								)
							Element:span
								playerFinishedLevel
							Element:span
								{
							Element:span
								[
							Element:span
								mixpanel
							Element:span
								showNotificationWithID
							Element:span
								:
							Element:span
								INAPP_NOTIFICATION_ID
							Element:span
								];
							Element:span
								}
						Node:
						(type) c
						(layer)2
							Element:p
								If you don't want to specify the notification ID, you can use
							Element:a
								showNotification
								instead, which will show the first available in-app notification targeted at the identified user if there is one. Notifications are never shown twice to the same user, so you don't have to check for yourself if the user already saw the notification before calling showNotificationWithID.
						Node:
						(type) c
						(layer)2
							Element:p
								If you don't want mixpanel checking for new in-app notifications when your app becomes active, you can turn it off by setting
							Element:a
								checkForNotificationsOnActive
								to
							Element:code
								NO
								. This means that in-app notifications will not show automatically, and that the network request to retrieve the notifications will occur only when you call
							Element:a
								showNotification
								or
							Element:a
								showNotificationWithID:
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Adjusting the timing of mini notifications
						Node:
						(type) c
						(layer)2
							Element:p
								By default, a mini in-app notification will display for 6 seconds before automatically dismissing itself. This number can be easily adjusted with the
							Element:a
								miniNotificationPresentationTime
								property.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
								// In application:didFinishLaunchingWithOptions:
							Element:span
								Mixpanel
							Element:span
								*
							Element:span
								mixpanel
							Element:span
								=
							Element:span
								[
							Element:span
								Mixpanel
							Element:span
								sharedInstanceWithToken
							Element:span
								:
							Element:span
								YOUR_MIXPANEL_TOKEN
							Element:span
								];
							Element:span
								// Give users more time to see the notification.
							Element:span
								mixpanel
							Element:span
								.
							Element:span
								miniNotificationPresentationTime
							Element:span
								=
							Element:span
								10.0
							Element:span
								;
						Node:
						(type) c
						(layer)2
							Element:p
								Takeover notifications will only dismiss themselves in response to a user action and have no "duration".
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Using profile properties
						Node:
						(type) c
						(layer)2
							Element:p
								Just like emails, in-app notifications will replace content wrapped in
							Element:code
								{{}}
								. For example, if you add a
							Element:code
								Location
								property to your user profiles, you can send notifications like this:
						Node:
						(type) c
						(layer)2
							Element:pre
								Come and visit us at our
							Element:span
								{{
							Element:span
								${Location}
							Element:span
								}}
								office!
						Node:
						(type) c
						(layer)2
							Element:p
								A user with a profile property
								Come and visit us at our Asheville office! If some of your profiles have a value, but others don't, you can use a fallback value:
							Element:em
								Location: Asheville
								will get the following message:
						Node:
						(type) c
						(layer)2
							Element:pre
								Come and visit us at our
							Element:span
								{{
							Element:span
								${Location}
							Element:span
								|
							Element:span
								fallback
							Element:span
								:
							Element:span
								"nearest"
							Element:span
								}}
								office!
						Node:
						(type) c
						(layer)2
							Element:p
								Profiles without a
								Come and visit us at our nearest office! Document Sections
							Element:code
								Location
								property will receive this message:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Introduction
							Element:li
							Element:a
								Integration
							Element:li
							Element:a
								Customizing Behavior
							Element:li
							Element:a
								Profile Properties
