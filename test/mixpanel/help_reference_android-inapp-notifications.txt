Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Sending Android in-app notifications
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Introduction
						Node:
						(type) c
						(layer)2
							Element:p
								Mixpanel allows you to create and send richer notifications that appear while your Android app is running. If you are using our
							Element:a
								in-app notifications product
								, there are 3 things you need to make sure of.
						Node:
						(type) c
						(layer)2
							Element:ol
							Element:li
								Include the latest version of the
							Element:a
								Mixpanel Android library
								in your app
							Element:li
								Make sure you are
							Element:a
								identifying your users
								in the app.
							Element:li
								Create an in-app notification on the Notifications tab of the Mixpanel website.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Integration
						Node:
						(type) c
						(layer)2
							Element:p
								The Mixpanel Android library automatically checks for notifications in the background, and will attempt to display them anytime an Activity is displayed. If you only wish to use mini in-app notifications, then no extra integration is necessary.
						Node:
						(type) c
						(layer)2
							Element:p
								If you wish to use takeover notifications, then you must declare SurveyActivity in your AndroidManifest.xml file.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
								<activity
							Element:span
								android:name=
							Element:span
								"com.mixpanel.android.surveys.SurveyActivity"
							Element:span
								android:theme=
							Element:span
								"@style/com_mixpanel_android_SurveyActivityTheme"
							Element:span
								/>
						Node:
						(type) c
						(layer)2
							Element:p
								The specified theme is a general Mixpanel default, so feel free to substitute your own theme better match the look and feel of your application.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Controlling when to show an in-app notification
						Node:
						(type) c
						(layer)2
							Element:p
								You may not want the notifications to show everytime a new Activity is displayed. For example, if you have a game and only want to show a notification when a user accomplishes a goal, you need to turn off the automatic showing of notifications by adding the following option in the
							Element:code
								<application>
								section of your AndroidManifest.xml file.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
								<meta-data
							Element:span
								android:name=
							Element:span
								"com.mixpanel.android.MPConfig.AutoShowMixpanelUpdates"
							Element:span
								android:value=
							Element:span
								"false"
							Element:span
								/>
						Node:
						(type) c
						(layer)2
							Element:p
								To manually check if an in-app notification is available, you may call
							Element:a
								MixpanelAPI.getPeople().getNotificationIfAvailable()
								. This method will return an
							Element:a
								InAppNotification
								object if the Mixpanel library has received an in-app notification for the currently identified user, and null otherwise. You may then use this object to render your own in-app notification.
						Node:
						(type) c
						(layer)2
							Element:p
								You can also call
							Element:a
								MixpanelAPI.getPeople().showNotificationIfAvailable()
								to allow the Mixpanel library to show an in-app notification for you.
						Node:
						(type) c
						(layer)2
							Element:p
								Note that
							Element:a
								MixpanelAPI.getPeople().showNotificationIfAvailable()
								will not display a notification if there is already a notification or survey showing, so it is safe to call this function at any location where you want to potentially display a notification.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Using profile properties
						Node:
						(type) c
						(layer)2
							Element:p
								Just like emails, in-app notifications will replace content wrapped in
							Element:code
								{{}}
								. For example, if you add a
							Element:code
								Location
								property to your user profiles, you can send notifications like this:
						Node:
						(type) c
						(layer)2
							Element:pre
								Come and visit us at our
							Element:span
								{{
							Element:span
								${Location}
							Element:span
								}}
								office!
						Node:
						(type) c
						(layer)2
							Element:p
								A user with a profile property
								Come and visit us at our Asheville office! If some of your profiles have a value, but others don't, you can use a fallback value:
							Element:em
								Location: Asheville
								will get the following message:
						Node:
						(type) c
						(layer)2
							Element:pre
								Come and visit us at our
							Element:span
								{{
							Element:span
								${Location}
							Element:span
								|
							Element:span
								fallback
							Element:span
								:
							Element:span
								"nearest"
							Element:span
								}}
								office!
						Node:
						(type) c
						(layer)2
							Element:p
								Profiles without a
								Come and visit us at our nearest office! Document Sections
							Element:code
								Location
								property will receive this message:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Introduction
							Element:li
							Element:a
								Integration
							Element:li
							Element:a
								Customizing Behavior
							Element:li
							Element:a
								Profile Properties
