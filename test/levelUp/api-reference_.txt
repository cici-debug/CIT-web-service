Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
								Making requests
						Node:
						(type) c
						(layer)2
							Element:p
								All API requests should be made to
							Element:code
								https://api.thelevelup.com
								. So to
							Element:a
								acquire an app access token
								, for example, you’ll make a request to
							Element:code
								https://api.thelevelup.com/v15/access_tokens
								.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Authorization
									Node:
									(type) c
									(layer)3
										Element:p
											Each authorized request must include an Authorization HTTP header, with a type of
										Element:code
											token
											followed by the token:
									Node:
									(type) c
									(layer)3
										Element:p
										Element:code
											Authorization: token 123456-75489120749...
									Node:
									(type) c
									(layer)3
										Element:p
											If you supply an incorrect access token, or do not supply one at all, and make a request to an endpoint which requires authorization, you will receive a
										Element:code
											401 Unauthorized
											response from the server, along with a
										Element:code
											WWW-Authenticate
											header describing the error:
									Node:
									(type) c
									(layer)3
										Element:p
										Element:code
											WWW-Authenticate: OAuth2 realm="levelup", error="invalid_token"
									Node:
									(type) c
									(layer)3
										Element:p
											Some endpoints require multiple tokens or to specify the type of token. For example:
									Node:
									(type) c
									(layer)3
										Element:p
										Element:code
											Authorization: token user="123456-75489120749...",merchant="987654-123456789..."
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Content types
									Node:
									(type) c
									(layer)3
										Element:p
											All requests must use the
										Element:code
											Accept
											and
										Element:code
											Content-Type
											HTTP headers to negotiate content type. For nearly all API requests (except the few campaign calls that have the option of text/plain), you’ll need a JSON-encoded response, and so you’ll need to use the following header:
									Node:
									(type) c
									(layer)3
										Element:p
										Element:code
											Accept: application/json
									Node:
									(type) c
									(layer)3
										Element:p
											There is no support for specifying content type by appending an extension to the request URI.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											HTTP status codes
									Node:
									(type) c
									(layer)3
										Element:p
											The following HTTP status codes are returned by the API:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:thead
										Element:tr
										Element:th
											HTTP Status Code
										Element:th
											Reason
										Element:tbody
										Element:tr
										Element:td
										Element:code
											200 OK
										Element:td
											The request was processed without error.
										Element:tr
										Element:td
										Element:code
											204 No Content
										Element:td
											The request was processed without error and contains no body.
										Element:tr
										Element:td
										Element:code
											304 Not Modified
										Element:td
											The resource has not been modified since the version specified by the request’s
										Element:code
											If-Match
											header.
										Element:tr
										Element:td
										Element:code
											400 Bad Request
										Element:td
											The request contained invalid, unparseable JSON.
										Element:tr
										Element:td
										Element:code
											401 Unauthorized
										Element:td
											Authorization was incorrect.
										Element:tr
										Element:td
										Element:code
											404 Not Found
										Element:td
											The requested resource does not exist.
										Element:tr
										Element:td
										Element:code
											406 Not Acceptable
										Element:td
											The server doesn’t support the format requested in the
										Element:code
											Accept
											header.
										Element:tr
										Element:td
										Element:code
											422 Unprocessable Entity
										Element:td
											A validation error occurred because of invalid input. The client should look for errors in the response body for details.
										Element:tr
										Element:td
										Element:code
											501 Not Implemented
										Element:td
											The server is unable to fulfill the request because the client is outdated.
										Element:tr
										Element:td
										Element:code
											503 Service Unavailable
										Element:td
											LevelUp is undergoing maintenance or is otherwise unavailable.
						Node:
						(type) h2
						(layer)2
							Element:h2
								Errors
						Node:
						(type) c
						(layer)2
							Element:h3
								Error objects
						Node:
						(type) c
						(layer)2
							Element:p
								Errors are returned as an array of one or more error objects. Each error object may contain the following keys:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
								Key
							Element:th
								Presence
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
							Element:code
								object
							Element:td
								Optional
							Element:td
								The object to which this error applies, e.g.
							Element:code
								"credit_card"
								.
							Element:tr
							Element:td
							Element:code
								property
							Element:td
								Optional
							Element:td
								The property of object to which this error applies, e.g.
							Element:code
								"first_name"
								.
							Element:tr
							Element:td
							Element:code
								message
							Element:td
								Required
							Element:td
								A human-readable error message, e.g.
							Element:code
								"First name is required"
								.
						Node:
						(type) c
						(layer)2
							Element:h3
								Example
						Node:
						(type) c
						(layer)2
							Element:p
								An example error response might look like this:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:code
								HTTP/1.1 422 Unprocessable Entity
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
								[
							Element:span
								{
							Element:span
								"error"
							Element:span
								:
							Element:span
								{
							Element:span
								"object"
							Element:span
								:
							Element:span
								"user"
							Element:span
								,
							Element:span
								"property"
							Element:span
								:
							Element:span
								"first_name"
							Element:span
								,
							Element:span
								"message"
							Element:span
								:
							Element:span
								"First name is required"
							Element:span
								}
							Element:span
								},
							Element:span
								...
							Element:span
								]
						Node:
						(type) c
						(layer)2
							Element:p
								In this document, example error responses are included with many endpoints. The list is not exhaustive, however. You may encounter more mundane errors, such as “cannot be blank”, for request parameters marked as “required”.
