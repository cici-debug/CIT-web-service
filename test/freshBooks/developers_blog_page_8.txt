Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
								Try FreshBooks Free
						Node:
						(type) c
						(layer)2
							Element:p
								No credit card required. Cancel anytime.
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:p
								Already have an account?
							Element:a
								Log in
							Element:p
							Element:a
								Security Safeguards
								|
							Element:a
								Terms of Service
								|
							Element:a
								Privacy Policy
						Node:
						(type) c
						(layer)2
							Element:img
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											API Changes – Taxes!
									Node:
									(type) c
									(layer)3
										Element:p
											By Jamaal Montasser on May 4th, 2011
									Node:
									(type) c
									(layer)3
										Element:p
											Good morning! The sun is shining after almost two weeks of incessant rain in Toronto! Awesome.
									Node:
									(type) c
									(layer)3
										Element:p
											As of this morning it is now possible to access or create predetermined taxes with the API.
										Element:a
											Check out the docs!
									Node:
									(type) c
									(layer)3
										Element:p
											As well, we’ve fixed two bugs that some of our genius users found:
									Node:
									(type) c
									(layer)3
										Element:p
											1) Staff.list now uses proper pagination. We’ve added pagination to the staff.list call in order to make it consistent with all other .list calls.
									Node:
									(type) c
									(layer)3
										Element:p
											2) Payment.update no longer returns an error when used for a credit that isn’t associated with an invoice.
									Node:
									(type) c
									(layer)3
										Element:p
											If you need any help or have any questions don’t hesitate to email us.
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											FreshBooks @ StartUp Weekend San Fran, Toronto, NYC!
									Node:
									(type) c
									(layer)3
										Element:p
											By Jamaal Montasser on May 2nd, 2011
									Node:
									(type) c
									(layer)3
										Element:p
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											StartUp weekend is a 54 hour event where developers, marketers and designers form a team to build and launch a company by the end of the weekend. They’re pretty incredible events with a lot of energy and they always yield some very interesting outcomes.
									Node:
									(type) c
									(layer)3
										Element:p
											This Saturday and Sunday, we’ll be at
										Element:a
											StartUp Weekend San Fransisco!
											I, unfortunately, will not have the pleasure of being there, but Sunir,
										Element:a
											our Chief Handshaker,
											will be there and he’d love to hear from you if you’re around!
									Node:
									(type) c
									(layer)3
										Element:p
											Serial entrepreneur,
										Element:a
											Steve Blank
											, will be speaking at the event this weekend. If you’ve never heard of him, be sure to check out his book Four Steps to the Epiphany. Blank’s book is packed with insight on how to launch a new product.
									Node:
									(type) c
									(layer)3
										Element:p
											Since FreshBooks is a billing and invoicing company, it’s fitting that we will be cheering for all teams, but extra-hard for teams that will be charging their users, rather than generating revenue other ways.
									Node:
									(type) c
									(layer)3
										Element:p
											In light of this, we will be giving
										Element:strong
											an award
											at the events in San Fransisco (this weekend, May 6-8), Toronto (June 3-5) and NYC (June 10-12) to the team most likely to succeed in charging it’s users. This…
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											If you can articulate it, you can probably automate it. If you can automate it, it probably won’t rot.
									Node:
									(type) c
									(layer)3
										Element:p
											By Diana Clarke on April 29th, 2011
									Node:
									(type) c
									(layer)3
										Element:p
											Every codebase has conventions, business logic, and common pitfalls that need to be communicated between developers; especially to new developers as the team grows. The
										Element:a
											Evolve
											codebase is no exception. I’ve tried a bunch of different communication mediums in the past: verbal on-boarding, wikis, mailing lists, in-line documentation, code review check-lists, etc, but by far the one that works the best is
										Element:strong
											having automated tests
											!
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Tests never forget
									Node:
									(type) c
									(layer)3
										Element:p
											There are two ways you can define a class in python:
										Element:a
											the new way, and the old way
											. While we agreed as a team to only write new-style classes, every now and then an old-style class would creep in. This wasn’t a big deal until the day an old-style class caused a memory leak. You could get together as a team (again) to re-emphasize the importance of not using old-school classes, and try to remember to retell that story to every new developer, but having already been bitten by this approach, we sought another one. Post retrospective, we wrote a test that walks our source tree, looking for old-style classes, and fails when it encounters one — it was the beginning of a trend.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Humans are… well, human
									Node:
									(type) c
									(layer)3
										Element:p
											We have…
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											The boring things that keep production apps reliable
									Node:
									(type) c
									(layer)3
										Element:p
											By Shey Sewani on April 21st, 2011
									Node:
									(type) c
									(layer)3
										Element:p
											Over the years, Freshbooks has grown from a monolithic PHP application to a complex ecosystem of numerous
										Element:a
											Pylons
											and
										Element:a
											Sparkplug
											apps that support the main app our users interact with daily. As the FreshBooks application, “FreshApp”, matures, so do our development practices. Here’s a small list of some of the simple, yet, crucial things we developers do to make FreshBooks more manageable and reliable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Kill Switches
									Node:
									(type) c
									(layer)3
										Element:p
											FreshApp talks to several internal and external services. Services misbehave, and we can not allow misbehaving services to bring down FreshBooks. This is why we’ve implemented kill switches throughout FreshApp. The switches, activated by changing configuration settings, either cut off all communication between FreshApp and the misbehaving service or prevent access to the page that requires the external service.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Syslog, not optional
									Node:
									(type) c
									(layer)3
										Element:p
											All new programs must support logging that is configurable by the operations team. If the operations team can’t modify the logging configuration without modifying the source code, then the DEV team won’t allow you to deploy your app. Being able to log to syslog isn’t very helpful if the app doesn’t log anything useful, of course. So we consider carefully what sort of data to log. For example, our Pylons apps log…
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											API Changes: Better Status Parameters
									Node:
									(type) c
									(layer)3
										Element:p
											By Jamaal Montasser on April 20th, 2011
									Node:
									(type) c
									(layer)3
										Element:p
											This morning we added some rules to invoice statuses. Until now it was possible to have some messy invoice statuses – like setting an paid invoice’s status to draft.
									Node:
									(type) c
									(layer)3
										Element:p
											Now when creating an invoice, it’s only possible to set the invoice status as:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:p
											disputed
										Element:li
										Element:p
											draft
										Element:li
										Element:p
											sent
										Element:li
											viewed
									Node:
									(type) c
									(layer)3
										Element:p
											Additionally, you are not able to set an invoice to draft if the current invoice status is:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:p
											paid
										Element:li
										Element:p
											auto-paid
										Element:li
										Element:p
											retry
										Element:li
										Element:p
											failed
										Element:li
											or partial
									Node:
									(type) c
									(layer)3
										Element:p
											These better status rules prevent you from getting into a hairy situation like having a “paid” invoice status without actually having a payment on record.
									Node:
									(type) c
									(layer)3
										Element:p
											If you need any help or have any questions don’t hesitate to
										Element:a
											email us, we always happy to hear from you!
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
									Node:
									(type) c
									(layer)3
										Element:a
											Newer Posts
									Node:
									(type) c
									(layer)3
										Element:a
											Older Posts
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Developer Stuff
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														API Overview
													Element:li
													Element:a
														Authentication
													Element:li
													Element:a
														Helper Libraries
													Element:li
													Element:a
														Application Billing
													Element:li
													Element:a
														Webhooks
													Element:li
													Element:a
														Developer Blog
													Element:a
													Element:img
													Element:li
													Element:a
														Developer Forum
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														API Calls
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Callbacks
													Element:li
													Element:a
														Categories
													Element:li
													Element:a
														Clients
													Element:li
													Element:a
														Estimates
													Element:li
													Element:a
														Expenses
													Element:li
													Element:a
														Gateway
													Element:li
													Element:a
														FreshBooks API Guide for Invoices
													Element:li
													Element:a
														Items
													Element:li
													Element:a
														Languages
													Element:li
													Element:a
														Payments
													Element:li
													Element:a
														Projects
													Element:li
													Element:a
														Receipts
													Element:li
													Element:a
														Recurring
													Element:li
													Element:a
														Staff
													Element:li
													Element:a
														System
													Element:li
													Element:a
														Tasks
													Element:li
													Element:a
														Taxes
													Element:li
													Element:a
														Time Entries
													Element:li
													Element:a
														Contractors
													Element:li
													Element:a
														Default Terms
													Element:li
													Element:a
														Reports
													Element:li
													Element:a
														Currency
													Element:li
													Element:a
														Email Templates
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Resources
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Sample Code
													Element:li
													Element:a
														Developer Tips
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Tour FreshBooks
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Online Invoicing
													Element:li
													Element:a
														Time Tracking
													Element:li
													Element:a
														Client Estimates
													Element:li
													Element:a
														Expense Tracking
												Node:
												(type) c
												(layer)4
													Element:footer
													Element:a
													Element:img
													Element:img
													Element:p
														FreshBooks, 1655 Dupont St. Suite 250, Toronto, ON M6P 3T1 Canada
													Element:p
														Copyright © 2000-2017 FreshBooks is a service of 2ndSite Inc. All rights reserved.
													Element:p
													Element:a
														Security Safeguards
														|
													Element:a
														Terms of Service
														|
													Element:a
														Privacy Policy
												Node:
												(type) c
												(layer)4
													Element:img
