Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Payments
			Node:
			(type) c
			(layer)1
				Element:p
					Staff have access to the API calls listed below if the Invoices tab is enabled for staff. Staff users can only access payments that belong to clients they are assigned to.
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					payment.create
				Element:li
				Element:a
					payment.update
				Element:li
				Element:a
					payment.get
				Element:li
				Element:a
					payment.delete
				Element:li
				Element:a
					payment.list
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								payment.create
						Node:
						(type) c
						(layer)2
							Element:p
								Create a new payment and returns the corresponding payment_id.
						Node:
						(type) c
						(layer)2
							Element:p
								This function can have one of three possible effects depending on the presence of invoice_id and client_id:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								If you specify an invoice_id only, the payment will be recorded as an invoice payment.
							Element:li
								If you specify a client_id only, the payment will be recorded as a client credit.
							Element:li
								If you specify both an invoice_id and client_id, the payment will be recorded as an invoice payment, and the amount will be subtracted from the client’s credit.
						Node:
						(type) c
						(layer)2
							Element:p
								Payment type must be one of: ‘Cash’, ‘Check’, ‘Credit’, ‘Credit Card’, ‘Bank Transfer’, ‘Debit’, ‘PayPal’, ’2Checkout’, ‘VISA’, ‘MASTERCARD’, ‘DISCOVER’, ‘NOVA’, ‘AMEX’, ‘DINERS’, ‘EUROCARD’, ‘JCB’ or ‘ACH’.
						Node:
						(type) c
						(layer)2
							Element:p
								Note that ‘currency_code’ can only be provided when creating a credit, not a regular payment. Regular payments will default to the currency code of the invoice they are being made against.
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Request
												Node:
												(type) c
												(layer)4
													Element:pre
														<?xml version="1.0" encoding="utf-8"?> <request method="payment.create"> <payment> <client_id>13</client_id> <!-- Optional --> <invoice_id>207</invoice_id> <!-- Associate this payment with an invoice (Optional) --> <date>2007-05-30</date> <!-- Default value is today's date (Optional) --> <amount>129.88</amount> <!-- Default is zero (Optional) --> <currency_code>CAD</currency_code> <!-- Default is system's base currency (Optional) --> <type>Check</type> <!-- Default is Check (Optional) --> <notes>Prompt payment!</notes> <!-- (Optional) --> </payment> </request>
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Response
												Node:
												(type) c
												(layer)4
													Element:pre
														<?xml version="1.0" encoding="utf-8"?> <response xmlns="https://www.freshbooks.com/api/" status="ok"> <payment_id>103</payment_id> </response>
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								payment.update
						Node:
						(type) c
						(layer)2
							Element:p
								Update an existing payment. All fields besides payment_id are optional – unpassed fields will retain their existing value.
						Node:
						(type) c
						(layer)2
							Element:p
								Note that ‘currency_code’ can only be provided when updating a credit, not a regular payment. Regular payments will default to the currency code of the invoice they are being made against.
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Request
												Node:
												(type) c
												(layer)4
													Element:pre
														<?xml version="1.0" encoding="utf-8"?> <request method="payment.update"> <payment> <payment_id>103</payment_id> <amount>0.00</amount> <notes>Payment refunded.</notes> <currency_code>CAD</currency_code> </payment> </request>
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Response
												Node:
												(type) c
												(layer)4
													Element:pre
														<?xml version="1.0" encoding="utf-8"?> <response status="ok"/>
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								payment.get
						Node:
						(type) c
						(layer)2
							Element:p
								Retrieve payment details according to payment_id.
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Request
												Node:
												(type) c
												(layer)4
													Element:pre
														<?xml version="1.0" encoding="utf-8"?> <request method="payment.get"> <payment_id>322</payment_id> </request>
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Response
												Node:
												(type) c
												(layer)4
													Element:pre
														<?xml version="1.0" encoding="utf-8"?> <response xmlns="https://www.freshbooks.com/api/" status="ok"> <payment> <payment_id>109</payment_id> <client_id>13</client_id> <invoice_id>207</invoice_id> <date>2007-05-30 00:00:00</date> <amount>129.88</amount> <currency_code>CAD</currency_code> <!-- Only returned for credits --> <type>VISA</type> <notes>Prompt payment!</notes> <updated>2009-08-12 09:00:00</updated> <!-- (Read-only) --> <gateway_transaction> <!-- (Read-only) --> <!-- Only returned for online payments --> <reference_id>2156858189</reference_id> <gateway_name>Authorize.Net</gateway_name> </gateway_transaction> </payment> </response>
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								payment.delete
						Node:
						(type) c
						(layer)2
							Element:p
								Permanently delete a payment. This will modify the status of the associated invoice if required.
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Request
												Node:
												(type) c
												(layer)4
													Element:pre
														<?xml version="1.0" encoding="utf-8"?> <request method="payment.delete"> <payment_id>321</payment_id> </request>
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Response
												Node:
												(type) c
												(layer)4
													Element:pre
														<?xml version="1.0" encoding="utf-8"?> <response status="ok"/>
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								payment.list
						Node:
						(type) c
						(layer)2
							Element:p
								Returns a list of recorded payments. You can optionally filter by invoice_id or client_id.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Note:
								This method uses
							Element:a
								pagination
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Request
												Node:
												(type) c
												(layer)4
													Element:pre
														<?xml version="1.0" encoding="utf-8"?> <request method="payment.list"> <client_id>3</client_id> <!-- Filter by client (Optional) --> <invoice_id>133</invoice_id> <!-- Filter by invoice (Optional) --> <date_from>2007-01-01</date_from> <!-- Return payments dated after this arg (Optional) --> <date_to>2007-04-01</date_to> <!-- Return payments dated before this arg (Optional) --> <updated_from>2007-01-01</updated_from> <!-- Return payments modified after this arg (Optional) --> <updated_to>2007-04-01</updated_to> <!-- Return payments modified before this arg (Optional) --> <page>1</page> <!-- Page number to return, default is 1 (Optional) --> <per_page>10</per_page> <!-- Number of results per page, default is 25 (Optional) --> </request>
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Response
												Node:
												(type) c
												(layer)4
													Element:pre
														<?xml version="1.0" encoding="utf-8"?> <response xmlns="https://www.freshbooks.com/api/" status="ok"> <payments page="1" per_page="10" pages="23" total="221"> <payment> <payment_id>165</payment_id> <invoice_id>203</invoice_id> <date>2007-03-02 12:04:11</date> <type>VISA</type> <notes></notes> <client_id>43</client_id> <currency_code>CAD</currency_code> <!-- Only returned for credits --> <updated>2009-08-12 09:00:00</updated> <!-- (Read-only) --> <gateway_transaction> <!-- (Read-only) --> <!-- Only returned for online payments --> <reference_id>2156858189</reference_id> <gateway_name>Authorize.Net</gateway_name> </gateway_transaction> <amount>301.21</amount> </payment> ... </payments> </response>
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Developer Stuff
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														API Overview
													Element:li
													Element:a
														Authentication
													Element:li
													Element:a
														Helper Libraries
													Element:li
													Element:a
														Application Billing
													Element:li
													Element:a
														Webhooks
													Element:li
													Element:a
														Developer Blog
													Element:a
													Element:img
													Element:li
													Element:a
														Developer Forum
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														API Calls
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Callbacks
													Element:li
													Element:a
														Categories
													Element:li
													Element:a
														Clients
													Element:li
													Element:a
														Estimates
													Element:li
													Element:a
														Expenses
													Element:li
													Element:a
														Gateway
													Element:li
													Element:a
														FreshBooks API Guide for Invoices
													Element:li
													Element:a
														Items
													Element:li
													Element:a
														Languages
													Element:li
													Element:a
														Payments
													Element:li
													Element:a
														Projects
													Element:li
													Element:a
														Receipts
													Element:li
													Element:a
														Recurring
													Element:li
													Element:a
														Staff
													Element:li
													Element:a
														System
													Element:li
													Element:a
														Tasks
													Element:li
													Element:a
														Taxes
													Element:li
													Element:a
														Time Entries
													Element:li
													Element:a
														Contractors
													Element:li
													Element:a
														Default Terms
													Element:li
													Element:a
														Reports
													Element:li
													Element:a
														Currency
													Element:li
													Element:a
														Email Templates
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Resources
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Sample Code
													Element:li
													Element:a
														Developer Tips
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Tour FreshBooks
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Online Invoicing
													Element:li
													Element:a
														Time Tracking
													Element:li
													Element:a
														Client Estimates
													Element:li
													Element:a
														Expense Tracking
												Node:
												(type) c
												(layer)4
													Element:footer
													Element:a
													Element:img
													Element:img
													Element:p
														FreshBooks, 1655 Dupont St. Suite 250, Toronto, ON M6P 3T1 Canada
													Element:p
														Copyright © 2000-2017 FreshBooks is a service of 2ndSite Inc. All rights reserved.
													Element:p
													Element:a
														Security Safeguards
														|
													Element:a
														Terms of Service
														|
													Element:a
														Privacy Policy
												Node:
												(type) c
												(layer)4
													Element:img
