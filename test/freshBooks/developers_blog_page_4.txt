Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
								Try FreshBooks Free
						Node:
						(type) c
						(layer)2
							Element:p
								No credit card required. Cancel anytime.
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:p
								Already have an account?
							Element:a
								Log in
							Element:p
							Element:a
								Security Safeguards
								|
							Element:a
								Terms of Service
								|
							Element:a
								Privacy Policy
						Node:
						(type) c
						(layer)2
							Element:img
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Twig in Production
									Node:
									(type) c
									(layer)3
										Element:p
											By Mark on September 28th, 2011
									Node:
									(type) c
									(layer)3
										Element:p
											For the past year we’ve been busy behind the scenes updating much of the existing FreshBooks application to use Twig. If you haven’t heard of
										Element:a
											Twig
											before, it’s a great templating library for PHP. Its syntax and features are mostly inspired by
										Element:a
											Jinja2
											. Twig provides a number of features that are useful in larger applications:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Template inheritance – Useful for creating application layouts and re-using common page layouts.
										Element:li
											Horizontal reuse of blocks – You can reuse blocks from one template in another giving you an alternative way to re-use template code beyond extension.
										Element:li
											Macros – Create re-usable ‘functions’ entirely of template code.
										Element:li
											Automatic HTML escaping – The ‘killer feature’ you should look for in any template language.
										Element:li
											Sandboxing – Great for limiting what can be accessed in a template. This is really useful when exposing templates to end users.
									Node:
									(type) c
									(layer)3
										Element:p
											Automatic escaping is something I think every PHP template language should have. While PHP is ok at being a template language, it is not automatically safe against cross-site scripting attacks. Having a template language offer both syntactic sugar and invisibily securing template code with no additional work is fantastic feature. If you’re using a template language without automatic escaping you…
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											UTF-8 is here!
									Node:
									(type) c
									(layer)3
										Element:p
											By Taavi on September 21st, 2011
									Node:
									(type) c
									(layer)3
										Element:p
											Today I’m happy to announce that FreshBooks is fully UTF-8!
									Node:
									(type) c
									(layer)3
										Element:p
											What this means for you: You can use unicode snowman and all the other characters in the
										Element:a
											Unicode Basic Multilingual Plane
											to your heart’s content, knowing that each symbol takes the space of only one code point (essentially a “letter”), for example being able to fit a full 50 non-Latin characters into an invoice item name. It also means that you’ll be able to use
										Element:a
											snowmen
											and other extended characters in the time tracking section of FreshBooks!
									Node:
									(type) c
									(layer)3
										Element:p
											What this means for you as an API consumer: You can now send FreshBooks the full gamut of BMP characters directly as UTF-8 with no encoding shenanigans! Previously anything not in the
										Element:a
											ISO-8859-1
											character set would be smashed into a question mark, including XML entities representing those extended charaters. As a workaround, one could “double-encode” entities, e.g. your XML would contain the ASCII string
										Element:span
											&amp;#9731;
											to get a snowman. This is no longer required!
									Node:
									(type) c
									(layer)3
										Element:p
											Here’s how things work, starting today:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:thead
										Element:tr
										Element:th
											If you submit this via your browser
										Element:th
											It looks like this in the browser
										Element:th
											And like this in an API response
										Element:tbody
										Element:tr
										Element:td
											&amp;
										Element:td
											&
										Element:td
											&amp;
										Element:tr
										Element:td
											&#9731;
										Element:td
											☃
										Element:td
											☃
										Element:tr
										Element:td
											&amp;#9731;
										Element:td
											&#9731;
										Element:td
											&#9731;
									Node:
									(type) c
									(layer)3
										Element:table
											…
										Element:thead
										Element:tr
										Element:th
											If you submit
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Song In Code Contest Winners
									Node:
									(type) c
									(layer)3
										Element:p
											By Anton Nguyen on September 8th, 2011
									Node:
									(type) c
									(layer)3
										Element:p
											We recently held a contest to see all the creative ways you could turn your favourite songs into code. Everyone submitted so many amazing entries, that it made it almost impossible to pick our favourite submission!
									Node:
									(type) c
									(layer)3
										Element:p
											We
										Element:a
											raged
											long and hard, debating who should come out on top. After the dust had settled and votes were counted, there emerged a victor:
										Element:strong
											Hong Hua
											with his entry of Aladdin’s “A Whole New World”!
									Node:
									(type) c
									(layer)3
										Element:p
											Congratulations Hong! You’ll be receiving a $100 Amazon Gift Certificate!
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											John Girvin
											came in a close 2nd place with his entry of “Blame it on the Boogie”. We thought he deserved a prize as well for all his hard work, so he’ll also receive a $50 Amazon Gift Certificate consolation prize!
									Node:
									(type) c
									(layer)3
										Element:p
											Thanks to everyone who participated! We hope you had fun!
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											The Winning Entry
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											A Whole New World – Aladdin
									Node:
									(type) c
									(layer)3
										Element:p
										Element:em
											Codified by Hong Hua
									Node:
									(type) c
									(layer)3
										Element:p
											Song Lyrics:
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:p
											_A whole new world
										Element:p
											A hundred thousand things to see_
									Node:
									(type) c
									(layer)3
										Element:p
											Song In Code:
									Node:
									(type) c
									(layer)3
										Element:pre
											World *newWorld = [[world alloc] init]; int thingsToSee = 0 for (thingsToSee; thingsToSee < 100000; thingsToSee++) [newWorld seeThings: thingsToSee]; [newWorld release] //clean up after magic carpet ride
									Node:
									(type) c
									(layer)3
										Element:p
											The way Hong codified these lyrics was simple and clever. There's the…
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Songs In Code Contest
									Node:
									(type) c
									(layer)3
										Element:p
											By Anton Nguyen on August 18th, 2011
									Node:
									(type) c
									(layer)3
										Element:p
											A Michael Jackson song came up on my iPod one day while I was writing unit tests. As I listened to him croning on and on about how “Billie Jean” was not his lover, I thought to myself, “why doesn’t he just write a unit test and assert this fact once and for all?”
									Node:
									(type) c
									(layer)3
										Element:p
											This idea reminded me of a twitter meme a few years back (
										Element:a
											#songsincode
											), that was very entertaining. I wanted to give it try with other songs, so I gathered my fellow
										Element:a
											brogrammers
											and we started codifying our favourite songs.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Contest
									Node:
									(type) c
									(layer)3
										Element:p
											We want to see what creative ways you can turn your favourite songs into code! Email your entries to
										Element:a
											songcontest@freshbooks.com
											and we’ll award our favourite “Codified Song” with a $100 Gift Certificate for Amazon to buy
										Element:a
											all the cool swag
											you’ve been eyeing!
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Send in your entries by 6:00 PM ET on August 23nd and the winner will be announced soon after!
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Our Take on Songs in Code
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Michael Jackson - Billie Jean
									Node:
									(type) c
									(layer)3
										Element:pre
											assertFalse(self.lover == "Billie Jean");
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Hall & Oates - Kiss on My List
									Node:
									(type) c
									(layer)3
										Element:pre
											best_things_in_life = ['your kiss']
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Splendau Ballet - True
									Node:
									(type) c
									(layer)3
										Element:pre
											$this->assertTrue($this->much);
									Node:
									(type) c
									(layer)3
										Element:p
											…
										Element:strong
											The Lonely Island feat. Akon - I Just Had Sex
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Hacking Vancouver!
									Node:
									(type) c
									(layer)3
										Element:p
											By Corey on August 15th, 2011
									Node:
									(type) c
									(layer)3
										Element:p
										Element:a
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
										Element:a
											HackVAN
											kicks off this Saturday, August 20, at the Mozilla headquarters in beautiful downtown Vancouver.
									Node:
									(type) c
									(layer)3
										Element:p
											HackDays are fantastic events, where for the low price of $10 you get a full day’s worth of hacking, app-building, and hilarity. We even feed you and provide beer!
									Node:
									(type) c
									(layer)3
										Element:p
											A number of great companies have lined up to provide their APIs for you to use, like
										Element:a
											TinEye
											,
										Element:a
											FreshBooks
											(of course),
										Element:a
											Yellow Pages
											, ,
										Element:a
											ContextIO
											,
										Element:a
											Shopify
											and
										Element:a
											Twilio
											. Your mission is to build an all-new application using one or more of those APIs. You’ll have from 9:30 am to 4:30 pm to build your application — and if you’re looking for collaborators you might very well find some on the day. Folks come from all over to join these HackDays events, so you’ll get to meet like-minded hackers and even try working together.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:a
											There are prizes galore
											: a MacBook Air, an iPad2 and a Kindle 3G all await the best applications delivered at the end of the day. So come out,
										Element:a
											sign up
											, and hack your heart out!
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
									Node:
									(type) c
									(layer)3
										Element:a
											Newer Posts
									Node:
									(type) c
									(layer)3
										Element:a
											Older Posts
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Developer Stuff
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														API Overview
													Element:li
													Element:a
														Authentication
													Element:li
													Element:a
														Helper Libraries
													Element:li
													Element:a
														Application Billing
													Element:li
													Element:a
														Webhooks
													Element:li
													Element:a
														Developer Blog
													Element:a
													Element:img
													Element:li
													Element:a
														Developer Forum
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														API Calls
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Callbacks
													Element:li
													Element:a
														Categories
													Element:li
													Element:a
														Clients
													Element:li
													Element:a
														Estimates
													Element:li
													Element:a
														Expenses
													Element:li
													Element:a
														Gateway
													Element:li
													Element:a
														FreshBooks API Guide for Invoices
													Element:li
													Element:a
														Items
													Element:li
													Element:a
														Languages
													Element:li
													Element:a
														Payments
													Element:li
													Element:a
														Projects
													Element:li
													Element:a
														Receipts
													Element:li
													Element:a
														Recurring
													Element:li
													Element:a
														Staff
													Element:li
													Element:a
														System
													Element:li
													Element:a
														Tasks
													Element:li
													Element:a
														Taxes
													Element:li
													Element:a
														Time Entries
													Element:li
													Element:a
														Contractors
													Element:li
													Element:a
														Default Terms
													Element:li
													Element:a
														Reports
													Element:li
													Element:a
														Currency
													Element:li
													Element:a
														Email Templates
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Resources
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Sample Code
													Element:li
													Element:a
														Developer Tips
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Tour FreshBooks
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Online Invoicing
													Element:li
													Element:a
														Time Tracking
													Element:li
													Element:a
														Client Estimates
													Element:li
													Element:a
														Expense Tracking
												Node:
												(type) c
												(layer)4
													Element:footer
													Element:a
													Element:img
													Element:img
													Element:p
														FreshBooks, 1655 Dupont St. Suite 250, Toronto, ON M6P 3T1 Canada
													Element:p
														Copyright © 2000-2017 FreshBooks is a service of 2ndSite Inc. All rights reserved.
													Element:p
													Element:a
														Security Safeguards
														|
													Element:a
														Terms of Service
														|
													Element:a
														Privacy Policy
												Node:
												(type) c
												(layer)4
													Element:img
