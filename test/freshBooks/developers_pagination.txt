Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Pagination
			Node:
			(type) c
			(layer)1
				Element:p
					All .list methods, such as
				Element:a
					invoice.list
					,
				Element:a
					client.list
					etc, may not return the entire list of objects in a single request. If the list contains more than 25 items (by default, see
				Element:a
					‘Page Size’
					below), it will be paginated (i.e. split across multiple pages of data, each requiring a separate request to fetch).
			Node:
			(type) c
			(layer)1
				Element:p
					The pagination details are included in the response to any .list method request. The response will indicate:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Which page of data is being returned (1,2,3 etc)
				Element:li
					The size of the page being returned (25 by default)
				Element:li
					The total number of pages available at this size
				Element:li
					The total number of individual items available
			Node:
			(type) c
			(layer)1
				Element:p
					Here’s an example response from the
				Element:a
					recurring.list
					method:
			Node:
			(type) c
			(layer)1
				Element:pre
					<response xmlns="https://www.freshbooks.com/api/" status="ok"> <recurrings page="1" per_page="25" pages="4" total="99"> <recurring> ...
			Node:
			(type) c
			(layer)1
				Element:p
					The above indicates that there are 4 pages of about 25 items (the last page will be the remainder, so it may not be a full page), and a total of 99 items.
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Requesting specific pages
									Node:
									(type) c
									(layer)3
										Element:p
											Specific pages are requested by including a <page> element in the request with the page number you’re requesting:
									Node:
									(type) c
									(layer)3
										Element:pre
											<?xml version="1.0" encoding="utf-8"?> <request method='invoice.list'> <page>2</page> </request>
									Node:
									(type) c
									(layer)3
										Element:p
										Element:a
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Page Size
									Node:
									(type) c
									(layer)3
										Element:p
											You can adjust the size of pages to meet your needs. The default page size is 25, but the system will allow pages of up to 100 items. (Specifying more than 100 will behave the same as if you’ve requested exactly 100). You set the page size by sending the <per_page> element with your request:
									Node:
									(type) c
									(layer)3
										Element:pre
											<?xml version="1.0" encoding="utf-8"?> <request method='invoice.list'> <per_page>50</per_page> </request>
									Node:
									(type) c
									(layer)3
										Element:p
											If there are fewer items than the page size in the system, then the entire list is returned.
									Node:
									(type) c
									(layer)3
										Element:p
											When submitting a request for the second or subsequent pages of data, make sure you specify the same value for <per_page> in each request, or you will end up with a non-contiguous list.
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Things to remember
									Node:
									(type) c
									(layer)3
										Element:p
											This applies to all .list methods.
									Node:
									(type) c
									(layer)3
										Element:p
											All data is potentially volatile. Items can be added or removed between requests for pages of data, so there’s no absolute guarantee that items won’t be missed or duplicated when paginating over a large list, especially if a lot of time elapses between requests.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Developer Stuff
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														API Overview
													Element:li
													Element:a
														Authentication
													Element:li
													Element:a
														Helper Libraries
													Element:li
													Element:a
														Application Billing
													Element:li
													Element:a
														Webhooks
													Element:li
													Element:a
														Developer Blog
													Element:a
													Element:img
													Element:li
													Element:a
														Developer Forum
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														API Calls
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Callbacks
													Element:li
													Element:a
														Categories
													Element:li
													Element:a
														Clients
													Element:li
													Element:a
														Estimates
													Element:li
													Element:a
														Expenses
													Element:li
													Element:a
														Gateway
													Element:li
													Element:a
														FreshBooks API Guide for Invoices
													Element:li
													Element:a
														Items
													Element:li
													Element:a
														Languages
													Element:li
													Element:a
														Payments
													Element:li
													Element:a
														Projects
													Element:li
													Element:a
														Receipts
													Element:li
													Element:a
														Recurring
													Element:li
													Element:a
														Staff
													Element:li
													Element:a
														System
													Element:li
													Element:a
														Tasks
													Element:li
													Element:a
														Taxes
													Element:li
													Element:a
														Time Entries
													Element:li
													Element:a
														Contractors
													Element:li
													Element:a
														Default Terms
													Element:li
													Element:a
														Reports
													Element:li
													Element:a
														Currency
													Element:li
													Element:a
														Email Templates
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Resources
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Sample Code
													Element:li
													Element:a
														Developer Tips
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Tour FreshBooks
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Online Invoicing
													Element:li
													Element:a
														Time Tracking
													Element:li
													Element:a
														Client Estimates
													Element:li
													Element:a
														Expense Tracking
												Node:
												(type) c
												(layer)4
													Element:footer
													Element:a
													Element:img
													Element:img
													Element:p
														FreshBooks, 1655 Dupont St. Suite 250, Toronto, ON M6P 3T1 Canada
													Element:p
														Copyright © 2000-2017 FreshBooks is a service of 2ndSite Inc. All rights reserved.
													Element:p
													Element:a
														Security Safeguards
														|
													Element:a
														Terms of Service
														|
													Element:a
														Privacy Policy
												Node:
												(type) c
												(layer)4
													Element:img
