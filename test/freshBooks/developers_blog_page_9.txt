Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
								Try FreshBooks Free
						Node:
						(type) c
						(layer)2
							Element:p
								No credit card required. Cancel anytime.
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:p
								Already have an account?
							Element:a
								Log in
							Element:p
							Element:a
								Security Safeguards
								|
							Element:a
								Terms of Service
								|
							Element:a
								Privacy Policy
						Node:
						(type) c
						(layer)2
							Element:img
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											FreshBooks Code Swarm
									Node:
									(type) c
									(layer)3
										Element:p
											By Anton Nguyen on April 18th, 2011
									Node:
									(type) c
									(layer)3
										Element:p
											As one of FreshBooks’ newest developers, I’ve been spending a lot of time reading through the code, understanding how all the different components work in unison to deliver such an amazing product to its customers. While looking at the older files, I was amazed how some of them were barely recognizable from their current state. Suffice to say, our developers have been hard at work over the years. This triggered my curiosity regarding the app’s evolution from the original developers until now: Who was working on what? How quickly did the app grow? How long did each developer spend in the code?
									Node:
									(type) c
									(layer)3
										Element:p
											To visualize answers to these questions, I decided to make a
										Element:a
											code swarm
											of our app.
									Node:
									(type) c
									(layer)3
										Element:p
											Code swarms are a fascinating way to visualize the thousands of interactions between a project’s developers and its files. Developers and files are represented as moving elements. So when a developer makes changes to a file, it will briefly light up and fly towards that developer. The code swarm will only show files that have been changed recently and developers who’ve made a recent change. Conversely, when a file or developer has not been active for a while, they will fade away.
									Node:
									(type) c
									(layer)3
										Element:p
											…
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Using Jenkin’s JSONP API for pretty profit
									Node:
									(type) c
									(layer)3
										Element:p
											By Mark on April 11th, 2011
									Node:
									(type) c
									(layer)3
										Element:p
											In a previous post Corey talked about how we’re using Hudson (now known as
										Element:a
											Jenkins
											) to manage our automated builds and display build status on a monitor looming above all the developers. As our internal portfolio of projects has grown our existing statusboard has gotten long in the tooth. I recently took the time to re-design and re-implement our statusboard’s front end so it can display more information in a more consistent manner.
									Node:
									(type) c
									(layer)3
										Element:p
											In the previous iteration we were using the Jenkins Radiator view plugin to provide project build statuses. For this iteration, I decided we could have a more seamless display by using Jenkins’ JSONP API. Jenkins not only provides great features, it also exposes most of them through XML, JSON, and JSONP APIs. I used the JSONP API, as our statusboard isn’t hosted on the same domain/virtual machine as our Jenkins server.
									Node:
									(type) c
									(layer)3
										Element:p
											Jenkins’ JSON APIs support two ways of digging information out of it. The first is the
										Element:code
											depth
											parameter, this allows you to give an integer of how ‘deep’ of information you want from Jenkins. Unfortunately for me the information I wanted was at a depth of 2, which also resulted in 1.3MB of JSON data, making it…
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											API Changes: New recurring.list filter
									Node:
									(type) c
									(layer)3
										Element:p
											By Jamaal Montasser on March 30th, 2011
									Node:
									(type) c
									(layer)3
										Element:p
											Good morning!
									Node:
									(type) c
									(layer)3
										Element:p
											There’s good news for you if you’re using recurring profiles. When you use the recurring.list method, you can now filter your list by creation date of auto-bills!
										Element:a
											Check it out
											.
									Node:
									(type) c
									(layer)3
										Element:p
											If you need any help or have any questions don’t hesitate to
										Element:a
											email us, we’d love to hear from you!
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											TechTalksTO Link Roundup
									Node:
									(type) c
									(layer)3
										Element:p
											By Jason Diller on March 25th, 2011
									Node:
									(type) c
									(layer)3
										Element:p
											TechTalksTO is an ongoing speaker series held in Toronto and sponsored by FreshBooks. We’ve held 3 great talks so far and have no plans of stopping. Here’s an update of what’s been going on lately.
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:p
											We’re pleased to announce TechTalksTO now has its own web site:
										Element:a
											TechTalksTO.com
											You can keep an eye on it or point your favourite RSS reader at it to keep up to date with what we’ve coming up.
										Element:li
										Element:p
											We also have a twitter account:
										Element:a
											@TechTalksTO
										Element:li
										Element:p
										Element:a
											Episode 3 with James Duncan on Node.js
											is now available in video form. You can
										Element:a
											watch it here.
										Element:li
										Element:a
											Episode 4, featuring Ben Cherry from Twitter
											is set to go March 29th. It sold out, we added a few more tickets and sold those too, so now it’s really super sold out.
									Node:
									(type) c
									(layer)3
										Element:p
											We’ve got more great talks in the works, so stay tuned.
									Node:
									(type) c
									(layer)3
										Element:p
											If you’d like to propose a talk, we’re always looking for interesting speakers, so
										Element:a
											drop us a line
											. We’re not hard to find.
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											API Changes: More project functionality
									Node:
									(type) c
									(layer)3
										Element:p
											By Jamaal Montasser on March 22nd, 2011
									Node:
									(type) c
									(layer)3
										Element:p
											Spring is on the way and soon the bugs will be back – the good (
										Element:a
											lady bugs
											) and the bad (
										Element:a
											Ontario black flies
											). We recently fixed one of our own bugs. Now if you use invoice.lines.add/update/delete, the API no longer marks the hours on the invoice as unbilled.
									Node:
									(type) c
									(layer)3
										Element:p
											As well, we’ve added some new functionality. If you’re using the project.update and project.create, they will now use task rates for task-rate projects. If you’re using the project.list and project.get methods, they now return a list of tasks assigned to the project.
									Node:
									(type) c
									(layer)3
										Element:p
											If you need any help or have any questions don’t hesitate to
										Element:a
											email us, we’d love to hear from you!
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
									Node:
									(type) c
									(layer)3
										Element:a
											Newer Posts
									Node:
									(type) c
									(layer)3
										Element:a
											Older Posts
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Developer Stuff
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														API Overview
													Element:li
													Element:a
														Authentication
													Element:li
													Element:a
														Helper Libraries
													Element:li
													Element:a
														Application Billing
													Element:li
													Element:a
														Webhooks
													Element:li
													Element:a
														Developer Blog
													Element:a
													Element:img
													Element:li
													Element:a
														Developer Forum
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														API Calls
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Callbacks
													Element:li
													Element:a
														Categories
													Element:li
													Element:a
														Clients
													Element:li
													Element:a
														Estimates
													Element:li
													Element:a
														Expenses
													Element:li
													Element:a
														Gateway
													Element:li
													Element:a
														FreshBooks API Guide for Invoices
													Element:li
													Element:a
														Items
													Element:li
													Element:a
														Languages
													Element:li
													Element:a
														Payments
													Element:li
													Element:a
														Projects
													Element:li
													Element:a
														Receipts
													Element:li
													Element:a
														Recurring
													Element:li
													Element:a
														Staff
													Element:li
													Element:a
														System
													Element:li
													Element:a
														Tasks
													Element:li
													Element:a
														Taxes
													Element:li
													Element:a
														Time Entries
													Element:li
													Element:a
														Contractors
													Element:li
													Element:a
														Default Terms
													Element:li
													Element:a
														Reports
													Element:li
													Element:a
														Currency
													Element:li
													Element:a
														Email Templates
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Resources
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Sample Code
													Element:li
													Element:a
														Developer Tips
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Tour FreshBooks
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Online Invoicing
													Element:li
													Element:a
														Time Tracking
													Element:li
													Element:a
														Client Estimates
													Element:li
													Element:a
														Expense Tracking
												Node:
												(type) c
												(layer)4
													Element:footer
													Element:a
													Element:img
													Element:img
													Element:p
														FreshBooks, 1655 Dupont St. Suite 250, Toronto, ON M6P 3T1 Canada
													Element:p
														Copyright © 2000-2017 FreshBooks is a service of 2ndSite Inc. All rights reserved.
													Element:p
													Element:a
														Security Safeguards
														|
													Element:a
														Terms of Service
														|
													Element:a
														Privacy Policy
												Node:
												(type) c
												(layer)4
													Element:img
