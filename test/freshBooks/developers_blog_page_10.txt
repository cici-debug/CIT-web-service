Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
								Try FreshBooks Free
						Node:
						(type) c
						(layer)2
							Element:p
								No credit card required. Cancel anytime.
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:p
								Already have an account?
							Element:a
								Log in
							Element:p
							Element:a
								Security Safeguards
								|
							Element:a
								Terms of Service
								|
							Element:a
								Privacy Policy
						Node:
						(type) c
						(layer)2
							Element:img
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Why weren’t you at ConFoo?
									Node:
									(type) c
									(layer)3
										Element:p
											By Shey Sewani on March 16th, 2011
									Node:
									(type) c
									(layer)3
										Element:p
										Element:a
											ConFoo
											was an incredible experience; with 146 sessions over 3 days, multiple tracks attracting members of many different open source communities from around the world. We met brilliant people everyday: diversity rocks.
									Node:
									(type) c
									(layer)3
										Element:p
											Over three days, we had our brains rocked by sessions that ranged from
										Element:a
											caching with HTTP
											to
										Element:a
											Node.js
											to deploying and maintaining mission critical web applications. Just as important as the topics were the people who held the sessions. Developers who are in the trenches everyday, working on real world applications and sharing their solutions.
									Node:
									(type) c
									(layer)3
										Element:p
											Our brains were fried, daily, but when you’re in a beautiful city, with amazing people and incredible beer, there are always ways to relax.
									Node:
									(type) c
									(layer)3
										Element:p
											So, thanks to the organizers and everyone we met and chatted with during the conference. If you’re a Ruby/Python/PHP developer, you should definitely go to ConFoo next year. I know we’ll be there.
									Node:
									(type) c
									(layer)3
										Element:p
											P.S. We’ll bring a camera next time.
									Node:
									(type) c
									(layer)3
										Element:p
											P.P.S: I was at {SXSW, PAX , PyCon} are all good answers
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											TechTalksTO – Episode 3 – James Duncan on Node.js
									Node:
									(type) c
									(layer)3
										Element:p
											By Jason Diller on March 8th, 2011
									Node:
									(type) c
									(layer)3
										Element:p
											On March 2nd, 2011, FreshBooks was proud to sponsor another edition of TechTalksTO. Hosted once again by
										Element:a
											The Gladstone Hotel
											, this edition featured
										Element:a
											James A. Duncan
											, Chief Architect at
										Element:a
											Joyent
											, who hold the IP rights to Node and sponsor its ongoing development.
									Node:
									(type) c
									(layer)3
										Element:p
											We packed the house again, and the developers who attended were treated to an informative and entertaining talk about Node, including:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:p
											What Node.js is and why Joyent is investing in it.
										Element:li
											How Node.js handily solves the
										Element:a
											C10K
											problem
										Element:li
											How more and more devices are generating volumes of data, and how non-blocking, event based I/O enables dealing with those volumes.
										Element:li
											Why JavaScript is the right language for Node
										Element:li
											How it all works under the covers.
									Node:
									(type) c
									(layer)3
										Element:p
											We hope everyone had a good time and that you’ll all come back for the next edition of TechTalksTO!
									Node:
									(type) c
									(layer)3
										Element:p
											Our next installment is set for
										Element:strong
											March 29th
											, and will feature Ben Cherry of
										Element:a
											Twitter
									Node:
									(type) c
									(layer)3
										Element:p
											A video of the talk will be posted shortly. You can check out the slides from the talk below.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
										Element:a
											Node js techtalksto
									Node:
									(type) c
									(layer)3
										Element:p
											View more
										Element:a
											presentations
											from
										Element:a
											Jason Diller
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Update:
											As promised, the video is now available at
										Element:a
											TechTalksTO.com
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Improving the reliability of WebHooks
									Node:
									(type) c
									(layer)3
										Element:p
											By Shey Sewani on February 16th, 2011
									Node:
									(type) c
									(layer)3
										Element:p
											At FreshBooks we dog food our API and WebHooks, which is how we noticed a curiosity in our implementation. Repeater, our WebHooks engine, is designed to retry a WebHook if the endpoint URI is temporarily inaccessible, i.e., it receives a non 200-series response code– unfortunately, Repeater didn’t repeat.
									Node:
									(type) c
									(layer)3
										Element:p
											In its original implementation, Repeater maintained an internal priority queue of all WebHooks that must be retried, and a pool of threads which work on items in the queue. This implementation supported prioritization of first time WebHooks over retries as well as exponential back off for each subsequent retry; however, this scheme suffers from two major drawbacks. Firstly, the priority queue is maintained within memory and all retries are lost if Repeater is restarted, likely during upgrades; secondly, it uses multi-threaded code which is hard to debug and maintain.
									Node:
									(type) c
									(layer)3
										Element:p
											Given that Repeater was not performing one of its fundamental operations consistently, and RabbitMQ is better suited for durable queues, we decided to replace the internal priority queue with a simple queue on RabbitMQ. We also replaced the pool of workers with a newer version of Sparkplug which supports multiple processes out of the box. In the new implementation, Repeater attempts to post…
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											Value Fun: The FreshBooks Hack Off
									Node:
									(type) c
									(layer)3
										Element:p
											By Corey on February 11th, 2011
									Node:
									(type) c
									(layer)3
										Element:p
											We’re pretty busy at FreshBooks. Like lots of companies; there’s always a ton of work to do, and sometimes it can be hard to keep your eye on the longer-term goals.
									Node:
									(type) c
									(layer)3
										Element:p
											Having fun, for example.
									Node:
									(type) c
									(layer)3
										Element:p
											We value fun at FreshBooks — people do their best work when they’re engaged and excited, but it can be hard to maintain that spirit in the midst of all the day-to-day work that needs doing. So we’re always looking for ways to keep things fun, to break up the ongoing work and give the creative people who make up this team a chance to stretch their skills and show off a little bit in front of their colleagues.
									Node:
									(type) c
									(layer)3
										Element:p
											We call it a “Hack Off”.
									Node:
									(type) c
									(layer)3
										Element:p
											They’re usually once a month, on a Friday (cause, you know, Fridays are good for this sort of thing). Developers are asked to stop working on whatever features or fixes they’ve got on their plates for the current release (we deploy to production every two weeks), and instead spend the day working on….
									Node:
									(type) c
									(layer)3
										Element:p
											Whatever they want. Anything is fair game — the only caveat is that they are expected to show whatever they’ve been working on to the rest of…
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
										Element:a
											API changes for Jan 11, 2011: API on for everyone!
									Node:
									(type) c
									(layer)3
										Element:p
											By Shey Sewani on January 11th, 2011
									Node:
									(type) c
									(layer)3
										Element:p
											Santa’s late, but he still brought presents!
									Node:
									(type) c
									(layer)3
										Element:p
											First, API access is turned on for everyone! Customers no longer have to explicitly turn on their API. We hope that this simplifies support for our integration partners. In particular, this will immensely help those integrations using OAuth
									Node:
									(type) c
									(layer)3
										Element:p
											If you’re developing a Time Tracking application you’ll be happy to hear that the
										Element:a
											time_entry.list
											and
										Element:a
											time_entry.get
											now return a read-only ‘billed’ status field in their responses. Additionally, the time_entry API now respects the page and per_page parameters.
									Node:
									(type) c
									(layer)3
										Element:p
											Finally, the ‘status’ field is now ignored by the
										Element:a
											estimate.create
											and
										Element:a
											estimate.update
											methods.
									Node:
									(type) c
									(layer)3
										Element:p
											As always, if you’d like clarification on anything feel free to call or
										Element:a
											email us
											.
									Node:
									(type) c
									(layer)3
										Element:a
											Continue reading
									Node:
									(type) c
									(layer)3
										Element:a
											Newer Posts
									Node:
									(type) c
									(layer)3
										Element:a
											Older Posts
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Developer Stuff
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														API Overview
													Element:li
													Element:a
														Authentication
													Element:li
													Element:a
														Helper Libraries
													Element:li
													Element:a
														Application Billing
													Element:li
													Element:a
														Webhooks
													Element:li
													Element:a
														Developer Blog
													Element:a
													Element:img
													Element:li
													Element:a
														Developer Forum
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														API Calls
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Callbacks
													Element:li
													Element:a
														Categories
													Element:li
													Element:a
														Clients
													Element:li
													Element:a
														Estimates
													Element:li
													Element:a
														Expenses
													Element:li
													Element:a
														Gateway
													Element:li
													Element:a
														FreshBooks API Guide for Invoices
													Element:li
													Element:a
														Items
													Element:li
													Element:a
														Languages
													Element:li
													Element:a
														Payments
													Element:li
													Element:a
														Projects
													Element:li
													Element:a
														Receipts
													Element:li
													Element:a
														Recurring
													Element:li
													Element:a
														Staff
													Element:li
													Element:a
														System
													Element:li
													Element:a
														Tasks
													Element:li
													Element:a
														Taxes
													Element:li
													Element:a
														Time Entries
													Element:li
													Element:a
														Contractors
													Element:li
													Element:a
														Default Terms
													Element:li
													Element:a
														Reports
													Element:li
													Element:a
														Currency
													Element:li
													Element:a
														Email Templates
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Resources
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Sample Code
													Element:li
													Element:a
														Developer Tips
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Tour FreshBooks
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														Online Invoicing
													Element:li
													Element:a
														Time Tracking
													Element:li
													Element:a
														Client Estimates
													Element:li
													Element:a
														Expense Tracking
												Node:
												(type) c
												(layer)4
													Element:footer
													Element:a
													Element:img
													Element:img
													Element:p
														FreshBooks, 1655 Dupont St. Suite 250, Toronto, ON M6P 3T1 Canada
													Element:p
														Copyright © 2000-2017 FreshBooks is a service of 2ndSite Inc. All rights reserved.
													Element:p
													Element:a
														Security Safeguards
														|
													Element:a
														Terms of Service
														|
													Element:a
														Privacy Policy
												Node:
												(type) c
												(layer)4
													Element:img
