Node:
(type) c
(layer)0
	Element:article
			Node:
			(type) h1
			(layer)1
				Element:h1
					Rapt Media Player API
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Overview
						Node:
						(type) c
						(layer)2
							Element:p
								The Rapt Media Player API is organized as a JavaScript plugin that, when paired with a Rapt Media Video project*, allows developers to extend their interactive experiences into their custom applications or websites.
						Node:
						(type) c
						(layer)2
							Element:p
								The API handles secure delivery of video playback status, custom events and link-outs, and the ability to manage video playback between your asset and the Rapt Media Player. With creative use of the API alongside the Rapt Media Interactive Video project editor, teams have access to exponentially more possibilities for delivering engaging experiences across their brand’s channels.
						Node:
						(type) c
						(layer)2
							Element:p
								The following guide will get you started on integrating your project with basic API usage, details about individual API methods and events, and a collection of sample projects and tutorials for getting a full idea of the scope of the plugin.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:small
								*Projects must have the Rapt Media Player API permissions enabled in order to send and receive events to the video player.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Quickstart
						Node:
						(type) c
						(layer)2
							Element:p
								This section is intended to get your project integrated and running with the Rapt Media Player API as quickly as possible. This is intended for readers who have at least a basic understanding of JavaScript and web programming.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Source Code
									Node:
									(type) c
									(layer)3
										Element:p
											Source code is distributed via JavaScript file that you should include in your markup. We recommend referencing the
										Element:a
											current version
											from our CDN:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											<script src="https://cdn1.raptmedia.com/system/scripts/api.v2.min.js.gz"></script>
									Node:
									(type) c
									(layer)3
										Element:p
											Alternate versions of the API are available to suit your needs:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											api.v2.nojq.min.js – does not include a namespace-safe version of jQuery and relies on you supplying one. Note: the Rapt Media API was written to be compatible with jQuery 1.11.1.
										Element:li
											api.v2.jq.min.js – includes a non-namespace-safe jQuery so you don’t have to provide one yourself.
									Node:
									(type) c
									(layer)3
										Element:p
											Additionally, all the above versions have a gzipped version which simply have a ‘.gz’ extension at the end.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Hello Rapt!
									Node:
									(type) c
									(layer)3
										Element:p
											Before jumping into basic examples of usage for the API, it is important to understand the intialization steps that the player API must go through to allow communication with the player.
									Node:
									(type) c
									(layer)3
										Element:p
											The basic requirement is that the expected playback iframe be registered with the Rapt player API before making requests to the player through the API commands. By default, all iframes already on the DOM during page initialization are registered by the Rapt API. In more complicated workflows with dynamic iframes or multiple iframes, extra steps may be needed.
									Node:
									(type) c
									(layer)3
										Element:p
											The following example is for the most common API usage example, with other code samples for the more complicated workflows in the advanced intialization section.
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
										Element:span
											<!DOCTYPE html>
										Element:span
											<html>
										Element:span
											<head>
										Element:span
											<title>
											Hello Rapt!
										Element:span
											</title>
										Element:span
											<script
										Element:span
											src=
										Element:span
											"http://code.jquery.com/jquery-1.11.1.js"
										Element:span
											></script>
										Element:span
											<script
										Element:span
											src=
										Element:span
											"https://cdn1.raptmedia.com/system/scripts/api.v2.min.js.gz"
										Element:span
											></script>
										Element:span
											</head>
										Element:span
											<body>
										Element:span
											<iframe
										Element:span
											name=
										Element:span
											"hello-rapt"
										Element:span
											src=
										Element:span
											"http://cdn1.raptmedia.com/projects/YOUR_PROJECT_SHARE_ID/embed?autoplay=false&controls=overlay"
										Element:span
											width=
										Element:span
											720
										Element:span
											height=
										Element:span
											405
										Element:span
											scrolling=
										Element:span
											no
										Element:span
											frameborder=
										Element:span
											0
										Element:span
											marginheight=
										Element:span
											0
										Element:span
											marginwidth=
										Element:span
											0
										Element:span
											webkitallowfullscreen=
										Element:span
											true
										Element:span
											mozallowfullscreen=
										Element:span
											true
										Element:span
											allowfullscreen=
										Element:span
											true
										Element:span
											>
											Iframes are required to view this content
										Element:span
											</iframe>
										Element:span
											<script
										Element:span
											type=
										Element:span
											"text/javascript"
										Element:span
											>
										Element:span
											raptor
										Element:span
											.
										Element:span
											api
										Element:span
											.
										Element:span
											on
										Element:span
											(
										Element:span
											"ready"
										Element:span
											,
										Element:span
											function
										Element:span
											(
										Element:span
											event
										Element:span
											,
										Element:span
											frame
										Element:span
											){
										Element:span
											frame
										Element:span
											.
										Element:span
											onload
										Element:span
											=
										Element:span
											function
										Element:span
											(){
										Element:span
											raptor
										Element:span
											.
										Element:span
											api
										Element:span
											.
										Element:span
											launch
										Element:span
											(
										Element:span
											frame
										Element:span
											.
										Element:span
											name
										Element:span
											);
										Element:span
											}
										Element:span
											});
										Element:span
											raptor
										Element:span
											.
										Element:span
											api
										Element:span
											.
										Element:span
											on
										Element:span
											(
										Element:span
											"inboundReady"
										Element:span
											,
										Element:span
											function
										Element:span
											(
										Element:span
											event
										Element:span
											,
										Element:span
											data
										Element:span
											){
										Element:span
											console
										Element:span
											.
										Element:span
											log
										Element:span
											(
										Element:span
											"inbound commands ready"
										Element:span
											);
										Element:span
											});
										Element:span
											</script>
										Element:span
											</body>
										Element:span
											</html>
									Node:
									(type) c
									(layer)3
										Element:p
											The above example creates a Rapt Media embedded video player and prepares the video player to communicate via the API.
									Node:
									(type) c
									(layer)3
										Element:p
											A few items to note:
									Node:
									(type) c
									(layer)3
										Element:ol
										Element:li
										Element:p
											Include the Rapt Media Player API via the script tag in the head of the document. (We also include jQuery for simplicity of subsequent examples)
										Element:li
										Element:p
											Create an iframe tag embedding your project in the body of the document. (The same tag that is provided in your Rapt Media publishing panel for a project)
										Element:li
										Element:p
											Upon loading the document, the API registers a collection of the iframe tags available on the page and then triggers a “ready” event for each iframe tag present.
										Element:li
										Element:p
											In the “ready” event handler, the response “el” is a reference to the iframe that is being triggered as “ready”. In our example, we are setting an onload handler for the iframe to “launch” the API. “Launch” will wrap a few initialization steps for the developer, including: setting the default framename (since this page only has one Rapt player present), and automatically calling the raptor.api.load() method which readies the Rapt player for playback.
										Element:li
										Element:p
											After the specified player frame is launched, “inboundReady”, will be sent from the API signaling that the player is initialized and ready to accept further API commands.
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Advanced intialization
						Node:
						(type) c
						(layer)2
							Element:p
								In some unique cases, the developer may have constraints that do not allow the Rapt player iframe embed to be present on the DOM during page initialization. For example: with other player integrations or websites/applications with more interactive interfaces, it may be neccessary to create the Rapt embed iframe at runtime instead of intialization.
						Node:
						(type) c
						(layer)2
							Element:p
								The following examples highlight two common alternatives for handling the situation described above.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Initialize frame manually
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
										Element:span
											<!DOCTYPE html>
										Element:span
											<html>
										Element:span
											<head>
										Element:span
											<title>
											Hello Rapt!
										Element:span
											</title>
										Element:span
											<script
										Element:span
											src=
										Element:span
											"http://code.jquery.com/jquery-1.11.1.js"
										Element:span
											></script>
										Element:span
											<script
										Element:span
											src=
										Element:span
											"https://cdn1.raptmedia.com/system/scripts/api.v2.min.js.gz"
										Element:span
											></script>
										Element:span
											</head>
										Element:span
											<body>
										Element:span
											<div
										Element:span
											id=
										Element:span
											"player-container"
										Element:span
											></div>
										Element:span
											<script
										Element:span
											type=
										Element:span
											"text/javascript"
										Element:span
											>
										Element:span
											var
										Element:span
											playerFrame
										Element:span
											=
										Element:span
											document
										Element:span
											.
										Element:span
											createElement
										Element:span
											(
										Element:span
											"iframe"
										Element:span
											);
										Element:span
											playerFrame
										Element:span
											.
										Element:span
											setAttribute
										Element:span
											(
										Element:span
											"src"
										Element:span
											,
										Element:span
											"http://cdn1.raptmedia.com/projects/YOUR_PROJECT_SHARE_ID/embed?autoplay=false&controls=overlay"
										Element:span
											);
										Element:span
											playerFrame
										Element:span
											.
										Element:span
											width
										Element:span
											=
										Element:span
											720
										Element:span
											;
										Element:span
											playerFrame
										Element:span
											.
										Element:span
											height
										Element:span
											=
										Element:span
											405
										Element:span
											;
										Element:span
											playerFrame
										Element:span
											.
										Element:span
											name
										Element:span
											=
										Element:span
											"dynamicPlayerFrame"
										Element:span
											;
										Element:span
											playerFrame
										Element:span
											.
										Element:span
											onload
										Element:span
											=
										Element:span
											function
										Element:span
											(){
										Element:span
											raptor
										Element:span
											.
										Element:span
											api
										Element:span
											.
										Element:span
											launch
										Element:span
											(
										Element:span
											playerFrame
										Element:span
											.
										Element:span
											name
										Element:span
											)
										Element:span
											};
										Element:span
											$
										Element:span
											(
										Element:span
											"#player_container"
										Element:span
											).
										Element:span
											append
										Element:span
											(
										Element:span
											playerFrame
										Element:span
											);
										Element:span
											raptor
										Element:span
											.
										Element:span
											api
										Element:span
											.
										Element:span
											initByIframe
										Element:span
											(
										Element:span
											playerFrame
										Element:span
											);
										Element:span
											raptor
										Element:span
											.
										Element:span
											api
										Element:span
											.
										Element:span
											on
										Element:span
											(
										Element:span
											"inboundReady"
										Element:span
											,
										Element:span
											function
										Element:span
											(
										Element:span
											event
										Element:span
											,
										Element:span
											data
										Element:span
											){
										Element:span
											console
										Element:span
											.
										Element:span
											log
										Element:span
											(
										Element:span
											"inbound commands ready"
										Element:span
											);
										Element:span
											});
										Element:span
											</script>
										Element:span
											</body>
										Element:span
											</html>
									Node:
									(type) c
									(layer)3
										Element:p
											The above snippet appends an iframe to the DOM after it has already been loaded, then registers the iframe with the Rapt API.
									Node:
									(type) c
									(layer)3
										Element:p
											A few items to note:
									Node:
									(type) c
									(layer)3
										Element:ol
										Element:li
										Element:p
											It is important that the iframe name attribute is set BEFORE the iframe is appended to the page. It is important that iframe names are not changed after they have been loaded into the DOM, to ensure the browser’s “window.frames” collection has the correct frame name as an index.
										Element:li
										Element:p
											The “raptor.api.initByIframe” method registers the newly added iframe with the player API. This method expects an object/element reference to an iframe.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Initialize frame via project
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
										Element:span
											<!DOCTYPE html>
										Element:span
											<html>
										Element:span
											<head>
										Element:span
											<title>
											Hello Rapt!
										Element:span
											</title>
										Element:span
											<script
										Element:span
											src=
										Element:span
											"http://code.jquery.com/jquery-1.11.1.js"
										Element:span
											></script>
										Element:span
											<script
										Element:span
											src=
										Element:span
											"https://cdn1.raptmedia.com/system/scripts/api.v2.min.js.gz"
										Element:span
											></script>
										Element:span
											</head>
										Element:span
											<body>
										Element:span
											<div
										Element:span
											id=
										Element:span
											"player-container"
										Element:span
											></div>
										Element:span
											<script
										Element:span
											type=
										Element:span
											"text/javascript"
										Element:span
											>
										Element:span
											raptor
										Element:span
											.
										Element:span
											api
										Element:span
											.
										Element:span
											initByProject
										Element:span
											(
										Element:span
											"#player_container"
										Element:span
											,
										Element:span
											"YOUR_PROJECT_URL_ID"
										Element:span
											,
										Element:span
											{
										Element:span
											name
										Element:span
											:
										Element:span
											"dynamicPlayerFrame"
										Element:span
											,
										Element:span
											params
										Element:span
											:
										Element:span
											{},
										Element:span
											secure
										Element:span
											:
										Element:span
											true
										Element:span
											,
										Element:span
											onload
										Element:span
											:
										Element:span
											function
										Element:span
											(){
										Element:span
											raptor
										Element:span
											.
										Element:span
											api
										Element:span
											.
										Element:span
											launch
										Element:span
											(
										Element:span
											"dynamicPlayerFrame"
										Element:span
											)}
										Element:span
											});
										Element:span
											raptor
										Element:span
											.
										Element:span
											api
										Element:span
											.
										Element:span
											on
										Element:span
											(
										Element:span
											"inboundReady"
										Element:span
											,
										Element:span
											function
										Element:span
											(
										Element:span
											event
										Element:span
											,
										Element:span
											data
										Element:span
											){
										Element:span
											console
										Element:span
											.
										Element:span
											log
										Element:span
											(
										Element:span
											"inbound commands ready"
										Element:span
											);
										Element:span
											});
										Element:span
											</script>
										Element:span
											</body>
										Element:span
											</html>
									Node:
									(type) c
									(layer)3
										Element:p
											The above snippet uses the Rapt API to intialize and append a player iframe that is already registered with the API.
									Node:
									(type) c
									(layer)3
										Element:p
											A few items to note:
									Node:
									(type) c
									(layer)3
										Element:ol
										Element:li
										Element:p
											The “raptor.api.initByProject” method expects an element selector, project URL ID, and attributes that an iframe would normally expect (eg: onload, name, fullscreen, etc).
										Element:li
										Element:p
											Setting
										Element:code
											secure: true
											serves the project over https
										Element:li
										Element:p
											URL parameters can be passed in through the params object. Options include:
										Element:ul
										Element:li
										Element:code
											controls: overlay
											(default) - sets the controls to display over the bottom of the video
										Element:li
										Element:code
											controls: below
											- sets the controls to display under the video
										Element:li
										Element:code
											autoplay: false
											(default) - sets the video to require user action to begin playback
										Element:li
										Element:code
											autoplay: true
											- sets the video to automatically play on desktop devices
										Element:li
										Element:code
											no_controls: true
											- sets the controls to hidden
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Player interaction
						Node:
						(type) c
						(layer)2
							Element:p
								Now that our player is initialized, we can fire off API commands and listen for events in order to create our own custom interactive/site-pairing experiences. The possibilities here are somewhat endless, and this section will aim to describe the basics of player interaction so you can dream up your own creative use of the Rapt Media platform.
						Node:
						(type) c
						(layer)2
							Element:p
								The main communication between your app and the Rapt Media Player happens through two main concepts, which are analogous to a typical JavaScript-based plugin:
						Node:
						(type) c
						(layer)2
							Element:ol
							Element:li
							Element:p
								Functions that communicate messages to the player or return status about the player.
							Element:li
							Element:p
								Events that report back on current playback and custom timed/user-driven events.
						Node:
						(type) c
						(layer)2
							Element:p
								The video player is largely driven by calling functions on the raptor.api object that we referenced in the previous example. Generally, these functions require no arguments assuming a default iframe has already been set.*
						Node:
						(type) c
						(layer)2
							Element:p
								For the following example, let’s assume we are building a super cool, innovative shopping experience that plays specific video nodes based on what item is currently selected on our online catalog:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								var selectedRaptNode; //Start node playback when item is clicked $(“.shopping-list-item”).on(“click”, function(){ selectedRaptNode = $(this).data(“node”); raptor.api.setNode(selectedRaptNode); raptor.api.play(); });
						Node:
						(type) c
						(layer)2
							Element:p
								But we can’t stop there; let’s make our experience even more valuable for our shopper and give them a coupon code for reaching the end of the video to reward them for their commitment to product discovery!
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								//Display custom coupon code for reaching the end of the current product video raptor.api.on(“clipEnd”, function(event, data){ if (raptor.api.state().id == selectedRaptNode){ $(“#innovative-coupon-display”).text(generateSweetCouponCode()); } });
						Node:
						(type) c
						(layer)2
							Element:p
								We could also improve our example by instantiating the on “clipEnd” handler during the click event and removing the handler with raptor.api.off. Although simplistic in nature, we hope these examples shed light on the type of site-pairing that can be accomplished with our API.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:small
								*The methods will also accept a frame name should you not have the “defaultIFrame” set to a value. This would be useful where you have multiple video player embed frames on one page.
						Node:
						(type) c
						(layer)2
							Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Methods
						Node:
						(type) c
						(layer)2
							Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.settings(
										Element:em
											settingName, value
											)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														settingName
														: required
													Element:ul
													Element:li
														Currently the only setting needed is “defaultIFrame,” which defaults all other function calls to the default iframe once set
													Element:li
													Element:strong
														value
														: required
													Element:ul
													Element:li
														String or iframe object to be set as the default iframe
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method handles configuration of settings for the API.
												Node:
												(type) c
												(layer)4
													Element:p
														This function is depreciated and can be ignored when using any of the initialization methods outlined earlier in this documentation.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.on("ready", function(event, frame){ raptor.settings("defaultIFrame", frame.name) }); </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.load(frameName)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														frameName
														: optional
													Element:ul
													Element:li
														String that represents name of frame to call the load action on. Optional unless default iframe not set
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method loads the Rapt Media Player on behalf of the user, counting as a play. Useful for when the project state needs to be initialized a certain way and autoplay or a user simply clicking the play button is inadequate.
												Node:
												(type) c
												(layer)4
													Element:p
														This function is depreciated and can be ignored when using any of the initialization methods outlined earlier in this documentation.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.on("ready", function(event, frame){ raptor.settings("defaultIFrame", frame.name) raptor.api.load() }); </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.initByIframe(iframe)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														iframe
														: required
													Element:ul
													Element:li
														Should be an JS object referencing the iframe element you want to initialize.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method is used for registering a Rapt Media embed iframe that has been loaded dynamically after page load.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> var playerFrame = document.createElement("iframe"); playerFrame.setAttribute("src", "http://cdn1.raptmedia.com/projects/YOUR_PROJECT_SHARE_ID/embed?autoplay=false&controls=overlay"); playerFrame.width = 720; playerFrame.height = 405; playerFrame.name = "dynamicPlayerFrame"; playerFrame.onload = function(){ raptor.api.launch(playerFrame.name) }; $("#player_container").append(playerFrame); raptor.api.initByIframe(playerFrame); </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.initByProject(selector, urlId, options)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														selector
														: required
													Element:ul
													Element:li
														Should be a string representing a jQuery valid element selector.
													Element:li
													Element:strong
														urlId
														: required
													Element:ul
													Element:li
														Should be a string representing the URL ID for your project.
													Element:li
													Element:strong
														options
														: optional
													Element:ul
													Element:li
														A JSON object with key value pairs representing expected iframe options (such as: name, onload, width, height) with more granular attributes such as fullscreen, marginheight, frameborder, etc, nested in an “attributes” key.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method is used for initializing and registering a new Rapt Media embed iframe using a project URL ID.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.initByProject("#selector", "YOUR_PROJECT_URL_ID", { name: "dynamicPlayerFrame", onload: function(){ raptor.api.launch("dynamicPlayerFrame")} }); </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.play(frameName)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														frameName
														: optional
													Element:ul
													Element:li
														String that represents name of frame to call the play action on. Optional unless default iframe not set
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method starts playback of current media/node for the Rapt Media Player.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.play() </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.pause(frameName)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														frameName
														: optional
													Element:ul
													Element:li
														String that represents name of frame to call the pause action on. Optional unless default iframe not setVolume
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method pauses playback of current media/node for the Rapt Media Player
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.pause() </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.setVolume(data, frameName)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														data
														: required
													Element:ul
													Element:li
														Float representing volume level, 0.00 - 1.00
													Element:li
													Element:strong
														frameName
														: optional
													Element:ul
													Element:li
														String that represents name of frame to call the setVolume action. Optional unless default iframe not set
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method sets the volume for the Rapt Media Player
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.setVolume(1.00) </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.setMute(data, frameName)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														data
														: required
													Element:ul
													Element:li
														Boolean value representing mute state, true/false
													Element:li
													Element:strong
														frameName
														: optional
													Element:ul
													Element:li
														String that represents name of frame to call the setMute action. Optional unless default iframe not set
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method handles muting for the Rapt Media Player
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.setMute(true) </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.setTime(data, frameName)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														data
														: required
													Element:ul
													Element:li
														Float value representing desired playback time (in seconds) for current media/node
													Element:li
													Element:strong
														frameName
														: optional
													Element:ul
													Element:li
														String that represents name of frame to call the setTime action on. Optional unless default iframe not set
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method sets player to desired playback time for current media/node for the Rapt Media Player
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.setTime(42.0) </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.setTimePercentage(data, frameName)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														data
														: required
													Element:ul
													Element:li
														Float representing desired percentage of current playback time for current media/node, 0.00 - 1.00
													Element:li
													Element:strong
														frameName
														: optional
													Element:ul
													Element:li
														String that represents name of frame to call setTimePercentage action on, Optional unless default iframe not set
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method sets player to desired playback time based on given percentage of playback for current media/node for the Rapt Media Player
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.setTimePercentage(0.75) </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.prefetchNode(data, frameName)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														data
														: required
													Element:ul
													Element:li
														String representing desired Node ID to be pre-loaded in the Rapt Media Player
													Element:li
													Element:strong
														frameName
														: optional
													Element:ul
													Element:li
														String that represents name of frame to call the prefetchNode action on. Optional unless default iframe not set
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method handles preloading of media for a desired node. For example, normal project structures for a Rapt Media Project would have nodes laid out in a way that media is constantly being pre-loaded for the next node. When using more complicated API implementations, with a nontraditional project structure, you may need to make use of prefetchNode before calling setNode. This will avoid interruptions in the user experience waiting on new node media to load.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.prefetchNode("12321") </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.prefetchNodeByName(data, frameName)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														data
														: required
													Element:ul
													Element:li
														String representing desired Node Name to be pre-loaded in the Rapt Media Player
													Element:li
													Element:strong
														frameName
														: optional
													Element:ul
													Element:li
														String that represents name of frame to call the prefetchNodeByName action on. Optional unless default iframe not set
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method handles preloading of media for a desired node. See previous function for more details. This method finds the first matching Node with the given name.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.prefetchNodeByName("Node 3") </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.setNode(data, frameName)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														data
														: required
													Element:ul
													Element:li
														String representing desired Node ID to be loaded in the Rapt Media Player
													Element:li
													Element:strong
														frameName
														: optional
													Element:ul
													Element:li
														String that represents name of frame to call the setNode action on. Optional unless default iframe not set
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method handles loading desired media/node as the current media in the Rapt Media Player
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.setNode("12321") </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.setNodeByName(data, frameName)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														data
														: required
													Element:ul
													Element:li
														String representing desired Node Name to be loaded in the Rapt Media Player
													Element:li
													Element:strong
														frameName
														: optional
													Element:ul
													Element:li
														String that represents name of frame to call the setNodeByName action on. Optional unless default iframe not set
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method handles loading desired media/node as the current media in the Rapt Media Player. This method finds the first matching Node with the given name.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.setNodeByName("Node 3") </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.ccTracks(frameName)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														frameName
														: optional
													Element:ul
													Element:li
														String that represents name of frame to call the ccTracks action on. Optional unless default iframe not set
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method returns array of currently available closed caption tracks for current player.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.ccTracks() //returns ["en", "ru", "es"] </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.setTrack(data, frameName)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														data
														: required
													Element:ul
													Element:li
														String representing desired closed-caption state. String must be a valid language code that is available to the current player (see: api.ccTracks). Passing “hide” to the function will turn off closed captioning for current player
													Element:li
													Element:strong
														frameName
														: optional
													Element:ul
													Element:li
														String that represents name of frame to call the setTrack action on. Optional unless default iframe not set
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method handles setting active closed caption for current media in the Rapt Media Player
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.setTrack("en"); //for english captions raptor.api.setTrack("hide"); //for no captions </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.isReady(frameName)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														frameName
														: optional
													Element:ul
													Element:li
														String that represents name of frame to get the ready state of. Optional unless default iframe not set
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method returns Boolean value representing if the API is ready to communicate with the Rapt Media Player
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.isReady() </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.state(frameName)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														frameName
														: optional
													Element:ul
													Element:li
														String that represents name of frame to get the current state of. Optional unless default iframe not set
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method returns JSON object representing current state and current node of the player.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.state() //returns // { // duration: 5.056, // id: 66, // isStart: false, // isTerminal: true, // muted: false, // name: "Node 5", // progressPercentage: 100, // progressTime: 5.056, // volume: 1 // } </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.nodes(frameName)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														frameName
														: optional
													Element:ul
													Element:li
														String that represents name of frame to return the collection of nodes for the frame given. Optional unless default iframe not set
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method returns hash of node IDs keyed by their names for a given embed frame
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.nodes() //returns {Node 1: "12345", Node X: "12346", Intro Node: "12347"} </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.on(event, callback)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														event
														: required
													Element:ul
													Element:li
														Desired event to register callback on
													Element:li
													Element:strong
														callback
														: required
													Element:ul
													Element:li
														Desired callback function to register to the desired event
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method sets callback handler for Rapt Media Player event, see events documentation for specific events that can be triggered
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.on("EVENT_NAME", function(event, data){ console.log("event happened: ", event); }); </script>
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											function raptor.api.off(event, callback)
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Arguments
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														event
														: required
													Element:ul
													Element:li
														Desired event to stop listening for
													Element:li
													Element:strong
														callback
														: required
													Element:ul
													Element:li
														Callback function to match for removing desired event handler
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Description
												Node:
												(type) c
												(layer)4
													Element:p
														Method removes event listener for specific callback
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Example
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<script type="text/javascript"> raptor.api.off("EVENT_NAME", function(event, data){ console.log("event happened: ", event); }); </script>
												Node:
												(type) c
												(layer)4
													Element:hr
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Events
						Node:
						(type) c
						(layer)2
							Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“button”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for button that was clicked
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media button is clicked
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“progress”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for media/node progress
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fires on predefined progress quadrants for the currently playing node/media
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“userTimed”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for the user-timed API event
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired for custom API event defined in the Rapt Media project editor. This specific userTimed event is only fired on the first play through of a node
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“userTimedRecurring”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for the user-timed API event
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired for custom API event defined in the Rapt Media project editor. This specific userTimed event is fired on event play through of a node
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“userTimedReversing”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for the user timed API event
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired for custom API event defined in the Rapt project editor. This specific userTimed event is fired when a user is scrubbing backward through a node
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“timeUpdate”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for basic player state
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired with regularity during playback to notify of player time changes
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“play”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for basic player state
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media Player begins playback
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“pause”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for basic player state
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media pause button is selected
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“clipSwitch”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for basic player state and indicates whether new clip is a start clip or terminal clip
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media Player switches current media/node
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“clipStart”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for basic player state and indicates whether new clip is a start clip or terminal clip
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media Player begins playback on new media/node
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“clipCanPlay”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for basic player state
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media Player node media has loaded enough data to be able to begin playback
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“clipWaiting”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for basic player state
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media Player node media is loading and waiting for more data
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“clipSuspended”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for basic player state
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media Player node media loading has suspended
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“clipStalled”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for basic player state
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media Player node media loading has stalled unexpectedly
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“clipEnd”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for basic player state
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media Player reaches end of media/node
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“projectStart”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for basic player state
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media Player starts initial playback on Rapt Media project
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“projectEnd”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for basic player state
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media Player reaches a terminal node on Rapt Media project
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“volume”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for basic player state, plus volume state
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media Player volume is changed
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“mute”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for basic player state, plus volume state
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media Player is muted
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“unmute”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for basic player state
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media Player is unmuted
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“fullscreen”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for basic player state
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media Player is toggled to full-screen mode
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“windowed”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for basic player state
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media Player is toggled back to windowed mode
									Node:
									(type) c
									(layer)3
										Element:hr
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											“error”
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Data Payload
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Returns JSON data for the encountered media error
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Description
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Event fired when Rapt Media Player encounters an HTML5 media error
