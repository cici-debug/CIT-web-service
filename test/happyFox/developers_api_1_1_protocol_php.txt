Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Request Methods
			Node:
			(type) c
			(layer)1
				Element:p
					The following HTTP methods are used to perform operations on resources provided by the API.
			Node:
			(type) c
			(layer)1
				Element:p
					NOTE: not all resources support all the listed operations, see the documentation of each resource for the supported methods
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:td
				Element:b
					HTTP Method
				Element:td
				Element:b
					Operation
				Element:tr
				Element:td
					GET
				Element:td
					Retrieve a element or list of elements
				Element:tr
				Element:td
					POST
				Element:td
					Create a new element or a child entry in a element
				Element:tr
				Element:td
					PUT
				Element:td
					Update a element
				Element:tr
				Element:td
					DELETE
				Element:td
					Delete a element
			Node:
			(type) h1
			(layer)1
				Element:h1
					Request Content Types
			Node:
			(type) c
			(layer)1
				Element:p
					The following data formats are supported by the API server when data is sent to it for POST and PUT operations. Any of the data formats can be used provided the correct Content-Type is set in the HTTP request header.
			Node:
			(type) c
			(layer)1
				Element:p
					NOTE: file uploads are only supported with Multipart Form Data.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:td
				Element:b
					RequestFormat
				Element:td
				Element:b
					Content-Type
				Element:td
				Element:b
					FileUpload
				Element:tr
				Element:td
					JSON
				Element:td
					application/json
				Element:td
					NO
				Element:tr
				Element:td
					Form Urlencoded
				Element:td
					application/x-www-form-urlencoded
				Element:td
					NO
				Element:tr
				Element:td
					Multipart Form Data
				Element:td
					multipart/form-data
				Element:td
					YES
			Node:
			(type) h1
			(layer)1
				Element:h1
					Response Content Types
			Node:
			(type) c
			(layer)1
				Element:p
					The following data formats are supported for response data sent back by the API server. The required data format is specified as the <response_format> mentioned under Resource URIs.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:td
				Element:b
					Response Format
				Element:td
				Element:b
					Specified in URI as
				Element:td
				Element:b
					Response Content-Type
				Element:tr
				Element:td
					JSON
				Element:td
					json
				Element:td
					application/json
			Node:
			(type) h1
			(layer)1
				Element:h1
					Data Types
			Node:
			(type) c
			(layer)1
				Element:p
					These are the basic data types that are used in the API. Using these types more complex data structures for the resources are built.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:td
				Element:b
					Type
				Element:td
				Element:b
					Description
				Element:tr
				Element:td
					String
				Element:td
					String type with Unicode support
				Element:tr
				Element:td
					Integer
				Element:td
					Signed 64 bit integral number
				Element:tr
				Element:td
					ID
				Element:td
					Special type of Integer with minimum value 1, Will be unique within each resource type
				Element:tr
				Element:td
					Float
				Element:td
					Floating point number
				Element:tr
				Element:td
					Boolean
				Element:td
					True/False type
				Element:tr
				Element:td
					DateTime
				Element:td
					Combined date and time in the ISO 8601 extended format of YYYY-MM-DD HH:MM:SS.ssssss
				Element:br
				Element:span
				Element:b
					NOTES:
				Element:ol
				Element:li
					All DateTime values in the API are in UTC timezone
				Element:li
					The decimal part represented by ssssss is optional
				Element:li
					A space separator is used between the date and time values
				Element:tr
				Element:td
					Date
				Element:td
				Element:a
					Date in the ISO 8601 extended format of YYYY-MM-DD
				Element:br
				Element:span
				Element:b
					NOTE
					: all Date values in the API are inUTC timezone
			Node:
			(type) h1
			(layer)1
				Element:h1
					NULL Values
			Node:
			(type) c
			(layer)1
				Element:p
					Some of the fields in a resource may be optional or currently absent . The values of these fields are represented as a special NULL value. This value maps to corresponding equivalents in the data formats as listed below.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:td
				Element:b
					Response Format
				Element:td
				Element:b
					NULL Value Representation
				Element:tr
				Element:td
					JSON
				Element:td
					null
			Node:
			(type) h1
			(layer)1
				Element:h1
					Paginated Lists for Collection Resources
			Node:
			(type) c
			(layer)1
				Element:p
					Some of the collection resources provided by the API may return a large volume of elements. In these cases the API imposes a upper limit on the number elements that can be returned in a single collection read request.
			Node:
			(type) c
			(layer)1
				Element:p
					By specifying a page size (lesser than or equal to the upper limit) and a corresponding page number as URL parameters, the collection can be split the into a smaller number of elements and progressively retrieved from the API server.
			Node:
			(type) c
			(layer)1
				Element:p
					The response from the API server contains information about the page split and the actual data as described below.
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											URL Parameters
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tr
										Element:td
										Element:b
											Field
										Element:td
										Element:b
											Type
										Element:td
										Element:b
											Description
										Element:tr
										Element:td
											size
										Element:td
											Integer
										Element:td
											The number of items per page (limited to the maximum defined for the particular collection resource)
										Element:tr
										Element:td
											page
										Element:td
											Integer
										Element:td
											The number of the page required
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Paginated List - Response Data Structure
									Node:
									(type) c
									(layer)3
										Element:p
											This data structure contains information and data from the paginated list.
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tr
										Element:td
										Element:b
											Field
										Element:td
										Element:b
											Type
										Element:td
										Element:b
											Description
										Element:tr
										Element:td
											page_info
										Element:td
											Page Info
										Element:td
											Information about the pagination
										Element:tr
										Element:td
											data
										Element:td
											List of Elements
										Element:td
											The list of elements retrieved from the collection
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Page Info - Inner Data Structure
									Node:
									(type) c
									(layer)3
										Element:p
											This inner data structure is used in the "page_info" field of a Paginated List.
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tr
										Element:td
										Element:b
											Field
										Element:td
										Element:b
											Type
										Element:td
										Element:b
											Description
										Element:tr
										Element:td
											count
										Element:td
											Integer
										Element:td
											Number of elements returned
										Element:tr
										Element:td
											start_index
										Element:td
											Integer
										Element:td
											The index of the first element in the returned subset
										Element:tr
										Element:td
											end_index
										Element:td
											Integer
										Element:td
											The index of the last element in the returned subset
										Element:tr
										Element:td
											last_index
										Element:td
											Integer
										Element:td
											The index of the last element in the entire collection
										Element:tr
										Element:td
											page_count
										Element:td
											Integer
										Element:td
											Number of pages for the given page size
			Node:
			(type) h1
			(layer)1
				Element:h1
					Data Validation Errors
			Node:
			(type) c
			(layer)1
				Element:p
					The API server performs validation on the data submitted via POST and PUT requests. In case the data validation fails, the API server returns HTTP response code 400 along with error information in the response body.
			Node:
			(type) c
			(layer)1
				Element:p
					The error information response data is a List of Field Errors that contains information about data validation errors in individual fields as well as any errors that apply to the entire request (like errors that are not dependent on individual fields).
			Node:
			(type) c
			(layer)1
				Element:h3
					Field Errors - Response Data Structure
			Node:
			(type) c
			(layer)1
				Element:p
					This data structure contains the field name and the list of errors messages for the field.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:td
				Element:b
					Field
				Element:td
				Element:b
					Type
				Element:td
				Element:b
					Description
				Element:tr
				Element:td
					field
				Element:td
					String
				Element:td
					The name of the field. (For errors that pertain to the entire request and not to a particular field, the field name will be "__all__")
				Element:tr
				Element:td
					errors
				Element:td
					List of String
				Element:td
					One or more errors related to the field value
