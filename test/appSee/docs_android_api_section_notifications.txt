Node:
(type) c
(layer)0
	Element:body
						Node:
						(type) h2
						(layer)2
							Element:h2
								SDK Documentation
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:aside
													Element:h4
														Home
													Element:ul
													Element:li
													Element:a
													Element:i
														Index
													Element:h4
														iOS
													Element:ul
													Element:li
													Element:a
													Element:i
														API Reference
													Element:li
													Element:a
													Element:i
														Integration Guide
													Element:ul
													Element:li
													Element:a
													Element:img
														Native (UIKit)
													Element:li
													Element:a
													Element:img
														PhoneGap
													Element:li
													Element:a
													Element:img
														Cordova
													Element:li
													Element:a
													Element:img
														Ionic
													Element:li
													Element:a
													Element:img
														Xamarin
													Element:li
													Element:a
													Element:img
														Appcelerator
													Element:li
													Element:a
													Element:img
														React Native
													Element:li
													Element:a
													Element:img
														Adobe AIR
													Element:li
													Element:a
													Element:img
														OpenGL
													Element:li
													Element:a
													Element:img
														Cocos2d
													Element:li
													Element:a
													Element:img
														Cocos2d-x
													Element:li
													Element:a
													Element:img
														Sparrow
													Element:li
													Element:a
													Element:img
														Unity
													Element:li
													Element:a
													Element:img
														RubyMotion
													Element:h4
														Android
													Element:ul
													Element:li
													Element:a
													Element:i
														API Reference
													Element:li
													Element:a
													Element:i
														Integration Guide
													Element:ul
													Element:li
													Element:a
													Element:img
														Native
													Element:li
													Element:a
													Element:img
														PhoneGap
													Element:li
													Element:a
													Element:img
														Cordova
													Element:li
													Element:a
													Element:img
														Ionic
													Element:li
													Element:a
													Element:img
														React Native
													Element:li
													Element:a
													Element:img
														Xamarin
													Element:li
													Element:a
													Element:img
														Appcelerator
													Element:li
													Element:a
													Element:img
														OpenGL ES (Beta)
													Element:li
													Element:a
													Element:img
														Adobe AIR
													Element:li
													Element:a
													Element:img
														Cocos2d-x (Beta)
													Element:h4
														Server API
													Element:ul
													Element:li
													Element:a
													Element:i
														Server API Reference
													Element:h4
														Integrations
													Element:ul
													Element:li
													Element:a
													Element:i
														3rd Party Integrations
													Element:br
													Element:br
													Element:br
						Node:
						(type) h2
						(layer)2
							Element:h2
								Android SDK API Reference
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:a
														The
													Element:h4
													Element:strong
													Element:i
														Starting Appsee Tracking
												Node:
												(type) c
												(layer)4
													Element:b
														start
														call will initiate session tracking by the Appsee SDK. Please notice that
												Node:
												(type) c
												(layer)4
													Element:b
														start
														must be called on the app's main thread.
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Starts the Appsee agent for tracking the current session's data.
													Element:b
														void start(String apiKey)
												Node:
												(type) c
												(layer)4
													Element:b
														Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														apiKey
														: The API key of the current app
												Node:
												(type) c
												(layer)4
													Element:br
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:a
														You can control video recording using the following methods. The stop/pause/resume are optional and should be only called when you explicitly want to override this behavior:
													Element:h4
													Element:strong
													Element:i
														Controlling Video Recording
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Stops the current video (session tracking will continue). Usually, this method shouldn't be called unless you explicitly want to stop recording. A new video recording will begin when the app is launched to the foreground.
													Element:b
														void stop()
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Pause recording of the video. To resume, call 'resume'.
													Element:b
														void pause()
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Resume recording of the video.
													Element:b
														void resume()
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:a
														You can control the session lifetime and upload timing using the following methods. Note - by default, a session starts when the app is in the foreground, and finished when the app is minimized to the background or crashes. The following methods should only be called if you explicitly want to override this behavior. The
													Element:h4
													Element:strong
													Element:i
														Controlling Session Lifetime
												Node:
												(type) c
												(layer)4
													Element:a
														session lifetime notifications
														may also be useful for altering session lifetime.
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Stops the current session and uploads it (in the background). Usually, this method shouldn't be called unless you explicitly want to stop recording and force uploading at some point in your app, before the user minimizes it.
													Element:b
														void finishSession(boolean verifyBackground, boolean shouldUpload)
												Node:
												(type) c
												(layer)4
													Element:b
														Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														verifyBackground
														: Finish the session only if app is in background (pass 'false' unless you have a Voip app).
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														shouldUpload
														: Upload the session immediately, or wait until the app is in the background.
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Starts a new session (if not already running). Usually, this method shouldn't be called unless you explicitly want to start a new session at some point in your app, before it returns to foreground.
													Element:b
														void forceNewSession()
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Upload previous sessions. This method should not be called unless your app is never in the background and you want to upload sessions on the foreground.
													Element:b
														void upload()
												Node:
												(type) c
												(layer)4
													Element:hr
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:a
														You can add timed application events, such as reaching at a specific screen or level.
													Element:h4
													Element:strong
													Element:i
														Adding Application Events
												Node:
												(type) c
												(layer)4
													Element:br
														You will see these events in your dashboard along with the video, and you will be able to filter videos according to these events. Adding events is also useful for controlling which sessions are recorded, using a recording condition. For example: you can choose to record sessions of users which reached a specific level.
												Node:
												(type) c
												(layer)4
													Element:br
														These methods can be called any time after calling
												Node:
												(type) c
												(layer)4
													Element:b
														start()
														.
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Add a timed application event (such as: user reached a specific level or screen).
													Element:b
														void addEvent(String eventName)
												Node:
												(type) c
												(layer)4
													Element:b
														Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														eventName
														: The name of the event (ie: "InAppPurchase").
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Add a timed application event (such as: user reached a specific level or screen) along with custom properties.
													Element:b
														void addEvent(String eventName, Map<String, Object> properties)
												Node:
												(type) c
												(layer)4
													Element:b
														Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														eventName
														: The name of the event (ie: "Level").
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														properties
														: Key-value pairs with custom properties for the event. Properties can only be Integer, Double, Float, String, Url, Boolean, or Date.
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:b
														Note:
														The total size of event name, property key and value should not exceed 300 bytes (per property). Strings are UTF-8 encoded. Properties that exceed this limit will be ignored.
												Node:
												(type) c
												(layer)4
													Element:br
														Property keys may not contain the dot ('.') or dollar ('$') signs - they will be trimmed. Code Example Adobe AIR PhoneGap Xamarin Appcelerator Java
												Node:
												(type) c
												(layer)4
													Element:code
														Appsee.addEvent("Purchase");
													Element:br
													Element:br
														Map<String, Object> props = new HashMap<String, Object>();
													Element:br
														props.put("ItemType", "Shoes");
													Element:br
														props.put("ItemModel", "Nike");
													Element:br
														props.put("Price", 3.2);
													Element:br
														props.put("PurchaseDate", new Date());
													Element:br
														Appsee.addEvent("Purchase", props);
													Element:br
												Node:
												(type) c
												(layer)4
													Element:code
														Appsee.AddEvent("Purchase");
													Element:br
													Element:br
														var props = new Dictionary<string, java.lang.object>();
													Element:br
														props.Add("ItemType", "Shoes");
													Element:br
														props.Add("ItemModel", "Nike");
													Element:br
														props.Add("Price", 3.2);
													Element:br
														props.Add("PurchaseDate", DateTime.Now());
													Element:br
														Appsee.AddEvent("Purchase", props);
													Element:br
												Node:
												(type) c
												(layer)4
													Element:code
														Appsee.addEvent("Purchase");
													Element:br
													Element:br
														Appsee.addEventWithProperties("Purchase", { "ItemType" : "Shoes",
													Element:br
														"ItemModel" : "Nike",
													Element:br
														"Price" : 3.2,
													Element:br
														"PurchaseDate" : new Date()});
												Node:
												(type) c
												(layer)4
													Element:code
														Appsee.addEvent("Purchase");
													Element:br
													Element:br
														Appsee.addEvent("Purchase", { "ItemType" : "Shoes",
													Element:br
														"ItemModel" : "Nike",
													Element:br
														"Price" : 3.2,
													Element:br
														"PurchaseDate" : new Date()});
												Node:
												(type) c
												(layer)4
													Element:code
														Appsee.addEvent("Purchase");
													Element:br
													Element:br
														var props = new Dictionary();
													Element:br
														props["ItemType"] = "Shoes";
													Element:br
														props["ItemModel"] = "Nike";
													Element:br
														props["Price"] = 3.2;
													Element:br
														props["PurchaseDate"] = new Date();
													Element:br
														Appsee.addEventWithProperties("Purchase", props);
													Element:br
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:a
														Appsee automatically detects the different screens in your app. However in some cases where screen detection is not available (for example in OpenGL apps) you can set screens manually.
													Element:h4
													Element:strong
													Element:i
														Setting Application Screens
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Mark the appearance starting time of a new screen. This method should be usually called from the activiry's onResume() method.
													Element:b
														void startScreen(String screenName)
												Node:
												(type) c
												(layer)4
													Element:b
														Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														screenName
														: The name of the screen (ie: "WelcomeScreen").
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:b
														Note:
														Screen name should not exceed 256 UTF-8 bytes. Code Example Adobe AIR PhoneGap Xamarin Appcelerator Java
												Node:
												(type) c
												(layer)4
													Element:code
														Appsee.startScreen("MyScreen");
												Node:
												(type) c
												(layer)4
													Element:code
														Appsee.StartScreen("MyScreen");
												Node:
												(type) c
												(layer)4
													Element:code
														Appsee.startScreen("MyScreen");
												Node:
												(type) c
												(layer)4
													Element:code
														Appsee.startScreen("MyScreen");
												Node:
												(type) c
												(layer)4
													Element:code
														Appsee.startScreen("MyScreen");
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:a
														You can set user-specific information for each session. This information will be displayed in your dashboard along with the video. These methods can be called any time after calling
													Element:h4
													Element:strong
													Element:i
														Setting User Information
												Node:
												(type) c
												(layer)4
													Element:b
														start()
														.
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Sets the application specific user identifier.
													Element:b
														void setUserId(String userId)
												Node:
												(type) c
												(layer)4
													Element:b
														Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														userID
														: The application-specific user identifier
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:b
														Note:
														User ID should not exceed 256 UTF-8 bytes.
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Sets the current user location.
													Element:b
														void setLocation(double latitude, double longitude,
													Element:br
														float horizontalAccuracy, float verticalAccuracy)
												Node:
												(type) c
												(layer)4
													Element:b
														Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														latitude
														: Latitude in degrees.
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														longitude
														: Longitude in degrees.
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														horizontalAccuracy
														: Horizontal accuracy.
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														verticalAccuracy
														: Vertical accuracy.
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Sets the current user location's description.
													Element:b
														void setLocationDescription(String description)
												Node:
												(type) c
												(layer)4
													Element:b
														Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														description
														: A custom string representing the user's location.
												Node:
												(type) c
												(layer)4
													Element:br
														Code Example Adobe AIR PhoneGap Xamarin Appcelerator Java
												Node:
												(type) c
												(layer)4
													Element:code
														Appsee.setUserId("1234");
													Element:br
													Element:br
														Appsee.setLocationDescription("Office");
												Node:
												(type) c
												(layer)4
													Element:code
														Appsee.SetUserId("1234");
													Element:br
													Element:br
														Appsee.SetLocationDescription("Office");
												Node:
												(type) c
												(layer)4
													Element:code
														Appsee.setUserId("1234");
													Element:br
													Element:br
														Appsee.setLocationDescription("Office");
												Node:
												(type) c
												(layer)4
													Element:code
														Appsee.setUserId("1234");
													Element:br
													Element:br
														Appsee.setLocationDescription("Office");
												Node:
												(type) c
												(layer)4
													Element:code
														Appsee.setUserId("1234");
													Element:br
													Element:br
														Appsee.setLocationDescription("Office");
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:a
														By default all users are opted-in for tracking. You can control whether tracking is enabled or not for a specific user.
													Element:h4
													Element:strong
													Element:i
														Opt-In / Opt-Out
												Node:
												(type) c
												(layer)4
													Element:br
														If
												Node:
												(type) c
												(layer)4
													Element:b
														setOptOutStatus
														was called with "true" then all Appsee calls will be ignored until it will be set back to "false".
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Sets the opt-out status.
													Element:b
														void setOptOutStatus(boolean status)
												Node:
												(type) c
												(layer)4
													Element:b
														Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														status
														: Indicated whether to opt-out the user from tracking
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Returns the current opt-out status, the default value is "false". Code Example PhoneGap Xamarin Appcelerator Java
													Element:b
														boolean getOptOutStatus()
												Node:
												(type) c
												(layer)4
													Element:code
														boolean status = Appsee.getOptOutStatus();
													Element:br
													Element:br
														Appsee.setOptOutStatus(true);
												Node:
												(type) c
												(layer)4
													Element:code
														bool status = Appsee.getOptOutStatus();
													Element:br
													Element:br
														Appsee.setOptOutStatus(true);
												Node:
												(type) c
												(layer)4
													Element:code
														var status = Appsee.getOptOutStatus();
													Element:br
													Element:br
														Appsee.setOptOutStatus(true);
												Node:
												(type) c
												(layer)4
													Element:code
														var status = Appsee.getOptOutStatus();
													Element:br
													Element:br
														Appsee.setOptOutStatus(true);
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:a
														You can mark UIViews as sensitive, so that their contents will be hidden in the video. These methods can be called any time after calling
													Element:h4
													Element:strong
													Element:i
														Hiding Sensitive Views
												Node:
												(type) c
												(layer)4
													Element:b
														Appsee start:
														.
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Marks a view as sensitive. The view will be blanked out in the video (and also the keyboard attached to it).
													Element:b
														void markViewAsSensitive(View view)
												Node:
												(type) c
												(layer)4
													Element:b
														Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														view
														: A View object which contains sensitive information.
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Unmark a view as sensitive.
													Element:b
														void unmarkViewAsSensitive(View view)
												Node:
												(type) c
												(layer)4
													Element:b
														Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														view
														: A View object which no longer contains sensitive information.
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:a
														Appsee notifications will enable you to get notified once specific Appsee events occur.
													Element:h4
													Element:strong
													Element:i
														Notifications
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Fired once Appsee is about to start a new session.
													Element:b
														onAppseeSessionStarting
												Node:
												(type) c
												(layer)4
													Element:b
														Notification Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														ShouldStartSession
														: Change this to "false" in order to prevent the session from starting
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Fired once Appsee has started tracking a new session.
													Element:b
														onAppseeSessionStarted
												Node:
												(type) c
												(layer)4
													Element:b
														Notification Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														SessionId
														: The Appsee Id of the tracked session
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														IsVideoRecorded
														: Indicates whether or not the session is video recorded
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Fired once Appsee is about to finish a session.
													Element:b
														onAppseeSessionEnding
												Node:
												(type) c
												(layer)4
													Element:b
														Notification Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														SessionId
														: The Appsee Id of the tracked session
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														ShouldEndSession
														: Change this to "false" in order to prevent the session from ending (ie: when user is in a call in a Voip app)
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Fired once Appsee has completed tracking a session.
													Element:b
														onAppseeSessionEnded
												Node:
												(type) c
												(layer)4
													Element:b
														Notification Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														SessionId
														: The Appsee Id of the tracked session
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Fired once Appsee has detected a new screen. You can instruct Appsee to ignore the new screen (by setting the key value to null) or to rename the detected screen (by overriding the its value). See the code examples below for more details.
													Element:b
														onAppseeScreenDetected
												Node:
												(type) c
												(layer)4
													Element:b
														Notification Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														ScreenName
														: The name of the new detected screen.
												Node:
												(type) c
												(layer)4
													Element:br
														Code Example Xamarin Java
												Node:
												(type) c
												(layer)4
													Element:code
													Element:br
														Appsee.addAppseeListener(new AppseeListener()
													Element:br
														{
													Element:br
														@Override
													Element:br
														public void onAppseeSessionStarting(AppseeSessionStartingInfo startingInfo)
													Element:br
														{
													Element:br
														// To prevent a session under some condition
													Element:br
														if (someLogic())
													Element:br
														startingInfo.setShouldStartSession(false);
													Element:br
														}
													Element:br
														@Override
													Element:br
														public void onAppseeSessionStarted(AppseeSessionStartedInfo sessionInfo)
													Element:br
														{
													Element:br
														String sessionId = sessionInfo.getSessionId();
													Element:br
														boolean videoRecorded = sessionInfo.isVideoRecorded();
													Element:br
														}
													Element:br
													Element:br
														@Override
													Element:br
														public void onAppseeSessionEnding(AppseeSessionEndingInfo sessionInfo)
													Element:br
														{
													Element:br
														String sessionId = sessionInfo.getSessionId();
													Element:br
														// To prevent a session from ending under some condition
													Element:br
														if (someLogic(sessionId))
													Element:br
														sessionInfo.setShouldEndSession(false);
													Element:br
														}
													Element:br
													Element:br
														@Override
													Element:br
														public void onAppseeSessionEnded(AppseeSessionEndedInfo sessionInfo)
													Element:br
														{
													Element:br
														String sessionId = sessionInfo.getSessionId();
													Element:br
														}
													Element:br
													Element:br
														@Override
													Element:br
														public void onAppseeScreenDetected(AppseeScreenInfo screenInfo)
													Element:br
														{
													Element:br
														// To ignore a new screen
													Element:br
														if (someLogic1())
													Element:br
														screenInfo.setScreenName(null);
													Element:br
														// You can also change the screen's name
													Element:br
														if (someLogic2())
													Element:br
														screenInfo.setScreenName("MyScreen"));
													Element:br
														}
													Element:br
													Element:br
														});
												Node:
												(type) c
												(layer)4
													Element:code
														// Follow the 3 steps below to enable Appsee notifications in Xamarin:
													Element:br
													Element:br
														// 1. In your AppDeleagate, also implement the IAppseeDelegate interface:
													Element:br
														public class AppDelegate : UIApplicationDelegate,
													Element:br
														IUISplitViewControllerDelegate, IAppseeDelegate
													Element:br
													Element:br
														// 2. Implement the following methods:
													Element:br
														public bool SessionStarting()
													Element:br
														{
													Element:br
														// Your code here
													Element:br
														return true;
													Element:br
														}
													Element:br
													Element:br
														public void SessionStarted(string sessionId, bool isVideoRecorded)
													Element:br
														{
													Element:br
														// Your code here
													Element:br
														}
													Element:br
													Element:br
														public bool SessionEnding(string sessionId)
													Element:br
														{
													Element:br
														// Your code here
													Element:br
														return true;
													Element:br
														}
													Element:br
													Element:br
														public void SessionEnded(string sessionId)
													Element:br
														{
													Element:br
														// Your code here
													Element:br
														}
													Element:br
													Element:br
														// 3. In
													Element:b
														FinishedLaunching
														, set the Appsee delegate:
													Element:br
														Appsee.Delegate = this;
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:a
														Appsee enables integration with 3rd party platforms by either sending an Appsee Id to the 3rd party platform, or by sending a 3rd party Id to Appsee.
													Element:h4
													Element:strong
													Element:i
														3rd Party Integrations
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:b
														Please note that this feature is only available in Appsee's Enterprise Plans.
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Generates a unique ID for an external 3rd party system. This method should be usually called right after the start: method.
													Element:b
														String generate3rdPartyID(String systemName, boolean isPersistent)
												Node:
												(type) c
												(layer)4
													Element:b
														Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														systemName
														: The 3rd party system name (ie: "Adobe")
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														isPersistent
														: Whether the identifier should be persistent across sessions.
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:hr
												Node:
												(type) c
												(layer)4
													Element:code
														Generates a unique ID for an external 3rd party system. This method should be usually called right after the start: method.
													Element:b
														void set3rdPartyID(String systemName, String externalID, boolean isPersistent)
												Node:
												(type) c
												(layer)4
													Element:b
														Parameters:
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														systemName
														: The 3rd party system name (ie: "Adobe")
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														externalID : The 3rd party system identifier to set
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:i
														isPersistent
														: Whether the identifier should be persistent across sessions.
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:br
												Node:
												(type) c
												(layer)4
													Element:b
														Note:
														externalID should not exceed 256 UTF-8 bytes. Code Example Adobe AIR PhoneGap Xamarin Appcelerator Java
												Node:
												(type) c
												(layer)4
													Element:code
														String id = Appsee.generate3rdPartyId("Adobe", true);
													Element:br
													Element:br
														Appsee.set3rdPartyId("1234", "Adobe", true);
												Node:
												(type) c
												(layer)4
													Element:code
														String id = Appsee.Generate3rdPartyId("Adobe", true);
													Element:br
													Element:br
														Appsee.Set3rdPartyId("1234", "Adobe", true);
												Node:
												(type) c
												(layer)4
													Element:code
														var id = Appsee.generate3rdPartyId("Adobe", true);
													Element:br
													Element:br
														Appsee.set3rdPartyId("1234", "Adobe", true);
												Node:
												(type) c
												(layer)4
													Element:code
														var id = Appsee.generate3rdPartyId("Adobe", true);
													Element:br
													Element:br
														Appsee.set3rdPartyId("1234", "Adobe", true);
												Node:
												(type) c
												(layer)4
													Element:code
														var id = Appsee.generate3rdPartyId("Adobe", true);
													Element:br
													Element:br
														Appsee.set3rdPartyId("1234", "Adobe", true);
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:footer
													Element:h4
														Appsee
													Element:ul
													Element:li
													Element:p
													Element:a
														About
													Element:li
													Element:p
													Element:a
														Leadership
													Element:li
													Element:p
													Element:a
														Customers
													Element:li
													Element:p
													Element:a
														Press & Media
													Element:li
													Element:p
													Element:a
														Plans & Pricing
													Element:li
													Element:p
													Element:a
														Career Opportunities
													Element:li
													Element:p
													Element:a
														Investors
													Element:li
													Element:p
													Element:a
														Terms Of Use
													Element:li
													Element:p
													Element:a
														Privacy Policy
													Element:h4
														Features
													Element:ul
													Element:li
													Element:p
													Element:a
														iOS Analytics
														|
													Element:a
														Android Analytics
													Element:li
													Element:p
													Element:a
														User Recordings
													Element:li
													Element:p
													Element:a
														Touch Heatmaps
													Element:li
													Element:p
													Element:a
														Realtime In-App Analytics
													Element:li
													Element:p
													Element:a
														Automatic Events
													Element:li
													Element:p
													Element:a
														Crash Recordings & Symbolication
													Element:li
													Element:p
													Element:a
														Conversion Funnels
													Element:li
													Element:p
													Element:a
														Retention Analysis
													Element:li
													Element:p
													Element:a
														Appsee vs. Traditional Analytics
													Element:h4
														Resources
													Element:ul
													Element:li
													Element:p
													Element:a
														Blogs
													Element:li
													Element:p
													Element:a
														FAQ
													Element:li
													Element:p
													Element:a
														Case Studies
													Element:li
													Element:p
													Element:a
														eBooks
													Element:li
													Element:p
													Element:a
														Webinars
													Element:li
													Element:p
													Element:a
														Tutorials
													Element:li
													Element:p
													Element:a
														Support Portal
													Element:li
													Element:p
													Element:a
														Documentation
													Element:li
													Element:p
													Element:a
														The Need for App Analytics
													Element:h4
														Contact Us
													Element:ul
													Element:li
													Element:p
													Element:a
														Contact Form
													Element:li
													Element:p
													Element:a
														Request Demo
													Element:li
													Element:p
													Element:i
													Element:strong
														Phone:
														+1-888-213-9644
													Element:li
													Element:p
													Element:i
													Element:strong
														Email:
													Element:a
														support@appsee.com
													Element:h4
														Follow Us
													Element:ul
													Element:li
													Element:a
														Facebook
													Element:li
													Element:a
														Twitter
													Element:li
													Element:a
														LinkedIn
													Element:li
													Element:a
														Google+
													Element:img
												Node:
												(type) c
												(layer)4
													Element:noscript
													Element:img
