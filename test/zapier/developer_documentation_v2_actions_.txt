Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Actions
				Element:a
					#
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Overview
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:p
								Actions answer the question:
							Element:em
								What should my users be able to create via Zapier?
								They are things like:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								Create ToDo Task
							Element:em
								(EG: Basecamp)
							Element:li
								Create Chat Message
							Element:em
								(EG: Campfire or Hipchat)
							Element:li
								Create Issue
							Element:em
								(EG: GitHub or Pivotal Tracker)
						Node:
						(type) c
						(layer)2
							Element:p
								You can think of Actions as POSTs, writes, or the creation of a resource. It involves Zapier sending data to your app.
						Node:
						(type) c
						(layer)2
							Element:p
								What a user sees:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								What a developer sees:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								See also:
							Element:a
								Actions in the CLI
						Node:
						(type) c
						(layer)2
							Element:p
								You can define your actions via your app's dashboard. When you create a new action, you'll be prompted with several options. Below are complete definitions of what each option is for.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Action Options
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Name
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This is a human readable label a user would see when browsing the directory and adding your app. Make it short but descriptive.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											Create Issue
											,
										Element:code
											Send Alert
											or
										Element:code
											Unsubscribe User
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Noun
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This is the object that the action is most closely associated with. It will be a noun you used in the Name field. We rely on an accurate noun to generate human-friendly sentences for users.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
											"Create Issue" would have "Issue" as the noun. "Unsubscribe User" would use "User".
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Key
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This is a field only really used internally for both
										Element:a
											dynamic dropdowns
											and
										Element:a
											scripting
											references. Needs to be at least two characters long, start with an alpha, and only contain
										Element:code
											a-z
											,
										Element:code
											A-Z
											,
										Element:code
											0-9
											or
										Element:code
											_
											.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											create_issue
											,
										Element:code
											ticket
											or
										Element:code
											newNote
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Help Text
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This some human readable explanatory text, usually something that clarifies what the action does.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											Creates a new issue in a selected repository.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:em
											The user will see
										Element:strong
											Name
											and
										Element:strong
											Help Text
											like below:
									Node:
									(type) c
									(layer)3
										Element:p
										Element:img
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Action Endpoint URL
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											Define the URL where we will, by default,
										Element:code
											POST
											the payload to. You can also make use of
										Element:a
											variable syntax
											where
										Element:a
											auth fields
											and
										Element:a
											action fields
											will be injected.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											http://api.example.com/v2/clients.json
											or
										Element:code
											http://{{account}}.example.com/api/v1/projects.json
									Node:
									(type) c
									(layer)3
										Element:a
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														A Warning about encoding URL params
													Element:a
														#
												Node:
												(type) c
												(layer)4
													Element:p
														We will not automatically encode any URL variables, so you're responsible for encoding any if they require that. For example, emails
													Element:em
														might
														include a
													Element:code
														+
														sign, so if you have
													Element:code
														https://example.com/api/v2/clients.json?email={{email}}
														you'll want to encode that in your
													Element:a
														(or remove it from there and add it to the
													Element:code
														ACTION_KEY_pre_write
													Element:code
														bundle.request.params
														), otherwise you'll get a "space" where the
													Element:code
														+
														sign is.
												Node:
												(type) c
												(layer)4
													Element:p
														A better approach is to not even include it in the URL (it'll be added and encoded automatically in that case)
												Node:
												(type) c
												(layer)4
													Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Custom Action Fields URL
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This allows you to dynamically define action fields that are user set (IE: custom fields). They get passed into the POST'ed JSON just like normal action fields (or into
										Element:a
											scripting
											).
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											http://api.example.com/v2/fields.json
											or
										Element:code
											http://{{account}}.example.com/api/v1/fields.json
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:p
											Read more about
										Element:a
											custom field formatting here
											.
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Important
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											Usually you'll want to leave this checked, but if you don't we'll hide that action behind an "uncommon" link when a user selects their action. Mainly this is helpful for removing actions that are there for breadth but are rarely used.
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Hide
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											Usually you'll want to leave this unchecked. If you check it, we'll completely hide the action from the enduser. This can be useful if an action is incomplete, but you need to deploy your app in it's current state. This option is also a way to hide actions that become deprecated in your API.
											â†‘ Was this documentation useful?
									Node:
									(type) c
									(layer)3
										Element:span
											Can't find what you're looking for? We'd love to help.
										Element:a
											Yes
										Element:a
											No
									Node:
									(type) c
									(layer)3
										Element:a
											Send us a message
											. Get Help
									Node:
									(type) c
									(layer)3
										Element:noscript
										Element:img
