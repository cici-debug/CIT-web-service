Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Searches
				Element:a
					#
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Overview
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Searches
								answer the question:
							Element:em
								What records can I lookup by a particular query?
								They are things like:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								Find a Contact
							Element:li
								Find a Product
							Element:li
								Find an Issue
						Node:
						(type) c
						(layer)2
							Element:p
								Searches can be useful on their own, or they can be combined with Actions to perform "Get or Create" style logic.
						Node:
						(type) c
						(layer)2
							Element:p
								What a user sees:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								What a developer sees:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								See also:
							Element:a
								Searches in the CLI
						Node:
						(type) c
						(layer)2
							Element:p
								You can define your searches via your app's dashboard. When you create a new search, you'll be prompted with several options. Below we list all complete definitions of what each option is for.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Search Options
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Name
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This is a human readable label a user would see when browsing the directory and adding your app. Make it short but descriptive.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											Find a Contact
											or
										Element:code
											Find Ticket
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Noun
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This is the object that the search is most closely associated with. It will be a noun you used in the Name field. We rely on an accurate noun to generate human-friendly sentences for users.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
											"Find Contact" would have "Contact" as the noun. "Find Completed Sale" would use "Sale" or "Completed Sale".
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Key
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This is a field only really used internally for both
										Element:a
											dynamic dropdown
											and
										Element:a
											Scripting
											references. Needs to be at least two characters long, start with an alpha, and only contain
										Element:code
											a-z
											,
										Element:code
											A-Z
											,
										Element:code
											0-9
											or
										Element:code
											_
											.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											find_contact
											, or
										Element:code
											findContact
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Help Text
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											A longer description of what this Search actually looks for. Point out any un-standard behavior as far as how searching happens.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											Finds a contact by email address.
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Important
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											Usually you'll want to leave this checked, but if you don't we'll hide that search behind an "uncommon" link when a user selects their action. Mainly this is helpful for removing searches that are there for breadth but are rarely used.
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Hide
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											Usually you'll want to leave this unchecked. If you check it, we'll completely hide the search from the enduser. This can be useful if a search is incomplete, but you need to deploy your app in it's current state. This option is also a way to hide searches that become deprecated in your API.
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Search Endpoint
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											Define the URL route where we will, by default,
										Element:code
											GET
											for a list of results. Note that the results
										Element:em
											must
											be an array, otherwise your search may fail. If your API returns a single object, you can use scripting to wrap the object in an array in a
										Element:code
											_post_search
											method. You can also make use of
										Element:a
											variable syntax
											where
										Element:a
											auth fields
											and
										Element:a
											search fields
											will be injected.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											http://api.example.com/v2/clients.json
											or
										Element:code
											http://{{account}}.example.com/api/v1/projects.json
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:p
											Note we'll only use the first object in the array for now, so if you can add optional fields to help narrow the search down, it's a great idea.
									Node:
									(type) c
									(layer)3
										Element:a
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														A Warning about encoding URL params
													Element:a
														#
												Node:
												(type) c
												(layer)4
													Element:p
														We will not automatically encode any URL variables, so you're responsible for encoding any if they require that. For example, emails
													Element:em
														might
														include a
													Element:code
														+
														sign, so if you have
													Element:code
														https://example.com/api/v2/leads?email={{email}}
														you'll want to encode that in your
													Element:a
														(or remove it from there and add it to the
													Element:code
														SEARCH_KEY_pre_search
													Element:code
														bundle.request.params
														), otherwise you'll get a "space" where the
													Element:code
														+
														sign is.
												Node:
												(type) c
												(layer)4
													Element:p
														A better approach is to not even include it in the URL and to instead
													Element:em
														only
														use
													Element:code
														bundle.request.params
														in this case since
													Element:code
														bundle.request.params
														will be encoded automatically.
												Node:
												(type) c
												(layer)4
													Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Custom Search Fields URL
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This allows you to dynamically define search fields that are user set (IE: custom fields).
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											http://api.example.com/v2/fields.json
											or
										Element:code
											http://{{account}}.example.com/api/v1/fields.json
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:p
											Read more about
										Element:a
											custom field formating here
											.
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Resource URL
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											The URL we can use to fetch a single record. This will be used to perform a follow-up GET on results we get back from the Search Endpoint (and in the case of a Search-or-Create Zap, the create step as well).
									Node:
									(type) c
									(layer)3
										Element:p
											You can make use of
										Element:a
											variable syntax
											where
										Element:a
											auth fields
											and search result fields (not the actual
										Element:a
											search fields
											) will be injected.
									Node:
									(type) c
									(layer)3
										Element:p
											You will want to provide this in case your Search (or Create) Endpoint don't return all useful information about a record that you might get by fetching it directly.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											https://api.example.com/v2/leads/{{id}}.json
											or
										Element:code
											https://{{account}}.example.com/api/v1/leads/{{id}}.json
									Node:
									(type) c
									(layer)3
										Element:p
											Assuming your search would return something like:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
											[
										Element:span
											{
										Element:span
											"id"
										Element:span
											:
										Element:span
											124
										Element:span
											}
										Element:span
											]
									Node:
									(type) c
									(layer)3
										Element:p
											And you had an
											↑ Was this documentation useful?
										Element:code
											account
											Authentication variable, for example.
									Node:
									(type) c
									(layer)3
										Element:span
											Can't find what you're looking for? We'd love to help.
										Element:a
											Yes
										Element:a
											No
									Node:
									(type) c
									(layer)3
										Element:a
											Send us a message
											. Get Help
									Node:
									(type) c
									(layer)3
										Element:noscript
										Element:img
