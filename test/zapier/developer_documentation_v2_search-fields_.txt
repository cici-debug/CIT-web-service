Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Search Fields
				Element:a
					#
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Overview
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:p
								Search Fields answer the question: what details can a user provide when setting up a Search?
						Node:
						(type) c
						(layer)2
							Element:p
								These details might include:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								Name to query for a Contact
							Element:em
								(EG: Salesforce)
							Element:li
								Repo to restrict search to for an Issue
							Element:em
								(EG: Github)
							Element:li
								Notebook for a Note
							Element:em
								(EG: Evernote)
						Node:
						(type) c
						(layer)2
							Element:p
								What a user sees:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								What a developer sees:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								Each Search should have at least one Search Field, because otherwise we won't know what to include in the query.
						Node:
						(type) c
						(layer)2
							Element:p
								You can also dynamically load custom Search Fields by inspecting a custom field endpoint of your own.
							Element:a
								Learn more.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Search Field Options
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Key
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											A key for you and your API's consumption. This is available for
										Element:a
											variable syntax
											in the Search URL field as well as in
										Element:a
											Scripting
											. Needs to be at least two characters long, start with an alpha, and only contain
										Element:code
											a-z
											,
										Element:code
											A-Z
											,
										Element:code
											0-9
											or
										Element:code
											_
											.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											room
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Label
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											A human readable Label shown in the UI as a user works to complete a Search.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											Email
											or
										Element:code
											Name
									Node:
									(type) c
									(layer)3
										Element:p
										Element:img
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Help Text
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											Human readable description of a Search field, useful for describing some detail you couldn't list in the Label.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											Specify the first name to search by.
											or
										Element:code
											Restrict the search to contacts in this category.
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Default
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											A default value for a field. The behavior varies between required and optional fields. For required fields, the default will be set once when the user first creates the Search, but it is not guaranteed after that (we raise an error on missing/null values instead). For optional fields, it is set on initial creation and used in place of missing or null values every time the Zap runs.
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Type
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											The type we will try to coerce to on the backend. Fails silently to ensure that tasks aren't dropped on coercion errors.
									Node:
									(type) c
									(layer)3
										Element:p
											You can get a full list of supported types and the coercion implied here:
										Element:a
											Field Types
											.
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Required
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											If checked a user will not be able to continue without entering some value.
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Dynamic Dropdown
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											Use an existing
										Element:a
											Trigger
											to load in values for selection, using the machine readable value your API consumes (like
										Element:code
											id
											or
										Element:code
											hash
											) while showing a human readable version to the user (like
										Element:code
											name
											or
										Element:code
											itemName
											).
									Node:
									(type) c
									(layer)3
										Element:p
											Refer to our
										Element:a
											dynamic dropdown docs
											for a more in depth explanation.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											TRIGGERKEY.id.name
											or
										Element:code
											TRIGGERKEY.hash.itemName
									Node:
									(type) c
									(layer)3
										Element:p
										Element:img
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Static Dropdowns
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											A comma separated string that will be turned into a select field for limiting the choices a user can provide to a Search field.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											choice_a,choice_b,choice_c
											or
										Element:code
											Yesterday, Today, Tomorrow
									Node:
									(type) c
									(layer)3
										Element:p
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											If you would like to provide a label for the raw value of each choice, you can also use the raw|label,raw|label syntax instead.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											1|Option 1,2|Option 2
									Node:
									(type) c
									(layer)3
										Element:p
										Element:img
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											List
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											Indicates if this field can hold multiple values. For example, this could be useful if you want to allow users to search for a contact by name, but limit the search to contacts with one or more tags applied. List fields gain the +/- icons to the side.
									Node:
									(type) c
									(layer)3
										Element:p
											â†‘ Was this documentation useful?
										Element:img
									Node:
									(type) c
									(layer)3
										Element:span
											Can't find what you're looking for? We'd love to help.
										Element:a
											Yes
										Element:a
											No
									Node:
									(type) c
									(layer)3
										Element:a
											Send us a message
											. Get Help
									Node:
									(type) c
									(layer)3
										Element:noscript
										Element:img
