Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Hubspot (Static Webhooks)
				Element:a
					#
			Node:
			(type) c
			(layer)1
				Element:p
					This example will walk you through creating a developer app that uses a static webhook to receive data from a web app. To make the example real, we'll be implementing the actual Hubspot API.
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Quick Preparation Checklist
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								You must have a
							Element:a
								Zapier account
								.
							Element:li
								You must have a
							Element:a
								Hubspot
								account.
							Element:li
								Read the
							Element:a
								Getting Started with the Zapier Developer Platform
								section to familiarize yourself with some of the terminology and basic components of an App.
							Element:li
								Glance at the
							Element:a
								Hubspot API Documentation
								to familiarize yourself with Hubspot.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Create an App
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:p
								To get started, go to the
							Element:a
								Developer Platform
								and click the "Create App" button. You'll be asked to give a title and a brief description.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								After you submit, you should find yourself with a fresh App like this:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Setting up authentication
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:p
								Normally, the first step in building an app is to define how Zapier will authenticate with your app. For static webhooks, however, the data exchange is one-way, your app making requests to Zapier. As a result, credentials are not needed from the users.
						Node:
						(type) c
						(layer)2
							Element:p
								For this example, we will skip this step. If we later wanted to add actions or triggeres that were not static webhooks, we would need to come back and complete this section.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Setting up a trigger
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:p
								The trigger we are going to add for Hubspot will use webhooks to listen for new contacts. From your App, click the "Add your first test trigger" button.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								The first form you see allows you to define some of the user-facing details of the trigger.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								Click next to proceed to Step 2, Trigger Fields. Trigger fields add extra information for the trigger which you can use in the URL or in Scripting. We're actually going to skip over this step because our trigger does not require any additional info. Hit next to get to Step 3, where we define how our trigger will receive data from Hubspot.
						Node:
						(type) c
						(layer)2
							Element:p
								With a static webhook, the user gives your app a URL that you can send notifications to. Zapier automatically generates the URL for the user. All you need to do is write clear instructions on where to use this URL inside of your app.
						Node:
						(type) c
						(layer)2
							Element:p
								It is very important to replaced the default "Log into your app..." directions with ones specific to your app. Guiding the user to exactly the right place makes the setup process much easier for the user. Here is what we will say for Hubspot:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								Click save to proceed to Step 4. In this step, we will copy and paste an example of what Hubspot sends in a webhook. This is
							Element:em
								critical
								for static webhook triggers. If you do not do this step, Zapier won't know what fields to show users when they are trying to make Zaps.
						Node:
						(type) c
						(layer)2
							Element:p
								The data can be found by copying and pasting out of examples in documentation, or by using a app like
							Element:a
								RequestBin
								to catch a hook.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								When you click "Parse" you will be presented with a slew of form fields, one for each JSON key in the sample. These forms allow you to override the default name Zapier will give each key. For instance, Zapier will automatically turn the key "is-contact" into "Is Contact", but you might want to rename it to "Is a Contact". For now, we will skip this step and click "Save".
						Node:
						(type) c
						(layer)2
							Element:p
								At this point, we have defined our first trigger and are ready to test it out!
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Testing what we have built
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:p
								Now that we have built out the basics of our app, it is time to try it out and see if it works. Go to your
							Element:a
								dashboard
								and click the create a zap button. On Step 1 of the Zap Editor, you should now have our Hubspot Example app. The app should have a single trigger, New Contact.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								After you select the trigger and any action (the Email Send Outbound Email is a good one to test with), Step 2 will show you the directions on how to use the static webhook URL.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								Continue down to Step 5 and click the "Insert Fields" button. You will get a dropdown list that has a bunch of fields. Note that the field names match up with what we put in our sample result.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								Now is also a good time to point out the value in renaming the fields when we pasted in the sample while building our trigger. Zapier turned the nested key
							Element:code
								{properties: {firstname: {value: "joe@example.com"}}}
								into "Properties Firstname Value". We can go back and edit our trigger to rename that field to just be "Contact First Name".
						Node:
						(type) c
						(layer)2
							Element:p
								If you like, you can continue to fill out the Zap. On Step 6, when you click the test button, you will likely get a popup that says Zapier could not find any samples. All you need to do make Hubspot send a webhook by enrolling a contact into the workflow you setup. We'll catch the webhook and display it as a sample result. Once you get that, you can be sure your trigger is configured properly.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Congratulations!
								You have a working Hubspot application that uses static webhooks to receive data.
						Node:
						(type) c
						(layer)2
							Element:p
								Be sure to check out our other examples for more details on doing other interesting things with Zapier's developer platform!
								â†‘ Was this documentation useful?
						Node:
						(type) c
						(layer)2
							Element:span
								Can't find what you're looking for? We'd love to help.
							Element:a
								Yes
							Element:a
								No
						Node:
						(type) c
						(layer)2
							Element:a
								Send us a message
								. Get Help
						Node:
						(type) c
						(layer)2
							Element:noscript
							Element:img
