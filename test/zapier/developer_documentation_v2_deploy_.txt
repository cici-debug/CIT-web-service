Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Deploy
				Element:a
					#
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					If your app is still private, read the
				Element:a
					deploy lifecycle doc
					on how to make it public! This doc is for deploying updated code to an already public or Invite-Only app.
			Node:
			(type) c
			(layer)1
				Element:p
					Once your app is live (Public or Invite-Only), you'll probably want to make changes to it and add features or fix bugs. While you cannot make changes to a live app, you can
				Element:strong
					clone
					an app and then make changes to the clone.
			Node:
			(type) c
			(layer)1
				Element:p
					The first step is to click on the
				Element:strong
					Deployment
					tab, and click the button
				Element:strong
					Make a Copy of Your App by Cloning
					:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:img
			Node:
			(type) c
			(layer)1
				Element:p
					In the new/cloned app, make your changes. Be sure to leave this app in the
				Element:strong
					Private
					status!
			Node:
			(type) c
			(layer)1
				Element:p
					When you've finished testing your changes, and are ready to update the existing/public app, go into the new/cloned app, click on the
				Element:strong
					Deployment
					tab, and click the button to
				Element:strong
					Deploy and Replace an Existing App
					.
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Once you have deployed your new/cloned app to replace an existing app, all zaps will be updated to use this new app. Read on for important notes on handling breaking app changes.
			Node:
			(type) c
			(layer)1
				Element:p
					A screen will ask you which app you want to replace. Select the existing/live app:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:img
			Node:
			(type) c
			(layer)1
				Element:p
					The system will run an audit and show you the results:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:img
			Node:
			(type) c
			(layer)1
				Element:p
					In the screenshot you can see an error for
				Element:strong
					New Item
					, with the error of
				Element:em
					Polling triggers should always have sample data
					. This simply means you need to provide a sample result for a polling trigger.
			Node:
			(type) c
			(layer)1
				Element:p
					Usually you can just make some changes and ensure there is a symmetry between old and new versions of the app. If there is a breaking changes that resolves a bug, please
				Element:a
					contact us
					and we'll perform a manual deployment.
			Node:
			(type) c
			(layer)1
				Element:p
					There are a number of situations where making changes in your app may cause the existing Live Zaps to stop working. If any of those situations are detected, the system will not allow you to complete the deploy/replace process. Please visit
				Element:a
					this page of Deploy Errors
					and try a workaround.
			Node:
			(type) c
			(layer)1
				Element:p
					If your app is Invite-Only, your cloned app's OAuth redirect URI will become active upon migration (it will contain a new ID #), and the old OAuth redirect URI will no longer function.
				Element:strong
					Please plan accordingly.
					Contact us for a solution to this problem if it is difficult to manage - we can set a permanent redirect URI for your app.
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								How to Handle Breaking Changes
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:p
								The best approach is to copy the Triggers/Actions/Searches you want to update. Mark the originals hidden and append "(Legacy)" to their labels. On the copies, make the needed updates (it also helps to update their keys to something instructive, like append "_v2" to the original key). Once you deploy, new Zaps will only have the copies available and old Zaps will continue to work unaffected.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Deploy in process
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:p
								If all goes well and you have no warnings when trying to deploy, a deploy process will start asynchronously and you can come back to the
								â†‘ Was this documentation useful?
							Element:strong
								Deployment
								tab to check on its progress.
						Node:
						(type) c
						(layer)2
							Element:span
								Can't find what you're looking for? We'd love to help.
							Element:a
								Yes
							Element:a
								No
						Node:
						(type) c
						(layer)2
							Element:a
								Send us a message
								. Get Help
						Node:
						(type) c
						(layer)2
							Element:noscript
							Element:img
