Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Authentication Fields
				Element:a
					#
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Overview
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:p
								Authentication fields are simply what you need from the user to get started authenticating their API calls. For example, when a user tries to authenticate your service:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								You can see what it will be powered by a developer set up like:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								Additionally, these user-provided variables will be passed in with the
							Element:code
								bundle
								for usage in
							Element:a
								scripting
								. For example, the above screenshots would translate to:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
								{
							Element:span
								"account_name"
							Element:span
								:
							Element:span
								"myaccount"
							Element:span
								,
							Element:span
								"api_key"
							Element:span
								:
							Element:span
								"123456789"
							Element:span
								}
						Node:
						(type) c
						(layer)2
							Element:p
								You can use
							Element:a
								Auth Mappings
								to put your Auth Fields to use in Basic Auth, Digest Auth, HTTP headers and query strings.
						Node:
						(type) c
						(layer)2
							Element:p
								Let's look at each of the options you define for a single Auth Field.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Authentication Fields Options
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Key
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This is somewhat arbitrary but you should pick a good, short key name because you'll need to include it elsewhere in the developer interface as
										Element:code
											{{key}}
											using the
										Element:a
											variable syntax
											. Needs to be at least two characters long, start with an alpha, and only contain
										Element:code
											a-z
											,
										Element:code
											A-Z
											,
										Element:code
											0-9
											or
										Element:code
											_
											.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
											(you may not need all of these)
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:code
											api_key
											an API Key which you give to your users somewhere inside your service. Allows Zapier to authenticate on their behalf
										Element:li
										Element:code
											account_name
											an account name which you use to build the API Request URL (perhaps as a subdomain: https://{{account_name}}.example.com/api/v1/)
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Label
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This will show up just above the text input field as a human-readable name. You don't need to be super descriptive here; you can provide more details and information about this field in the Help Text field.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
											API Key, Account Name
									Node:
									(type) c
									(layer)3
										Element:p
										Element:img
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Required
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											Pretty easy concept; most all auth fields should be required. You really shouldn't ask for non-essential information as an auth field.
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Help Text
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											Smaller text which appears under the Label of the field. You can type longer directions here. A common pattern for Auth Field Help Text is to tell the user where in your interface they can find their API Key.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
											The API Key for your account, you can find this by going to your Basecamp Profile page, clicking settings, then API Keys.
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Default
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											If you specify a default value, the actual field will be pre-filled with this value when the user goes to add a new authentication for your service. If the user clears out a required auth field which had a default set, they will receive an error. Optional fields that are missing a value will use the default every time.
									Node:
									(type) c
									(layer)3
										Element:p
											Most auth fields will not have a default.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											choice_b
											(if you use the choices feature detailed below)
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Static Dropdowns
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											You can create a dropdown-style select box by giving us a comma-separated list of choices. This works well in conjunction with the default value option above.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											choice_a,choice_b,choice_c
											or
										Element:code
											Yesterday, Today, Tomorrow
									Node:
									(type) c
									(layer)3
										Element:p
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											If you would like to provide a label for the raw value of each choice, you can also use the raw|label,raw|label syntax instead.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											1|Option 1,2|Option 2
									Node:
									(type) c
									(layer)3
										Element:p
										Element:img
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Subdomain Format
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											If you need the user to supply an account name (or similar) which gets translated into a subdomain (or similar) URL format, we recommend you take advantage of this feature. It helps guide the user with what to type in.
									Node:
									(type) c
									(layer)3
										Element:p
											Example:
										Element:br
										Element:code
											https://,{{input}},.yourdomain.com/
											will create:
									Node:
									(type) c
									(layer)3
										Element:p
										Element:img
									Node:
									(type) c
									(layer)3
										Element:blockquote
											â†‘ Was this documentation useful?
										Element:p
											Note: don't forget the commas!
									Node:
									(type) c
									(layer)3
										Element:span
											Can't find what you're looking for? We'd love to help.
										Element:a
											Yes
										Element:a
											No
									Node:
									(type) c
									(layer)3
										Element:a
											Send us a message
											. Get Help
									Node:
									(type) c
									(layer)3
										Element:noscript
										Element:img
