Node:
(type) c
(layer)0
	Element:article
			Node:
			(type) h1
			(layer)1
				Element:h1
					Security Considerations
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:section
										Element:h3
											Security Requirements
										Element:ul
										Element:li
											Your website must use HTTPS.
										Element:li
											Do not publish your public Key outside of your code.
										Element:li
											Payments on the hosted payment button will only work on the website you registered when onboarding to a Hosted Payment Account.
										Element:h3
											Transaction Responses
										Element:p
											The HPP application returns all responses as raw strings and as JSON formatted representations of the raw server responses. These raw transaction responses are signed by Clearent and the can be verified (see “Response Validation” section below). Below are examples of the various types of responses you will see from the HPP application.
										Element:p
										Element:strong
											Successful Transaction
										Element:p
											Below is an example of a successful response from a basic sale example.
										Element:table
										Element:tr
										Element:td
											12345678910111213141516171819202122232425262728293031
										Element:td
										Element:span
											{
										Element:span
										Element:span
											"code"
										Element:span
											:
										Element:span
											"200"
										Element:span
											,
										Element:span
										Element:span
											"status"
										Element:span
											:
										Element:span
											"success"
										Element:span
											,
										Element:span
										Element:span
											"exchange-id"
										Element:span
											:
										Element:span
											"ID-CLADEVGSOPS02-cgw01-58790-1447188033740-0-1146"
										Element:span
											,
										Element:span
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
										Element:span
											{
										Element:span
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"transaction"
										Element:span
											,
										Element:span
										Element:span
											"href"
										Element:span
											:
										Element:span
											"/rest/v2/transactions?id=1107313"
										Element:span
											,
										Element:span
										Element:span
											"id"
										Element:span
											:
										Element:span
											"1107313"
										Element:span
										Element:span
											}
										Element:span
										Element:span
											]
										Element:span
											,
										Element:span
										Element:span
											"payload"
										Element:span
											:
										Element:span
											{
										Element:span
										Element:span
											"transaction"
										Element:span
											:
										Element:span
											{
										Element:span
										Element:span
											"amount"
										Element:span
											:
										Element:span
											"3.33"
										Element:span
											,
										Element:span
										Element:span
											"id"
										Element:span
											:
										Element:span
											"1107313"
										Element:span
											,
										Element:span
										Element:span
											"type"
										Element:span
											:
										Element:span
											"SALE"
										Element:span
											,
										Element:span
										Element:span
											"result"
										Element:span
											:
										Element:span
											"APPROVED"
										Element:span
											,
										Element:span
										Element:span
											"card"
										Element:span
											:
										Element:span
											"XXXXXXXXXXXX1111"
										Element:span
											,
										Element:span
										Element:span
											"csc"
										Element:span
											:
										Element:span
											"999"
										Element:span
											,
										Element:span
										Element:span
											"authorization-code"
										Element:span
											:
										Element:span
											"TAS425"
										Element:span
											,
										Element:span
										Element:span
											"batch-string-id"
										Element:span
											:
										Element:span
											"165"
										Element:span
											,
										Element:span
										Element:span
											"display-message"
										Element:span
											:
										Element:span
											"Transaction approved"
										Element:span
											,
										Element:span
										Element:span
											"result-code"
										Element:span
											:
										Element:span
											"000"
										Element:span
											,
										Element:span
										Element:span
											"exp-date"
										Element:span
											:
										Element:span
											"1020"
										Element:span
										Element:span
											}
										Element:span
											,
										Element:span
										Element:span
											"payloadType"
										Element:span
											:
										Element:span
											"transaction"
										Element:span
										Element:span
											}
										Element:span
											,
										Element:span
										Element:span
											"signature"
										Element:span
											:
										Element:span
											"30640230679d69790f582c7bb22920eb0541cc84a37f3aa6dcd"
										Element:span
											}
										Element:p
										Element:p
										Element:strong
											Successful Transaction With Billing Address Supplied
										Element:p
											Below is an example of a successful response from a sale example that includes billing address.
										Element:p
											See
										Element:a
											Configuration
											for more information and
										Element:a
											Examples
											for examples using billing address options.
										Element:p
										Element:table
										Element:tr
										Element:td
											12345678910111213141516171819202122232425262728293031323334353637383940
										Element:td
										Element:span
											{
										Element:span
										Element:span
											"code"
										Element:span
											:
										Element:span
											"200"
										Element:span
											,
										Element:span
										Element:span
											"status"
										Element:span
											:
										Element:span
											"success"
										Element:span
											,
										Element:span
										Element:span
											"exchange-id"
										Element:span
											:
										Element:span
											"ID-CLADEVGSOPS02-cgw01-58790-1447188033740-0-1730"
										Element:span
											,
										Element:span
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
										Element:span
											{
										Element:span
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"transaction"
										Element:span
											,
										Element:span
										Element:span
											"href"
										Element:span
											:
										Element:span
											"/rest/v2/transactions?id=1107328"
										Element:span
											,
										Element:span
										Element:span
											"id"
										Element:span
											:
										Element:span
											"1107328"
										Element:span
										Element:span
											}
										Element:span
										Element:span
											]
										Element:span
											,
										Element:span
										Element:span
											"payload"
										Element:span
											:
										Element:span
											{
										Element:span
										Element:span
											"transaction"
										Element:span
											:
										Element:span
											{
										Element:span
										Element:span
											"amount"
										Element:span
											:
										Element:span
											"3.33"
										Element:span
											,
										Element:span
										Element:span
											"id"
										Element:span
											:
										Element:span
											"1107328"
										Element:span
											,
										Element:span
										Element:span
											"type"
										Element:span
											:
										Element:span
											"SALE"
										Element:span
											,
										Element:span
										Element:span
											"result"
										Element:span
											:
										Element:span
											"APPROVED"
										Element:span
											,
										Element:span
										Element:span
											"billing"
										Element:span
											:
										Element:span
											{
										Element:span
										Element:span
											"street"
										Element:span
											:
										Element:span
											"333 Oak Trail"
										Element:span
											,
										Element:span
										Element:span
											"city"
										Element:span
											:
										Element:span
											"Springfield"
										Element:span
											,
										Element:span
										Element:span
											"state"
										Element:span
											:
										Element:span
											"ME"
										Element:span
											,
										Element:span
										Element:span
											"zip"
										Element:span
											:
										Element:span
											"55105"
										Element:span
											,
										Element:span
										Element:span
											"first-name"
										Element:span
											:
										Element:span
											"Joe"
										Element:span
											,
										Element:span
										Element:span
											"last-name"
										Element:span
											:
										Element:span
											"Burns"
										Element:span
										Element:span
											}
										Element:span
											,
										Element:span
										Element:span
											"card"
										Element:span
											:
										Element:span
											"XXXXXXXXXXXX1111"
										Element:span
											,
										Element:span
										Element:span
											"csc"
										Element:span
											:
										Element:span
											"999"
										Element:span
											,
										Element:span
										Element:span
											"authorization-code"
										Element:span
											:
										Element:span
											"TAS902"
										Element:span
											,
										Element:span
										Element:span
											"avs-result-code"
										Element:span
											:
										Element:span
											"Y"
										Element:span
											,
										Element:span
										Element:span
											"batch-string-id"
										Element:span
											:
										Element:span
											"166"
										Element:span
											,
										Element:span
										Element:span
											"display-message"
										Element:span
											:
										Element:span
											"Transaction approved"
										Element:span
											,
										Element:span
										Element:span
											"result-code"
										Element:span
											:
										Element:span
											"000"
										Element:span
											,
										Element:span
										Element:span
											"exp-date"
										Element:span
											:
										Element:span
											"1019"
										Element:span
										Element:span
											}
										Element:span
											,
										Element:span
										Element:span
											"payloadType"
										Element:span
											:
										Element:span
											"transaction"
										Element:span
										Element:span
											}
										Element:span
											,
										Element:span
										Element:span
											"signature"
										Element:span
											:
										Element:span
											"3064dcb5feaffadfc237835272c7685"
										Element:span
											}
										Element:p
										Element:strong
											Failed Transaction
										Element:p
											Below is an example of a failed transaction response.
										Element:table
										Element:tr
										Element:td
											123456789101112131415161718192021222324252627282930313233
										Element:td
										Element:span
											{
										Element:span
										Element:span
											"code"
										Element:span
											:
										Element:span
											"402"
										Element:span
											,
										Element:span
										Element:span
											"status"
										Element:span
											:
										Element:span
											"fail"
										Element:span
											,
										Element:span
										Element:span
											"exchange-id"
										Element:span
											:
										Element:span
											"ID-CLADEVGSOPS02-cgw01-58790-1447188033740-0-1169"
										Element:span
											,
										Element:span
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
										Element:span
											{
										Element:span
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"transaction"
										Element:span
											,
										Element:span
										Element:span
											"href"
										Element:span
											:
										Element:span
											"/rest/v2/transactions?id=1107315"
										Element:span
											,
										Element:span
										Element:span
											"id"
										Element:span
											:
										Element:span
											"1107315"
										Element:span
										Element:span
											}
										Element:span
										Element:span
											]
										Element:span
											,
										Element:span
										Element:span
											"payload"
										Element:span
											:
										Element:span
											{
										Element:span
										Element:span
											"transaction"
										Element:span
											:
										Element:span
											{
										Element:span
										Element:span
											"amount"
										Element:span
											:
										Element:span
											"3.33"
										Element:span
											,
										Element:span
										Element:span
											"id"
										Element:span
											:
										Element:span
											"1107315"
										Element:span
											,
										Element:span
										Element:span
											"type"
										Element:span
											:
										Element:span
											"SALE"
										Element:span
											,
										Element:span
										Element:span
											"result"
										Element:span
											:
										Element:span
											"INVALID_REQUEST"
										Element:span
											,
										Element:span
										Element:span
											"card"
										Element:span
											:
										Element:span
											"XXXXXXXXXXXX1111"
										Element:span
											,
										Element:span
										Element:span
											"csc"
										Element:span
											:
										Element:span
											"666"
										Element:span
											,
										Element:span
										Element:span
											"display-message"
										Element:span
											:
										Element:span
											"Declined by Issuer - Invalid card security code"
										Element:span
											,
										Element:span
										Element:span
											"result-code"
										Element:span
											:
										Element:span
											"018"
										Element:span
											,
										Element:span
										Element:span
											"exp-date"
										Element:span
											:
										Element:span
											"1020"
										Element:span
										Element:span
											}
										Element:span
											,
										Element:span
										Element:span
											"error"
										Element:span
											:
										Element:span
											{
										Element:span
										Element:span
											"error-message"
										Element:span
											:
										Element:span
											"INVALID_REQUESTSYSTEM_ERROR_OTHER HPP Request"
										Element:span
											,
										Element:span
										Element:span
											"result-code"
										Element:span
											:
										Element:span
											"073"
										Element:span
										Element:span
											}
										Element:span
											,
										Element:span
										Element:span
											"payloadType"
										Element:span
											:
										Element:span
											"error"
										Element:span
										Element:span
											}
										Element:span
											,
										Element:span
										Element:span
											"signature"
										Element:span
											:
										Element:span
											"306402b09b373a84edbb935ed11a6849a6711ba4c16abe1338dd6f"
										Element:span
											}
										Element:p
										Element:p
										Element:strong
											Unauthorized Request (No Transaction Attempted)
										Element:p
											If an invalid, disabled, or expired key is used, not transaction is attempted and the error response will not include transaction data.
										Element:p
										Element:table
										Element:tr
										Element:td
											1234567891011121314
										Element:td
										Element:span
											{
										Element:span
										Element:span
											"code"
										Element:span
											:
										Element:span
											"401"
										Element:span
											,
										Element:span
										Element:span
											"status"
										Element:span
											:
										Element:span
											"fail"
										Element:span
											,
										Element:span
										Element:span
											"payload"
										Element:span
											:
										Element:span
											{
										Element:span
										Element:span
											"error"
										Element:span
											:
										Element:span
											{
										Element:span
										Element:span
											"error-message"
										Element:span
											:
										Element:span
											"UNAUTHORIZED"
										Element:span
											,
										Element:span
										Element:span
											"result-code"
										Element:span
											:
										Element:span
											"042"
										Element:span
											,
										Element:span
										Element:span
											"time-stamp"
										Element:span
											:
										Element:span
											"Tue Nov 10 21:24:04 UTC 2015"
										Element:span
										Element:span
											}
										Element:span
											,
										Element:span
										Element:span
											"payloadType"
										Element:span
											:
										Element:span
											"error"
										Element:span
										Element:span
											}
										Element:span
											}
										Element:p
										Element:strong
											Successful Sale With Token
										Element:p
											Below is an example of a successful response from a sale with the option to save the card for future use selected.
										Element:p
										Element:span
											See
										Element:a
											Configuration
										Element:span
											for more information and
										Element:a
											Examples
										Element:span
											for
											examples of saving cards for future use.
										Element:table
										Element:tr
										Element:td
											123456789101112131415161718192021222324252627282930313233343536373839404142434445
										Element:td
										Element:span
											{
										Element:span
										Element:span
											"code"
										Element:span
											:
										Element:span
											"200"
										Element:span
											,
										Element:span
										Element:span
											"status"
										Element:span
											:
										Element:span
											"success"
										Element:span
											,
										Element:span
										Element:span
											"exchange-id"
										Element:span
											:
										Element:span
											"ID-CLADEVGSOPS02-cgw01-58790-1447188033740-0-1125"
										Element:span
											,
										Element:span
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
										Element:span
											{
										Element:span
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"transaction"
										Element:span
											,
										Element:span
										Element:span
											"href"
										Element:span
											:
										Element:span
											"/rest/v2/transactions?id=1107310"
										Element:span
											,
										Element:span
										Element:span
											"id"
										Element:span
											:
										Element:span
											"1107310"
										Element:span
										Element:span
											}
										Element:span
											,
										Element:span
										Element:span
											{
										Element:span
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"token"
										Element:span
											,
										Element:span
										Element:span
											"href"
										Element:span
											:
										Element:span
											"/rest/v2/tokens/1100845274213121111"
										Element:span
											,
										Element:span
										Element:span
											"id"
										Element:span
											:
										Element:span
											"1136587273219921111"
										Element:span
										Element:span
											}
										Element:span
										Element:span
											]
										Element:span
											,
										Element:span
										Element:span
											"payload"
										Element:span
											:
										Element:span
											{
										Element:span
										Element:span
											"transaction"
										Element:span
											:
										Element:span
											{
										Element:span
										Element:span
											"amount"
										Element:span
											:
										Element:span
											"64.50"
										Element:span
											,
										Element:span
										Element:span
											"id"
										Element:span
											:
										Element:span
											"1107310"
										Element:span
											,
										Element:span
										Element:span
											"type"
										Element:span
											:
										Element:span
											"SALE"
										Element:span
											,
										Element:span
										Element:span
											"result"
										Element:span
											:
										Element:span
											"APPROVED"
										Element:span
											,
										Element:span
										Element:span
											"billing"
										Element:span
											:
										Element:span
											{
										Element:span
										Element:span
											"street"
										Element:span
											:
										Element:span
											"222 Main Street"
										Element:span
											,
										Element:span
										Element:span
											"city"
										Element:span
											:
										Element:span
											"Springfield"
										Element:span
											,
										Element:span
										Element:span
											"state"
										Element:span
											:
										Element:span
											"ME"
										Element:span
											,
										Element:span
										Element:span
											"zip"
										Element:span
											:
										Element:span
											"55105"
										Element:span
											,
										Element:span
										Element:span
											"first-name"
										Element:span
											:
										Element:span
											"John"
										Element:span
											,
										Element:span
										Element:span
											"last-name"
										Element:span
											:
										Element:span
											"Adams"
										Element:span
										Element:span
											}
										Element:span
											,
										Element:span
										Element:span
											"card"
										Element:span
											:
										Element:span
											"XXXXXXXXXXXX1111"
										Element:span
											,
										Element:span
										Element:span
											"csc"
										Element:span
											:
										Element:span
											"999"
										Element:span
											,
										Element:span
										Element:span
											"authorization-code"
										Element:span
											:
										Element:span
											"TAS403"
										Element:span
											,
										Element:span
										Element:span
											"avs-result-code"
										Element:span
											:
										Element:span
											"Y"
										Element:span
											,
										Element:span
										Element:span
											"batch-string-id"
										Element:span
											:
										Element:span
											"165"
										Element:span
											,
										Element:span
										Element:span
											"display-message"
										Element:span
											:
										Element:span
											"Transaction approved"
										Element:span
											,
										Element:span
										Element:span
											"result-code"
										Element:span
											:
										Element:span
											"000"
										Element:span
											,
										Element:span
										Element:span
											"exp-date"
										Element:span
											:
										Element:span
											"1019"
										Element:span
										Element:span
											}
										Element:span
											,
										Element:span
										Element:span
											"payloadType"
										Element:span
											:
										Element:span
											"transaction"
										Element:span
										Element:span
											}
										Element:span
											,
										Element:span
										Element:span
											"signature"
										Element:span
											:
										Element:span
											"306502310087aaee89b8c706ceb98c986b4de66a5"
										Element:span
											}
										Element:p
										Element:p
										Element:strong
											Successful Token Request
										Element:p
											Below is an example of a successful response from a token-only request.
										Element:p
										Element:span
											See
										Element:a
											Configuration
										Element:span
											for more information and
										Element:a
											Examples
										Element:span
											for
											examples using a token-only request.
										Element:p
										Element:table
										Element:tr
										Element:td
											12345678910111213141516171819202122
										Element:td
										Element:span
											{
										Element:span
										Element:span
											"code"
										Element:span
											:
										Element:span
											"200"
										Element:span
											,
										Element:span
										Element:span
											"status"
										Element:span
											:
										Element:span
											"success"
										Element:span
											,
										Element:span
										Element:span
											"exchange-id"
										Element:span
											:
										Element:span
											"ID-CLADEVGSOPS02-cvl01-59475-1447185739748-0-163"
										Element:span
											,
										Element:span
										Element:span
											"payload"
										Element:span
											:
										Element:span
											{
										Element:span
										Element:span
											"tokenResponse"
										Element:span
											:
										Element:span
											{
										Element:span
										Element:span
											"created"
										Element:span
											:
										Element:span
											"2015-11-10T21:03:20.518Z"
										Element:span
											,
										Element:span
										Element:span
											"token-id"
										Element:span
											:
										Element:span
											"1145845280641111111"
										Element:span
											,
										Element:span
										Element:span
											"times-used"
										Element:span
											:
										Element:span
											"0"
										Element:span
											,
										Element:span
										Element:span
											"status"
										Element:span
											:
										Element:span
											"Active"
										Element:span
											,
										Element:span
										Element:span
											"last-four-digits"
										Element:span
											:
										Element:span
											"1111"
										Element:span
											,
										Element:span
										Element:span
											"card-type"
										Element:span
											:
										Element:span
											"VISA"
										Element:span
											,
										Element:span
										Element:span
											"description"
										Element:span
											:
										Element:span
											"Travel Visa"
										Element:span
											,
										Element:span
										Element:span
											"avs-address"
										Element:span
											:
										Element:span
											"123 Maple Lane"
										Element:span
											,
										Element:span
										Element:span
											"avs-zip"
										Element:span
											:
										Element:span
											"55105"
										Element:span
											,
										Element:span
										Element:span
											"avs-result-code"
										Element:span
											:
										Element:span
											"Y"
										Element:span
										Element:span
											}
										Element:span
											,
										Element:span
										Element:span
											"payloadType"
										Element:span
											:
										Element:span
											"token"
										Element:span
										Element:span
											}
										Element:span
											}
										Element:p
										Element:h3
											Response Validation
										Element:p
										Element:strong
											Successful Transactions
										Element:p
											After each transaction request, the browser will receive a response from the Clearent transaction processing portal. If the transaction request was successful, the application looks for a callback function named “ClearentOnSuccess” and if found, calls this function. The function receives two parameters, the raw, signed response from the server (see “Clearent Hosted Payment Page Verification” below) and a JSON object representation of the the raw response. In the example below, we created a function to log the raw response, the JSON-formatted response, and the transaction id to the browser’s developer console.
										Element:table
										Element:tr
										Element:td
											123456789101112131415161718
										Element:td
										Element:span
										Element:span
											<script>
										Element:span
										Element:span
											// called after successful complete
										Element:span
										Element:span
											function
										Element:span
										Element:span
											ClearentOnSuccess
										Element:span
											(
										Element:span
											responseRaw
										Element:span
											,
										Element:span
											ResponseJSON
										Element:span
											)
										Element:span
											{
										Element:span
										Element:span
											console
										Element:span
											.
										Element:span
											log
										Element:span
											(
										Element:span
											"transaction successful"
										Element:span
											)
										Element:span
											;
										Element:span
										Element:span
											console
										Element:span
											.
										Element:span
											log
										Element:span
											(
										Element:span
											responseRaw
										Element:span
											)
										Element:span
											;
										Element:span
										Element:span
											console
										Element:span
											.
										Element:span
											log
										Element:span
											(
										Element:span
											ResponseJSON
										Element:span
											)
										Element:span
											;
										Element:span
										Element:span
											// use JS short-circuiting to determine if we have a transaction id
										Element:span
										Element:span
											if
										Element:span
											(
										Element:span
											ResponseJSON
										Element:span
											.
										Element:span
											payload
										Element:span
										Element:span
											&&
										Element:span
										Element:span
											ResponseJSON
										Element:span
											.
										Element:span
											payload
										Element:span
											.
										Element:span
											transaction
										Element:span
										Element:span
											&&
										Element:span
										Element:span
											ResponseJSON
										Element:span
											.
										Element:span
											payload
										Element:span
											.
										Element:span
											transaction
										Element:span
											.
										Element:span
											id
										Element:span
											)
										Element:span
											{
										Element:span
										Element:span
											console
										Element:span
											.
										Element:span
											log
										Element:span
											(
										Element:span
											"transaction id = "
										Element:span
										Element:span
											+
										Element:span
										Element:span
											ResponseJSON
										Element:span
											.
										Element:span
											payload
										Element:span
											.
										Element:span
											transaction
										Element:span
											.
										Element:span
											id
										Element:span
											)
										Element:span
											;
										Element:span
										Element:span
											}
										Element:span
											else
										Element:span
											{
										Element:span
										Element:span
											console
										Element:span
											.
										Element:span
											log
										Element:span
											(
										Element:span
											"transaction id not found"
										Element:span
											)
										Element:span
											;
										Element:span
										Element:span
											}
										Element:span
										Element:span
											}
										Element:span
										Element:span
											</script>
										Element:p
										Element:p
											You will pass this raw response to your server side solution to complete the transaction. Because the response comes from Clearent to the client-browser and then up to your server, you cannot trust that the response has not been tampered with.
										Element:strong
											Never trust client-side data!
										Element:p
											There are multiple ways to validate the response from the browser to insure that the response has not been tampered with and that you have indeed charged and received the expected amount from the client
										Element:ul
										Element:li
											The response will contain a hash signature that can be used to validate the response. The hash is made up of the response object. You can validate the signature on your server to validate the response parameters were not tampered with. This is imperative to your ensuring your transaction is valid. Make sure the response is valid AND that the transaction Id is unique.
										Element:a
											Clearent Hosted Payment Page Verification
										Element:li
											You can use our API to do a GET with the transaction ID to ensure the response matches what the client side passed you. Each transaction ID is unique so once you have accepted a transaction ID for payment, you should never see the same transaction ID again.
										Element:li
											You can validate the transactions manually using the Virtual Terminal. Again, you can search by transaction ID to validate the transaction details.
										Element:p
										Element:strong
											Failed Transactions
										Element:p
											If the transaction was not successful, the browser will receive a response from the Clearent transaction processing portal containing an error message. The user will see a generic error message:
										Element:strong
											“We were unable to process your payment. Please verify your card details and try again or contact us to complete your order.”
											This
										Element:a
											error message can be configured
											with different text if necessary.
										Element:p
											For failed transactions, the application looks for a callback function named “ClearentOnError” and if found, calls this function. This function also receives the same two parameters as the ClearentOnSuccess function; the raw, signed response from the server (see “Clearent Hosted Payment Page Verification” below) and a JSON object representation of the the raw response.
										Element:p
											In the example below, we created a function to log the raw response, the JSON-formatted response, the error-message (if present) and the transaction id (if present) to the browser’s developer console.
										Element:p
											Upon examining the response from a failed transaction, you will notice the error messages in the response objects are intentionally vague. This is done to prevent scammers from using the service to test cards and security codes. If the card is invalid, or expiration invalid, or security code invalid, the response will simply contain, a generic message. You can use the transaction id to look up the transaction details in Virtual Terminal to examine the transaction in more detail.
										Element:p
											The response will not contain transaction information if a transaction was not attempted. Possible reasons for non-attempted transactions are invalid or expired public key, or unrecoverable server error.
										Element:p
										Element:table
										Element:tr
										Element:td
											12345678910111213141516171819202122232425
										Element:td
										Element:span
										Element:span
											<script>
										Element:span
										Element:span
											// called after failed complete
										Element:span
										Element:span
											function
										Element:span
										Element:span
											ClearentOnError
										Element:span
											(
										Element:span
											responseRaw
										Element:span
											,
										Element:span
											ResponseJSON
										Element:span
											)
										Element:span
											{
										Element:span
										Element:span
											console
										Element:span
											.
										Element:span
											log
										Element:span
											(
										Element:span
											"transaction failed"
										Element:span
											)
										Element:span
											;
										Element:span
										Element:span
											console
										Element:span
											.
										Element:span
											log
										Element:span
											(
										Element:span
											responseRaw
										Element:span
											)
										Element:span
											;
										Element:span
										Element:span
											console
										Element:span
											.
										Element:span
											log
										Element:span
											(
										Element:span
											ResponseJSON
										Element:span
											)
										Element:span
											;
										Element:span
										Element:span
											// use JS short-circuiting to determine if we have an error message
										Element:span
										Element:span
											if
										Element:span
											(
										Element:span
											ResponseJSON
										Element:span
											.
										Element:span
											payload
										Element:span
										Element:span
											&&
										Element:span
										Element:span
											ResponseJSON
										Element:span
											.
										Element:span
											payload
										Element:span
											.
										Element:span
											error
										Element:span
										Element:span
											&&
										Element:span
										Element:span
											ResponseJSON
										Element:span
											.
										Element:span
											payload
										Element:span
											.
										Element:span
											error
										Element:span
											[
										Element:span
											'error-message'
										Element:span
											]
										Element:span
											)
										Element:span
											{
										Element:span
										Element:span
											console
										Element:span
											.
										Element:span
											log
										Element:span
											(
										Element:span
											"error = "
										Element:span
										Element:span
											+
										Element:span
										Element:span
											ResponseJSON
										Element:span
											.
										Element:span
											payload
										Element:span
											.
										Element:span
											error
										Element:span
											[
										Element:span
											'error-message'
										Element:span
											]
										Element:span
											)
										Element:span
											;
										Element:span
										Element:span
											}
										Element:span
											else
										Element:span
											{
										Element:span
										Element:span
											console
										Element:span
											.
										Element:span
											log
										Element:span
											(
										Element:span
											"unable to determine error"
										Element:span
											)
										Element:span
											;
										Element:span
										Element:span
											}
										Element:span
										Element:span
											// use JS short-circuiting to determine if we have a transaction id
										Element:span
										Element:span
											if
										Element:span
											(
										Element:span
											ResponseJSON
										Element:span
											.
										Element:span
											payload
										Element:span
										Element:span
											&&
										Element:span
										Element:span
											ResponseJSON
										Element:span
											.
										Element:span
											payload
										Element:span
											.
										Element:span
											transaction
										Element:span
										Element:span
											&&
										Element:span
										Element:span
											ResponseJSON
										Element:span
											.
										Element:span
											payload
										Element:span
											.
										Element:span
											transaction
										Element:span
											.
										Element:span
											id
										Element:span
											)
										Element:span
											{
										Element:span
										Element:span
											console
										Element:span
											.
										Element:span
											log
										Element:span
											(
										Element:span
											"transaction id = "
										Element:span
										Element:span
											+
										Element:span
										Element:span
											ResponseJSON
										Element:span
											.
										Element:span
											payload
										Element:span
											.
										Element:span
											transaction
										Element:span
											.
										Element:span
											id
										Element:span
											)
										Element:span
											;
										Element:span
										Element:span
											}
										Element:span
											else
										Element:span
											{
										Element:span
										Element:span
											console
										Element:span
											.
										Element:span
											log
										Element:span
											(
										Element:span
											"transaction id not found"
										Element:span
											)
										Element:span
											;
										Element:span
										Element:span
											}
										Element:span
										Element:span
											}
										Element:span
										Element:span
											</script>
										Element:p
										Element:h3
											Browser Support
										Element:p
											Clearent’s Hosted Payments Page solution will work with Chrome, Firefox, Safari, Edge, and IE11. It has been designed to work on desktops, notebooks, tablets, and mobile devices.
										Element:h3
											Troubleshooting
										Element:p
											Error messages for this solution are very generic for security purposes as these errors are presented directly to the end user. Please make sure you log the exchange ID from the failed response and provide that to Clearent if you have questions about any errors you receive.
										Element:p
											Example:
										Element:p
											“exchange-id”:”ID-5ba9fd2f10ea-59988-1441133412260-0-1343″
										Element:h3
											Client Side CC Validation
										Element:p
											In accordance with best security practices, all client data is validated on Clearent servers. We do perform basic client-side validation to improve the user-experience and reduce errors.
										Element:p
										Element:strong
											Validating card field
										Element:p
											Credit card numbers are validated on the client as follows:
										Element:ul
										Element:li
											Get card token or card field value (remove any non-numeric characters)
										Element:li
											Remaining digits must pass Luhn algorithm. This does not guarantee that the card is valid, simply that the card could be a valid card. This is done to help prevent typing errors.
										Element:p
										Element:strong
											Validating expiration date
										Element:p
											Expiration date is required for all transactions unless the merchant is storing and presenting card tokens to the user
										Element:ul
										Element:li
											If card token is used, ignore this check
										Element:li
											Get expiration date field (remove any non-numeric characters)
										Element:li
											Entered value must be four digits, 2-digit month and 2-digit year (MMYY)
										Element:li
											Entered year must be > current year OR (entered year must be >= current year AND entered month must be >= current month)
										Element:p
										Element:strong
											Validating CVC
										Element:p
											By default, the card security code (CSC, CID, CVC, CVV, CVV2) is required for all transactions unless the merchant is storing and presenting card tokens to the user
										Element:ul
										Element:li
											If card token is used, ignore this check
										Element:li
											Get CVC field (remove any non-numeric characters)
										Element:li
											If card is Visa, MasterCard, Discover, Diner’s Club or JCB then the security code must be 3 digits
										Element:li
											If card is American Express then security code must be 4 digits
									Node:
									(type) c
									(layer)3
										Element:footer
