[
{"Url": "http://discovery.organicity.eu/v0/clients/{clientId}/redirecturis", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/RedirectUris", "OptionalParams": [], "ServiceName": "/clients/{clientId}/redirecturis", "RequiredParams": [{"ParamDescription": "The identifier of the client", "ParamName": "clientId"}], "ServiceDescription": "Permission "},
{"Url": "http://discovery.organicity.eu/v0/users", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/UserIdentifier", "OptionalParams": [{"ParamDescription": "Permission <code>accounts-permissions:listUsers</code> required. The offset in the list of users, given as the amount of users to skip. Defaults to <code>0</code>, thus returning the start of the list.", "ParamName": "offset"}, {"ParamDescription": "Permission <code>accounts-permissions:listUsers</code> required. The maximum amount of users to return as the result of the call. Only values between 1 and 50 are allowed, in order to limit the result size. Defaults to <code>50</code>.", "ParamName": "count"}, {"ParamDescription": "Permission <code>accounts-permissions:findUserByEmail</code> required. Using this parameter allows to search for a user by an email address. If found, an HTTP 200 with a list containing one user will be returned, otherwise an HTTP 404 NOT FOUND.", "ParamName": "email"}], "ServiceName": "/users", "RequiredParams": [], "ServiceDescription": "Permission "},
{"Url": "http://discovery.organicity.eu/v0/api/v1/entities/{uuid}/readings", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Response", "OptionalParams": [{"ParamDescription": "function", "ParamName": "function"}, {"ParamDescription": "rollup", "ParamName": "rollup"}, {"ParamDescription": "limit", "ParamName": "limit"}, {"ParamDescription": "offset", "ParamName": "offset"}], "ServiceName": "/api/v1/entities/{uuid}/readings", "RequiredParams": [{"ParamDescription": "uuid", "ParamName": "uuid"}, {"ParamDescription": "attribute_id", "ParamName": "attribute_id"}, {"ParamDescription": "from", "ParamName": "from"}, {"ParamDescription": "to", "ParamName": "to"}], "ServiceDescription": null},
{"Url": "http://discovery.organicity.eu/v0/users/{userId}/roles", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Role", "OptionalParams": [], "ServiceName": "/users/{userId}/roles", "RequiredParams": [{"ParamDescription": "The identifier of the user, as given by the subject field in the user's ID Token (the authentication token handed out by Organicity Accounts on login).", "ParamName": "userId"}], "ServiceDescription": "Permission "},
{"Url": "http://discovery.organicity.eu/v0/users/{userId}/roles/{roleName}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Error", "OptionalParams": [{"ParamDescription": "This field specifies an experiment to check against. The parameter should only be supplied if the given role requires an experiment identifier.", "ParamName": "experiment"}], "ServiceName": "/users/{userId}/roles/{roleName}", "RequiredParams": [{"ParamDescription": "The identifier of the user, as given by the subject field in the user's ID Token (the authentication token handed out by Organicity Accounts on login).", "ParamName": "userId"}, {"ParamDescription": "The role to be checked for. This needs to adhere to the format specified in the <a href=\"#/definitions/Role\">Role Type Definition</a>.", "ParamName": "roleName"}], "ServiceDescription": "Permission "},
{"Url": "http://discovery.organicity.eu/v0/community/experimenter/", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Community", "OptionalParams": [], "ServiceName": "/community/experimenter/", "RequiredParams": [{"ParamDescription": "Authorization token", "ParamName": "Authorization"}], "ServiceDescription": "Get all communities of one experimenter. The experimenter id will be obtained from the token"},
{"Url": "http://discovery.organicity.eu/v0/community/experimenter/{communityId}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Community", "OptionalParams": [], "ServiceName": "/community/experimenter/{communityId}", "RequiredParams": [{"ParamDescription": "Identifier of the community", "ParamName": "communityId"}, {"ParamDescription": "Authorization token", "ParamName": "Authorization"}], "ServiceDescription": "Get an specific community of an experimenter"},
{"Url": "http://discovery.organicity.eu/v0/allexperiments", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Experiment", "OptionalParams": [], "ServiceName": "/allexperiments", "RequiredParams": [], "ServiceDescription": "Get all the existing experiments"},
{"Url": "http://discovery.organicity.eu/v0/assets", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Asset", "OptionalParams": [{"ParamDescription": "Filter assets by their Unique Resource Name", "ParamName": "urn"}, {"ParamDescription": "Filter assets by last updated date", "ParamName": "lastUpdated"}, {"ParamDescription": "Filter assets by type", "ParamName": "type"}, {"ParamDescription": "Sort assets. Supported values are to be defined.", "ParamName": "sort"}, {"ParamDescription": "Filter assets. Supported values are to be defined.", "ParamName": "filter"}, {"ParamDescription": "Order assets DESC or ASC.", "ParamName": "order"}, {"ParamDescription": "Return assets with the given offset of N results.", "ParamName": "offset"}, {"ParamDescription": "Return assets for the given page.", "ParamName": "page"}, {"ParamDescription": "Return N assets per page.", "ParamName": "per"}, {"ParamDescription": "Return a random sample of N assets.", "ParamName": "sample"}], "ServiceName": "/assets", "RequiredParams": [], "ServiceDescription": "Retrieve an assets using multiple criteria"},
{"Url": "http://discovery.organicity.eu/v0/community/facility", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Community", "OptionalParams": [], "ServiceName": "/community/facility", "RequiredParams": [{"ParamDescription": "Authorization token", "ParamName": "Authorization"}], "ServiceDescription": "Get all communities of one facility."},
{"Url": "http://discovery.organicity.eu/v0/emscheck/application-experiment/{expId}/{appId}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Experiment", "OptionalParams": [], "ServiceName": "/emscheck/application-experiment/{expId}/{appId}", "RequiredParams": [{"ParamDescription": "Experiment Id", "ParamName": "expId"}, {"ParamDescription": "Application ID", "ParamName": "appId"}], "ServiceDescription": "Check whether an application belongs to one experiment"},
{"Url": "http://discovery.organicity.eu/v0/assets/experimenters/{experimenterID}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Asset", "OptionalParams": [], "ServiceName": "/assets/experimenters/{experimenterID}", "RequiredParams": [{"ParamDescription": "Filter assets by experimenter", "ParamName": "experimenterID"}], "ServiceDescription": "Return assets from from an experimenter"},
{"Url": "http://discovery.organicity.eu/v0/community/site/{siteName}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/SiteCommunity", "OptionalParams": [], "ServiceName": "/community/site/{siteName}", "RequiredParams": [{"ParamDescription": "Site Mame", "ParamName": "siteName"}, {"ParamDescription": "Authorization token", "ParamName": "Authorization"}], "ServiceDescription": "Get all communities of one site"},
{"Url": "http://discovery.organicity.eu/v0/emscheck/assets-public/{expId}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Experiment", "OptionalParams": [], "ServiceName": "/emscheck/assets-public/{expId}", "RequiredParams": [{"ParamDescription": "Experiment Id", "ParamName": "expId"}], "ServiceDescription": "Check whether an experiment has public assets"},
{"Url": "http://discovery.organicity.eu/v0/assets/experiments/{experimentsID}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Asset", "OptionalParams": [], "ServiceName": "/assets/experiments/{experimentsID}", "RequiredParams": [{"ParamDescription": "Filter assets by experiment", "ParamName": "experimentsID"}], "ServiceDescription": "Return assets from an experiment"},
{"Url": "http://discovery.organicity.eu/v0/community/{name}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Community", "OptionalParams": [], "ServiceName": "/community/{name}", "RequiredParams": [{"ParamDescription": "Community Mame", "ParamName": "name"}, {"ParamDescription": "Authorization token", "ParamName": "Authorization"}], "ServiceDescription": "Get community"},
{"Url": "http://discovery.organicity.eu/v0/emscheck/experimentowner/{experId}/{expId}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Experiment", "OptionalParams": [], "ServiceName": "/emscheck/experimentowner/{experId}/{expId}", "RequiredParams": [{"ParamDescription": "Experimenter Id", "ParamName": "experId"}, {"ParamDescription": "Experiment ID", "ParamName": "expId"}], "ServiceDescription": "Check whether an experimenter is the owner of one experiment"},
{"Url": "http://discovery.organicity.eu/v0/assets/geo/", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/GeoJSONAssets", "OptionalParams": [], "ServiceName": "/assets/geo/", "RequiredParams": [], "ServiceDescription": "Return a list of assets as an array of GeoJSON Feature Collections grouped by Asset Types"},
{"Url": "http://discovery.organicity.eu/v0/invitation/{expId}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Invitation", "OptionalParams": [], "ServiceName": "/invitation/{expId}", "RequiredParams": [{"ParamDescription": "Experiment Id", "ParamName": "expId"}, {"ParamDescription": "Authorization token", "ParamName": "Authorization"}], "ServiceDescription": "Get the invitations of a given participant"},
{"Url": "http://discovery.organicity.eu/v0/emscheck/experimentrunning/{expId}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Experiment", "OptionalParams": [], "ServiceName": "/emscheck/experimentrunning/{expId}", "RequiredParams": [{"ParamDescription": "Experiment Id", "ParamName": "expId"}], "ServiceDescription": "Check whether an experiment is running"},
{"Url": "http://discovery.organicity.eu/v0/assets/geo/search", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/GeoJSONAssets", "OptionalParams": [{"ParamDescription": "Center latitude for geographical queries", "ParamName": "lat"}, {"ParamDescription": "Center longitude for geographical queries", "ParamName": "long"}, {"ParamDescription": "Spherical radius for geographical queries in radians or when km is true in kilometers", "ParamName": "radius"}, {"ParamDescription": "When true sets radius property to work in kilometers", "ParamName": "km"}, {"ParamDescription": "At the moment only query=\"polygon\" is supported", "ParamName": "query"}, {"ParamDescription": "Array of geographical coordinates", "ParamName": "points"}, {"ParamDescription": "IP address", "ParamName": "ip"}, {"ParamDescription": "City name for geographical queries", "ParamName": "city"}], "ServiceName": "/assets/geo/search", "RequiredParams": [], "ServiceDescription": "Return a list of assets filtered by geolocation as an array of GeoJSON Feature Collections grouped by Asset Types"},
{"Url": "http://discovery.organicity.eu/v0/metrics/values/{expId}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/MetricValue", "OptionalParams": [], "ServiceName": "/metrics/values/{expId}", "RequiredParams": [{"ParamDescription": "Experiment Id", "ParamName": "expId"}, {"ParamDescription": "Authorization token", "ParamName": "Authorization"}], "ServiceDescription": "Get metrics values of all participants of one experiment"},
{"Url": "http://discovery.organicity.eu/v0/emscheck/participant-experiment/{parId}/{expId}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Experiment", "OptionalParams": [], "ServiceName": "/emscheck/participant-experiment/{parId}/{expId}", "RequiredParams": [{"ParamDescription": "Experiment Id", "ParamName": "expId"}, {"ParamDescription": "participant ID", "ParamName": "parId"}], "ServiceDescription": "Check whether a participant takes part in the experiment"},
{"Url": "http://discovery.organicity.eu/v0/assets/metadata/search", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Asset", "OptionalParams": [], "ServiceName": "/assets/metadata/search", "RequiredParams": [{"ParamDescription": "metadata query string (use + to include multiple queries)", "ParamName": "query"}], "ServiceDescription": "Return a list of assets filtered by specific metadata"},
{"Url": "http://discovery.organicity.eu/v0/metrics/values/{expId}/{metricName}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/MetricValue", "OptionalParams": [], "ServiceName": "/metrics/values/{expId}/{metricName}", "RequiredParams": [{"ParamDescription": "Experiment Id", "ParamName": "expId"}, {"ParamDescription": "Metric Name", "ParamName": "metricName"}, {"ParamDescription": "Authorization token", "ParamName": "Authorization"}], "ServiceDescription": "Get metrics values of all participants of one experiment"},
{"Url": "http://discovery.organicity.eu/v0/experiments", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Experiment", "OptionalParams": [], "ServiceName": "/experiments", "RequiredParams": [], "ServiceDescription": "Get the description of the experiments belongin to a particular experimenter."},
{"Url": "http://discovery.organicity.eu/v0/assets/ngsiv2", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/AssetNSGI/", "OptionalParams": [{"ParamDescription": "Filter assets by their Unique Resource Name", "ParamName": "urn"}, {"ParamDescription": "Filter assets by last updated date", "ParamName": "lastUpdated"}, {"ParamDescription": "Filter assets by type", "ParamName": "type"}, {"ParamDescription": "Sort assets. Supported values are to be defined.", "ParamName": "sort"}, {"ParamDescription": "Filter assets. Supported values are to be defined.", "ParamName": "filter"}, {"ParamDescription": "Order assets DESC or ASC.", "ParamName": "order"}, {"ParamDescription": "Return assets with the given offset of N results.", "ParamName": "offset"}, {"ParamDescription": "Return assets for the given page.", "ParamName": "page"}, {"ParamDescription": "Return N assets per page.", "ParamName": "per"}, {"ParamDescription": "Return a random sample of N assets.", "ParamName": "sample"}, {"ParamDescription": "Return a list of assets based on metadatadatatata search", "ParamName": "query"}], "ServiceName": "/assets/ngsiv2", "RequiredParams": [], "ServiceDescription": "Retrieve an assets using multiple criteria in NGSI V2"},
{"Url": "http://discovery.organicity.eu/v0/metrics/{expId}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Metrics", "OptionalParams": [], "ServiceName": "/metrics/{expId}", "RequiredParams": [{"ParamDescription": "Experiment Id", "ParamName": "expId"}, {"ParamDescription": "Authorization token", "ParamName": "Authorization"}], "ServiceDescription": "Get all metrics of one experiment"},
{"Url": "http://discovery.organicity.eu/v0/experiments-full/{experId}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Experiment", "OptionalParams": [], "ServiceName": "/experiments-full/{experId}", "RequiredParams": [{"ParamDescription": "Experimenter Id", "ParamName": "experId"}], "ServiceDescription": "Get full infomation of the experiments of one experimenter"},
{"Url": "http://discovery.organicity.eu/v0/assets/providers", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Provider", "OptionalParams": [], "ServiceName": "/assets/providers", "RequiredParams": [], "ServiceDescription": "Return the providers the assets belong to"},
{"Url": "http://discovery.organicity.eu/v0/experiments/{expid}/applications", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Application", "OptionalParams": [], "ServiceName": "/experiments/{expid}/applications", "RequiredParams": [{"ParamDescription": "Experiment ID", "ParamName": "expid"}], "ServiceDescription": "Get all applications bbelonging to one experiment"},
{"Url": "http://discovery.organicity.eu/v0/assets/providers/{provider}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Provider", "OptionalParams": [], "ServiceName": "/assets/providers/{provider}", "RequiredParams": [{"ParamDescription": "Filter providers by provider name", "ParamName": "provider"}], "ServiceDescription": "Return a specific provider"},
{"Url": "http://discovery.organicity.eu/v0/experiments/{expid}/applications/{appid}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Application", "OptionalParams": [], "ServiceName": "/experiments/{expid}/applications/{appid}", "RequiredParams": [{"ParamDescription": "Experiment ID", "ParamName": "expid"}, {"ParamDescription": "Application ID", "ParamName": "appid"}], "ServiceDescription": "Get one application"},
{"Url": "http://discovery.organicity.eu/v0/assets/service/{service}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Service", "OptionalParams": [], "ServiceName": "/assets/service/{service}", "RequiredParams": [{"ParamDescription": "Filter services by service name", "ParamName": "service"}], "ServiceDescription": "Return a specific service (under development)"},
{"Url": "http://discovery.organicity.eu/v0/experiments/{expid}/datasources", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/DataSource", "OptionalParams": [], "ServiceName": "/experiments/{expid}/datasources", "RequiredParams": [{"ParamDescription": "Experiment ID", "ParamName": "expid"}], "ServiceDescription": "Get the urns of the assets selected for an experiment"},
{"Url": "http://discovery.organicity.eu/v0/assets/services", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Service", "OptionalParams": [], "ServiceName": "/assets/services", "RequiredParams": [], "ServiceDescription": "Return the services the assets belong to (under development)"},
{"Url": "http://discovery.organicity.eu/v0/experiments/{expid}/devices", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/DataSource", "OptionalParams": [], "ServiceName": "/experiments/{expid}/devices", "RequiredParams": [{"ParamDescription": "Experiment ID", "ParamName": "expid"}], "ServiceDescription": "Get assets created by the experiment"},
{"Url": "http://discovery.organicity.eu/v0/assets/sites", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Site", "OptionalParams": [], "ServiceName": "/assets/sites", "RequiredParams": [], "ServiceDescription": "Return the sites the assets belong to"},
{"Url": "http://discovery.organicity.eu/v0/experiments/{expId}/mainexperimenter", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/DataSource", "OptionalParams": [], "ServiceName": "/experiments/{expId}/mainexperimenter", "RequiredParams": [{"ParamDescription": "", "ParamName": "expId"}], "ServiceDescription": "Get the ID of the main experimenter"},
{"Url": "http://discovery.organicity.eu/v0/assets/sites/{site}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Site", "OptionalParams": [{"ParamDescription": "Filter site assets by asset type", "ParamName": "type"}], "ServiceName": "/assets/sites/{site}", "RequiredParams": [{"ParamDescription": "Filter sites by site name", "ParamName": "site"}], "ServiceDescription": "Return a specific site"},
{"Url": "http://discovery.organicity.eu/v0/experiments/{expId}/quota", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/DataSource", "OptionalParams": [], "ServiceName": "/experiments/{expId}/quota", "RequiredParams": [{"ParamDescription": "", "ParamName": "expId"}], "ServiceDescription": "Get the overall experiment quota"},
{"Url": "http://discovery.organicity.eu/v0/assets/{assetUrn}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Asset", "OptionalParams": [], "ServiceName": "/assets/{assetUrn}", "RequiredParams": [{"ParamDescription": "Unique Resource Name of the asset", "ParamName": "assetUrn"}], "ServiceDescription": "Return an assets by Unique Resource Name"},
{"Url": "http://discovery.organicity.eu/v0/experiments/{expId}/remainingquota", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/DataSource", "OptionalParams": [], "ServiceName": "/experiments/{expId}/remainingquota", "RequiredParams": [{"ParamDescription": "", "ParamName": "expId"}, {"ParamDescription": "Authorization token", "ParamName": "Authorization"}], "ServiceDescription": "Get the remaining quota of the experiment"},
{"Url": "http://discovery.organicity.eu/v0/assets/{assetUrn}/data", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/AssetData", "OptionalParams": [], "ServiceName": "/assets/{assetUrn}/data", "RequiredParams": [{"ParamDescription": "Unique Resource Name of the asset", "ParamName": "assetUrn"}], "ServiceDescription": "The Asset data following the NGSI 9/10 model defined in Organicity Assets Directory."},
{"Url": "http://discovery.organicity.eu/v0/experiments/{id}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/DataSource", "OptionalParams": [], "ServiceName": "/experiments/{id}", "RequiredParams": [{"ParamDescription": "Experiment ID", "ParamName": "id"}], "ServiceDescription": "Get one experiment"},
{"Url": "http://discovery.organicity.eu/v0/assets/{assetUrn}/data/ngsiv2", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/AssetData_NSGI", "OptionalParams": [], "ServiceName": "/assets/{assetUrn}/data/ngsiv2", "RequiredParams": [{"ParamDescription": "Unique Resource Name of the asset", "ParamName": "assetUrn"}], "ServiceDescription": "The Asset data following the NGSI v2 approach removing the original XML legacy. It also groups the data based on the Assets structure defined in D2.1 Section 4.5.1, this improve performance on data parsing and presentation."},
{"Url": "http://discovery.organicity.eu/v0/assets/{assetUrn}/nearby", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Asset", "OptionalParams": [{"ParamDescription": "Spherical radius for geographical queries", "ParamName": "radius"}, {"ParamDescription": "At the moment only query=\"polygon\" is supported", "ParamName": "query"}, {"ParamDescription": "Array of geographical coordinates. Assets lat and long are taken as starting point.", "ParamName": "points"}, {"ParamDescription": "City name for geographical queries", "ParamName": "city"}], "ServiceName": "/assets/{assetUrn}/nearby", "RequiredParams": [{"ParamDescription": "Unique Resource Name of the asset", "ParamName": "assetUrn"}], "ServiceDescription": "Retrieve assets geograpically close to other assets"},
{"Url": "http://discovery.organicity.eu/v0/assets/{urn}/ngsiv2", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/AssetNSGI/", "OptionalParams": [], "ServiceName": "/assets/{urn}/ngsiv2", "RequiredParams": [{"ParamDescription": "Filter assets by their Unique Resource Name", "ParamName": "urn"}], "ServiceDescription": "Retrieve an assets using multiple criteria in NGSI V2"},
{"Url": "http://discovery.organicity.eu/v0/types", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Types", "OptionalParams": [], "ServiceName": "/types", "RequiredParams": [], "ServiceDescription": "Return the types the assets belong to"},
{"Url": "http://discovery.organicity.eu/v0/types/{types}", "SampleResponse": "http://organicityeu.github.io/api/AssetDiscovery.html#/definitions/Types", "OptionalParams": [], "ServiceName": "/types/{types}", "RequiredParams": [{"ParamDescription": "Filter assets types by assets type name", "ParamName": "types"}], "ServiceDescription": "Return a specific asset types"}
]