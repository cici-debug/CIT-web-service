[
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/v1/me",
    "ServiceName": "/api/v1/me",
    "RequiredParams": [],
    "ServiceDescription": "Returns the identity of the user currently authenticated via OAuth."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/v1/me/karma",
    "ServiceName": "/api/v1/me/karma",
    "RequiredParams": [],
    "ServiceDescription": "Return a breakdown of subreddit karma."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/v1/me/prefs",
    "ServiceName": "/api/v1/me/prefs",
    "RequiredParams": [],
    "ServiceDescription": "Return the preference settings of the logged in user"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/v1/me/prefs",
    "ServiceName": "/api/v1/me/prefs",
    "RequiredParams": [],
    "ServiceDescription": ""
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/v1/me/trophies",
    "ServiceName": "/api/v1/me/trophies",
    "RequiredParams": [],
    "ServiceDescription": "Return a list of trophies for the current user."
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com/prefs/where",
    "ServiceName": "/prefs/where",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      }
    ],
    "ServiceDescription": "This endpoint is <a href=\"#listings\">a listing</a>."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/needs_captcha",
    "ServiceName": "/api/needs_captcha",
    "RequiredParams": [],
    "ServiceDescription": "Check whether ReCAPTCHAs are needed for API methods"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/clearflairtemplates",
    "ServiceName": "[/r/subreddit]/api/clearflairtemplates",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "one of (<code>USER_FLAIR</code>, <code>LINK_FLAIR</code>)",
        "ParamName": "flair_type"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": ""
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/deleteflair",
    "ServiceName": "[/r/subreddit]/api/deleteflair",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "a user by name",
        "ParamName": "name"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": ""
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/deleteflairtemplate",
    "ServiceName": "[/r/subreddit]/api/deleteflairtemplate",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "",
        "ParamName": "flair_template_id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": ""
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/flair",
    "ServiceName": "[/r/subreddit]/api/flair",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "a valid subreddit image name",
        "ParamName": "css_class"
      },
      {
        "ParamDescription": "a <a href=\"#fullname\">fullname</a> of a link",
        "ParamName": "link"
      },
      {
        "ParamDescription": "a user by name",
        "ParamName": "name"
      },
      {
        "ParamDescription": "a string no longer than 64 characters",
        "ParamName": "text"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": ""
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/flairconfig",
    "ServiceName": "[/r/subreddit]/api/flairconfig",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "flair_enabled"
      },
      {
        "ParamDescription": "one of (<code>left</code>, <code>right</code>)",
        "ParamName": "flair_position"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "flair_self_assign_enabled"
      },
      {
        "ParamDescription": "one of (`<code>,</code>left<code>,</code>right`)",
        "ParamName": "link_flair_position"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "link_flair_self_assign_enabled"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": ""
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/flaircsv",
    "ServiceName": "[/r/subreddit]/api/flaircsv",
    "RequiredParams": [
      {
        "ParamDescription": "comma-seperated flair information",
        "ParamName": "flair_csv"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Change the flair of multiple users in the same subreddit with asingle API call."
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com[/r/subreddit]/api/flairlist",
    "ServiceName": "[/r/subreddit]/api/flairlist",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 1000)",
        "ParamName": "limit"
      },
      {
        "ParamDescription": "a user by name",
        "ParamName": "name"
      }
    ],
    "ServiceDescription": "This endpoint is <a href=\"#listings\">a listing</a>."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/flairselector",
    "ServiceName": "[/r/subreddit]/api/flairselector",
    "RequiredParams": [
      {
        "ParamDescription": "a <a href=\"#fullname\">fullname</a> of a link",
        "ParamName": "link"
      },
      {
        "ParamDescription": "a user by name",
        "ParamName": "name"
      }
    ],
    "ServiceDescription": "Return information about a users's flair options."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/flairtemplate",
    "ServiceName": "[/r/subreddit]/api/flairtemplate",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "a valid subreddit image name",
        "ParamName": "css_class"
      },
      {
        "ParamDescription": "",
        "ParamName": "flair_template_id"
      },
      {
        "ParamDescription": "one of (<code>USER_FLAIR</code>, <code>LINK_FLAIR</code>)",
        "ParamName": "flair_type"
      },
      {
        "ParamDescription": "a string no longer than 64 characters",
        "ParamName": "text"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "text_editable"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": ""
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/selectflair",
    "ServiceName": "[/r/subreddit]/api/selectflair",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "",
        "ParamName": "flair_template_id"
      },
      {
        "ParamDescription": "a <a href=\"#fullname\">fullname</a> of a link",
        "ParamName": "link"
      },
      {
        "ParamDescription": "a user by name",
        "ParamName": "name"
      },
      {
        "ParamDescription": "a string no longer than 64 characters",
        "ParamName": "text"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": ""
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/setflairenabled",
    "ServiceName": "[/r/subreddit]/api/setflairenabled",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "flair_enabled"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": ""
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/v1/gold/gild/fullname",
    "ServiceName": "/api/v1/gold/gild/fullname",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "fullname"
      }
    ],
    "ServiceDescription": ""
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/v1/gold/give/username",
    "ServiceName": "/api/v1/gold/give/username",
    "RequiredParams": [
      {
        "ParamDescription": "an integer between 1 and 36",
        "ParamName": "months"
      },
      {
        "ParamDescription": "A valid, existing reddit username",
        "ParamName": "username"
      }
    ],
    "ServiceDescription": ""
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/comment",
    "ServiceName": "/api/comment",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "raw markdown text",
        "ParamName": "text"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of parent thing",
        "ParamName": "thing_id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Submit a new comment or reply to a message."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/del",
    "ServiceName": "/api/del",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing created by the user",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Delete a Link or Comment."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/editusertext",
    "ServiceName": "/api/editusertext",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "raw markdown text",
        "ParamName": "text"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing created by the user",
        "ParamName": "thing_id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Edit the body text of a comment or self-post."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/hide",
    "ServiceName": "/api/hide",
    "RequiredParams": [
      {
        "ParamDescription": "A comma-separated list of link <a href=\"#fullnames\">fullnames</a>",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Hide a link."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/info",
    "ServiceName": "[/r/subreddit]/api/info",
    "RequiredParams": [
      {
        "ParamDescription": "A comma-separated list of thing <a href=\"#fullnames\">fullnames</a>",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a valid URL",
        "ParamName": "url"
      }
    ],
    "ServiceDescription": "Return a listing of things specified by their fullnames."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/lock",
    "ServiceName": "/api/lock",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a link",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Lock a link."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/marknsfw",
    "ServiceName": "/api/marknsfw",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Mark a link NSFW."
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) id of the associated MoreChildren object",
        "ParamName": "id"
      }
    ],
    "Url": "https://www.reddit.com/api/morechildren",
    "ServiceName": "/api/morechildren",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "a comma-delimited list of comment ID36s",
        "ParamName": "children"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a link",
        "ParamName": "link_id"
      },
      {
        "ParamDescription": "one of (<code>confidence</code>, <code>top</code>, <code>new</code>, <code>controversial</code>, <code>old</code>, <code>random</code>, <code>qa</code>, <code>live</code>)",
        "ParamName": "sort"
      }
    ],
    "ServiceDescription": "Retrieve additional comments omitted from a base comment tree."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/report",
    "ServiceName": "/api/report",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "a string no longer than 100 characters",
        "ParamName": "other_reason"
      },
      {
        "ParamDescription": "a string no longer than 100 characters",
        "ParamName": "reason"
      },
      {
        "ParamDescription": "a string no longer than 100 characters",
        "ParamName": "rule_reason"
      },
      {
        "ParamDescription": "a string no longer than 100 characters",
        "ParamName": "site_reason"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "thing_id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Report a link, comment or message."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/save",
    "ServiceName": "/api/save",
    "RequiredParams": [
      {
        "ParamDescription": "a category name",
        "ParamName": "category"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Save a link or comment."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/saved_categories",
    "ServiceName": "/api/saved_categories",
    "RequiredParams": [],
    "ServiceDescription": "Get a list of categories in which things are currently saved."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/sendreplies",
    "ServiceName": "/api/sendreplies",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing created by the user",
        "ParamName": "id"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "state"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Enable or disable inbox replies for a link or comment."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/set_contest_mode",
    "ServiceName": "/api/set_contest_mode",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "",
        "ParamName": "id"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "state"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Set or unset \"contest mode\" for a link's comments."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/set_subreddit_sticky",
    "ServiceName": "/api/set_subreddit_sticky",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "",
        "ParamName": "id"
      },
      {
        "ParamDescription": "an integer between 1 and 2",
        "ParamName": "num"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "state"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Set or unset a Link as the sticky in its subreddit."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/set_suggested_sort",
    "ServiceName": "/api/set_suggested_sort",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "",
        "ParamName": "id"
      },
      {
        "ParamDescription": "one of (<code>confidence</code>, <code>top</code>, <code>new</code>, <code>controversial</code>, <code>old</code>, <code>random</code>, <code>qa</code>, <code>live</code>, <code>blank</code>)",
        "ParamName": "sort"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Set a suggested sort for a link."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/spoiler",
    "ServiceName": "/api/spoiler",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a link",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": ""
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/store_visits",
    "ServiceName": "/api/store_visits",
    "RequiredParams": [
      {
        "ParamDescription": "A comma-separated list of link <a href=\"#fullnames\">fullnames</a>",
        "ParamName": "links"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Requires a subscription to <a href=\"/gold/about\">reddit gold</a>"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/submit",
    "ServiceName": "/api/submit",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "",
        "ParamName": "app"
      },
      {
        "ParamDescription": "extension used for redirects",
        "ParamName": "extension"
      },
      {
        "ParamDescription": "",
        "ParamName": "g-recaptcha-response"
      },
      {
        "ParamDescription": "one of (<code>link</code>, <code>self</code>, <code>image</code>)",
        "ParamName": "kind"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "resubmit"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "sendreplies"
      },
      {
        "ParamDescription": "name of a subreddit",
        "ParamName": "sr"
      },
      {
        "ParamDescription": "raw markdown text",
        "ParamName": "text"
      },
      {
        "ParamDescription": "title of the submission. up to 300 characters long",
        "ParamName": "title"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      },
      {
        "ParamDescription": "a valid URL",
        "ParamName": "url"
      }
    ],
    "ServiceDescription": "Submit a link to a subreddit."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/unhide",
    "ServiceName": "/api/unhide",
    "RequiredParams": [
      {
        "ParamDescription": "A comma-separated list of link <a href=\"#fullnames\">fullnames</a>",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Unhide a link."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/unlock",
    "ServiceName": "/api/unlock",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a link",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Unlock a link."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/unmarknsfw",
    "ServiceName": "/api/unmarknsfw",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Remove the NSFW marking from a link."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/unsave",
    "ServiceName": "/api/unsave",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Unsave a link or comment."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/unspoiler",
    "ServiceName": "/api/unspoiler",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a link",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": ""
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/vote",
    "ServiceName": "/api/vote",
    "RequiredParams": [
      {
        "ParamDescription": "vote direction. one of (1, 0, -1)",
        "ParamName": "dir"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "an integer greater than 1",
        "ParamName": "rank"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Cast a vote on a thing."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/by_id/names",
    "ServiceName": "/by_id/names",
    "RequiredParams": [
      {
        "ParamDescription": "A comma-separated list of link <a href=\"#fullnames\">fullnames</a>",
        "ParamName": "names"
      }
    ],
    "ServiceDescription": "Get a listing of links by fullname."
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) ID36 of a comment",
        "ParamName": "comment"
      },
      {
        "ParamDescription": "(optional) an integer",
        "ParamName": "depth"
      },
      {
        "ParamDescription": "(optional) an integer",
        "ParamName": "limit"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com[/r/subreddit]/comments/article",
    "ServiceName": "[/r/subreddit]/comments/article",
    "RequiredParams": [
      {
        "ParamDescription": "ID36 of a link",
        "ParamName": "article"
      },
      {
        "ParamDescription": "an integer between 0 and 8",
        "ParamName": "context"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "showedits"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "showmore"
      },
      {
        "ParamDescription": "one of (<code>confidence</code>, <code>top</code>, <code>new</code>, <code>controversial</code>, <code>old</code>, <code>random</code>, <code>qa</code>, <code>live</code>)",
        "ParamName": "sort"
      }
    ],
    "ServiceDescription": "Get the comment tree for a given Link <code>article</code>."
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com/duplicates/article",
    "ServiceName": "/duplicates/article",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "The base 36 ID of a Link",
        "ParamName": "article"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      }
    ],
    "ServiceDescription": "Return a list of other submissions of the same URL"
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com[/r/subreddit]/hot",
    "ServiceName": "[/r/subreddit]/hot",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      }
    ],
    "ServiceDescription": "This endpoint is <a href=\"#listings\">a listing</a>."
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com[/r/subreddit]/new",
    "ServiceName": "[/r/subreddit]/new",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      }
    ],
    "ServiceDescription": "This endpoint is <a href=\"#listings\">a listing</a>."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/random",
    "ServiceName": "[/r/subreddit]/random",
    "RequiredParams": [],
    "ServiceDescription": "The Serendipity button"
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com[/r/subreddit]/rising",
    "ServiceName": "[/r/subreddit]/rising",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      }
    ],
    "ServiceDescription": "This endpoint is <a href=\"#listings\">a listing</a>."
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com[/r/subreddit]/sort",
    "ServiceName": "[/r/subreddit]/sort",
    "RequiredParams": [
      {
        "ParamDescription": "one of (<code>hour</code>, <code>day</code>, <code>week</code>, <code>month</code>, <code>year</code>, <code>all</code>)",
        "ParamName": "t"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      }
    ],
    "ServiceDescription": "This endpoint is <a href=\"#listings\">a listing</a>."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/live/by_id/names",
    "ServiceName": "/api/live/by_id/names",
    "RequiredParams": [
      {
        "ParamDescription": "A comma-separated list of ids",
        "ParamName": "names"
      }
    ],
    "ServiceDescription": "Get a listing of live events by id."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/live/create",
    "ServiceName": "/api/live/create",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "raw markdown text",
        "ParamName": "description"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "nsfw"
      },
      {
        "ParamDescription": "raw markdown text",
        "ParamName": "resources"
      },
      {
        "ParamDescription": "a string no longer than 120 characters",
        "ParamName": "title"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Create a new live thread."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/live/happening_now",
    "ServiceName": "/api/live/happening_now",
    "RequiredParams": [],
    "ServiceDescription": "Get some basic information about the currently featured live thread."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/live/thread/accept_contributor_invite",
    "ServiceName": "/api/live/thread/accept_contributor_invite",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Accept a pending invitation to contribute to the thread."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/live/thread/close_thread",
    "ServiceName": "/api/live/thread/close_thread",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Permanently close the thread, disallowing future updates."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/live/thread/delete_update",
    "ServiceName": "/api/live/thread/delete_update",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "the ID of a single update. e.g. <code>LiveUpdate_ff87068e-a126-11e3-9f93-12313b0b3603</code>",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Delete an update from the thread."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/live/thread/edit",
    "ServiceName": "/api/live/thread/edit",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "raw markdown text",
        "ParamName": "description"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "nsfw"
      },
      {
        "ParamDescription": "raw markdown text",
        "ParamName": "resources"
      },
      {
        "ParamDescription": "a string no longer than 120 characters",
        "ParamName": "title"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Configure the thread."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/live/thread/invite_contributor",
    "ServiceName": "/api/live/thread/invite_contributor",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "the name of an existing user",
        "ParamName": "name"
      },
      {
        "ParamDescription": "permission description e.g. <code>+update,+edit,-manage</code>",
        "ParamName": "permissions"
      },
      {
        "ParamDescription": "one of (<code>liveupdate_contributor_invite</code>, <code>liveupdate_contributor</code>)",
        "ParamName": "type"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Invite another user to contribute to the thread."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/live/thread/leave_contributor",
    "ServiceName": "/api/live/thread/leave_contributor",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Abdicate contributorship of the thread."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/live/thread/report",
    "ServiceName": "/api/live/thread/report",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "one of (<code>spam</code>, <code>vote-manipulation</code>, <code>personal-information</code>, <code>sexualizing-minors</code>, <code>site-breaking</code>)",
        "ParamName": "type"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Report the thread for violating the rules of reddit."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/live/thread/rm_contributor",
    "ServiceName": "/api/live/thread/rm_contributor",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a account",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Revoke another user's contributorship."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/live/thread/rm_contributor_invite",
    "ServiceName": "/api/live/thread/rm_contributor_invite",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a account",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Revoke an outstanding contributor invite."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/live/thread/set_contributor_permissions",
    "ServiceName": "/api/live/thread/set_contributor_permissions",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "the name of an existing user",
        "ParamName": "name"
      },
      {
        "ParamDescription": "permission description e.g. <code>+update,+edit,-manage</code>",
        "ParamName": "permissions"
      },
      {
        "ParamDescription": "one of (<code>liveupdate_contributor_invite</code>, <code>liveupdate_contributor</code>)",
        "ParamName": "type"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Change a contributor or contributor invite's permissions."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/live/thread/strike_update",
    "ServiceName": "/api/live/thread/strike_update",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "the ID of a single update. e.g. <code>LiveUpdate_ff87068e-a126-11e3-9f93-12313b0b3603</code>",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Strike (mark incorrect and cross out) the content of an update."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/live/thread/update",
    "ServiceName": "/api/live/thread/update",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "raw markdown text",
        "ParamName": "body"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Post an update to the thread."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/live/thread",
    "ServiceName": "/live/thread",
    "RequiredParams": [
      {
        "ParamDescription": "the ID of a single update. e.g. <code>LiveUpdate_ff87068e-a126-11e3-9f93-12313b0b3603</code>",
        "ParamName": "after"
      },
      {
        "ParamDescription": "the ID of a single update. e.g. <code>LiveUpdate_ff87068e-a126-11e3-9f93-12313b0b3603</code>",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "(internal use only)",
        "ParamName": "is_embed"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      },
      {
        "ParamDescription": "subreddit name",
        "ParamName": "stylesr"
      }
    ],
    "ServiceDescription": "Get a list of updates posted in this thread."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/live/thread/about",
    "ServiceName": "/live/thread/about",
    "RequiredParams": [],
    "ServiceDescription": "Get some basic information about the live thread."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/live/thread/contributors",
    "ServiceName": "/live/thread/contributors",
    "RequiredParams": [],
    "ServiceDescription": "Get a list of users that contribute to this thread."
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com/live/thread/discussions",
    "ServiceName": "/live/thread/discussions",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      }
    ],
    "ServiceDescription": "Get a list of reddit submissions linking to this thread."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/block",
    "ServiceName": "/api/block",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "For blocking via inbox."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/collapse_message",
    "ServiceName": "/api/collapse_message",
    "RequiredParams": [
      {
        "ParamDescription": "A comma-separated list of thing <a href=\"#fullnames\">fullnames</a>",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Collapse a message"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/compose",
    "ServiceName": "/api/compose",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "subreddit name",
        "ParamName": "from_sr"
      },
      {
        "ParamDescription": "",
        "ParamName": "g-recaptcha-response"
      },
      {
        "ParamDescription": "a string no longer than 100 characters",
        "ParamName": "subject"
      },
      {
        "ParamDescription": "raw markdown text",
        "ParamName": "text"
      },
      {
        "ParamDescription": "the name of an existing user",
        "ParamName": "to"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Handles message composition under /message/compose."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/del_msg",
    "ServiceName": "/api/del_msg",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Delete messages from the recipient's view of their inbox."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/read_all_messages",
    "ServiceName": "/api/read_all_messages",
    "RequiredParams": [
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Queue up marking all messages for a user as read."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/read_message",
    "ServiceName": "/api/read_message",
    "RequiredParams": [
      {
        "ParamDescription": "A comma-separated list of thing <a href=\"#fullnames\">fullnames</a>",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": ""
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/unblock_subreddit",
    "ServiceName": "/api/unblock_subreddit",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": ""
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/uncollapse_message",
    "ServiceName": "/api/uncollapse_message",
    "RequiredParams": [
      {
        "ParamDescription": "A comma-separated list of thing <a href=\"#fullnames\">fullnames</a>",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Uncollapse a message"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/unread_message",
    "ServiceName": "/api/unread_message",
    "RequiredParams": [
      {
        "ParamDescription": "A comma-separated list of thing <a href=\"#fullnames\">fullnames</a>",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": ""
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com/message/where",
    "ServiceName": "/message/where",
    "RequiredParams": [
      {
        "ParamDescription": "one of (<code>true</code>, <code>false</code>)",
        "ParamName": "mark"
      },
      {
        "ParamDescription": "",
        "ParamName": "mid"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      }
    ],
    "ServiceDescription": "This endpoint is <a href=\"#listings\">a listing</a>."
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) An OAuth2 scope string",
        "ParamName": "scopes"
      }
    ],
    "Url": "https://www.reddit.com/api/v1/scopes",
    "ServiceName": "/api/v1/scopes",
    "RequiredParams": [],
    "ServiceDescription": "Retrieve descriptions of reddit's OAuth2 scopes."
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) a moderator filter",
        "ParamName": "mod"
      },
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com[/r/subreddit]/about/log",
    "ServiceName": "[/r/subreddit]/about/log",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 500)",
        "ParamName": "limit"
      },
      {
        "ParamDescription": "one of (<code>banuser</code>, <code>unbanuser</code>, <code>removelink</code>, <code>approvelink</code>, <code>removecomment</code>, <code>approvecomment</code>, <code>addmoderator</code>, <code>invitemoderator</code>, <code>uninvitemoderator</code>, <code>acceptmoderatorinvite</code>, <code>removemoderator</code>, <code>addcontributor</code>, <code>removecontributor</code>, <code>editsettings</code>, <code>editflair</code>, <code>distinguish</code>, <code>marknsfw</code>, <code>wikibanned</code>, <code>wikicontributor</code>, <code>wikiunbanned</code>, <code>wikipagelisted</code>, <code>removewikicontributor</code>, <code>wikirevise</code>, <code>wikipermlevel</code>, <code>ignorereports</code>, <code>unignorereports</code>, <code>setpermissions</code>, <code>setsuggestedsort</code>, <code>sticky</code>, <code>unsticky</code>, <code>setcontestmode</code>, <code>unsetcontestmode</code>, <code>lock</code>, <code>unlock</code>, <code>muteuser</code>, <code>unmuteuser</code>, <code>createrule</code>, <code>editrule</code>, <code>deleterule</code>, <code>spoiler</code>, <code>unspoiler</code>, <code>modmail_enrollment</code>)",
        "ParamName": "type"
      }
    ],
    "ServiceDescription": "Get a list of recent moderation actions."
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com[/r/subreddit]/about/location",
    "ServiceName": "[/r/subreddit]/about/location",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      },
      {
        "ParamDescription": "",
        "ParamName": "location"
      },
      {
        "ParamDescription": "one of (<code>links</code>, <code>comments</code>)",
        "ParamName": "only"
      }
    ],
    "ServiceDescription": "Return a listing of posts relevant to moderators."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/accept_moderator_invite",
    "ServiceName": "[/r/subreddit]/api/accept_moderator_invite",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Accept an invite to moderate the specified subreddit."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/approve",
    "ServiceName": "/api/approve",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Approve a link or comment."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/distinguish",
    "ServiceName": "/api/distinguish",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "one of (<code>yes</code>, <code>no</code>, <code>admin</code>, <code>special</code>)",
        "ParamName": "how"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Distinguish a thing's author with a sigil."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/ignore_reports",
    "ServiceName": "/api/ignore_reports",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Prevent future reports on a thing from causing notifications."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/leavecontributor",
    "ServiceName": "/api/leavecontributor",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Abdicate approved submitter status in a subreddit."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/leavemoderator",
    "ServiceName": "/api/leavemoderator",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Abdicate moderator status in a subreddit."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/mute_message_author",
    "ServiceName": "/api/mute_message_author",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "For muting user via modmail."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/remove",
    "ServiceName": "/api/remove",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "spam"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Remove a link, comment, or modmail message."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/unignore_reports",
    "ServiceName": "/api/unignore_reports",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Allow future reports on a thing to cause notifications."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/unmute_message_author",
    "ServiceName": "/api/unmute_message_author",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "For unmuting user via modmail."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/stylesheet",
    "ServiceName": "[/r/subreddit]/stylesheet",
    "RequiredParams": [],
    "ServiceDescription": "Redirect to the subreddit's stylesheet if one exists."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/mod/bulk_read",
    "ServiceName": "/api/mod/bulk_read",
    "RequiredParams": [
      {
        "ParamDescription": "comma-delimited list of subreddit names",
        "ParamName": "entity"
      },
      {
        "ParamDescription": "one of (<code>new</code>, <code>inprogress</code>, <code>mod</code>, <code>notifications</code>, <code>archived</code>, <code>highlighted</code>, <code>all</code>)",
        "ParamName": "state"
      }
    ],
    "ServiceDescription": "Marks all conversations read for a particular conversation statewithin the passed list of subreddits."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/mod/conversations",
    "ServiceName": "/api/mod/conversations",
    "RequiredParams": [
      {
        "ParamDescription": "base36 modmail conversation id",
        "ParamName": "after"
      },
      {
        "ParamDescription": "comma-delimited list of subreddit names",
        "ParamName": "entity"
      },
      {
        "ParamDescription": "an integer (default: 25)",
        "ParamName": "limit"
      },
      {
        "ParamDescription": "one of (<code>recent</code>, <code>mod</code>, <code>user</code>, <code>unread</code>)",
        "ParamName": "sort"
      },
      {
        "ParamDescription": "one of (<code>new</code>, <code>inprogress</code>, <code>mod</code>, <code>notifications</code>, <code>archived</code>, <code>highlighted</code>, <code>all</code>)",
        "ParamName": "state"
      }
    ],
    "ServiceDescription": "Get conversations for a logged in user or subreddits"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/mod/conversations",
    "ServiceName": "/api/mod/conversations",
    "RequiredParams": [
      {
        "ParamDescription": "raw markdown text",
        "ParamName": "body"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "isAuthorHidden"
      },
      {
        "ParamDescription": "subreddit name",
        "ParamName": "srName"
      },
      {
        "ParamDescription": "a string no longer than 100 characters",
        "ParamName": "subject"
      },
      {
        "ParamDescription": "Modmail conversation recipient <a href=\"#fullname\">fullname</a>",
        "ParamName": "to"
      }
    ],
    "ServiceDescription": "Creates a new conversation for a particular SR  "
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/mod/conversations/:conversation_id",
    "ServiceName": "/api/mod/conversations/:conversation_id",
    "RequiredParams": [
      {
        "ParamDescription": "base36 modmail conversation id",
        "ParamName": "conversation_id"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "markRead"
      }
    ],
    "ServiceDescription": "Returns all messages, mod actions and conversation metadatafor a given conversation id"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/mod/conversations/:conversation_id",
    "ServiceName": "/api/mod/conversations/:conversation_id",
    "RequiredParams": [
      {
        "ParamDescription": "raw markdown text",
        "ParamName": "body"
      },
      {
        "ParamDescription": "base36 modmail conversation id",
        "ParamName": "conversation_id"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "isAuthorHidden"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "isInternal"
      }
    ],
    "ServiceDescription": "Creates a new message for a particular conversation"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/mod/conversations/:conversation_id/archive",
    "ServiceName": "/api/mod/conversations/:conversation_id/archive",
    "RequiredParams": [
      {
        "ParamDescription": "base36 modmail conversation id",
        "ParamName": "conversation_id"
      }
    ],
    "ServiceDescription": "Marks a conversation as archived."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/mod/conversations/:conversation_id/highlight",
    "ServiceName": "/api/mod/conversations/:conversation_id/highlight",
    "RequiredParams": [
      {
        "ParamDescription": "base36 modmail conversation id",
        "ParamName": "conversation_id"
      }
    ],
    "ServiceDescription": "Removes a highlight from a conversation."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/mod/conversations/:conversation_id/highlight",
    "ServiceName": "/api/mod/conversations/:conversation_id/highlight",
    "RequiredParams": [
      {
        "ParamDescription": "base36 modmail conversation id",
        "ParamName": "conversation_id"
      }
    ],
    "ServiceDescription": "Marks a conversation as highlighted."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/mod/conversations/:conversation_id/mute",
    "ServiceName": "/api/mod/conversations/:conversation_id/mute",
    "RequiredParams": [
      {
        "ParamDescription": "base36 modmail conversation id",
        "ParamName": "conversation_id"
      }
    ],
    "ServiceDescription": "Mutes the non mod user associated with a particular conversation."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/mod/conversations/:conversation_id/unarchive",
    "ServiceName": "/api/mod/conversations/:conversation_id/unarchive",
    "RequiredParams": [
      {
        "ParamDescription": "base36 modmail conversation id",
        "ParamName": "conversation_id"
      }
    ],
    "ServiceDescription": "Marks conversation as unarchived."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/mod/conversations/:conversation_id/unmute",
    "ServiceName": "/api/mod/conversations/:conversation_id/unmute",
    "RequiredParams": [
      {
        "ParamDescription": "base36 modmail conversation id",
        "ParamName": "conversation_id"
      }
    ],
    "ServiceDescription": "Unmutes the non mod user associated witha particular conversation."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/mod/conversations/:conversation_id/user",
    "ServiceName": "/api/mod/conversations/:conversation_id/user",
    "RequiredParams": [
      {
        "ParamDescription": "base36 modmail conversation id",
        "ParamName": "conversation_id"
      }
    ],
    "ServiceDescription": "Returns recent posts, comments and modmail conversations for agiven user."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/mod/conversations/read",
    "ServiceName": "/api/mod/conversations/read",
    "RequiredParams": [
      {
        "ParamDescription": "A comma-separated list of items",
        "ParamName": "conversationIds"
      }
    ],
    "ServiceDescription": "Marks a conversations as read for the user."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/mod/conversations/subreddits",
    "ServiceName": "/api/mod/conversations/subreddits",
    "RequiredParams": [],
    "ServiceDescription": "Returns a list of srs that the user moderates that are alsoenrolled in the new modmail"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/mod/conversations/unread",
    "ServiceName": "/api/mod/conversations/unread",
    "RequiredParams": [
      {
        "ParamDescription": "A comma-separated list of items",
        "ParamName": "conversationIds"
      }
    ],
    "ServiceDescription": "Marks conversations as unread for the user."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/mod/conversations/unread/count",
    "ServiceName": "/api/mod/conversations/unread/count",
    "RequiredParams": [],
    "ServiceDescription": "Endpoint to retrieve the unread conversation count byconversation state."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/multi/copy",
    "ServiceName": "/api/multi/copy",
    "RequiredParams": [
      {
        "ParamDescription": "a string no longer than 50 characters",
        "ParamName": "display_name"
      },
      {
        "ParamDescription": "multireddit url path",
        "ParamName": "from"
      },
      {
        "ParamDescription": "destination multireddit url path",
        "ParamName": "to"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Copy a multi."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/multi/mine",
    "ServiceName": "/api/multi/mine",
    "RequiredParams": [
      {
        "ParamDescription": "boolean value",
        "ParamName": "expand_srs"
      }
    ],
    "ServiceDescription": "Fetch a list of multis belonging to the current user."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/multi/rename",
    "ServiceName": "/api/multi/rename",
    "RequiredParams": [
      {
        "ParamDescription": "a string no longer than 50 characters",
        "ParamName": "display_name"
      },
      {
        "ParamDescription": "multireddit url path",
        "ParamName": "from"
      },
      {
        "ParamDescription": "destination multireddit url path",
        "ParamName": "to"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Rename a multi."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/multi/user/username",
    "ServiceName": "/api/multi/user/username",
    "RequiredParams": [
      {
        "ParamDescription": "boolean value",
        "ParamName": "expand_srs"
      },
      {
        "ParamDescription": "A valid, existing reddit username",
        "ParamName": "username"
      }
    ],
    "ServiceDescription": "Fetch a list of public multis belonging to <code>username</code>"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/multi/multipath",
    "ServiceName": "/api/multi/multipath",
    "RequiredParams": [
      {
        "ParamDescription": "multireddit url path",
        "ParamName": "multipath"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "expand_srs"
      }
    ],
    "ServiceDescription": "Delete a multi."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/multi/multipath",
    "ServiceName": "/api/multi/multipath",
    "RequiredParams": [
      {
        "ParamDescription": "boolean value",
        "ParamName": "expand_srs"
      },
      {
        "ParamDescription": "multireddit url path",
        "ParamName": "multipath"
      }
    ],
    "ServiceDescription": "Fetch a multi's data and subreddit list by name."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/multi/multipath",
    "ServiceName": "/api/multi/multipath",
    "RequiredParams": [
      {
        "ParamDescription": "json data:",
        "ParamName": "model"
      },
      {
        "ParamDescription": "multireddit url path",
        "ParamName": "multipath"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "expand_srs"
      }
    ],
    "ServiceDescription": "Create a multi. Responds with 409 Conflict if it already exists."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/multi/multipath",
    "ServiceName": "/api/multi/multipath",
    "RequiredParams": [
      {
        "ParamDescription": "json data:",
        "ParamName": "model"
      },
      {
        "ParamDescription": "multireddit url path",
        "ParamName": "multipath"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "expand_srs"
      }
    ],
    "ServiceDescription": "Create or update a multi."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/multi/multipath/description",
    "ServiceName": "/api/multi/multipath/description",
    "RequiredParams": [
      {
        "ParamDescription": "multireddit url path",
        "ParamName": "multipath"
      }
    ],
    "ServiceDescription": "Get a multi's description."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/multi/multipath/description",
    "ServiceName": "/api/multi/multipath/description",
    "RequiredParams": [
      {
        "ParamDescription": "json data:",
        "ParamName": "model"
      },
      {
        "ParamDescription": "multireddit url path",
        "ParamName": "multipath"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Change a multi's markdown description."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/multi/multipath/r/srname",
    "ServiceName": "/api/multi/multipath/r/srname",
    "RequiredParams": [
      {
        "ParamDescription": "multireddit url path",
        "ParamName": "multipath"
      },
      {
        "ParamDescription": "subreddit name",
        "ParamName": "srname"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Remove a subreddit from a multi."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/multi/multipath/r/srname",
    "ServiceName": "/api/multi/multipath/r/srname",
    "RequiredParams": [
      {
        "ParamDescription": "multireddit url path",
        "ParamName": "multipath"
      },
      {
        "ParamDescription": "subreddit name",
        "ParamName": "srname"
      }
    ],
    "ServiceDescription": "Get data about a subreddit in a multi."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/multi/multipath/r/srname",
    "ServiceName": "/api/multi/multipath/r/srname",
    "RequiredParams": [
      {
        "ParamDescription": "json data:",
        "ParamName": "model"
      },
      {
        "ParamDescription": "multireddit url path",
        "ParamName": "multipath"
      },
      {
        "ParamDescription": "subreddit name",
        "ParamName": "srname"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Add a subreddit to a multi."
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      },
      {
        "ParamDescription": "(optional) comma-delimited list of result types (<code>sr</code>, <code>link</code>)",
        "ParamName": "type"
      }
    ],
    "Url": "https://www.reddit.com[/r/subreddit]/search",
    "ServiceName": "[/r/subreddit]/search",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "include_facets"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      },
      {
        "ParamDescription": "a string no longer than 512 characters",
        "ParamName": "q"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "restrict_sr"
      },
      {
        "ParamDescription": "one of (<code>relevance</code>, <code>hot</code>, <code>top</code>, <code>new</code>, <code>comments</code>)",
        "ParamName": "sort"
      },
      {
        "ParamDescription": "one of (<code>cloudsearch</code>, <code>lucene</code>, <code>plain</code>)",
        "ParamName": "syntax"
      },
      {
        "ParamDescription": "one of (<code>hour</code>, <code>day</code>, <code>week</code>, <code>month</code>, <code>year</code>, <code>all</code>)",
        "ParamName": "t"
      }
    ],
    "ServiceDescription": "Search links page."
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com[/r/subreddit]/about/where",
    "ServiceName": "[/r/subreddit]/about/where",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      },
      {
        "ParamDescription": "A valid, existing reddit username",
        "ParamName": "user"
      }
    ],
    "ServiceDescription": "This endpoint is <a href=\"#listings\">a listing</a>."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/delete_sr_banner",
    "ServiceName": "[/r/subreddit]/api/delete_sr_banner",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Remove the subreddit's custom mobile banner."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/delete_sr_header",
    "ServiceName": "[/r/subreddit]/api/delete_sr_header",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Remove the subreddit's custom header image."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/delete_sr_icon",
    "ServiceName": "[/r/subreddit]/api/delete_sr_icon",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Remove the subreddit's custom mobile icon."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/delete_sr_img",
    "ServiceName": "[/r/subreddit]/api/delete_sr_img",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "a valid subreddit image name",
        "ParamName": "img_name"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Remove an image from the subreddit's custom image set."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/recommend/sr/srnames",
    "ServiceName": "/api/recommend/sr/srnames",
    "RequiredParams": [
      {
        "ParamDescription": "comma-delimited list of subreddit names",
        "ParamName": "omit"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "over_18"
      },
      {
        "ParamDescription": "comma-delimited list of subreddit names",
        "ParamName": "srnames"
      }
    ],
    "ServiceDescription": "Return subreddits recommended for the given subreddit(s)."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/search_reddit_names",
    "ServiceName": "/api/search_reddit_names",
    "RequiredParams": [
      {
        "ParamDescription": "boolean value",
        "ParamName": "exact"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "include_over_18"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "include_unadvertisable"
      },
      {
        "ParamDescription": "a string up to 50 characters long, consisting of printable characters.",
        "ParamName": "query"
      }
    ],
    "ServiceDescription": "List subreddit names that begin with a query string."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/site_admin",
    "ServiceName": "/api/site_admin",
    "RequiredParams": [
      {
        "ParamDescription": "boolean value",
        "ParamName": "allow_images"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "allow_top"
      },
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "collapse_deleted_comments"
      },
      {
        "ParamDescription": "an integer between 0 and 1440 (default: 0)",
        "ParamName": "comment_score_hide_mins"
      },
      {
        "ParamDescription": "raw markdown text",
        "ParamName": "description"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "exclude_banned_modqueue"
      },
      {
        "ParamDescription": "",
        "ParamName": "g-recaptcha-response"
      },
      {
        "ParamDescription": "a string no longer than 500 characters",
        "ParamName": "header-title"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "hide_ads"
      },
      {
        "ParamDescription": "a valid IETF language tag (underscore separated)",
        "ParamName": "lang"
      },
      {
        "ParamDescription": "one of (<code>any</code>, <code>link</code>, <code>self</code>)",
        "ParamName": "link_type"
      },
      {
        "ParamDescription": "subreddit name",
        "ParamName": "name"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "over_18"
      },
      {
        "ParamDescription": "raw markdown text",
        "ParamName": "public_description"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "public_traffic"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "show_media"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "show_media_preview"
      },
      {
        "ParamDescription": "one of (<code>low</code>, <code>high</code>, <code>all</code>)",
        "ParamName": "spam_comments"
      },
      {
        "ParamDescription": "one of (<code>low</code>, <code>high</code>, <code>all</code>)",
        "ParamName": "spam_links"
      },
      {
        "ParamDescription": "one of (<code>low</code>, <code>high</code>, <code>all</code>)",
        "ParamName": "spam_selfposts"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "spoilers_enabled"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "sr"
      },
      {
        "ParamDescription": "a string no longer than 60 characters",
        "ParamName": "submit_link_label"
      },
      {
        "ParamDescription": "raw markdown text",
        "ParamName": "submit_text"
      },
      {
        "ParamDescription": "a string no longer than 60 characters",
        "ParamName": "submit_text_label"
      },
      {
        "ParamDescription": "one of (<code>confidence</code>, <code>top</code>, <code>new</code>, <code>controversial</code>, <code>old</code>, <code>random</code>, <code>qa</code>, <code>live</code>)",
        "ParamName": "suggested_comment_sort"
      },
      {
        "ParamDescription": "subreddit name",
        "ParamName": "theme_sr"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "theme_sr_update"
      },
      {
        "ParamDescription": "a string no longer than 100 characters",
        "ParamName": "title"
      },
      {
        "ParamDescription": "one of (<code>gold_restricted</code>, <code>archived</code>, <code>restricted</code>, <code>employees_only</code>, <code>gold_only</code>, <code>private</code>, <code>user</code>, <code>public</code>)",
        "ParamName": "type"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      },
      {
        "ParamDescription": "an integer greater than 0 (default: 0)",
        "ParamName": "wiki_edit_age"
      },
      {
        "ParamDescription": "an integer greater than 0 (default: 0)",
        "ParamName": "wiki_edit_karma"
      },
      {
        "ParamDescription": "one of (<code>disabled</code>, <code>modonly</code>, <code>anyone</code>)",
        "ParamName": "wikimode"
      }
    ],
    "ServiceDescription": "Create or configure a subreddit."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/submit_text",
    "ServiceName": "[/r/subreddit]/api/submit_text",
    "RequiredParams": [],
    "ServiceDescription": "Get the submission text for the subreddit."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/subreddit_stylesheet",
    "ServiceName": "[/r/subreddit]/api/subreddit_stylesheet",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "one of (<code>save</code>, <code>preview</code>)",
        "ParamName": "op"
      },
      {
        "ParamDescription": "a string up to 256 characters long, consisting of printable characters.",
        "ParamName": "reason"
      },
      {
        "ParamDescription": "the new stylesheet content",
        "ParamName": "stylesheet_contents"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Update a subreddit's stylesheet."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/subreddits_by_topic",
    "ServiceName": "/api/subreddits_by_topic",
    "RequiredParams": [
      {
        "ParamDescription": "a string no longer than 50 characters",
        "ParamName": "query"
      }
    ],
    "ServiceDescription": "Return a list of subreddits that are relevant to a search query."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/subscribe",
    "ServiceName": "/api/subscribe",
    "RequiredParams": [
      {
        "ParamDescription": "one of (<code>sub</code>, <code>unsub</code>)",
        "ParamName": "action"
      },
      {
        "ParamDescription": "boolean value",
        "ParamName": "skip_initial_defaults"
      },
      {
        "ParamDescription": "A comma-separated list of subreddit <a href=\"#fullname\">fullnames</a> (when using the \"sr\" parameter), or of subreddit names (when using the \"sr_name\" parameter).",
        "ParamName": "sr / sr_name"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Subscribe to or unsubscribe from a subreddit."
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) can be ignored",
        "ParamName": "formid"
      }
    ],
    "Url": "https://www.reddit.com[/r/subreddit]/api/upload_sr_img",
    "ServiceName": "[/r/subreddit]/api/upload_sr_img",
    "RequiredParams": [
      {
        "ParamDescription": "file upload with maximum size of 500 KiB",
        "ParamName": "file"
      },
      {
        "ParamDescription": "an integer between 0 and 1",
        "ParamName": "header"
      },
      {
        "ParamDescription": "one of <code>png</code> or <code>jpg</code> (default: <code>png</code>)",
        "ParamName": "img_type"
      },
      {
        "ParamDescription": "a valid subreddit image name",
        "ParamName": "name"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      },
      {
        "ParamDescription": "one of (<code>img</code>, <code>header</code>, <code>icon</code>, <code>banner</code>)",
        "ParamName": "upload_type"
      }
    ],
    "ServiceDescription": "Add or replace a subreddit image, custom header logo, custom mobileicon, or custom mobile banner."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/r/subreddit/about",
    "ServiceName": "/r/subreddit/about",
    "RequiredParams": [],
    "ServiceDescription": "Return information about the subreddit."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/r/subreddit/about/edit",
    "ServiceName": "/r/subreddit/about/edit",
    "RequiredParams": [
      {
        "ParamDescription": "one of (<code>true</code>, <code>false</code>)",
        "ParamName": "created"
      },
      {
        "ParamDescription": "",
        "ParamName": "location"
      }
    ],
    "ServiceDescription": "Get the current settings of a subreddit."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/r/subreddit/about/rules",
    "ServiceName": "/r/subreddit/about/rules",
    "RequiredParams": [],
    "ServiceDescription": "Get the rules for the current subreddit"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/sidebar",
    "ServiceName": "[/r/subreddit]/sidebar",
    "RequiredParams": [],
    "ServiceDescription": "Get the sidebar for the current subreddit"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/sticky",
    "ServiceName": "[/r/subreddit]/sticky",
    "RequiredParams": [
      {
        "ParamDescription": "an integer between 1 and 2 (default: 1)",
        "ParamName": "num"
      }
    ],
    "ServiceDescription": "Redirect to one of the posts stickied in the current subreddit"
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com/subreddits/mine/where",
    "ServiceName": "/subreddits/mine/where",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      }
    ],
    "ServiceDescription": "Get subreddits the user has a relationship with."
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com/subreddits/search",
    "ServiceName": "/subreddits/search",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      },
      {
        "ParamDescription": "a search query",
        "ParamName": "q"
      },
      {
        "ParamDescription": "one of (<code>relevance</code>, <code>activity</code>)",
        "ParamName": "sort"
      }
    ],
    "ServiceDescription": "Search subreddits by title and description."
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com/subreddits/where",
    "ServiceName": "/subreddits/where",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      }
    ],
    "ServiceDescription": "Get all subreddits."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/friend",
    "ServiceName": "[/r/subreddit]/api/friend",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "raw markdown text",
        "ParamName": "ban_message"
      },
      {
        "ParamDescription": "a string no longer than 100 characters",
        "ParamName": "ban_reason"
      },
      {
        "ParamDescription": "",
        "ParamName": "container"
      },
      {
        "ParamDescription": "an integer between 1 and 999",
        "ParamName": "duration"
      },
      {
        "ParamDescription": "the name of an existing user",
        "ParamName": "name"
      },
      {
        "ParamDescription": "a string no longer than 300 characters",
        "ParamName": "note"
      },
      {
        "ParamDescription": "",
        "ParamName": "permissions"
      },
      {
        "ParamDescription": "one of (<code>friend</code>, <code>moderator</code>, <code>moderator_invite</code>, <code>contributor</code>, <code>banned</code>, <code>muted</code>, <code>wikibanned</code>, <code>wikicontributor</code>)",
        "ParamName": "type"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Create a relationship between a user and another user or subreddit"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/setpermissions",
    "ServiceName": "[/r/subreddit]/api/setpermissions",
    "RequiredParams": [
      {
        "ParamDescription": "the string <code>json</code>",
        "ParamName": "api_type"
      },
      {
        "ParamDescription": "the name of an existing user",
        "ParamName": "name"
      },
      {
        "ParamDescription": "",
        "ParamName": "permissions"
      },
      {
        "ParamDescription": "",
        "ParamName": "type"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": ""
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/unfriend",
    "ServiceName": "[/r/subreddit]/api/unfriend",
    "RequiredParams": [
      {
        "ParamDescription": "",
        "ParamName": "container"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "id"
      },
      {
        "ParamDescription": "the name of an existing user",
        "ParamName": "name"
      },
      {
        "ParamDescription": "one of (<code>friend</code>, <code>enemy</code>, <code>moderator</code>, <code>moderator_invite</code>, <code>contributor</code>, <code>banned</code>, <code>muted</code>, <code>wikibanned</code>, <code>wikicontributor</code>)",
        "ParamName": "type"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Remove a relationship between a user and another user or subreddit"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/username_available",
    "ServiceName": "/api/username_available",
    "RequiredParams": [
      {
        "ParamDescription": "a valid, unused, username",
        "ParamName": "user"
      }
    ],
    "ServiceDescription": "Check whether a username is available for registration."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/v1/me/friends/username",
    "ServiceName": "/api/v1/me/friends/username",
    "RequiredParams": [
      {
        "ParamDescription": "A valid, existing reddit username",
        "ParamName": "id"
      }
    ],
    "ServiceDescription": "Stop being friends with a user."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/v1/me/friends/username",
    "ServiceName": "/api/v1/me/friends/username",
    "RequiredParams": [
      {
        "ParamDescription": "A valid, existing reddit username",
        "ParamName": "id"
      }
    ],
    "ServiceDescription": "Get information about a specific 'friend', such as notes."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/v1/me/friends/username",
    "ServiceName": "/api/v1/me/friends/username",
    "RequiredParams": [],
    "ServiceDescription": "Create or update a \"friend\" relationship."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/api/v1/user/username/trophies",
    "ServiceName": "/api/v1/user/username/trophies",
    "RequiredParams": [
      {
        "ParamDescription": "A valid, existing reddit username",
        "ParamName": "id"
      }
    ],
    "ServiceDescription": "Return a list of trophies for the a given user."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com/user/username/about",
    "ServiceName": "/user/username/about",
    "RequiredParams": [
      {
        "ParamDescription": "the name of an existing user",
        "ParamName": "username"
      }
    ],
    "ServiceDescription": "Return information about the user, including karma and gold status."
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com/user/username/where",
    "ServiceName": "/user/username/where",
    "RequiredParams": [
      {
        "ParamDescription": "one of (<code>given</code>)",
        "ParamName": "show"
      },
      {
        "ParamDescription": "one of (<code>hot</code>, <code>new</code>, <code>top</code>, <code>controversial</code>)",
        "ParamName": "sort"
      },
      {
        "ParamDescription": "one of (<code>hour</code>, <code>day</code>, <code>week</code>, <code>month</code>, <code>year</code>, <code>all</code>)",
        "ParamName": "t"
      },
      {
        "ParamDescription": "one of (<code>links</code>, <code>comments</code>)",
        "ParamName": "type"
      },
      {
        "ParamDescription": "the name of an existing user",
        "ParamName": "username"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      }
    ],
    "ServiceDescription": "This endpoint is <a href=\"#listings\">a listing</a>."
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/wiki/alloweditor/act",
    "ServiceName": "[/r/subreddit]/api/wiki/alloweditor/act",
    "RequiredParams": [
      {
        "ParamDescription": "one of (<code>del</code>, <code>add</code>)",
        "ParamName": "act"
      },
      {
        "ParamDescription": "the name of an existing wiki page",
        "ParamName": "page"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      },
      {
        "ParamDescription": "the name of an existing user",
        "ParamName": "username"
      }
    ],
    "ServiceDescription": "Allow/deny <code>username</code> to edit this wiki <code>page</code>"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/wiki/edit",
    "ServiceName": "[/r/subreddit]/api/wiki/edit",
    "RequiredParams": [
      {
        "ParamDescription": "",
        "ParamName": "content"
      },
      {
        "ParamDescription": "the name of an existing page or a new page to create",
        "ParamName": "page"
      },
      {
        "ParamDescription": "the starting point revision for this edit",
        "ParamName": "previous"
      },
      {
        "ParamDescription": "a string up to 256 characters long, consisting of printable characters.",
        "ParamName": "reason"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Edit a wiki <code>page</code>"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/wiki/hide",
    "ServiceName": "[/r/subreddit]/api/wiki/hide",
    "RequiredParams": [
      {
        "ParamDescription": "the name of an existing wiki page",
        "ParamName": "page"
      },
      {
        "ParamDescription": "a wiki revision ID",
        "ParamName": "revision"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Toggle the public visibility of a wiki page revision"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/api/wiki/revert",
    "ServiceName": "[/r/subreddit]/api/wiki/revert",
    "RequiredParams": [
      {
        "ParamDescription": "the name of an existing wiki page",
        "ParamName": "page"
      },
      {
        "ParamDescription": "a wiki revision ID",
        "ParamName": "revision"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Revert a wiki <code>page</code> to <code>revision</code>"
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com[/r/subreddit]/wiki/discussions/page",
    "ServiceName": "[/r/subreddit]/wiki/discussions/page",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      },
      {
        "ParamDescription": "the name of an existing wiki page",
        "ParamName": "page"
      }
    ],
    "ServiceDescription": "Retrieve a list of discussions about this wiki <code>page</code>"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/wiki/pages",
    "ServiceName": "[/r/subreddit]/wiki/pages",
    "RequiredParams": [],
    "ServiceDescription": "Retrieve a list of wiki pages in this subreddit"
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com[/r/subreddit]/wiki/revisions",
    "ServiceName": "[/r/subreddit]/wiki/revisions",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      }
    ],
    "ServiceDescription": "Retrieve a list of recently changed wiki pages in this subreddit"
  },
  {
    "OptionalParams": [
      {
        "ParamDescription": "(optional) the string <code>all</code>",
        "ParamName": "show"
      },
      {
        "ParamDescription": "(optional) expand subreddits",
        "ParamName": "sr_detail"
      }
    ],
    "Url": "https://www.reddit.com[/r/subreddit]/wiki/revisions/page",
    "ServiceName": "[/r/subreddit]/wiki/revisions/page",
    "RequiredParams": [
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "after"
      },
      {
        "ParamDescription": "<a href=\"#fullnames\">fullname</a> of a thing",
        "ParamName": "before"
      },
      {
        "ParamDescription": "a positive integer (default: 0)",
        "ParamName": "count"
      },
      {
        "ParamDescription": "the maximum number of items desired (default: 25, maximum: 100)",
        "ParamName": "limit"
      },
      {
        "ParamDescription": "the name of an existing wiki page",
        "ParamName": "page"
      }
    ],
    "ServiceDescription": "Retrieve a list of revisions of this wiki <code>page</code>"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/wiki/settings/page",
    "ServiceName": "[/r/subreddit]/wiki/settings/page",
    "RequiredParams": [
      {
        "ParamDescription": "the name of an existing wiki page",
        "ParamName": "page"
      }
    ],
    "ServiceDescription": "Retrieve the current permission settings for <code>page</code>"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/wiki/settings/page",
    "ServiceName": "[/r/subreddit]/wiki/settings/page",
    "RequiredParams": [
      {
        "ParamDescription": "boolean value",
        "ParamName": "listed"
      },
      {
        "ParamDescription": "the name of an existing wiki page",
        "ParamName": "page"
      },
      {
        "ParamDescription": "an integer",
        "ParamName": "permlevel"
      },
      {
        "ParamDescription": "a <a href=\"#modhashes\">modhash</a>",
        "ParamName": "uh / X-Modhash header"
      }
    ],
    "ServiceDescription": "Update the permissions and visibility of wiki <code>page</code>"
  },
  {
    "OptionalParams": [],
    "Url": "https://www.reddit.com[/r/subreddit]/wiki/page",
    "ServiceName": "[/r/subreddit]/wiki/page",
    "RequiredParams": [
      {
        "ParamDescription": "the name of an existing wiki page",
        "ParamName": "page"
      },
      {
        "ParamDescription": "a wiki revision ID",
        "ParamName": "v"
      },
      {
        "ParamDescription": "a wiki revision ID",
        "ParamName": "v2"
      }
    ],
    "ServiceDescription": "Return the content of a wiki page"
  }
]