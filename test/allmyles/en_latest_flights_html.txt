Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Flights
				Element:a
					¶
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Summary
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:p
								The flight booking/ticket creation workflow consists of five steps.
						Node:
						(type) c
						(layer)2
							Element:blockquote
							Element:ol
							Element:li
							Element:a
							Element:span
								Search
							Element:li
							Element:a
							Element:span
								Details
							Element:li
							Element:a
							Element:span
								Booking
							Element:li
							Element:a
							Element:span
								Payment
							Element:li
							Element:a
							Element:span
								Ticketing
						Node:
						(type) c
						(layer)2
							Element:p
								Additional calls that are available:
						Node:
						(type) c
						(layer)2
							Element:blockquote
							Element:ul
							Element:li
							Element:a
							Element:span
								Ticketing Status
							Element:li
							Element:a
							Element:span
								Rules
							Element:li
							Element:a
							Element:span
								Get Booking
							Element:li
							Element:a
							Element:span
								Cancel Booking
						Node:
						(type) c
						(layer)2
							Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Search
							Element:a
								¶
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:dl
										Element:dt
										Element:code
											POST
										Element:code
											/flights
										Element:a
											¶
										Element:dd
										Element:p
											Searches for flights that match provided criteria.
										Element:p
											Note
										Element:p
											In most cases you’ll want to pass 00:00:00 as time for both your departure and your return date. Time filtering constraints will be very strict otherwise, often resulting in no matches for your query.
										Element:p
											Note
										Element:p
											If you plan to present the results of
										Element:a
											and regular search at the same time to your users, you have two options.
										Element:span
											Flexible Date Search
										Element:ol
										Element:li
											You send both requests in one session - you can only send the second request when you already have the results of the first one.
										Element:li
											You send the two requests in separate sessions - in this case you have to include
										Element:a
											in the regular search request, and set
										Element:span
											Flexible Date Search Reference
										Element:cite
											to_be_referenced
											to
										Element:cite
											True
											in the flexible date search request.
										Element:table
										Element:col
										Element:col
										Element:tbody
										Element:tr
										Element:th
											JSON Parameters:
										Element:tr
										Element:td
										Element:td
										Element:ul
										Element:li
										Element:strong
											fromLocation
											(
										Element:em
											String
											) – departure location, given as IATA code
										Element:li
										Element:strong
											toLocation
											(
										Element:em
											String
											) – destination, given as IATA code
										Element:li
										Element:strong
											departureDate
											(
										Element:em
											String
											) – date of departure, in ISO format, including a time code, even though whole day will be searched by default
										Element:li
										Element:strong
											returnDate
											(
										Element:em
											String
											) –
										Element:em
											(optional)
											date of return, in ISO format, including a time code, even though whole day will be searched by default
										Element:li
										Element:strong
											persons
											(
										Element:a
											) – a list of passengers, grouped by type code, containing Persons
										Element:span
											Person
										Element:li
										Element:strong
											userData
											(
										Element:a
											) – information about the end user
										Element:span
											User Data
										Element:li
										Element:strong
											fromAirport
											(
										Element:em
											String
											) –
										Element:em
											(optional)
											departure airport, given as IATA code, must be in the city specified in
										Element:code
										Element:span
											fromLocation
										Element:li
										Element:strong
											toAirport
											(
										Element:em
											String
											) –
										Element:em
											(optional)
											destination airport, given as IATA code, must be in the city specified in
										Element:code
										Element:span
											toLocation
										Element:li
										Element:strong
											providerType
											(
										Element:em
											String
											) –
										Element:em
											(optional)
											type of results to retrieve
										Element:li
										Element:strong
											preferredAirlines
											(
										Element:em
											String [ ]
											) –
										Element:em
											(optional)
											list of airlines to filter results to, given as their two character IATA code
										Element:li
										Element:strong
											extraDays
											(
										Element:em
											Integer
											) –
										Element:em
											(optional)
											number of days to call
										Element:a
											with, between 1-3
										Element:span
											Flexible Date Search
										Element:li
										Element:strong
											options
											(
										Element:a
											) –
										Element:span
											Options
										Element:em
											(optional)
											sorting and filtering options
										Element:li
										Element:strong
											flexible_date_search_reference
											(
										Element:a
											) –
										Element:span
											Flexible Date Search Reference
										Element:em
											(only in case of choosing option 2 described in the note above)
											data about the flexible date search made with the same parameters as the regular one
										Element:li
										Element:strong
											to_be_referenced
											(
										Element:em
											Boolean
											) –
										Element:em
											(optional)
										Element:cite
											True
											if this is a flexible date search and a regular search is to be called next with
										Element:cite
											flexible_date_search_reference
										Element:li
										Element:strong
											number_of_bags
											(
										Element:em
											Integer
											) –
										Element:em
											(optional)
											The number of bags to be bundled with the price of LCC flights.
										Element:strong
											This option has no effect for searches with the default provider, please contact Allmyles for details on alternative providers.
										Element:li
										Element:strong
											baggage_charges
											(
										Element:em
											Boolean
											) –
										Element:em
											(optional)
											Wheter or not you would like to receive the baggage price tiers in the search step of LCC flights. Baggage price tiers are always sent in the details step, only request this data if you are using it on search.
										Element:strong
											This option has no effect for searches with the default provider, please contact Allmyles for details on alternative providers.
										Element:li
										Element:strong
											check_in_charges
											(
										Element:em
											Boolean
											) –
										Element:em
											(optional)
											Wheter or not you would like to receive the check in price tiers in the search step of LCC flights.
										Element:strong
											This option has no effect for searches with the default provider, please contact Allmyles for details on alternative providers.
										Element:li
										Element:strong
											speedy_boarding_charges
											(
										Element:em
											Boolean
											) –
										Element:em
											(optional)
											Wheter or not you would like to receive the speedy boarding fee information in the search step of LCC flights.
										Element:strong
											This option has no effect for searches with the default provider, please contact Allmyles for details on alternative providers.
									Node:
									(type) c
									(layer)3
										Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Person
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														passengerType
														(
													Element:em
														String
														) – one of
													Element:a
													Element:span
														PassengerTypes
													Element:li
													Element:strong
														quantity
														(
													Element:em
														Integer
														) – number of travelers of
													Element:code
													Element:span
														passengerType
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														PassengerTypes
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
														One of
													Element:code
														,
													Element:span
														ADT
													Element:code
														or
													Element:span
														CHD
													Element:code
													Element:span
														INF
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Options
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														sort
														(
													Element:em
														String
														) – one of
													Element:span
														Sorting Options
													Element:li
													Element:strong
														filter
														(
													Element:a
														) – filtering options
													Element:span
														Filters
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Sorting Options
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
														One of
													Element:code
														,
													Element:span
														total_fare
													Element:code
														,
													Element:span
														-total_fare
													Element:code
														or
													Element:span
														comfort_score
													Element:code
														(
													Element:span
														-comfort_score
													Element:a
														). Reverse-order sorting is indicated with a
													Element:span
														Comfort score
													Element:code
														sign (e.g.
													Element:span
														-
													Element:code
														would return the most expensive option first).
													Element:span
														-total_fare
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														cabin
														(
													Element:em
														String
														) – one of
													Element:span
														Cabin types
														. Filtering for a certain cabin returns combinations that contain at least one leg with the desired cabin type.
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Cabin types
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
														One of
													Element:code
														,
													Element:span
														economy
													Element:code
														,
													Element:span
														premium
													Element:span
														economy
													Element:code
														or
													Element:span
														business
													Element:code
													Element:span
														first
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														User Data
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														ip
														(
													Element:em
														String
														) – the end user’s IP address, e.g.
													Element:code
													Element:span
														12.123.45.67.
													Element:li
													Element:strong
														browser_agent
														(
													Element:em
														String
														) – the end user’s browser agent based on the User-Agent HTTP header, e.g.
													Element:code
													Element:span
														Mozilla/5.0
													Element:span
														(X11;
													Element:span
														Linux
													Element:span
														x86_64;
													Element:span
														rv:12.0)
													Element:span
														Gecko/20100101
													Element:span
														Firefox/21.0
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Flexible Date Search Reference
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														cookie
														(
													Element:em
														String
														) – the Cookie sent in the header of the referenced flexible date search
													Element:li
													Element:strong
														extra_days
														(
													Element:em
														Integer
														) – number of days submitted in
													Element:strong
														extraDays
														in the referenced flexible date search
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response Body
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:table
										Element:col
										Element:col
										Element:tbody
										Element:tr
										Element:th
											JSON Parameters:
										Element:tr
										Element:td
										Element:td
										Element:ul
										Element:li
										Element:strong
											flightResultSet
											(
										Element:a
										Element:span
											FlightResult
										Element:em
											[ ]
											) – root container
									Node:
									(type) c
									(layer)3
										Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														FlightResult
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Warning
													Element:p
														The
													Element:code
														field here does not include the credit card surcharge just yet, as fetching the exact surcharge for a specific flight can require an extra 5-10 second call to the external provider.
													Element:span
														total_fare
													Element:p
														This surcharge is retrieved in the
													Element:span
														FlightDetails
														call.
													Element:p
														Warning
													Element:p
														The prices returned in the fields
													Element:strong
														total_fare
														and
													Element:strong
														ticketing_fee
														are converted to HUF by default if the provider returns them in a different currency. When displaying prices to the user, please refer to
													Element:strong
														price_charged_by_provider
														for a more accurate fare, where the total fare is returned in the currency the airline is charging, or
													Element:strong
														total_fare_in_preferred_currencies
														for prices converted from the original currency.
													Element:strong
														Important
														: this price might change later as it is not yet updated with credit card and other surcharges.
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														breakdown
														(
													Element:a
													Element:span
														Breakdown
													Element:em
														[ ]
														) – summary of passenger data per type
													Element:li
													Element:strong
														currency
														(
													Element:em
														String
														) – currency of all prices in response
													Element:li
													Element:strong
														ticketing_fee
														(
													Element:em
														Float
														) – fee charged for ticketing
													Element:li
													Element:strong
														total_fare
														(
													Element:em
														Float
														) – total fare, including service fee and ticketing fee
													Element:li
													Element:strong
														combinations
														(
													Element:a
													Element:span
														Combination
													Element:em
														[ ]
														) – list of combination objects
													Element:li
													Element:strong
														total_fare_in_preferred_currencies
														(
													Element:em
														[ ]
														) – total fare converted to the client’s preferred currencies, including service fee and ticketing fee
													Element:ul
													Element:li
													Element:strong
														currency
														(
													Element:em
														String
														)
													Element:li
													Element:strong
														total_fare
														(
													Element:em
														Float
														)
													Element:li
													Element:strong
														ticketing_fee_in_preferred_currencies
														(
													Element:em
														[ ]
														) – ticketing fee converted to the client’s preferred currencies, including service fee and ticketing fee
													Element:ul
													Element:li
													Element:strong
														currency
														(
													Element:em
														String
														)
													Element:li
													Element:strong
														ticketing_fee
														(
													Element:em
														Float
														)
													Element:li
													Element:strong
														price_charged_by_provider
														(
													Element:em
														[ ]
														) – fare and ticketing fee in the currency the airline is charging
													Element:ul
													Element:li
													Element:strong
														currency
														(
													Element:em
														String
														)
													Element:li
													Element:strong
														total_fare
														(
													Element:em
														Float
														)
													Element:li
													Element:strong
														ticketing_fee
														(
													Element:em
														Float
														)
													Element:li
													Element:strong
														baggageTiers
														(
													Element:a
													Element:span
														BaggageTier
													Element:em
														[ ]
														) – contains the different options the passenger has for bringing baggages along. May be requested to be included for LCC flights, otherwise not included in the results.
													Element:li
													Element:strong
														speedy_boarding_fee
														(
													Element:a
														) – Only included in LCC results, and only when requested.
													Element:span
														Price
													Element:li
													Element:strong
														check_in_charges
														(
													Element:a
													Element:span
														Check-in charges
													Element:em
														[ ]
														) – Only included in LCC results, and only when requested.
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Breakdown
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														fare
														(
													Element:em
														Float[ ]
														) – total price of the tickets for passengers of
													Element:code
														(including tax)
													Element:span
														type
													Element:li
													Element:strong
														tax
														(
													Element:em
														Float[ ]
														) – total tax on the tickets for passengers of
													Element:code
													Element:span
														type
													Element:li
													Element:strong
														type
														(
													Element:em
														String
														) – type of passengers the breakdown is for, see (see
													Element:a
														)
													Element:span
														PassengerTypes
													Element:li
													Element:strong
														quantity
														(
													Element:em
														Integer
														) – number of passengers of
													Element:code
													Element:span
														type
													Element:li
													Element:strong
														ticketDesignators
														(
													Element:a
													Element:span
														TicketDesignator
													Element:em
														[ ]
														) – ticket designators applicable for passengers of
													Element:code
													Element:span
														type
													Element:li
													Element:strong
														fare_in_preferred_currencies
														(
													Element:em
														[ ]
														) – fare converted to the client’s preferred currencies -
													Element:strong
														currency
														(
													Element:em
														String
														) -
													Element:strong
														fare
														(
													Element:em
														Float
														) -
													Element:strong
														tax
														(
													Element:em
														Float
														)
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														TicketDesignator
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Ticket designators are the mini-rules for the flight, with entries such as
													Element:code
														.
													Element:span
														{"code":
													Element:span
														"70|PEN",
													Element:span
														"extension":
													Element:span
														"TICKETS
													Element:span
														ARE
													Element:span
														NON-REFUNDABLE|"}
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														code
														(
													Element:em
														String
														) – ticket designator’s code
													Element:li
													Element:strong
														extension
														(
													Element:em
														String
														) – ticket designator’s description
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Combination
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Combinations are the sets of different flight itineraries that can be booked. Every combination in a flight result is guaranteed to have the same total price, but the departure times, arrival times, and transfer locations can differ.
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														bookingId
														(
													Element:em
														String
														) – the unique identifier of this combination (this is later used to identify the combination when booking, for example.)
													Element:li
													Element:strong
														firstLeg
														(
													Element:a
														) – the outbound leg of the itinerary
													Element:span
														Leg
													Element:li
													Element:strong
														returnLeg
														(
													Element:a
														) – the inbound leg of the itinerary
													Element:span
														Leg
													Element:li
													Element:strong
														serviceFeeAmount
														(
													Element:em
														Float
														) – ticket designator’s description
													Element:li
													Element:strong
														comfortScore
														(
													Element:a
														) – the comfort score of the combination
													Element:span
														Comfort score
													Element:li
													Element:strong
														service_fee_in_preferred_currencies
														(
													Element:em
														[ ]
														) – service fee converted to the client’s preferred currencies -
													Element:strong
														currency
														(
													Element:em
														String
														) -
													Element:strong
														service_fee
														(
													Element:em
														Float
														)
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Leg
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Legs are made up of one or more segments, and span from one location the customer searched for to the other.
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														elapsedTime
														(
													Element:em
														String
														) – The total time between the leg’s first departure, and last arrival (including time spent waiting when transferring). It is given in the format
													Element:code
														.
													Element:span
														HHMM
													Element:li
													Element:strong
														flightSegments
														(
													Element:a
													Element:span
														Segment
													Element:em
														[ ]
														) – The list of segments this leg is made up of.
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Segment
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Segments are the smallest unit of an itinerary. They are the direct flights the passenger will take from one stop to another.
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														departure
														(
													Element:a
														) – data about the flight’s departure
													Element:span
														Stop
													Element:li
													Element:strong
														arrival
														(
													Element:a
														) – data about the flight’s arrival
													Element:span
														Stop
													Element:li
													Element:strong
														aircraft
														(
													Element:em
														String
														) – Planned aircraft scheduled for the specific segment
													Element:li
													Element:strong
														availableSeats
														(
													Element:em
														Integer
														) – the number of seats available for this price tier—the maximum number we can know of is 9, so when 9 is returned, that means 9 or more seats are available.
													Element:li
													Element:strong
														cabin
														(
													Element:em
														String
														) – one of ‘economy’, ‘first’, or ‘business’
													Element:li
													Element:strong
														class
														(
													Element:em
														String
														) – an airline-specific identifier used in fare pricing. The code related to comfort score is cabin code.
													Element:li
													Element:strong
														marketingAirline
														(
													Element:em
														String
														) – two character IATA code of the marketing airline that publishes and markets the flight booked under its own airline designator and flight number. The marketing airline should be displayed to travelers as the primary airline.
													Element:li
													Element:strong
														operatingAirline
														(
													Element:em
														String
														) – two character IATA code of the airline operating this specific segment
													Element:li
													Element:strong
														marketingAirlineName
														(
													Element:em
														String
														) – The name of the airline that publishes and markets the flight booked under its own airline designator and flight number
													Element:li
													Element:strong
														operatingAirlineName
														(
													Element:em
														String
														) – The airline operating this specific segment
													Element:li
													Element:strong
														flightNumber
														(
													Element:em
														String
														) - the flight number for the specific flight, normally displayed as XXYYYY, where XX is the marketing airline’s code, and YYYY is this number
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Stop
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														A stop is either the departure, or the arrival part of a segment.
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														dateTime
														(
													Element:em
														String
														) – time of the stop (in ISO format)
													Element:li
													Element:strong
														airport
														(
													Element:em
														Airport
														) – location of the stop
													Element:ul
													Element:li
													Element:strong
														terminal
														– the relevant terminal of the airport specified below (this will be
													Element:code
														is the airport has only one terminal)
													Element:span
														null
													Element:li
													Element:strong
														name
														(
													Element:em
														String
														) – official airport name of the specific stop
													Element:li
													Element:strong
														code
														– the three letter IATA code of the airport the stop is at
													Element:li
													Element:strong
														city
														(
													Element:em
														City
														) – location city name of the stop
													Element:ul
													Element:li
													Element:strong
														name
														(
													Element:em
														String
														) – official city name of the specific stop
													Element:li
													Element:strong
														code
														– the three letter IATA code of the city the stop belongs to
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Comfort score
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Comfort score is a variable that indicates how comfortable each combination option is. It is based on different aspects of the flight, e.g.:
													Element:blockquote
													Element:ul
													Element:li
														Total time elapsed from first departure to last arrival
													Element:li
														Number of flight segments (
													Element:a
													Element:span
														Segment
													Element:em
														[ ]
														)
													Element:li
														Cabin type
													Element:li
														Passenger capacity of aircrafts
													Element:li
														Red-eye flight status, meaning flight leaves or departs at an inconvenient time
													Element:li
														The time elapsed between flight segments
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Check-in charges
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														type
														(
													Element:em
														String
														) - Usually “Airport Check-in” or “Web Check-in”
													Element:li
													Element:strong
														currency
														(
													Element:em
														String
														)
													Element:li
													Element:strong
														amount
														(
													Element:em
														Float
														)
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response Codes
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:ul
										Element:li
										Element:strong
											404 ‘No flights available’
										Element:li
										Element:strong
											404 ‘No flight found for return leg’
										Element:li
										Element:strong
											404 ‘Search does not include a required country’
											- It is possible to set rules to disallow search queries that don’t include a specific country in the itinerary. If a search request doesn’t match the set filter, this is returned
										Element:li
										Element:strong
											500 ‘external provider rejected the request - please try again’
											: This is the generic error sent when we receive an unknown error as response from the provider
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
										Element:a
											¶
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Request
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
													Element:strong
														JSON:
													Element:pre
													Element:span
													Element:span
														{
													Element:span
														"fromLocation"
													Element:span
														:
													Element:span
														"BUD"
													Element:span
														,
													Element:span
														"toLocation"
													Element:span
														:
													Element:span
														"LON"
													Element:span
														,
													Element:span
														"departureDate"
													Element:span
														:
													Element:span
														"2014-05-15T00:00:00"
													Element:span
														,
													Element:span
														"returnDate"
													Element:span
														:
													Element:span
														"2014-05-20T00:00:00"
													Element:span
														,
													Element:span
														"persons"
													Element:span
														:[
													Element:span
														{
													Element:span
														"passengerType"
													Element:span
														:
													Element:span
														"ADT"
													Element:span
														,
													Element:span
														"quantity"
													Element:span
														:
													Element:span
														2
													Element:span
														},
													Element:span
														{
													Element:span
														"passengerType"
													Element:span
														:
													Element:span
														"CHD"
													Element:span
														,
													Element:span
														"quantity"
													Element:span
														:
													Element:span
														1
													Element:span
														}
													Element:span
														],
													Element:span
														"flexible_date_search_reference"
													Element:span
														:
													Element:span
														{
													Element:span
														"cookie"
													Element:span
														:
													Element:span
														"1234567asdf"
													Element:span
														,
													Element:span
														"extra_days"
													Element:span
														:
													Element:span
														2
													Element:span
														}
													Element:span
														}
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Response
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
													Element:strong
														JSON:
													Element:pre
													Element:span
														{ "flightResultSet": [ { "breakdown": [ { "passengerFare": { "fare": 52.8627, "tax": 21.1229, "ticketDesignators": [], "type": "ADT", "quantity": 1, "fare_in_preferred_currencies": [ { "currency":GBP", "fare": 72, "tax": 21.1229, }, { "currency": "USD", "fare": 66, "tax": 21.1229, } ], } } ], "currency": "EUR", "total_fare": 57.8627, "ticketing_fee": 5, "total_fare_in_preferred_currencies": [ { "currency":GBP", "total_fare": 72, }, { "currency": "USD", "total_fare": 66, } ], "ticketing_fee_in_preferred_currencies": [ { "currency":GBP", "ticketing_fee": 3.66, }, { "currency": "USD", "ticketing_fee": 5.74, } ], "price_charged_by_provider": { "currency":GBP", "ticketing_fee": 3.66, "total_fare": 72, }, "combinations": [ { "bookingId": "15_0_0", "comfortScore": 47, "firstLeg": { "elapsedTime": "0230", "flightSegments": [ { "operatingAirlineName": "British Airways", "marketingAirlineName": "British Airways", "aircraft": "Airbus Industries A320", "arrival": { "airport": { "name": "Stansted", "terminal": null, "code": "STN" }, "city": { "code": "LON", "name": "London" }, "dateTime": "2014-06-05T23:00:00" }, "marketingAirline": "BA", "operatingAirline": "FR", "departure": { "airport": { "terminal": null, "code": "BUD" "name": "Liszt Ferenc Intl", }, "city": { "code": "BUD", "name": "Budapest" }, "dateTime": "2014-06-05T21:30:00" }, "flightNumber": "867", "availableSeats": 9, "cabin": "economy", "class": "Y", } ] }, "serviceFeeAmount": 5.0, "comfortScore": 50, "service_fee_in_preferred_currencies": [ { "currency":GBP", "service_fee": 3.66, }, { "currency": "USD", "service_fee": 5.74, } ], } ] } ] }
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Flexible Date Search
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Returns the cheapest flight option for all the possible combinations of the departure and arrival dates +/- the number of
													Element:code
														.
													Element:span
														extraDays
													Element:p
														Warning
													Element:p
														To proceed with the flight workflow after a flexible date search, a regular search request must be sent with the parameters of the chosen option. It is not possible to make a booking based on booking IDs returned in the flexible date search response! Please include the
													Element:strong
														flexible_date_search_reference
														parameters in the regular search sent after a flexible date search.
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														fromLocation
														(
													Element:em
														String
														) – departure location, given as IATA code
													Element:li
													Element:strong
														toLocation
														(
													Element:em
														String
														) – destination, given as IATA code
													Element:li
													Element:strong
														departureDate
														(
													Element:em
														String
														) – date of departure
													Element:li
													Element:strong
														returnDate
														(
													Element:em
														String
														) – date of return
													Element:li
													Element:strong
														id
														(
													Element:em
														String
														) – unique identifier of the result
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Examples
													Element:a
														¶
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Request
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
													Element:strong
														JSON:
													Element:pre
													Element:span
													Element:span
														{
													Element:span
														"fromLocation"
													Element:span
														:
													Element:span
														"BUD"
													Element:span
														,
													Element:span
														"toLocation"
													Element:span
														:
													Element:span
														"LON"
													Element:span
														,
													Element:span
														"departureDate"
													Element:span
														:
													Element:span
														"2014-05-15T00:00:00"
													Element:span
														,
													Element:span
														"returnDate"
													Element:span
														:
													Element:span
														"2014-05-20T00:00:00"
													Element:span
														,
													Element:span
														"persons"
													Element:span
														:[
													Element:span
														{
													Element:span
														"passengerType"
													Element:span
														:
													Element:span
														"ADT"
													Element:span
														,
													Element:span
														"quantity"
													Element:span
														:
													Element:span
														2
													Element:span
														},
													Element:span
														{
													Element:span
														"passengerType"
													Element:span
														:
													Element:span
														"CHD"
													Element:span
														,
													Element:span
														"quantity"
													Element:span
														:
													Element:span
														1
													Element:span
														}
													Element:span
														],
													Element:span
														"extraDays"
													Element:span
														:
													Element:span
														3
													Element:span
														,
													Element:span
														}
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Response
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
													Element:strong
														JSON:
													Element:pre
													Element:span
													Element:span
														{
													Element:span
														"flightResultSet"
													Element:span
														:
													Element:span
														[
													Element:span
														{
													Element:span
														"flightResult"
													Element:span
														:
													Element:span
														{
													Element:span
														"_comment"
													Element:span
														:
													Element:span
														"same as in regular search response"
													Element:span
														},
													Element:span
														"fromLocation"
													Element:span
														:
													Element:span
														"BUD"
													Element:span
														,
													Element:span
														"toLocation"
													Element:span
														:
													Element:span
														"LON"
													Element:span
														,
													Element:span
														"departureDate"
													Element:span
														:
													Element:span
														"2015-04-29T00:00:00Z"
													Element:span
														,
													Element:span
														"returnDate"
													Element:span
														:
													Element:span
														"2015-05-06T00:00:00Z"
													Element:span
														,
													Element:span
														"id"
													Element:span
														:
													Element:span
														"0648ae1d-3b48-4a88-b317-a5ca65fd2d67"
													Element:span
														,
													Element:span
														}
													Element:span
														]
													Element:span
														}
												Node:
												(type) c
												(layer)4
													Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Details
							Element:a
								¶
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:dl
										Element:dt
										Element:code
											GET
										Element:code
											/flights/:booking_id
										Element:a
											¶
										Element:dd
										Element:p
										Element:strong
											booking_id
											is the booking ID of the
										Element:a
											to get the details of
										Element:span
											Combination
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response Body
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:table
										Element:col
										Element:col
										Element:tbody
										Element:tr
										Element:th
											JSON Parameters:
										Element:tr
										Element:td
										Element:td
										Element:ul
										Element:li
										Element:strong
											flightDetails
											(
										Element:a
											) – root container
										Element:span
											FlightDetails
									Node:
									(type) c
									(layer)3
										Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														FlightDetails
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Warning
													Element:p
														While the
													Element:code
														field contains the ticket’s final price, baggages are not included in that, as the user may be able to choose from different baggage tiers. It is the travel site’s responsibility to add the cost of the passenger’s baggages themselves as an extra cost.
													Element:span
														price
													Element:p
														Note
													Element:p
														Providers return prices in the travel site’s preferred currency automatically. In the rare case that they might fail to do so, the Allmyles API will convert the prices to the flight fare’s currency automatically, based on the provider’s currency conversion data.
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														rulesLink
														(
													Element:em
														String
														) – link to the airline’s rules page (hosted on the airline’s website)
													Element:li
													Element:strong
														baggageTiers
														(
													Element:a
													Element:span
														BaggageTier
													Element:em
														[ ]
														) – contains the different options the passenger has for bringing baggages along. The book request will need to contain the ID of one of these objects in the baggage field.
													Element:li
													Element:strong
														carryOnBaggageTiers
														(
													Element:a
														) – contains the different options of cabin baggages. The book request will need to contain the ID of one of these objects in the carry-on baggage field.
													Element:span
														CarryOnBaggageTier
													Element:li
													Element:strong
														fields
														(
													Element:a
														) – contains field validation data
													Element:span
														Form Fields
													Element:li
													Element:strong
														price
														(
													Element:a
														) – contains the final price of the ticket (including the credit card surcharge, but not the baggages)
													Element:span
														Price
													Element:li
													Element:strong
														result
														(
													Element:a
														) – contains an exact copy of the result from the
													Element:span
														FlightResult
													Element:a
														call’s response
													Element:span
														Search
													Element:li
													Element:strong
														options
														(
													Element:a
														) – contains whether certain options are enabled for this flight
													Element:span
														FlightOptions
													Element:li
													Element:strong
														surcharge
														(
													Element:a
														) – contains the credit card surcharge for this flight
													Element:span
														Price
													Element:li
													Element:strong
														price_in_preferred_currencies
														(
													Element:a
													Element:span
														Price
													Element:em
														[ ]
														) – contains the final price of the ticket converted to the client’s preferred currencies
													Element:li
													Element:strong
														surcharge_in_preferred_currencies
														(
													Element:a
													Element:span
														Price
													Element:em
														[ ]
														) – contains the credit card surcharge for this flight converted to the client’s preferred currencies
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														BaggageTier
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														These objects define the passenger’s options for taking baggages on the flight. Each passenger can choose one of these for themselves.
													Element:p
														Note
													Element:p
														Keep in mind that while the tier ID’s value may seem closely related to the other fields, it’s not guaranteed to contain any semantic meaning at all.
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														tier
														(
													Element:em
														String
														) – the ID for this baggage tier (this is used to refer to it when booking)
													Element:li
													Element:strong
														price
														(
													Element:a
														) – contains the price of the baggage tier
													Element:span
														Price
													Element:li
													Element:strong
														max_weights
														(
													Element:em
														Float
													Element:em
														[ ]
														) – the maximum weight of each piece of baggage a passenger can take in this tier in kg, can be an empty array if there’s no limit. Having multiple items in this array means that for the specified price, the passenger can check in as many baggages as there are items in the array. Can be an empty list if data is present in the
													Element:em
														total
														field.
													Element:li
													Element:strong
														total
														– Some airlines don’t limit the weights of each bag, only the total weight of all the bags, and the number of bags.
													Element:ul
													Element:li
													Element:strong
														weight
														(
													Element:em
														Float
														) – maximum summed weight of all the bags the passenger can take
													Element:li
													Element:strong
														number_of_bags
														(
													Element:em
														Int
														) – number of bags that the passenger can take
													Element:li
													Element:strong
														price_in_preferred_currencies
														(
													Element:a
													Element:span
														Price
													Element:em
														[ ]
														) – contains the price of the baggage tier converted to the client’s preferred currencies
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														CarryOnBaggageTier
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														These objects define the passenger’s options for taking cabin baggages on the flight. Each passenger can choose one of these for themselves.
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														tier
														(
													Element:em
														String
														) – the ID for this baggage tier (this is used to refer to it when booking)
													Element:li
													Element:strong
														price
														(
													Element:a
														) – contains the price of the baggage tier
													Element:span
														Price
													Element:li
													Element:strong
														description
														(
													Element:em
														String
														) – A basic description of the carry-on baggage’s size, e.g.
													Element:cite
														Small cabin bag
														. Exact dimensions should be checked on the airline’s website.
													Element:li
													Element:strong
														price_in_preferred_currencies
														(
													Element:a
													Element:span
														Price
													Element:em
														[ ]
														) – contains the price of the baggage tier converted to the client’s preferred currencies
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Form Fields
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:p
														Form fields define criteria for field validation, making it easy to generate HTML form elements.
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														passengers
														(
													Element:a
													Element:span
														Form Field
													Element:em
														[ ]
														) – contains validation data for Passenger fields
													Element:li
													Element:strong
														contactInfo
														(
													Element:a
													Element:span
														Form Field
													Element:em
														[ ]
														) – contains validation data for Contact Info fields
													Element:li
													Element:strong
														billingInfo
														(
													Element:a
													Element:span
														Form Field
													Element:em
														[ ]
														) – contains validation data for Billing Info fields
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Form Field
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters for
													Element:code
														fields:
													Element:span
														select
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														tag
														(
													Element:em
														String
														) – HTML tag type, in this case
													Element:code
													Element:span
														select
													Element:li
													Element:strong
														options
														(
													Element:em
														String [ ]
														) – value options of the field
													Element:li
													Element:strong
														attributes
														(
													Element:a
													Element:span
														Attributes
													Element:em
														[ ]
														) – attributes of the field
													Element:tr
													Element:th
														JSON Parameters for
													Element:code
														fields:
													Element:span
														input
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														tag
														(
													Element:em
														String
														) – HTML tag type, in this case
													Element:code
													Element:span
														input
													Element:li
													Element:strong
														attributes
														(
													Element:a
													Element:span
														Attributes
													Element:em
														[ ]
														) – attributes of the field
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Attributes
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														name
														(
													Element:em
														String
														) – one of
													Element:a
													Element:span
														Field Names
													Element:li
													Element:strong
														data-label
														(
													Element:em
														String
														) – user friendly field label
													Element:li
													Element:strong
														type
														(
													Element:em
														String
														) – type of input data (
													Element:code
														or
													Element:span
														†ext
													Element:code
														)
													Element:span
														email
													Element:li
													Element:strong
														maxLength
														(
													Element:em
														Float
														)
													Element:li
													Element:strong
														required
														(
													Element:em
														String
														) – if present, field is required
													Element:li
													Element:strong
														pattern
														(
													Element:em
														String
														) – regex pattern of valid data
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Field Names
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														Passenger:
													Element:td
													Element:ul
													Element:li
														namePrefix
													Element:li
														firstName
													Element:li
														middleName
													Element:li
														lastName
													Element:li
														gender
													Element:li
														birthDate
													Element:li
														document/type
													Element:li
														document/id
													Element:li
														document/issueCountry
													Element:li
														document/dateOfExpiry
													Element:tr
													Element:th
														Contact and Billing Info:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
														name
													Element:li
														email
													Element:li
														address/addressLine1
													Element:li
														address/addressLine2
													Element:li
														address/addressLine3
													Element:li
														address/cityName
													Element:li
														address/zipCode
													Element:li
														address/countryCode
													Element:li
														phone/countryCode
													Element:li
														phone/areaCode
													Element:li
														phone/phoneNumber
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Price
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														amount
														(
													Element:em
														Float
														) – the amount of money in the currency below
													Element:li
													Element:strong
														currency
														(
													Element:em
														String
														) – the currency of the amount specified, can be null when the amount is zero
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														FlightOptions
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
													Element:strong
														{optionName}
														below refers to the following names:
													Element:blockquote
													Element:ul
													Element:li
														seatSelectionAvailable
													Element:li
														travelfusionPrepayAvailable
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														{optionName}
														(
													Element:em
														Boolean
														) – whether the option is enabled or not
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response Codes
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:ul
										Element:li
										Element:strong
											404 ‘search first’
										Element:li
										Element:strong
											412 ‘a request is already being processed’
											: This error comes up even when the other request is asynchronous (i.e. when we are still processing a search request). The response for async requests does not need to be retrieved for this error to clear, just wait a few seconds.
										Element:li
										Element:strong
											412 ‘request is not for the latest search’
											: One case where this error is returned is when a customer is using multiple tabs and trying to select a flight from an old result list.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
										Element:a
											¶
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Response
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
													Element:strong
														JSON:
													Element:pre
													Element:span
														{ "flightDetails": { "rulesLink": null, "baggageTiers": [ { "tier": "0", "price": { "currency": null, "amount": 0.0 }, "max_weights": [], 'total': { 'weight': None, 'number_of_bags': None, }, "price_in_preferred_currencies": [ { "currency":GBP", "amount": 0.0 }, { "currency": "USD", "amount": 0.0 } ], }, { "tier": "1", "price": { "currency": "HUF", "amount": 15427.0 }, "max_weights": [15.0], 'total': { 'weight': None, 'number_of_bags': None, }, "price_in_preferred_currencies": [ { "currency":GBP", "amount": 10.0 }, { "currency": "USD", "amount": 12.0 } ], }, { "tier": "2", "price": { "currency": "HUF", "amount": 37024.8 }, "max_weights": [], 'total': { 'weight': 45, 'number_of_bags': 2, }, "price_in_preferred_currencies": [ { "currency":GBP", "amount": 20.0 }, { "currency": "USD", "amount": 22.0 } ], } ], "carryOnBaggageTiers": [ { "tier": "1", "price": { "currency": "null", "amount": 0.0 }, "description": "Small cabin bag", }, { "tier": "2", "price": { "currency": "HUF", "amount": 8000.0 }, "description": "Large cabin bag", }, "price_in_preferred_currencies": [ { "currency":GBP", "amount": 20.0 }, { "currency": "USD", "amount": 22.0 } ], ], "fields": { "passengers": [ { "tag": "select", "options": ["Mr", "Ms", "Mrs"], "attributes": [ { "key": "required", "value": "required" }, { "key": "name", "value": "persons/0/namePrefix" }, { "key": "data-label", "value": "Name Prefix" } ], }, ], "contact_info": [ { "tag": "input", "attributes": [ { "key": "maxLength", "value": "30" }, { "key": "type", "value": "text" }, { "key": "name", "value": "billingInfo/name" }, { "key": "data-label", "value": "Name" } ], }, ], "billing_info": [ { "_comment": "trimmed in example for brevity's sake" }, ] }, "price": { "currency": "EUR", "amount": 4464.46 }, "result": { "_comment": "trimmed in example for brevity's sake" }, "options": { "seatSelectionAvailable": false, "travelfusionPrepayAvailable": false }, "surcharge": { "currency": "EUR", "amount": 5.0 "card_type": "CA", }, "price_in_preferred_currencies": [ { "currency":GBP", "amount": 3269 }, { "currency": "USD", "amount": 5162 } ], "surcharge_in_preferred_currencies": [ { "currency":GBP", "amount": 5.0 "card_type": "CA", }, { "currency": "USD", "amount": 5.0 "card_type": "CA", } ], } }
												Node:
												(type) c
												(layer)4
													Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Booking
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:blockquote
							Element:p
								Note
							Element:p
								When booking LCC flights, there are two possible scenarios. By
							Element:em
								default
								, the Allmyles API does not send the book request to the external provider until the ticketing call arrives, so there’s no response—an HTTP 204 No Content status code is returned. If you have chosen
							Element:em
								alternative
								providers (you have to contact the Allmyles support about this first), the booking flow of LCC flights is very similar to that of traditional flights. In this case the book response differs just a bit from the traditional book response - please refer to the book response specifications for detailed information.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:dl
										Element:dt
										Element:code
											POST
										Element:code
											/books
										Element:a
											¶
										Element:dd
										Element:table
										Element:col
										Element:col
										Element:tbody
										Element:tr
										Element:th
											JSON Parameters:
										Element:tr
										Element:td
										Element:td
										Element:ul
										Element:li
										Element:strong
											bookBasket
											(
										Element:em
											String
											) – the booking ID of the
										Element:a
											to book
										Element:span
											Combination
										Element:li
										Element:strong
											billingInfo
											(
										Element:a
											) – billing info for ticket creation
										Element:span
											Billing
										Element:li
										Element:strong
											contactInfo
											(
										Element:a
											) – contact info for ticket creation
										Element:span
											Contact
										Element:li
										Element:strong
											persons
											(
										Element:a
										Element:span
											Passenger
										Element:em
											[ ]
											) – the list of passengers
										Element:li
										Element:strong
											userData
											(
										Element:a
											) – information about the end user
										Element:span
											User Data
										Element:li
										Element:strong
											tenantReferenceId
											(
										Element:em
											String
											) –
										Element:em
											(optional)
											ID of the booking on the tenant’s side - can be useful for debugging purposes
									Node:
									(type) c
									(layer)3
										Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Contact
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														address
														(
													Element:a
														) – address of the the contact person
													Element:span
														Address
													Element:li
													Element:strong
														email
														(
													Element:em
														String
														) – email of the contact person
													Element:li
													Element:strong
														firstName
														(
													Element:em
														String
														)
													Element:li
													Element:strong
														middleName
														(
													Element:em
														String
														) –
													Element:em
														(optional)
														submission of this parameter is mandatory if the person in question has a middle name
													Element:li
													Element:strong
														lastName
														(
													Element:em
														String
														)
													Element:li
													Element:strong
														phone
														(
													Element:a
														) – phone number of the contact person
													Element:span
														Phone
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Billing
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														address
														(
													Element:a
														) – address of the entity in question
													Element:span
														Address
													Element:li
													Element:strong
														email
														(
													Element:em
														String
														) – email of the entity in question
													Element:li
													Element:strong
														firstName
														(
													Element:em
														String
														) – name of the entity in question, if the entity is an organization this is the only name field that is required
													Element:li
													Element:strong
														middleName
														(
													Element:em
														String
														) –
													Element:em
														(optional)
														submission of this parameter is mandatory if the person in question has a middle name and must not be sent in if the entity in question is an organization
													Element:li
													Element:strong
														lastName
														(
													Element:em
														String
														) –
													Element:em
														(optional)
														submission of this parameter is mandatory if the entity in question is a person and it must not be included if the entity is an organization
													Element:li
													Element:strong
														phone
														(
													Element:a
														) – phone number of the entity in question
													Element:span
														Phone
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Address
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														addressLine1
														(
													Element:em
														String
														)
													Element:li
													Element:strong
														addressLine2
														(
													Element:em
														String
														) –
													Element:em
														(optional)
													Element:li
													Element:strong
														addressLine3
														(
													Element:em
														String
														) –
													Element:em
														(optional)
													Element:li
													Element:strong
														cityName
														(
													Element:em
														String
														)
													Element:li
													Element:strong
														zipCode
														(
													Element:em
														String
														)
													Element:li
													Element:strong
														countryCode
														(
													Element:em
														String
														) – the two letter code of the country
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Phone
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														countryCode
														(
													Element:em
														String
														)
													Element:li
													Element:strong
														areaCode
														(
													Element:em
														String
														)
													Element:li
													Element:strong
														phoneNumber
														(
													Element:em
														String
														) - Must be at least 7 characters long.
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Passenger
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														birthDate
														(
													Element:em
														String
														) – format is
													Element:code
													Element:span
														YYYY-MM-DD
													Element:li
													Element:strong
														document
														(
													Element:a
														) – data about the identifying document the passenger wishes to travel with
													Element:span
														Document
													Element:li
													Element:strong
														email
														(
													Element:em
														String
														)
													Element:li
													Element:strong
														namePrefix
														(
													Element:em
														String
														) – one of
													Element:code
														,
													Element:span
														Mr
													Element:code
														, or
													Element:span
														Ms
													Element:code
													Element:span
														Mrs
													Element:li
													Element:strong
														firstName
														(
													Element:em
														String
														)
													Element:li
													Element:strong
														middleName
														(
													Element:em
														String
														) –
													Element:em
														(optional)
													Element:li
													Element:strong
														lastName
														(
													Element:em
														String
														)
													Element:li
													Element:strong
														gender
														(
													Element:em
														String
														) – one of
													Element:code
														or
													Element:span
														MALE
													Element:code
													Element:span
														FEMALE
													Element:li
													Element:strong
														passengerTypeCode
														(
													Element:em
														String
														) – one of
													Element:a
													Element:span
														PassengerTypes
													Element:li
													Element:strong
														baggage
														(
													Element:em
														String
														) – one of the tier IDs returned in the flight details response
													Element:li
													Element:strong
														carryOnBaggage
														(
													Element:em
														String
														) – one of the tier IDs returned in the flight details response
												Node:
												(type) c
												(layer)4
													Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Document
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														id
														(
													Element:em
														String
														) – document’s ID number
													Element:li
													Element:strong
														dateOfExpiry
														(
													Element:em
														String
														) – format is YYYY-MM-DD
													Element:li
													Element:strong
														issueCountry
														(
													Element:em
														String
														) – two letter code of issuing country
													Element:li
													Element:strong
														type
														(
													Element:em
														String
														) – one of
													Element:span
														DocumentTypes
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response Body
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:p
											Note
										Element:p
											Again:
										Element:strong
											by default, there’s no response body for LCC book requests!
											An HTTP 204 No Content status code confirms that Allmyles saved the sent data for later use.
										Element:p
											Warning
										Element:p
											If you have chosen alternative providers - that means there IS a book response for LCC flights,
										Element:strong
											this is the response that contains the exact final price
											that should be shown to the traveler. This price contains the baggage and hand luggage surcharges, if applicable.
										Element:p
											Warning
										Element:p
											The format of
										Element:a
											and
										Element:span
											Contact
										Element:a
											objects contained within this response might slightly differ from what’s described in this documentation as requested. This will be fixed in a later version.
										Element:span
											FlightResult
										Element:table
										Element:col
										Element:col
										Element:tbody
										Element:tr
										Element:th
											JSON Parameters:
										Element:tr
										Element:td
										Element:td
										Element:ul
										Element:li
										Element:strong
											price
											(
										Element:a
											) – final price updated with baggage surcharges.
										Element:span
											Price
										Element:strong
											Only in alternative LCC book response!
										Element:li
										Element:strong
											pnr
											(
										Element:em
											String
											) – the PNR locator which identifies this booking
										Element:li
										Element:strong
											lastTicketingDate
											(
										Element:em
											String
											) – the timestamp of when it’s last possible to create a ticket for the booking, in ISO format
										Element:li
										Element:strong
											bookingReferenceId
											(
										Element:em
											String
											) – the ID of the workflow at Allmyles; this is not currently required anywhere later, but can be useful for debugging
										Element:li
										Element:strong
											contactInfo
											(
										Element:a
											) – contains a copy of the data received in the
										Element:span
											Contact
										Element:a
											call
										Element:span
											Booking
										Element:li
										Element:strong
											flightData
											(
										Element:a
											) – contains a copy of the result from the
										Element:span
											FlightResult
										Element:a
											call’s response
										Element:span
											Search
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response Codes
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:ul
										Element:li
										Element:strong
											303 ‘Unable to book this flight - please select a different bookingId’
											: This error is returned when the external provider encounters a problem such as a discrepancy between actual flight data and what they returned from their cache before. This happens very rarely, or never in production.
										Element:li
										Element:strong
											404 ‘search first’
										Element:li
										Element:strong
											412 ‘a request is already being processed’
											: This error comes up even when the other request is asynchronous (i.e. when we are still processing a search request). The response for async requests does not need to be retrieved for this error to clear, just wait a few seconds.
										Element:li
										Element:strong
											412 ‘Already booked.’
											: This denotes that either us or the external provider has detected a possible duplicate booking, and has broken the flow to avoid dupe payments.
										Element:li
										Element:strong
											412 ‘already booked’
											: This is technically the same as the error above, but is encountered at a different point in the flow. The error messages are only temporarily not the same for these two errors.
										Element:li
										Element:strong
											412 ‘request is not for the latest search’
										Element:li
										Element:strong
											500 ‘could not book flight’
											: This is the generic error returned when we encounter an unknown/empty response from the external provider
										Element:li
										Element:strong
											504 ‘external gateway timed out - book request might very well have been successful!’
											: The booking might, or might not have been completed in this case. The flow should be stopped, and the customer should be contacted to complete the booking.
										Element:li
										Element:strong
											504 ‘Could not retrieve virtual credit card, flight not booked. An IRN should be sent to payment provider now.’
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
										Element:a
											¶
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Request
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
													Element:strong
														JSON:
													Element:pre
													Element:span
													Element:span
														{
													Element:span
														"bookBasket"
													Element:span
														:
													Element:span
														[
													Element:span
														"1_0_0"
													Element:span
														],
													Element:span
														"billingInfo"
													Element:span
														:
													Element:span
														{
													Element:span
														"address"
													Element:span
														:
													Element:span
														{
													Element:span
														"addressLine1"
													Element:span
														:
													Element:span
														"Váci út 13-14"
													Element:span
														,
													Element:span
														"cityName"
													Element:span
														:
													Element:span
														"Budapest"
													Element:span
														,
													Element:span
														"countryCode"
													Element:span
														:
													Element:span
														"HU"
													Element:span
														,
													Element:span
														"zipCode"
													Element:span
														:
													Element:span
														"1234"
													Element:span
														},
													Element:span
														"email"
													Element:span
														:
													Element:span
														"
													Element:a
														[email protected]
														"
													Element:span
														,
													Element:span
														"name"
													Element:span
														:
													Element:span
														"Kovacs Gyula"
													Element:span
														,
													Element:span
														"phone"
													Element:span
														:
													Element:span
														{
													Element:span
														"areaCode"
													Element:span
														:
													Element:span
														"30"
													Element:span
														,
													Element:span
														"countryCode"
													Element:span
														:
													Element:span
														"36"
													Element:span
														,
													Element:span
														"phoneNumber"
													Element:span
														:
													Element:span
														"1234567"
													Element:span
														}
													Element:span
														},
													Element:span
														"contactInfo"
													Element:span
														:
													Element:span
														{
													Element:span
														"address"
													Element:span
														:
													Element:span
														{
													Element:span
														"addressLine1"
													Element:span
														:
													Element:span
														"Váci út 13-14"
													Element:span
														,
													Element:span
														"cityName"
													Element:span
														:
													Element:span
														"Budapest"
													Element:span
														,
													Element:span
														"countryCode"
													Element:span
														:
													Element:span
														"HU"
													Element:span
														,
													Element:span
														"zipCode"
													Element:span
														:
													Element:span
														"1234"
													Element:span
														},
													Element:span
														"email"
													Element:span
														:
													Element:span
														"
													Element:a
														[email protected]
														"
													Element:span
														,
													Element:span
														"name"
													Element:span
														:
													Element:span
														"Kovacs Lajos"
													Element:span
														,
													Element:span
														"phone"
													Element:span
														:
													Element:span
														{
													Element:span
														"areaCode"
													Element:span
														:
													Element:span
														"30"
													Element:span
														,
													Element:span
														"countryCode"
													Element:span
														:
													Element:span
														"36"
													Element:span
														,
													Element:span
														"phoneNumber"
													Element:span
														:
													Element:span
														"1234567"
													Element:span
														}
													Element:span
														},
													Element:span
														"persons"
													Element:span
														:
													Element:span
														[
													Element:span
														{
													Element:span
														"baggage"
													Element:span
														:
													Element:span
														"0"
													Element:span
														,
													Element:span
														"carryOnBaggage"
													Element:span
														:
													Element:span
														"1"
													Element:span
														,
													Element:span
														"birthDate"
													Element:span
														:
													Element:span
														"1974-04-03"
													Element:span
														,
													Element:span
														"document"
													Element:span
														:
													Element:span
														{
													Element:span
														"dateOfExpiry"
													Element:span
														:
													Element:span
														"2016-09-03"
													Element:span
														,
													Element:span
														"id"
													Element:span
														:
													Element:span
														"12345678"
													Element:span
														,
													Element:span
														"issueCountry"
													Element:span
														:
													Element:span
														"HU"
													Element:span
														,
													Element:span
														"type"
													Element:span
														:
													Element:span
														"Passport"
													Element:span
														},
													Element:span
														"email"
													Element:span
														:
													Element:span
														"
													Element:a
														[email protected]
														"
													Element:span
														,
													Element:span
														"firstName"
													Element:span
														:
													Element:span
														"Janos"
													Element:span
														,
													Element:span
														"gender"
													Element:span
														:
													Element:span
														"MALE"
													Element:span
														,
													Element:span
														"lastName"
													Element:span
														:
													Element:span
														"Kovacs"
													Element:span
														,
													Element:span
														"namePrefix"
													Element:span
														:
													Element:span
														"Mr"
													Element:span
														,
													Element:span
														"passengerTypeCode"
													Element:span
														:
													Element:span
														"ADT"
													Element:span
														}
													Element:span
														]
													Element:span
														}
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Response
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
													Element:strong
														JSON:
													Element:pre
													Element:span
													Element:span
														{
													Element:span
														"bookingReferenceId"
													Element:span
														:
													Element:span
														"req-cfd7963b187a4fe99702c0373c89cb16"
													Element:span
														,
													Element:span
														"contactInfo"
													Element:span
														:
													Element:span
														{
													Element:span
														"address"
													Element:span
														:
													Element:span
														{
													Element:span
														"city"
													Element:span
														:
													Element:span
														"Budapest"
													Element:span
														,
													Element:span
														"countryCode"
													Element:span
														:
													Element:span
														"HU"
													Element:span
														,
													Element:span
														"line1"
													Element:span
														:
													Element:span
														"Madach ut 13-14"
													Element:span
														,
													Element:span
														"line2"
													Element:span
														:
													Element:span
														null
													Element:span
														,
													Element:span
														"line3"
													Element:span
														:
													Element:span
														null
													Element:span
														},
													Element:span
														"email"
													Element:span
														:
													Element:span
														"
													Element:a
														[email protected]
														"
													Element:span
														,
													Element:span
														"name"
													Element:span
														:
													Element:span
														"Kovacs Lajos"
													Element:span
														,
													Element:span
														"phone"
													Element:span
														:
													Element:span
														{
													Element:span
														"areaCode"
													Element:span
														:
													Element:span
														"30"
													Element:span
														,
													Element:span
														"countryCode"
													Element:span
														:
													Element:span
														"36"
													Element:span
														,
													Element:span
														"number"
													Element:span
														:
													Element:span
														"1234567"
													Element:span
														}
													Element:span
														},
													Element:span
														"flightData"
													Element:span
														:
													Element:span
														{
													Element:span
														"_comment"
													Element:span
														:
													Element:span
														"trimmed in example for brevity's sake"
													Element:span
														},
													Element:span
														"lastTicketingDate"
													Element:span
														:
													Element:span
														"2014-05-16T23:59:59Z"
													Element:span
														,
													Element:span
														"pnr"
													Element:span
														:
													Element:span
														"6YESST"
													Element:span
														}
												Node:
												(type) c
												(layer)4
													Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Payment
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:p
								This is where Allmyles gets the payment data.
						Node:
						(type) c
						(layer)2
							Element:p
								Allmyles is a payment platform agnostic solution. When we receive a transaction ID that points to a successful payment by the passenger, we essentially take that money from any Payment Service Provider (PSP), and forward it to the provider to buy a ticket in the
							Element:a
								step.
							Element:span
								Ticketing
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:dl
										Element:dt
										Element:code
											POST
										Element:code
											/payment
										Element:a
											¶
										Element:dd
										Element:table
										Element:col
										Element:col
										Element:tbody
										Element:tr
										Element:th
											JSON Parameters:
										Element:tr
										Element:td
										Element:td
										Element:ul
										Element:li
										Element:strong
											paymentId
											(
										Element:em
											String
											) – the transaction ID identifying the successful transaction at your PSP
										Element:li
										Element:strong
											basket
											(
										Element:em
											String[ ]
											) – the booking IDs the payment is for
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response Body
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:p
										Element:strong
											N/A:
										Element:p
											Returns an HTTP 204 No Content status code if successful.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response Codes
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:ul
										Element:li
										Element:strong
											412 ‘a request is already being processed’
											: This error comes up even when the other request is asynchronous (i.e. when we are still processing a search request). The response for async requests does not need to be retrieved for this error to clear, just wait a few seconds.
										Element:li
										Element:strong
											412 ‘book request should have been received’
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
										Element:a
											¶
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Request
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
													Element:strong
														JSON:
													Element:pre
													Element:span
													Element:span
														{
													Element:span
														"paymentId"
													Element:span
														:
													Element:span
														"12345678"
													Element:span
														,
													Element:span
														"basket"
													Element:span
														:
													Element:span
														[
													Element:span
														"2_1_0"
													Element:span
														]
													Element:span
														}
												Node:
												(type) c
												(layer)4
													Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Ticketing
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:p
								Two important notes:
						Node:
						(type) c
						(layer)2
							Element:ol
							Element:li
								Call this only when the passenger’s payment completely went through! (That is, after the payment provider’s IPN has arrived, confirming that the transaction did not get caught by the fraud protection filter.)
							Element:li
								After this call has been made
							Element:strong
								do not issue refunds
								unless the Allmyles API explicitly tells you to. It’s way better to just correct ticketing errors manually than to fire automatic refunds even if the ticket purchase might already be locked in for some reason.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:dl
										Element:dt
										Element:code
											GET
										Element:code
											/tickets/:booking_id
										Element:a
											¶
										Element:dd
										Element:p
										Element:strong
											booking_id
											is the booking ID of the
										Element:a
											to create a ticket for
										Element:span
											Combination
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response Body
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:p
											By default, this is just an abstraction for the book call when buying an LCC ticket (there’s no separate book and ticketing calls for those flights). This means the response differs greatly depending on whether the flight is traditional or LCC booked through the
										Element:em
											default
											providers.
										Element:p
											If you have chosen
										Element:em
											alternative
											providers (you would have to contact the Allmyles support about this first), there
										Element:strong
											is
											a separate book response for LCC flights, but the ticket response is the same as described below.
										Element:table
										Element:col
										Element:col
										Element:tbody
										Element:tr
										Element:th
											JSON Parameters for traditional flights:
										Element:tr
										Element:td
										Element:td
										Element:ul
										Element:li
										Element:strong
											tickets
											(
										Element:em
											Ticket [ ]
											) – the purchased tickets
										Element:ul
										Element:li
										Element:strong
											passenger
											(
										Element:em
											String
											) – the name of the passenger the ticket was purchased for
										Element:li
										Element:strong
											passenger_type
											(
										Element:em
											String
											) – one of
										Element:a
										Element:span
											PassengerTypes
										Element:li
										Element:strong
											ticket
											(
										Element:em
											String
											) – the ticket number which allows the passenger to actually board the plane
										Element:li
										Element:strong
											price
											(
										Element:em
											TicketPrice
											)
										Element:ul
										Element:li
										Element:strong
											currency
											(
										Element:em
											String
											)
										Element:li
										Element:strong
											total_fare
											(
										Element:em
											Float
											) – The total amount of money the passenger paid for his ticket, including tax.
										Element:li
										Element:strong
											tax
											(
										Element:em
											Float
											) – The total amount of tax the passenger had to pay for this ticket.
										Element:li
										Element:strong
											baggage
										Element:ul
										Element:li
										Element:strong
											quantity
											(
										Element:em
											Int
											) – The maximum quantity of baggage the passenger can bring along
										Element:li
										Element:strong
											unit
											(
										Element:em
											String
											) – Units of measurement
										Element:li
										Element:strong
											price_in_preferred_currencies
											(
										Element:em
											TicketPrice [ ]
											) – the ticket price converted to the client’s preferred currencies -
										Element:strong
											currency
											(
										Element:em
											String
											) -
										Element:strong
											total_fare
											(
										Element:em
											Float
											) -
										Element:strong
											tax
											(
										Element:em
											Float
											)
										Element:li
										Element:strong
											flightData
											(
										Element:a
											) – contains a copy of the result from the
										Element:span
											FlightResult
										Element:a
											call’s response
										Element:span
											Search
										Element:li
										Element:strong
											contactInfo
											(
										Element:a
											) – contains a copy of the data received in the
										Element:span
											Contact
										Element:a
											call
										Element:span
											Booking
										Element:tr
										Element:th
											JSON Parameters for LCC flights:
										Element:tr
										Element:td
										Element:td
										Element:ul
										Element:li
										Element:strong
											ticket
											(
										Element:em
											String
											) – the ticket number (LCC PNR) for this booking
										Element:li
										Element:strong
											pnr
											(
										Element:em
											String
											) – the PNR locator which identifies this booking
										Element:li
										Element:strong
											bookingReferenceId
											(
										Element:em
											String
											) – the ID of the workflow at Allmyles; this is not currently required anywhere later, but can be useful for debugging
										Element:li
										Element:strong
											contactInfo
											(
										Element:a
											) – contains a copy of the data received in the
										Element:span
											Contact
										Element:a
											call
										Element:span
											Booking
										Element:li
										Element:strong
											flightData
											(
										Element:a
											) – contains a copy of the result from the
										Element:span
											FlightResult
										Element:a
											call’s response
										Element:span
											Search
										Element:li
										Element:strong
											baggageTiers
											(
										Element:a
										Element:span
											BaggageTier
										Element:em
											[ ]
											) – the baggage tier option the passenger has chosen
										Element:li
										Element:strong
											carryOnBaggageTiers
											(
										Element:a
										Element:span
											CarryOnBaggageTier
										Element:em
											[ ]
											) – the carry-on baggage tier option the passenger has chosen
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response Codes
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:p
											In case of errors (referring to response code 202 and 5xx), the client is expected to either have a correct the ticketing manually, or send periodic
										Element:a
											requests until a definitive response is given (one of the following statuses: ‘successful’, ‘failed’, or ‘unknown’.) This should take no longer than 40 minutes. Tickets with an unknown status still require manual intervention.
										Element:span
											Ticketing Status
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:ul
										Element:li
										Element:strong
											202 ‘Warning: e-ticket could not be issued due to technical difficulties. Please contact youragent.’
											: When this error occurs, the actual ticket is purchased, but an unknown error happens later on in the flow.
										Element:li
										Element:strong
											412 ‘a request is already being processed’
											: This error comes up even when the other request is asynchronous (i.e. when we are still processing a search request). The response for async requests does not need to be retrieved for this error to clear, just wait a few seconds.
										Element:li
										Element:strong
											412 ‘no payment data given’
										Element:li
										Element:strong
											412 ‘book request should have been received’
										Element:li
										Element:strong
											412 ‘book response should have been received’
										Element:li
										Element:strong
											500 ‘booking failed, cannot create ticket’
											: This error is returned if the book response we last received from the provider contained an error.
										Element:li
										Element:strong
											503 ‘error while creating ticket - please try again later’
											: This is the generic error we return when receiving an unknown response for the ticket request. No refund should be sent without manually checking if the ticket has been issued first.
										Element:li
										Element:strong
											504 ‘ticket creation timed out - but could very well have been successful!’
											: Almost the same as above, refunds are definitely not safe in this case.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
										Element:a
											¶
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Response
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
													Element:strong
														JSON for traditional flights:
													Element:pre
													Element:span
														"body": { "tickets": [ { "passenger": "Mr Janos kovcas", "passenger_type": "ADT", "ticket": "125-4838843038", "price": { "currency": "HUF", "total_fare": 26000.0, "tax": 17800.0 } "baggage": { "quantity": 1, "unit": "PC", }, "price_in_preferred_currencies": [ { "currency":GBP", "total_fare": 60.48, "tax": 41.41 }, { "currency": "USD", "total_fare": 94.84, "tax": 64.93 } ], }, { "passenger": "Mr Janos kascvo", "passenger_type": "ADT", "ticket": "125-4838843039", "price": { "currency": "HUF", "total_fare": 26000.0, "tax": 17800.0 } "baggage": { "quantity": 1, "unit": "PC", }, "price_in_preferred_currencies": [ { "currency":GBP", "total_fare": 60.48, "tax": 41.41 }, { "currency": "USD", "total_fare": 94.84, "tax": 64.93 } ], } ], "flightData": { "_comment": "trimmed in example for brevity's sake" }, "contactInfo": { "address": { "city": "Budapest", "countryCode": "HU", "line1": "Madach ut 13-14", "line2": null, "line3": null }, "email": "
													Element:a
														[email protected]
														", "name": "Kovacs Lajos", "phone": { "areaCode": "30", "countryCode": "36", "number": "1234567" } } }
													Element:p
													Element:strong
														JSON for LCC flights:
													Element:pre
													Element:span
														{ "bookingReferenceId": "req-d65c00dc43ba4ad798e5478803575aab", "contactInfo": { "address": { "city": "Budapest", "countryCode": "HU", "line1": "Madach ut 13-14", "line2": null, "line3": null }, "email": "
													Element:a
														[email protected]
														", "name": "Kovacs Lajos", "phone": { "areaCode": "30", "countryCode": "36", "number": "1234567" } }, "flightData": { "_comment": "trimmed in example for brevity's sake" }, "lastTicketingDate": null, "pnr": "6YE2LM", "ticket": "0XN4GTO", "baggageTiers": { "tier": "2", "max_weights": [15.0, 20.0], "price": { "amount": 37024.8, "currency": HUF }, "price_in_preferred_currencies": [ { "currency":GBP", "amount": 10.0 }, { "currency": "USD", "amount": 12.0 } ], }, "carryOnBaggageTiers": { "tier": "2", "description": "Large cabin bag", "price": { "amount": 8000.0, "currency": HUF }, "price_in_preferred_currencies": [ { "currency":GBP", "amount": 10.0 }, { "currency": "USD", "amount": 12.0 } ], } }
												Node:
												(type) c
												(layer)4
													Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Ticketing Status
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:p
								This call enables checking the result of a ticketing request. This is useful when it’s unclear whether the ticketing process went through, due to a failure at external providers, in Allmyles’ systems, on the client’s server, or anywhere in between. The request will identify the correct workflow based on the cookie header’s contents, which must match whatever was sent in the ticket request.
						Node:
						(type) c
						(layer)2
							Element:p
								If you’re using
							Element:strong
								alternative providers
								and an LCC booking returns with the status
							Element:strong
								pending
								or
							Element:strong
								unknown
								, keep in mind that the ticket could still be created successfully in the next 72 hours. You should keep making periodic
							Element:a
								requests at a reduced rated until a
							Element:span
								Ticketing Status
							Element:strong
								successful
								or
							Element:strong
								failed
								status is returned or the 72-hour period is over.
						Node:
						(type) c
						(layer)2
							Element:p
								The periodic checks should be made at most once every 5 minutes.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Available statuses
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:ul
										Element:li
										Element:strong
											inactive
											: this is the status returned when the ticketing process has not been initiated yet, i.e. before a
										Element:a
											request is sent
										Element:span
											Ticketing
										Element:li
										Element:strong
											pending
											: the ticket creation is still in progress
										Element:li
										Element:strong
											successful
											: the ticket has been successfully created. PNR data will be passed alongside this status, including the ticket number(s).
										Element:li
										Element:strong
											failed
											: the ticket creation failed, and the fare can be refunded (do note that this is the only status in which refunds can be automatically made)
										Element:li
										Element:strong
											unknown
											: it is not possible to programmatically determine the outcome of the request. The passenger’s money should be held until a human identifies the issue and determines whether the ticket exists or not.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:dl
										Element:dt
										Element:code
											GET
										Element:code
											/tickets/:booking_id/status
										Element:a
											¶
										Element:dd
										Element:p
										Element:strong
											booking_id
											is the booking ID of the
										Element:a
											whose ticket’s status we are interested in
										Element:span
											Combination
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response Body
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:table
										Element:col
										Element:col
										Element:tbody
										Element:tr
										Element:th
											JSON Parameters:
										Element:tr
										Element:td
										Element:td
										Element:ul
										Element:li
										Element:strong
											status
											(
										Element:em
											String
											) – one of the statuses
										Element:li
										Element:strong
											pnr
											(
										Element:a
											) – the pnr object that a
										Element:span
											PNR
										Element:a
											request would return about the flight — this includes the ticket number(s) as well
										Element:span
											Get Booking
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
										Element:a
											¶
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Response
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
													Element:strong
														JSON for traditional flights:
													Element:pre
													Element:span
													Element:span
														{
													Element:span
														"status"
													Element:span
														:
													Element:span
														"successful"
													Element:span
														,
													Element:span
														"pnr"
													Element:span
														:
													Element:span
														{
													Element:span
														"deleted"
													Element:span
														:
													Element:span
														false
													Element:span
														,
													Element:span
														"id"
													Element:span
														:
													Element:span
														"3L4TMN"
													Element:span
														,
													Element:span
														"passengers"
													Element:span
														:
													Element:span
														[
													Element:span
														{
													Element:span
														"birth_date"
													Element:span
														:
													Element:span
														"1974-01-01"
													Element:span
														,
													Element:span
														"email"
													Element:span
														:
													Element:span
														"
													Element:a
														[email protected]
														"
													Element:span
														,
													Element:span
														"name"
													Element:span
														:
													Element:span
														"SMFDETH HYRASESN/MR"
													Element:span
														,
													Element:span
														"traditional_ticket"
													Element:span
														:
													Element:span
														"125-5249156160"
													Element:span
														,
													Element:span
														"type"
													Element:span
														:
													Element:span
														"ADT"
													Element:span
														},
													Element:span
														{
													Element:span
														"birth_date"
													Element:span
														:
													Element:span
														"1974-01-01"
													Element:span
														,
													Element:span
														"email"
													Element:span
														:
													Element:span
														null
													Element:span
														,
													Element:span
														"name"
													Element:span
														:
													Element:span
														"SMIATTASDH OSAJOEONHTDNHO/MR"
													Element:span
														,
													Element:span
														"traditional_ticket"
													Element:span
														:
													Element:span
														"125-5249156161"
													Element:span
														,
													Element:span
														"type"
													Element:span
														:
													Element:span
														"ADT"
													Element:span
														}
													Element:span
														]
													Element:span
														}
													Element:span
														}
												Node:
												(type) c
												(layer)4
													Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Rules
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:p
								This call returns the terms and conditions of the flight in question, or a link to them if the raw text isn’t available (in case of LCC flights).
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:dl
										Element:dt
										Element:code
											GET
										Element:code
											/flights/:booking_id/rules
										Element:a
											¶
										Element:dd
										Element:p
										Element:strong
											booking_id
											is the booking ID of the
										Element:a
											to get the rules of
										Element:span
											Combination
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response Body
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:table
										Element:col
										Element:col
										Element:tbody
										Element:tr
										Element:th
											JSON Parameters:
										Element:tr
										Element:td
										Element:td
										Element:ul
										Element:li
										Element:strong
											rulesResultSet
											(
										Element:em
											RulesResultSet
											) – root container
										Element:ul
										Element:li
										Element:strong
											rules
											(
										Element:a
										Element:span
											Rule
										Element:em
											[ ]
											) – contains the flight rule texts, is returned only for traditional flights
										Element:li
										Element:strong
											link
											(
										Element:em
											String
											) – contains a link to the airline’s rules page, is returned only for LCC flights
									Node:
									(type) c
									(layer)3
										Element:span
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Rule
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:table
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:th
														JSON Parameters:
													Element:tr
													Element:td
													Element:td
													Element:ul
													Element:li
													Element:strong
														code
														(
													Element:em
														String
														) - the machine readable identifier code for the given section in the rules
													Element:li
													Element:strong
														title
														(
													Element:em
														String
														) - the human readable section title for the block
													Element:li
													Element:strong
														text
														(
													Element:em
														String
														) - the section’s raw rule text body
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response Codes
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:ul
										Element:li
										Element:strong
											404 ‘search first’
										Element:li
										Element:strong
											412 ‘a request is already being processed’
											: This error comes up even when the other request is asynchronous (i.e. when we are still processing a search request). The response for async requests does not need to be retrieved for this error to clear, just wait a few seconds.
										Element:li
										Element:strong
											409 ‘request is not for the latest search’
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
										Element:a
											¶
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Response
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
													Element:strong
														JSON (for LCC):
													Element:pre
													Element:span
													Element:span
														{
													Element:span
														"rulesResultSet"
													Element:span
														:
													Element:span
														{
													Element:span
														"link"
													Element:span
														:
													Element:span
														"https://www.ryanair.com/en/terms-and-conditions"
													Element:span
														}
													Element:span
														}
													Element:p
													Element:strong
														JSON (for traditional):
													Element:pre
													Element:span
													Element:span
														{
													Element:span
														"rulesResultSet"
													Element:span
														:
													Element:span
														{
													Element:span
														"rules"
													Element:span
														:
													Element:span
														[
													Element:span
														{
													Element:span
														"code"
													Element:span
														:
													Element:span
														"OD"
													Element:span
														,
													Element:span
														"text"
													Element:span
														:
													Element:span
														"NONE UNLESS OTHERWISE SPECIFIED"
													Element:span
														,
													Element:span
														"title"
													Element:span
														:
													Element:span
														"OTHER DISCOUNTS"
													Element:span
														},
													Element:span
														{
													Element:span
														"code"
													Element:span
														:
													Element:span
														"SO"
													Element:span
														,
													Element:span
														"text"
													Element:span
														:
													Element:span
														"STOPOVERS NOT PERMITTED ON THE FARE COMPONENT."
													Element:span
														,
													Element:span
														"title"
													Element:span
														:
													Element:span
														"STOPOVERS"
													Element:span
														},
													Element:span
														]
													Element:span
														}
													Element:span
														}
												Node:
												(type) c
												(layer)4
													Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Get Booking
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:p
								This call returns the details of a booking identified by a PNR locator. This makes it possible to re-open an expired session and send a ticketing request based on the PNR locator after the initial session is closed.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:dl
										Element:dt
										Element:code
											GET
										Element:code
											/books/:pnr_locator
										Element:a
											¶
										Element:dd
										Element:p
										Element:strong
											pnr_locator
											is a unique identifier of the booking, received at the book response.
									Node:
									(type) c
									(layer)3
										Element:span
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response Body
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:table
										Element:col
										Element:col
										Element:tbody
										Element:tr
										Element:th
											JSON Parameters:
										Element:tr
										Element:td
										Element:td
										Element:ul
										Element:li
										Element:strong
											pnr
											(
										Element:em
											pnr
											) – root container
										Element:ul
										Element:li
										Element:strong
											passengers
											(
										Element:em
											Passenger [ ]
											) – the list of passengers
										Element:ul
										Element:li
										Element:strong
											birth_date
											(
										Element:em
											String
											) – format is
										Element:code
										Element:span
											YYYY-MM-DD
										Element:li
										Element:strong
											traditional_ticket
											(
										Element:em
											String
											) - the ticket number which allows the passenger to actually board the plane (or
										Element:code
											if flight is LCC)
										Element:span
											null
										Element:li
										Element:strong
											type
											(
										Element:em
											String
											) – one of
										Element:a
										Element:span
											PassengerTypes
										Element:li
										Element:strong
											email
											(
										Element:em
											String
											)
										Element:li
										Element:strong
											name
											(
										Element:em
											String
											) – the name of the passenger the booking was made for
										Element:li
										Element:strong
											id
											(
										Element:em
											String
											) – the PNR locator which identifies the booking
										Element:li
										Element:strong
											lcc_ticket
											(
										Element:em
											String
											) – the ticket number which allows the passenger to actually board the plane (or
										Element:code
											if flight is traditional)
										Element:span
											null
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response Codes
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:ul
										Element:li
										Element:strong
											404 ‘PNR not found’
										Element:li
										Element:strong
											403 ‘PNR belongs to another auth token’
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
										Element:a
											¶
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Response
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
													Element:strong
														JSON:
													Element:pre
													Element:span
													Element:span
														{
													Element:span
														"pnr"
													Element:span
														:
													Element:span
														{
													Element:span
														"passengers"
													Element:span
														:
													Element:span
														[
													Element:span
														{
													Element:span
														"birth_date"
													Element:span
														:
													Element:span
														"1974-01-01"
													Element:span
														,
													Element:span
														"traditional_ticket"
													Element:span
														:
													Element:span
														"123-5249155974"
													Element:span
														,
													Element:span
														"type"
													Element:span
														:
													Element:span
														"ADT"
													Element:span
														,
													Element:span
														"email"
													Element:span
														:
													Element:span
														"
													Element:a
														[email protected]
														"
													Element:span
														,
													Element:span
														"name"
													Element:span
														:
													Element:span
														"KOVACS JANOS/MR"
													Element:span
														}
													Element:span
														],
													Element:span
														"id"
													Element:span
														:
													Element:span
														"3KWQUK"
													Element:span
														,
													Element:span
														"lcc_ticket"
													Element:span
														:
													Element:span
														null
													Element:span
														}
													Element:span
														}
												Node:
												(type) c
												(layer)4
													Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Cancel Booking
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:p
								This call cancels the booking identified in the request. Bookings can only be cancelled before a ticket is created.
							Element:strong
								Only bookings of traditional flights can be cancelled!
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:dl
										Element:dt
										Element:code
											DELETE
										Element:code
											/books/:pnr_locator
										Element:a
											¶
										Element:dd
										Element:p
										Element:strong
											pnr_locator
											is a unique identifier of the booking, received at the book response.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response Body
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:p
										Element:strong
											N/A:
										Element:p
											Returns an HTTP 204 No Content status code if successful.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response Codes
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:ul
										Element:li
										Element:strong
											403 ‘PNR belongs to another auth token’
										Element:li
										Element:strong
											404 ‘PNR not found’
										Element:li
										Element:strong
											409 ‘Booking already cancelled.’
										Element:li
										Element:strong
											409 ‘Booked flights can only be cancelled before ticket is created.’
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:a
											Next
										Element:span
										Element:a
										Element:span
											Previous
										Element:hr
										Element:p
											© Copyright 2014, Allmyles Ltd.
											Built with
										Element:span
											Revision
										Element:code
											a31bef5d
											.
										Element:a
											Sphinx
											using a
										Element:a
											theme
											provided by
										Element:a
											Read the Docs
											.
									Node:
									(type) c
									(layer)3
										Element:span
										Element:span
											Read the Docs
											v: latest
										Element:span
									Node:
									(type) c
									(layer)3
										Element:dl
										Element:dt
											Versions
										Element:dd
										Element:a
											latest
									Node:
									(type) c
									(layer)3
										Element:dl
										Element:dt
											Downloads
										Element:dd
										Element:a
											pdf
										Element:dd
										Element:a
											htmlzip
										Element:dd
										Element:a
											epub
									Node:
									(type) c
									(layer)3
										Element:dl
										Element:dt
											On Read the Docs
										Element:dd
										Element:a
											Project Home
										Element:dd
										Element:a
											Builds
									Node:
									(type) c
									(layer)3
										Element:hr
											Free document hosting provided by
									Node:
									(type) c
									(layer)3
										Element:a
											Read the Docs
											.
