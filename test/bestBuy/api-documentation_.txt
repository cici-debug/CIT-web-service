Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Overview
			Node:
			(type) c
			(layer)1
				Element:p
					Welcome to the Best Buy Developer API site! Whether you’re an API pro, a beginning developer or a Best Buy partner, our extensive API catalog is waiting for your imagination. Our API suite allows you to query Products, Stores and much more. Come on in to explore our data, browse descriptions of the available attributes and see examples of working requests and responses.
			Node:
			(type) c
			(layer)1
				Element:p
					If this is your first time using our APIs, please check out our
				Element:a
					Getting Started
					guide. If you already have your API key, our Search and Response Formats can help you refine your results.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					NOTE: Effective in early 2017, JSONP will be disabled in the interest of protecting user privacy. This will prevent developers making API calls from the client side and thus exposing API keys to the general public. If you have any questions or ideas on this issue, please contact us at developer@bestbuy.com.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Response Format
						Node:
						(type) c
						(layer)2
							Element:p
								Responses can be returned in either
							Element:strong
								JSON
								or
							Element:strong
								XML
								.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								Applies to: Products API • Stores API • Categories API
						Node:
						(type) c
						(layer)2
							Element:p
								To request a single item, such as a specific product, indicate the desired response format with the extension added after the item’s identifier. For example,
							Element:code
								/products/8880044.json
								.
						Node:
						(type) c
						(layer)2
							Element:p
								To request a collection of items, such as all the products in our catalog, the desired response format is specified in the
							Element:code
								format
								query parameter. An example of this can be seen in the Retrieving Collections section. If no format is specified then xml will be returned.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								Applies to: Recommendations API
						Node:
						(type) c
						(layer)2
							Element:p
								When using any of the endpoints in the Recommendations API the response format returned will be json. The
							Element:strong
								XML
								format is not supported for the Recommendations API endpoints. You can specify the format using
							Element:code
								/6534009/alsoViewed.json
								or not specify a format like
							Element:code
								/6534009/alsoViewed
								.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								Applies to: Products API
						Node:
						(type) c
						(layer)2
							Element:p
								By agreeing to Best Buy’s
							Element:a
								terms of service
								, you also agree not to cache any content except on a temporary basis. As such, our response links will expire after seven days. Here are several examples of appropriately formatted response URLs:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:code
								url: https://api.bestbuy.com/click/5592e2b895800000/12345678/pdp
						Node:
						(type) c
						(layer)2
							Element:p
							Element:code
								mobileUrl: https://api.bestbuy.com/click/5592e2b895800000/12345678/pdp
						Node:
						(type) c
						(layer)2
							Element:p
							Element:code
								addToCartUrl: https://api.bestbuy.com/click/5592e2b895800000/12345678/cart
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Returned Attributes
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								curl
							Element:span
								"https://api.bestbuy.com/v1/products/8880044.json?show=sku,name,salePrice&apiKey=YourAPIKey"
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
							Element:span
								var
							Element:span
								bby
							Element:span
								=
							Element:span
								require
							Element:span
								(
							Element:span
								'bestbuy'
							Element:span
								)(
							Element:span
								'YourAPIKey'
							Element:span
								);
							Element:span
								bby
							Element:span
								.
							Element:span
								products
							Element:span
								(
							Element:span
								8880044
							Element:span
								,{
							Element:span
								show
							Element:span
								:
							Element:span
								'sku,name,salePrice'
							Element:span
								}).
							Element:span
								then
							Element:span
								(
							Element:span
								function
							Element:span
								(
							Element:span
								data
							Element:span
								){
							Element:span
								console
							Element:span
								.
							Element:span
								log
							Element:span
								(
							Element:span
								data
							Element:span
								);
							Element:span
								});
						Node:
						(type) c
						(layer)2
							Element:blockquote
							Element:p
								Only returns the
							Element:code
								sku
								,
							Element:code
								name
								and
							Element:code
								salePrice
								attributes for products.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
							Element:span
								{
							Element:span
							Element:span
								"sku"
							Element:span
								:
							Element:span
							Element:span
								8880044
							Element:span
								,
							Element:span
							Element:span
								"name"
							Element:span
								:
							Element:span
							Element:span
								"Batman Begins (Blu-ray Disc)"
							Element:span
								,
							Element:span
							Element:span
								"salePrice"
							Element:span
								:
							Element:span
							Element:span
								7.99
							Element:span
							Element:span
								}
							Element:span
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								Applies to: Products API • Stores API • Categories API
						Node:
						(type) c
						(layer)2
							Element:p
								The
							Element:strong
								attribute allows you to control which attributes are returned. You can return specific attributes by following the syntax below. To return all attributes, use
							Element:code
								show
							Element:code
								show=all
								.
						Node:
						(type) c
						(layer)2
							Element:p
								If you tried the example query in the Getting Started section, you probably noticed that our Products API returns a lot of attributes for each product. For convenience, we provide a
							Element:code
								show
								query parameter that allows you to specify just the attributes that you want returned in the response.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Show All
									Node:
									(type) c
									(layer)3
										Element:p
										Element:em
											Applies to: Products API • Stores API
									Node:
									(type) c
									(layer)3
										Element:p
											In order to make the API responses more manageable, we don’t return all available attributes for those items that contain many (e.g. Products and Stores). In the event that you want to get all of these hidden attributes, you can set
										Element:code
											show=all
											in the query parameters for the API
									Node:
									(type) c
									(layer)3
										Element:p
											For example, the Stores API does not return the
										Element:code
											detailedHours
											attribute by default. By setting
										Element:code
											show=all
											you will receive
										Element:code
											detailedHours
											in the response.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Sort
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								curl
							Element:span
								'https://api.bestbuy.com/v1/products(categoryPath.name="All%20Flat-Panel%20TVs")?format=json&show=sku,name,salePrice&sort=salesRankMediumTerm.asc&apiKey=YourAPIKey'
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
							Element:span
								var
							Element:span
								bby
							Element:span
								=
							Element:span
								require
							Element:span
								(
							Element:span
								'bestbuy'
							Element:span
								)(
							Element:span
								'YourAPIKey'
							Element:span
								);
							Element:span
								bby
							Element:span
								.
							Element:span
								products
							Element:span
								(
							Element:span
								'categoryPath.name="All Flat-Panel TVs"'
							Element:span
								,{
							Element:span
								show
							Element:span
								:
							Element:span
								'sku,name,salePrice'
							Element:span
								,
							Element:span
								sort
							Element:span
								:
							Element:span
								'salesRankMediumTerm.asc'
							Element:span
								}).
							Element:span
								then
							Element:span
								(
							Element:span
								function
							Element:span
								(
							Element:span
								data
							Element:span
								){
							Element:span
								console
							Element:span
								.
							Element:span
								log
							Element:span
								(
							Element:span
								data
							Element:span
								);
							Element:span
								});
						Node:
						(type) c
						(layer)2
							Element:blockquote
							Element:p
								Lists all flat-panel TVs with prices and sorts by the best-selling products over the last week.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
							Element:span
								{
							Element:span
							Element:span
								"from"
							Element:span
								:
							Element:span
							Element:span
								1
							Element:span
								,
							Element:span
							Element:span
								"to"
							Element:span
								:
							Element:span
							Element:span
								10
							Element:span
								,
							Element:span
							Element:span
								"total"
							Element:span
								:
							Element:span
							Element:span
								307
							Element:span
								,
							Element:span
							Element:span
								"currentPage"
							Element:span
								:
							Element:span
							Element:span
								1
							Element:span
								,
							Element:span
							Element:span
								"totalPages"
							Element:span
								:
							Element:span
							Element:span
								31
							Element:span
								,
							Element:span
							Element:span
								"queryTime"
							Element:span
								:
							Element:span
							Element:span
								"0.005"
							Element:span
								,
							Element:span
							Element:span
								"totalTime"
							Element:span
								:
							Element:span
							Element:span
								"0.035"
							Element:span
								,
							Element:span
							Element:span
								"partial"
							Element:span
								:
							Element:span
							Element:span
								false
							Element:span
								,
							Element:span
							Element:span
								"canonicalUrl"
							Element:span
								:
							Element:span
							Element:span
								"/v1/products(categoryPath.name=All Flat-Panel TVs)?show=sku,name,salePrice&sort=salesRankMediumTerm&format=json&apiKey=YourAPIKey"
							Element:span
								,
							Element:span
							Element:span
								"products"
							Element:span
								:
							Element:span
							Element:span
								[
							Element:span
							Element:span
								{
							Element:span
							Element:span
								"sku"
							Element:span
								:
							Element:span
							Element:span
								3356036
							Element:span
								,
							Element:span
							Element:span
								"name"
							Element:span
								:
							Element:span
							Element:span
								"Insignia™ - 32\" Class (31-1/2\" Diag.) - LED - 720p - 60Hz - HDTV"
							Element:span
								,
							Element:span
							Element:span
								"salePrice"
							Element:span
								:
							Element:span
							Element:span
								179.99
							Element:span
							Element:span
								},
							Element:span
							Element:span
								{
							Element:span
							Element:span
								"sku"
							Element:span
								:
							Element:span
							Element:span
								2563138
							Element:span
								,
							Element:span
							Element:span
								"name"
							Element:span
								:
							Element:span
							Element:span
								"Insignia™ - 48\" Class (47-5/8\" Diag.) - LED - 1080p - 60Hz - HDTV"
							Element:span
								,
							Element:span
							Element:span
								"salePrice"
							Element:span
								:
							Element:span
							Element:span
								399.99
							Element:span
							Element:span
								}
							Element:span
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								Applies to: Products API • Stores API • Categories API
						Node:
						(type) c
						(layer)2
							Element:p
								You can specify the way in which you’d like to have the results sorted by one or more attribute value(s).
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:code
								sort=attribute.asc
								- Sort the results in ascending order of the specified attribute
							Element:li
							Element:code
								sort=attribute.dsc
								- Sort the results in descending order of the specified attribute
							Element:li
							Element:code
								sort=attribute.desc
								- Sort the results in descending order of the specified attribute
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Sort by multiple attributes
									Node:
									(type) c
									(layer)3
										Element:p
											To sort by multiple attributes, separate the sort terms with commas. The results will initially be sorted by the first attribute in the direction specified. Then, the results within each set will be sorted by the second attribute.
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:code
											sort=attribute1.asc,attribute2.dsc
											- Sort by attribute 1 in ascending order, then by attribute 2 in descending order
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Child attribute sort limitation
									Node:
									(type) c
									(layer)3
										Element:p
											The text after the period in the sort parameter is interpreted as the sort direction. Therefore, you cannot sort by a child attribute, as it inherently includes a period in its name.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Facets
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								curl
							Element:span
								'https://api.bestbuy.com/v1/products(categoryPath.name="All%20Flat-Panel%20TVs")?format=json&show=sku,name,salePrice&facet=manufacturer,5&apiKey=YourAPIKey'
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
							Element:span
								var
							Element:span
								bby
							Element:span
								=
							Element:span
								require
							Element:span
								(
							Element:span
								'bestbuy'
							Element:span
								)(
							Element:span
								'YourAPIKey'
							Element:span
								);
							Element:span
								bby
							Element:span
								.
							Element:span
								products
							Element:span
								(
							Element:span
								'categoryPath.name="All Flat-Panel TVs"'
							Element:span
								,{
							Element:span
								show
							Element:span
								:
							Element:span
								'sku,name,salePrice'
							Element:span
								,
							Element:span
								facet
							Element:span
								:
							Element:span
								'manufacturer,5'
							Element:span
								}).
							Element:span
								then
							Element:span
								(
							Element:span
								function
							Element:span
								(
							Element:span
								data
							Element:span
								){
							Element:span
								console
							Element:span
								.
							Element:span
								log
							Element:span
								(
							Element:span
								data
							Element:span
								);
							Element:span
								});
						Node:
						(type) c
						(layer)2
							Element:blockquote
							Element:p
								Show the 5 manufacturers for which we have the most flat-panel TVs.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
							Element:span
								{
							Element:span
							Element:span
								"products"
							Element:span
								:
							Element:span
							Element:span
								[
							Element:span
							Element:span
								],
							Element:span
							Element:span
								"facets"
							Element:span
								:
							Element:span
							Element:span
								{
							Element:span
							Element:span
								"manufacturer"
							Element:span
								:
							Element:span
							Element:span
								{
							Element:span
							Element:span
								"samsung"
							Element:span
								:
							Element:span
							Element:span
								96
							Element:span
								,
							Element:span
							Element:span
								"lg"
							Element:span
								:
							Element:span
							Element:span
								46
							Element:span
								,
							Element:span
							Element:span
								"sharp"
							Element:span
								:
							Element:span
							Element:span
								24
							Element:span
								,
							Element:span
							Element:span
								"vizio"
							Element:span
								:
							Element:span
							Element:span
								23
							Element:span
								,
							Element:span
							Element:span
								"insignia™"
							Element:span
								:
							Element:span
							Element:span
								18
							Element:span
							Element:span
								}
							Element:span
							Element:span
								}
							Element:span
							Element:span
								}
							Element:span
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								Applies to: Products API • Stores API • Categories API
						Node:
						(type) c
						(layer)2
							Element:p
								You can retrieve summary information about the items that are returned by your query by using the
							Element:code
								facets
								query parameter.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Pagination
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								curl
							Element:span
								'https://api.bestbuy.com/v1/products(type=Movie)?format=json&show=sku,name,salePrice&pageSize=3&page=10&apiKey=YourAPIKey'
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
							Element:span
								var
							Element:span
								bby
							Element:span
								=
							Element:span
								require
							Element:span
								(
							Element:span
								'bestbuy'
							Element:span
								)(
							Element:span
								'YourAPIKey'
							Element:span
								);
							Element:span
								bby
							Element:span
								.
							Element:span
								products
							Element:span
								(
							Element:span
								'type=Movie'
							Element:span
								,{
							Element:span
								show
							Element:span
								:
							Element:span
								'sku,name,salePrice'
							Element:span
								,
							Element:span
								page
							Element:span
								:
							Element:span
								10
							Element:span
								,
							Element:span
								pageSize
							Element:span
								:
							Element:span
								3
							Element:span
								}).
							Element:span
								then
							Element:span
								(
							Element:span
								function
							Element:span
								(
							Element:span
								data
							Element:span
								){
							Element:span
								console
							Element:span
								.
							Element:span
								log
							Element:span
								(
							Element:span
								data
							Element:span
								);
							Element:span
								});
						Node:
						(type) c
						(layer)2
							Element:blockquote
							Element:p
								In this example we ask for the 10th page of results and for each page to contain just 3 products.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
							Element:span
								{
							Element:span
							Element:span
								"from"
							Element:span
								:
							Element:span
							Element:span
								28
							Element:span
								,
							Element:span
							Element:span
								"to"
							Element:span
								:
							Element:span
							Element:span
								30
							Element:span
								,
							Element:span
							Element:span
								"total"
							Element:span
								:
							Element:span
							Element:span
								101727
							Element:span
								,
							Element:span
							Element:span
								"currentPage"
							Element:span
								:
							Element:span
							Element:span
								1000
							Element:span
								,
							Element:span
							Element:span
								"totalPages"
							Element:span
								:
							Element:span
							Element:span
								33909
							Element:span
								,
							Element:span
							Element:span
								"queryTime"
							Element:span
								:
							Element:span
							Element:span
								"0.039"
							Element:span
								,
							Element:span
							Element:span
								"totalTime"
							Element:span
								:
							Element:span
							Element:span
								"0.048"
							Element:span
								,
							Element:span
							Element:span
								"partial"
							Element:span
								:
							Element:span
							Element:span
								false
							Element:span
								,
							Element:span
							Element:span
								"canonicalUrl"
							Element:span
								:
							Element:span
							Element:span
								"/v1/products(type=\"Movie\")?show=sku,name,salePrice&format=json&pageSize=3&page=10&apiKey=YourAPIKey"
							Element:span
								,
							Element:span
							Element:span
								"products"
							Element:span
								:
							Element:span
							Element:span
								[
							Element:span
							Element:span
								{
							Element:span
							Element:span
								"sku"
							Element:span
								:
							Element:span
							Element:span
								17215997
							Element:span
								,
							Element:span
							Element:span
								"name"
							Element:span
								:
							Element:span
							Element:span
								"AC/DC: Rock Power (DVD)"
							Element:span
								,
							Element:span
							Element:span
								"salePrice"
							Element:span
								:
							Element:span
							Element:span
								11.99
							Element:span
							Element:span
								},
							Element:span
							Element:span
								{
							Element:span
							Element:span
								"sku"
							Element:span
								:
							Element:span
							Element:span
								23003222
							Element:span
								,
							Element:span
							Element:span
								"name"
							Element:span
								:
							Element:span
							Element:span
								"AC/DC: Rocks Detroit (DVD)"
							Element:span
								,
							Element:span
							Element:span
								"salePrice"
							Element:span
								:
							Element:span
							Element:span
								10.99
							Element:span
							Element:span
								}
							Element:span
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								Applies to: Products API • Stores API • Categories API • Recommendations API • Buying Options API
						Node:
						(type) c
						(layer)2
							Element:p
								Even if you’ve trimmed down the number of products returned by making use of search, many of our APIs have the potential to return lots of results. To make these large responses more manageable, we break them into pages. By default, we include 10 results per page, but you can ask for up to 100 per page by making use of the
							Element:code
								pageSize
								parameter. Use the
							Element:code
								page
								parameter to choose which page of results you’d like returned.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Note:
								If your result set is more than 10 pages, you should use the
							Element:code
								cursorMark
								parameter to walk through your results. See
							Element:a
								Cursor Marks
								for more information.
						Node:
						(type) c
						(layer)2
							Element:p
								Here is an explanation of the meta data when more than one page is available:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
								Name
							Element:th
								Description
							Element:th
								Additional Details
							Element:tbody
							Element:tr
							Element:td
							Element:strong
								canonicalURL
							Element:td
								the non-server part of the query
							Element:td
							Element:tr
							Element:td
							Element:strong
								currentPage
							Element:td
								the page being returned
							Element:td
								referred to as “page.current” for the Recommendations and Buying Options APIs
							Element:tr
							Element:td
							Element:strong
								from
							Element:td
								the index of the first item returned on the current page
							Element:td
								not available on the Recommendations and Buying Options APIs
							Element:tr
							Element:td
							Element:strong
								size
							Element:td
								the number of results returned per page
							Element:td
								only available on the Recommendations and Buying Options APIs
							Element:tr
							Element:td
							Element:strong
								to
							Element:td
								the index of the last item returned on the current page
							Element:td
								not available on the Recommendations and Buying Options APIs
							Element:tr
							Element:td
							Element:strong
								total
							Element:td
								the total number of items returned by the query
							Element:td
								referred to as “resultSet.count” for the Recommendations and Buying Options APIs
							Element:tr
							Element:td
							Element:strong
								totalPages
							Element:td
								the number of pages required to list all items
							Element:td
								referred to as “page.total” for the Recommendations and Buying Options APIs
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Cursor Marks
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								curl
							Element:span
								'https://api.bestbuy.com/v1/products(type=HardGood)?format=json&show=sku,name,salePrice&pageSize=100&cursorMark=*&apiKey=YourAPIKey'
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
							Element:span
								var
							Element:span
								bby
							Element:span
								=
							Element:span
								require
							Element:span
								(
							Element:span
								'bestbuy'
							Element:span
								)(
							Element:span
								'YourAPIKey'
							Element:span
								);
							Element:span
								bby
							Element:span
								.
							Element:span
								products
							Element:span
								(
							Element:span
								'type=HardGood'
							Element:span
								,{
							Element:span
								show
							Element:span
								:
							Element:span
								'sku,name,salePrice'
							Element:span
								,
							Element:span
								pageSize
							Element:span
								:
							Element:span
								100
							Element:span
								,
							Element:span
								cursorMark
							Element:span
								=*
							Element:span
								}).
							Element:span
								then
							Element:span
								(
							Element:span
								function
							Element:span
								(
							Element:span
								data
							Element:span
								){
							Element:span
								console
							Element:span
								.
							Element:span
								log
							Element:span
								(
							Element:span
								data
							Element:span
								);
							Element:span
								});
						Node:
						(type) c
						(layer)2
							Element:blockquote
							Element:p
								In this example we ask for the first page of results and for each page to contain 100 products.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
							Element:span
								{
							Element:span
							Element:span
								"nextCursorMark"
							Element:span
								:
							Element:span
							Element:span
								"AoNeDQhAhoq2MnByb2R1Y3RfMTE0NjYzNV91cw=="
							Element:span
								,
							Element:span
							Element:span
								"total"
							Element:span
								:
							Element:span
							Element:span
								49911
							Element:span
								,
							Element:span
							Element:span
								"totalPages"
							Element:span
								:
							Element:span
							Element:span
								500
							Element:span
								,
							Element:span
							Element:span
								"queryTime"
							Element:span
								:
							Element:span
							Element:span
								"0.037"
							Element:span
								,
							Element:span
							Element:span
								"totalTime"
							Element:span
								:
							Element:span
							Element:span
								"0.362"
							Element:span
								,
							Element:span
							Element:span
								"partial"
							Element:span
								:
							Element:span
							Element:span
								false
							Element:span
								,
							Element:span
							Element:span
								"canonicalUrl"
							Element:span
								:
							Element:span
							Element:span
								"/v1/products(type=\"HardGood\")?show=sku,name,salePrice&pageSize=100&cursorMark=*&format=json&apiKey=YourAPIKey"
							Element:span
								,
							Element:span
							Element:span
								"products"
							Element:span
								:
							Element:span
							Element:span
								[
							Element:span
							Element:span
								{
							Element:span
							Element:span
								"sku"
							Element:span
								:
							Element:span
							Element:span
								5477500
							Element:span
								,
							Element:span
							Element:span
								"name"
							Element:span
								:
							Element:span
							Element:span
								"Amazon - Fire TV Stick with Alexa Voice Remote - Black"
							Element:span
								,
							Element:span
							Element:span
								"salePrice"
							Element:span
								:
							Element:span
							Element:span
								39.99
							Element:span
							Element:span
								},
							Element:span
							Element:span
								{
							Element:span
							Element:span
								"sku"
							Element:span
								:
							Element:span
							Element:span
								4397400
							Element:span
								,
							Element:span
							Element:span
								"name"
							Element:span
								:
							Element:span
							Element:span
								"Google - Chromecast - Black"
							Element:span
								,
							Element:span
							Element:span
								"salePrice"
							Element:span
								:
							Element:span
							Element:span
								35
							Element:span
							Element:span
								},
							Element:span
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								Applies to: Products API • Stores API • Categories API
						Node:
						(type) c
						(layer)2
							Element:p
								With large result sets - e.g., query sets with more than 10 pages of results - we recommend you use the
							Element:code
								cursorMark
								parameter to walk through your results. You can use
							Element:code
								cursorMark
								to walk through the full product or store catalog, deltas since you last queried for active products, or any other query result. The
							Element:code
								cursorMark
								works a lot like a bookmark, keeping track of what subset of items are currently shown in your result set and how to get to the next subset of items.
						Node:
						(type) c
						(layer)2
							Element:p
								To use the
							Element:code
								cursorMark
								with your result set, add
							Element:code
								cursorMark=*
								to your query parameters. A
							Element:code
								nextCursorMark
								parameter will be included in the metadata that you will use to walk through the full result set. After the initial result, replace the asterisk
							Element:code
								*
								with the
							Element:code
								nextCursorMark
								value noted in the current metadata to move to the next subset of results. For each subset, a fresh hash value will be presented. When you reach the end of the cursor marks, you will receive an empty result.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Tip:
								To query for updates or deltas since you last walked through the result set you can use the
							Element:code
								itemUpdateDate
								attribute. To ensure that your query results include changes to a product’s active/inactive status, add
							Element:code
								active=*
								to your query parameters. For example:
							Element:code
								.../v1/products(itemUpdateDate>2017-02-06T16:00:00&active=*)?format=json&pageSize=100&cursorMark=*&apiKey=YOUR_API_KEY
						Node:
						(type) c
						(layer)2
							Element:p
								Here is an explanation of the meta data when more than one subset is available:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
								Name
							Element:th
								Description
							Element:th
								Additional Details
							Element:tbody
							Element:tr
							Element:td
							Element:strong
								canonicalURL
							Element:td
								the non-server part of the query
							Element:td
							Element:tr
							Element:td
							Element:strong
								cursorMark
							Element:td
								a hash indicating the current location within the result set
							Element:td
								add
							Element:code
								cursorMark=*
								to your query to get the first subset of results
							Element:tr
							Element:td
							Element:strong
								nextCursorMark
							Element:td
								a hash indicating the start of the next subset of items in your result set
							Element:td
								we recommend only moving forward through your result sets using
							Element:code
								cursorMark
							Element:tr
							Element:td
							Element:strong
								total
							Element:td
								the total number of items returned by the query
							Element:td
							Element:tr
							Element:td
							Element:strong
								totalPages
							Element:td
								the number of subsets of items in the full query result
							Element:td
								can be used as an approximation of the number of cursor marks you will need to iterate through to walk the entire query result
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Retrieving Collections
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								Applies to: Products API • Stores API • Categories API
						Node:
						(type) c
						(layer)2
							Element:p
								To retrieve more than one item at a time (e.g. all Products in our catalog), use one of the following queries.
							Element:em
								By default the max page size is 100 (meaning 100 unique results). See Pagination for more information on returning results greater than 100.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
								Description
							Element:th
								Query
							Element:th
								Result
							Element:tbody
							Element:tr
							Element:td
							Element:strong
								retrieve all products
							Element:td
								https://api.bestbuy.com/v1/products?apiKey=YourAPIKey
							Element:td
								returns a collection of products
							Element:tr
							Element:td
							Element:strong
								retrieve all stores
							Element:td
								https://api.bestbuy.com/v1/stores?apiKey=YourAPIKey
							Element:td
								returns a collection of stores
							Element:tr
							Element:td
							Element:strong
								retrieve all categories
							Element:td
								https://api.bestbuy.com/v1/categories?apiKey=YourAPIKey
							Element:td
								returns a collection of categories
						Node:
						(type) c
						(layer)2
							Element:p
								Other sections in this documentation explain how to modify these queries to retrieve only the information that you need.
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Pagination
								: describes how results consisting of multiple pages are returned
							Element:li
							Element:a
								Search
								: describes how to perform search operations
							Element:li
							Element:a
								Sort
								: describes how to specify sort criteria for collections
							Element:li
							Element:a
								Facets
								: describes how to ask for summarized information about collections
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Collection Header
									Node:
									(type) c
									(layer)3
										Element:p
											When a query results in a collection, the response includes an information header containing the following attributes:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											item
										Element:td
											the type of items returned and counted
										Element:tr
										Element:td
										Element:strong
											current page
										Element:td
											the page being returned
										Element:tr
										Element:td
										Element:strong
											totalPages
										Element:td
											the number of pages required to list all items
										Element:tr
										Element:td
										Element:strong
											from
										Element:td
											the index of the first item returned on the current page
										Element:tr
										Element:td
										Element:strong
											to
										Element:td
											the index of the last item returned on the current page
										Element:tr
										Element:td
										Element:strong
											total
										Element:td
											the total number of items returned by the query
										Element:tr
										Element:td
										Element:strong
											queryTime
										Element:td
											the time required to search the database
										Element:tr
										Element:td
										Element:strong
											totalTime
										Element:td
											the time required to parse, search, format and return results
										Element:tr
										Element:td
										Element:strong
											canonicalURL
										Element:td
											the non-server part of the query URL
										Element:tr
										Element:td
										Element:strong
											partial
										Element:td
											flag indicating whether or not the query returned only partial results (in the event of a timeout)
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Bulk Downloads
						Node:
						(type) c
						(layer)2
							Element:p
								Although we recommend that you make live calls to our APIs whenever possible, users who require a larger dataset may be better served by our Bulk Download API. Files are regenerated daily by 9AM CST.
						Node:
						(type) c
						(layer)2
							Element:p
								The following APIs offer bulk downloading capabilities:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Categories
							Element:li
							Element:a
								Products
							Element:li
							Element:a
								Stores
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Errors
						Node:
						(type) c
						(layer)2
							Element:p
							Element:em
								Applies to: Products API • Stores API • Categories API • Recommendations API
						Node:
						(type) c
						(layer)2
							Element:p
								Best Buy uses standard HTTP response codes to indicate success or failure of an API request. In general, codes in the 2xx range indicate success, codes in the 4xx range indicate an error that resulted from the provided information (e.g., a required parameter was missing), and codes in the 5xx range indicate an error with Best Buy’s servers.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
								Status Code
							Element:th
								Explanation
							Element:tbody
							Element:tr
							Element:td
							Element:strong
								200
							Element:td
								It is all good.
							Element:tr
							Element:td
							Element:strong
								400
							Element:td
								The request is missing key information or is malformed.
							Element:tr
							Element:td
							Element:strong
								403
							Element:td
								The API key is not valid, or the allocated call limit has been exceeded.
							Element:tr
							Element:td
							Element:strong
								404
							Element:td
								The requested item cannot be found.
							Element:tr
							Element:td
							Element:strong
								405
							Element:td
								Particular method not allowed (error will be returned for methods like a POST).
							Element:tr
							Element:td
							Element:strong
								500, 501, 503
							Element:td
								There is a server error on the Best Buy side.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Postman
						Node:
						(type) c
						(layer)2
							Element:p
								Here’s a collection of sample queries in Postman that’ll help you get up to speed with our APIs faster.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
							Element:img
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Important Notes
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											You must defined
										Element:code
											apiKey
											within in an
										Element:a
											environment
											.
										Element:li
											Some portions of the query parameters for Best Buy’s APIs are included in the path: (e.g.,
										Element:code
											…/v1/
											). You should update the in-path parameters within Postman’s grey bar that shows the URL.
										Element:b
											products(categoryPath.id=pcmcat194000050022&manufacturer=Apple)
											?apiKey={{apiKey}}&format=json
										Element:ul
										Element:li
											v2 of the Best Buy API will move these parameters out of the path and into the query string.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Getting Started
			Node:
			(type) c
			(layer)1
				Element:h2
					Get a key
			Node:
			(type) c
			(layer)1
				Element:p
					Before you can start using our APIs, you need an API key. It’s easy. Just visit
				Element:strong
					and sign up with your email address. We’ll send you an email with instructions on how to activate your new key. Once you’ve activated your key, you’re ready to roll.
				Element:a
					GET API Key
			Node:
			(type) c
			(layer)1
				Element:h2
					Create your first query
			Node:
			(type) c
			(layer)1
				Element:p
					After you activate your key, you can start accessing Best Buy’s data.
			Node:
			(type) c
			(layer)1
				Element:h3
					Try our Query Builder
			Node:
			(type) c
			(layer)1
				Element:p
				Element:a
				Element:img
			Node:
			(type) c
			(layer)1
				Element:p
					This easy-to-use tool will have you running queries in no time. The Query Builder tool will guide you through the creation of custom queries using most of the Best Buy APIs. You can use these queries as a base for your own custom queries, or use them to access Best Buy API data. You can access the Query Builder from our top menu bar or by going to
				Element:a
					Query Builder
					.
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/products/8880044.json?apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Returns the product document for SKU 8880044
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					8880044
				Element:span
					,
				Element:span
				Element:span
					"productId"
				Element:span
					:
				Element:span
				Element:span
					1484301
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Batman Begins (Blu-ray Disc)"
				Element:span
				Element:span
					...
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:h3
					Try accessing one of our APIs directly
			Node:
			(type) c
			(layer)1
				Element:p
					Use a basic GET request to get API data. For example, to find product information for a specific product, you can query our Products API using the SKU for that product. The SKU for
				Element:em
					Batman Begins (Blu-ray Disc)
					is 8880044, so you can retrieve it as shown below. The response will be returned as either JSON or XML depending on the extension specified in the URI.
			Node:
			(type) c
			(layer)1
				Element:p
					HINT: Don’t forget to replace
				Element:strong
					YourAPIKey
					with the API key that you received from us.
			Node:
			(type) c
			(layer)1
				Element:h2
					Stay Connected
			Node:
			(type) c
			(layer)1
				Element:p
					Keep up with the latest changes in our APIs through our
				Element:a
					release notes
					and
				Element:a
					blog
					.
			Node:
			(type) c
			(layer)1
				Element:p
					Have fun and please let us know what you think. Shoot us an email at
				Element:strong
					developer@bestbuy.com
					, tweet us at
				Element:a
					@BestBuyAPI
					or hop on the
				Element:a
					StackOverflow support forum
					and share your ideas on how we can deliver the best product. Let’s develop the future of retail together.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Search Techniques
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					Applies to: Products API  Stores API  Categories API
			Node:
			(type) c
			(layer)1
				Element:p
					Search consists of one or more terms that generally include an attribute, operator and value. Terms are combined with ampersands
				Element:code
					&
					or pipes
				Element:code
					|
					. Searches are implemented as part of an HTTP GET request to the deisred Best Buy API.
				Element:code
					term1&term2
					- specifies term1 AND term2
				Element:code
					term1|term2
					- specifies term1 OR term2.
			Node:
			(type) c
			(layer)1
				Element:p
					Attribute
				Element:em
					names
					are case sensitive; attribute
				Element:em
					values
					are not.
			Node:
			(type) c
			(layer)1
				Element:h2
					Available Operators
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:code
					=
					- attribute
				Element:strong
					equals
					a specified value
				Element:li
				Element:code
					=!
					- attribute
				Element:strong
					does not equal
					a specified value
				Element:li
				Element:code
					>
					- attribute
				Element:strong
					greater than
					a specified value
				Element:li
				Element:code
					<
					- attribute
				Element:strong
					less than
					a specified value
				Element:li
				Element:code
					>=<
					- attribute
				Element:strong
					greater than or equal to
					a specified value
				Element:li
				Element:code
					<=
					- attribute
				Element:strong
					less than or equal to
					a specified value
				Element:li
				Element:code
					in
					- search based on a
				Element:strong
					list
					of attribute values
			Node:
			(type) c
			(layer)1
				Element:h2
					Search by a single attribute
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/stores(region=ut)?format=json&show=storeId,city,region&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					stores
				Element:span
					(
				Element:span
					'region=ut'
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'storeId,city,region'
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"from"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"to"
				Element:span
					:
				Element:span
				Element:span
					10
				Element:span
					,
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					10
				Element:span
					,
				Element:span
				Element:span
					"currentPage"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"totalPages"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"queryTime"
				Element:span
					:
				Element:span
				Element:span
					"0.002"
				Element:span
					,
				Element:span
				Element:span
					"totalTime"
				Element:span
					:
				Element:span
				Element:span
					"0.007"
				Element:span
					,
				Element:span
				Element:span
					"partial"
				Element:span
					:
				Element:span
				Element:span
					false
				Element:span
					,
				Element:span
				Element:span
					"canonicalUrl"
				Element:span
					:
				Element:span
				Element:span
					"/v1/stores(region=\"ut\")?format=json&show=storeId,city,region&apiKey=YourAPIKey"
				Element:span
					,
				Element:span
				Element:span
					"stores"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"storeId"
				Element:span
					:
				Element:span
				Element:span
					1402
				Element:span
					,
				Element:span
				Element:span
					"city"
				Element:span
					:
				Element:span
				Element:span
					"American Fork"
				Element:span
					,
				Element:span
				Element:span
					"region"
				Element:span
					:
				Element:span
				Element:span
					"UT"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"storeId"
				Element:span
					:
				Element:span
				Element:span
					773
				Element:span
					,
				Element:span
				Element:span
					"city"
				Element:span
					:
				Element:span
				Element:span
					"Orem"
				Element:span
					,
				Element:span
				Element:span
					"region"
				Element:span
					:
				Element:span
				Element:span
					"UT"
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					Our Products, Stores and Categories APIs can be searched by nearly all available attributes. For example, to find only the stores located in Utah, you can use the query shown to the right.
			Node:
			(type) c
			(layer)1
				Element:h2
					Search by all attributes (AND)
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					'https://api.bestbuy.com/v1/products(manufacturer=canon&salePrice<1000)?format=json&show=sku,name,salePrice&apiKey=YourAPIKey'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					products
				Element:span
					(
				Element:span
					'manufacturer=canon&salePrice<1000'
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'sku,name,salePrice'
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"from"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"to"
				Element:span
					:
				Element:span
				Element:span
					10
				Element:span
					,
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					210
				Element:span
					,
				Element:span
				Element:span
					"currentPage"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"totalPages"
				Element:span
					:
				Element:span
				Element:span
					21
				Element:span
					,
				Element:span
				Element:span
					"queryTime"
				Element:span
					:
				Element:span
				Element:span
					"0.095"
				Element:span
					,
				Element:span
				Element:span
					"totalTime"
				Element:span
					:
				Element:span
				Element:span
					"0.115"
				Element:span
					,
				Element:span
				Element:span
					"partial"
				Element:span
					:
				Element:span
				Element:span
					false
				Element:span
					,
				Element:span
				Element:span
					"canonicalUrl"
				Element:span
					:
				Element:span
				Element:span
					"/v1/products(manufacturer=\"canon\"&salePrice<1000)?show=sku,name,salePrice&format=json&apiKey=YourAPIKey"
				Element:span
					,
				Element:span
				Element:span
					"products"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					6101087
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Canon - 1.9x Tele Converter Lens"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					99.99
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					8795075
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Canon - 100-Pack 4\" x 6\" Glossy Photo Paper"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					17.49
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					If you need to search for the values of more than one attribute and
				Element:strong
					all
					of the attributes must be present, combine them with an ampersand
				Element:code
					&
					.
			Node:
			(type) c
			(layer)1
				Element:h2
					Search by any attributes (OR)
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/products(wifiReady=true|wifiBuiltIn=true)?format=json&show=sku,name,salePrice&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					products
				Element:span
					(
				Element:span
					'wifiReady=true|wifiBuiltIn=true'
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'sku,name,salePrice'
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"from"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"to"
				Element:span
					:
				Element:span
				Element:span
					10
				Element:span
					,
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					500
				Element:span
					,
				Element:span
				Element:span
					"currentPage"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"totalPages"
				Element:span
					:
				Element:span
				Element:span
					50
				Element:span
					,
				Element:span
				Element:span
					"queryTime"
				Element:span
					:
				Element:span
				Element:span
					"0.005"
				Element:span
					,
				Element:span
				Element:span
					"totalTime"
				Element:span
					:
				Element:span
				Element:span
					"0.030"
				Element:span
					,
				Element:span
				Element:span
					"partial"
				Element:span
					:
				Element:span
				Element:span
					false
				Element:span
					,
				Element:span
				Element:span
					"canonicalUrl"
				Element:span
					:
				Element:span
				Element:span
					"/v1/products(wifiReady=true|wifiBuiltIn=true)?show=sku,name,salePrice&format=json&apiKey=YourAPIKey"
				Element:span
					,
				Element:span
				Element:span
					"products"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					1012749
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Acer - Aspire 11.6 inch Tablet with 120GB Memory"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					661.98
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					4255007
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Acer - B1-720 7\" Android Tablet - 16GB - Iron Gray"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					128.98
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					If you want items with
				Element:strong
					any
					of the specified attributes, combine them with a pipe
				Element:code
					|
			Node:
			(type) c
			(layer)1
				Element:h2
					Complex Searches
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/products(platform=psp&(salePrice<=15|(salePrice<=20&tradeInValue>=10)))?format=json&show=sku,name,salePrice&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					products
				Element:span
					(
				Element:span
					'platform=psp&(salePrice<=15|(salePrice<=20&tradeInValue>=10))'
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'sku,name,salePrice'
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					7049721
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Ape Escape: On the Loose Greatest Hits - PSP"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					7.99
				Element:span
					,
				Element:span
				Element:span
					"tradeInValue"
				Element:span
					:
				Element:span
				Element:span
					0.00
				Element:span
					,
				Element:span
				Element:span
					"platform"
				Element:span
					:
				Element:span
				Element:span
					"PSP"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					9335436
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Chessmaster: The Art of Learning - PSP"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					9.99
				Element:span
					,
				Element:span
				Element:span
					"tradeInValue"
				Element:span
					:
				Element:span
				Element:span
					0.00
				Element:span
					,
				Element:span
				Element:span
					"platform"
				Element:span
					:
				Element:span
				Element:span
					"PSP"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					1450486
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Megamind: The Blue Defender - PSP"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					11.99
				Element:span
					,
				Element:span
				Element:span
					"tradeInValue"
				Element:span
					:
				Element:span
				Element:span
					0.00
				Element:span
					,
				Element:span
				Element:span
					"platform"
				Element:span
					:
				Element:span
				Element:span
					"PSP"
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					Complex searches can be performed by combining AND
				Element:code
					&
					and OR
				Element:code
					|
					operations with parantheses. For example: let’s say that you’re looking for a Play Station Portable video game
				Element:code
					(platform=psp)
					. You don’t want to spend more than $15
				Element:code
					(salePrice<=15)
					. However, because you will trade in the game when you’re done, you could spend up to $20
				Element:code
					(saleProce<=20)
					- but only if the game’s trade-in value is more than $10
				Element:code
					(tradeInValue>10)
					.
			Node:
			(type) c
			(layer)1
				Element:p
					The search terms for this example can be combined as:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					platform=psp & (salePrice<=15 | (salePrice<=20 & tradeInValue>10))
			Node:
			(type) c
			(layer)1
				Element:h2
					Search by date range
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/products(releaseDate>=2014-02-01&releaseDate<=2014-02-28)?format=json&show=sku,name,salePrice&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					products
				Element:span
					(
				Element:span
					'releaseDate>=2014-02-01&releaseDate<=2014-02-28'
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'sku,name,salePrice'
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"from"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"to"
				Element:span
					:
				Element:span
				Element:span
					10
				Element:span
					,
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					4407
				Element:span
					,
				Element:span
				Element:span
					"currentPage"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"totalPages"
				Element:span
					:
				Element:span
				Element:span
					441
				Element:span
					,
				Element:span
				Element:span
					"queryTime"
				Element:span
					:
				Element:span
				Element:span
					"0.064"
				Element:span
					,
				Element:span
				Element:span
					"totalTime"
				Element:span
					:
				Element:span
				Element:span
					"0.226"
				Element:span
					,
				Element:span
				Element:span
					"partial"
				Element:span
					:
				Element:span
				Element:span
					false
				Element:span
					,
				Element:span
				Element:span
					"canonicalUrl"
				Element:span
					:
				Element:span
				Element:span
					"/v1/products(releaseDate>=2014-02-01&releaseDate<=2014-02-28)?show=sku,name,salePrice&format=json&apiKey=YourAPIKey"
				Element:span
					,
				Element:span
				Element:span
					"products"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					24311154
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"#lovestrock-CD"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					22.99
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					23374755
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"(Untitled) - CD"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					39.99
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					If you want to find all products that were released February 2014, use this query:
			Node:
			(type) c
			(layer)1
				Element:h2
					Search by date relative to today
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/products(releaseDate>today)?format=json&show=sku,name,salePrice&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					products
				Element:span
					(
				Element:span
					'releaseDate>today'
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'sku,name,salePrice'
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"from"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"to"
				Element:span
					:
				Element:span
				Element:span
					10
				Element:span
					,
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					7688
				Element:span
					,
				Element:span
				Element:span
					"currentPage"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"totalPages"
				Element:span
					:
				Element:span
				Element:span
					769
				Element:span
					,
				Element:span
				Element:span
					"queryTime"
				Element:span
					:
				Element:span
				Element:span
					"0.007"
				Element:span
					,
				Element:span
				Element:span
					"totalTime"
				Element:span
					:
				Element:span
				Element:span
					"0.032"
				Element:span
					,
				Element:span
				Element:span
					"partial"
				Element:span
					:
				Element:span
				Element:span
					false
				Element:span
					,
				Element:span
				Element:span
					"canonicalUrl"
				Element:span
					:
				Element:span
				Element:span
					"/v1/products(releaseDate>today)?show=sku,name,salePrice&format=json&apiKey=YourAPIKey"
				Element:span
					,
				Element:span
				Element:span
					"products"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					24987148
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"$Ellebrity (DVD)"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					19.99
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					6121399
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"& Then You Shoot Your Cousin - CD"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					12.99
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					You can also use the value
				Element:code
					today
					to represent the current day. If you want to see all the products that were released today, use this query.
			Node:
			(type) c
			(layer)1
				Element:h2
					Search for multiple attribute values
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/products(categoryPath.id=abcat0901005&color%20in(white,bisque,stainless-steel))?format=json&show=sku,name,salePrice&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					products
				Element:span
					(
				Element:span
					'categoryPath.id=abcat0901005&color in(white,bisque,stainless-steel)'
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'sku,name,salePrice'
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"from"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"to"
				Element:span
					:
				Element:span
				Element:span
					10
				Element:span
					,
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					52
				Element:span
					,
				Element:span
				Element:span
					"currentPage"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"totalPages"
				Element:span
					:
				Element:span
				Element:span
					6
				Element:span
					,
				Element:span
				Element:span
					"queryTime"
				Element:span
					:
				Element:span
				Element:span
					"0.007"
				Element:span
					,
				Element:span
				Element:span
					"totalTime"
				Element:span
					:
				Element:span
				Element:span
					"0.033"
				Element:span
					,
				Element:span
				Element:span
					"partial"
				Element:span
					:
				Element:span
				Element:span
					false
				Element:span
					,
				Element:span
				Element:span
					"canonicalUrl"
				Element:span
					:
				Element:span
				Element:span
					"/v1/products(categoryPath.id=abcat0901005&color in(\"white\",\"bisque\",\"stainless-steel\"))?show=sku,name,salePrice&format=json&apiKey=YourAPIKey"
				Element:span
					,
				Element:span
				Element:span
					"products"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					1614013
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Amana - 25.4 Cu. Ft. Side-by-Side Refrigerator with Thru-the-Door Ice and Water - Stainless-Steel"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					1099.99
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					1609858
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Amana - 25.4 Cu. Ft. Side-by-Side Refrigerator with Thru-the-Door Ice and Water - White"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					999.99
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					If you want multiple values of a single attribute, you can specify them individually. For example, if you want to see white, bisque, or stainless-steel side-by-side refrigerators, use this query.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					NOTE: To search for products based on a list of attribute values, we recommend using the
				Element:code
					in
					operator. Most attributes can be used with the
				Element:code
					in
					operator. The most common attribute used is
				Element:code
					SKU
					. Using the
				Element:code
					in
					operator helps to avoid Query Per Second errors (QPS).
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					For example:
				Element:code
					https://api.bestbuy.com/v1/products(sku in(43900,2088495,7150065))?apiKey=YourAPIKey
			Node:
			(type) c
			(layer)1
				Element:h2
					Wildcards - Value is present
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/products(categoryPath.id=abcat0502000&driveCapacityGb=*)?format=json&show=sku,name,salePrice&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					products
				Element:span
					(
				Element:span
					'categoryPath.id=abcat0502000&driveCapacityGb=*'
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'sku,name,salePrice'
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"from"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"to"
				Element:span
					:
				Element:span
				Element:span
					10
				Element:span
					,
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					381
				Element:span
					,
				Element:span
				Element:span
					"currentPage"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"totalPages"
				Element:span
					:
				Element:span
				Element:span
					39
				Element:span
					,
				Element:span
				Element:span
					"queryTime"
				Element:span
					:
				Element:span
				Element:span
					"0.008"
				Element:span
					,
				Element:span
				Element:span
					"totalTime"
				Element:span
					:
				Element:span
				Element:span
					"0.039"
				Element:span
					,
				Element:span
				Element:span
					"partial"
				Element:span
					:
				Element:span
				Element:span
					false
				Element:span
					,
				Element:span
				Element:span
					"canonicalUrl"
				Element:span
					:
				Element:span
				Element:span
					"/v1/products(categoryPath.id=abcat0502000&driveCapacityGb=*)?show=sku,name,salePrice&format=json&apiKey=YourAPIKey"
				Element:span
					,
				Element:span
				Element:span
					"products"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					4591017
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Acer - 11.6\" Touch-Screen Chromebook - Intel Celeron - 2GB Memory - 32GB Solid State Drive - Moonstone White"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					299.00
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					5009309
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Acer - 14\" Touch-Screen Laptop - Intel Core i5 - 6GB Memory - 500GB HDD + 20GB Solid State Drive - Silver"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					740.98
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					You can use the asterisk
				Element:code
					*
					as a wildcard character. The wildcard can be used to:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					indicate the presence of attribute values
				Element:li
					request all values for filtered attributes
				Element:li
					tokenize the string and represent additional characters
			Node:
			(type) c
			(layer)1
				Element:p
					Some attributes apply only to specific items. Even then, because much of this attribute information comes from the manufacturer, not all items of a given type will have values set for that attribute. You can use the wildcard to specify items that have data for a specific attribute.
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:code
					attribute=*
					- requests items for which the attribute has values
				Element:li
				Element:code
					attribute!=*
					- requests items for which the attribute has no value
			Node:
			(type) c
			(layer)1
				Element:h2
					Wildcards - Value is NOT present
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/products(categoryPath.id=abcat0502000&driveCapacityGb!=*)?format=json&show=sku,name,salePrice&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					products
				Element:span
					(
				Element:span
					'categoryPath.id=abcat0502000&driveCapacityGb!=*'
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'sku,name,salePrice'
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"from"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"to"
				Element:span
					:
				Element:span
				Element:span
					10
				Element:span
					,
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					42
				Element:span
					,
				Element:span
				Element:span
					"currentPage"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"totalPages"
				Element:span
					:
				Element:span
				Element:span
					5
				Element:span
					,
				Element:span
				Element:span
					"queryTime"
				Element:span
					:
				Element:span
				Element:span
					"0.007"
				Element:span
					,
				Element:span
				Element:span
					"totalTime"
				Element:span
					:
				Element:span
				Element:span
					"0.270"
				Element:span
					,
				Element:span
				Element:span
					"partial"
				Element:span
					:
				Element:span
				Element:span
					false
				Element:span
					,
				Element:span
				Element:span
					"canonicalUrl"
				Element:span
					:
				Element:span
				Element:span
					"/v1/products(categoryPath.id=abcat0502000&driveCapacityGb!=*)?show=sku,name,salePrice&format=json&apiKey=YourAPIKey"
				Element:span
					,
				Element:span
				Element:span
					"products"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					6941496
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Apple® - MacBook Pro with Retina display - 13.3\" Display - 4GB Memory - 128GB Flash Storage"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					1299.99
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					6293168
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Apple® - MacBook Pro with Retina display - 13.3\" Display - 8GB Memory - 256GB Flash Storage"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					1499.99
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					This will return results in which there is no value present. In the following example, with the addition of the
				Element:code
					!
					, the return result has shifted from Solid State Drive.
			Node:
			(type) c
			(layer)1
				Element:h2
					Wildcards - String
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					'https://api.bestbuy.com/v1/products(longDescription=iPhone*|sku=7619002)?show=sku,name&pageSize=15&page=5&apiKey=YourAPIKey&format=json'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					products
				Element:span
					(
				Element:span
					'longDescription=iPhone*|sku=7619002'
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'sku,name'
				Element:span
					,
				Element:span
					pageSize
				Element:span
					:
				Element:span
					15
				Element:span
					,
				Element:span
					page
				Element:span
					:
				Element:span
					5
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"from"
				Element:span
					:
				Element:span
				Element:span
					61
				Element:span
					,
				Element:span
				Element:span
					"to"
				Element:span
					:
				Element:span
				Element:span
					75
				Element:span
					,
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					2753
				Element:span
					,
				Element:span
				Element:span
					"currentPage"
				Element:span
					:
				Element:span
				Element:span
					5
				Element:span
					,
				Element:span
				Element:span
					"totalPages"
				Element:span
					:
				Element:span
				Element:span
					184
				Element:span
					,
				Element:span
				Element:span
					"queryTime"
				Element:span
					:
				Element:span
				Element:span
					"0.010"
				Element:span
					,
				Element:span
				Element:span
					"totalTime"
				Element:span
					:
				Element:span
				Element:span
					"0.045"
				Element:span
					,
				Element:span
				Element:span
					"partial"
				Element:span
					:
				Element:span
				Element:span
					false
				Element:span
					,
				Element:span
				Element:span
					"canonicalUrl"
				Element:span
					:
				Element:span
				Element:span
					"/v1/products(longDescription=\"iPhone*\"|sku=7619002)?show=sku,name&page=5&format=json&apiKey=YourAPIKey"
				Element:span
					,
				Element:span
				Element:span
					"products"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					1752654
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Apple - iPhone 4s 8GB Cell Phone - White (AT&T)"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					1761045
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Apple - iPhone 4s 8GB Cell Phone - White (Verizon Wireless)"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					1729354
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Apple - iPhone 5c 16GB Cell Phone - Green (AT&T)"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					1752291
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Apple - iPhone 5c 16GB Cell Phone - Blue (AT&T)"
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					When used as part of a string search, the wildcard performs two functions. First, it tokenizes the string, breaking it into words. Second, it operates as a standard wildcard, matching any set of characters in the tokenized string. The following example illustrates both functions. When searching for a string value, you may want to search for variations on a specific word.
			Node:
			(type) c
			(layer)1
				Element:p
					There are several description attributes by which you can search, including
				Element:code
					longDescription
					,
				Element:code
					shortDescription
					,
				Element:code
					description
					or
				Element:code
					name
					. There is a single
				Element:code
					SKU
					attribute to search based on
				Element:code
					SKU
					.
			Node:
			(type) c
			(layer)1
				Element:p
					In this example we are searching the
				Element:code
					longDescription
					for iPhone*. We have appended iPhone with a wildcard
				Element:code
					*
					so we can search for iPhones with any suffix. We are also looking for any products that have a SKU with a value of
				Element:strong
					7619002
					- note the
				Element:strong
					or
				Element:code
					|
					. Finally, in our example we have updated the number of results that can be returned per page to
				Element:strong
					15
					. Our search will return page
				Element:strong
					5
					of the total
				Element:strong
					184
					pages. Additional information on how to specify the number of results that should be returned per page and which page to return can be found in our Pagination section.
			Node:
			(type) c
			(layer)1
				Element:h2
					Wildcard - Limitations
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					You cannot use a wildcard to begin a string search (e.g.
				Element:code
					(name=*top)
					); this type of search is extremely resource intensive and doing so will result in a
				Element:code
					400
					error.
				Element:li
					Wildcard with data is valid for strings only. When used alone, the wildcard can represent any data type. When used with other characters, the wildcard can only represent string data. For example, to find Canon products with customer reviews of 4.x, you cannot use
				Element:code
					(manufacturer=canon&customerReviewAverage=4.*)
					as the search string. You would have to use a search string like this:
				Element:code
					(manufacturer=canon&customerReviewAverage>4&customerReviewAverage<5)
					.
			Node:
			(type) c
			(layer)1
				Element:h2
					Filtered product attribute
			Node:
			(type) c
			(layer)1
				Element:p
					Certain attributes, such as
				Element:code
					active=true
					,
				Element:code
					digital=false
					or
				Element:code
					preowned=false
					inherently filter results.
			Node:
			(type) c
			(layer)1
				Element:p
					If your search string is
				Element:code
					sku=*
					, you will only return active products, not all products. This is the same as specifying
				Element:code
					sku=*&active=true
					. If you want a list of all active and inactive products, you can specify
				Element:code
					sku=*&active=*
					.
			Node:
			(type) c
			(layer)1
				Element:p
					Because
				Element:code
					active
					is a boolean attribute,
				Element:code
					active=*
					will return products for which
				Element:code
					active
					is either true or false. It’s the same as
				Element:code
					sku=*&(active=true|active=false)
					.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					If your search string goes to sku.xml or sku.json these filters are ignored.
			Node:
			(type) c
			(layer)1
				Element:h2
					Keyword Search Function
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/products(search=oven&search=stainless&search=steel)?format=json&show=sku,name,salePrice&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					products
				Element:span
					(
				Element:span
					'search=oven&search=stainless&search=steel'
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'sku,name,salePrice'
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					This example looks for ‘stainless steel ovens’.
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"products"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					6916066
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Amana - 30 Self-Cleaning Freestanding Electric Range - Stainless-Steel"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					584.99
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					2267329
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Applica - 4-Slice Toaster Oven - Stainless Steel"
				Element:span
					,
				Element:span
				Element:span
					"salePrice"
				Element:span
					:
				Element:span
				Element:span
					39.99
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					Applies to: Products API
			Node:
			(type) c
			(layer)1
				Element:p
					Our
				Element:strong
					Keyword Search
					function
				Element:code
					(search=searchterm)
					allows you to search text accross several common attributes. To search for a term that includes a space, include an
				Element:code
					&
					ampersand between the words or it will be treated as an
				Element:code
					|
					or. The
				Element:strong
					Keyword Search
					includes the following attributes:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:code
					name
				Element:li
				Element:code
					manufacturer
				Element:li
				Element:code
					shortDescription
				Element:li
				Element:code
					longDescription
				Element:li
				Element:code
					features.feature
				Element:li
				Element:code
					details.value
			Node:
			(type) c
			(layer)1
				Element:h2
					Search on Reviews
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/products(customerReviewAverage>=4&customerReviewCount>100)?show=customerReviewAverage,customerReviewCount,name,sku&format=json&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					products
				Element:span
					(
				Element:span
					'customerReviewAverage>=4&customerReviewCount>100'
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'customerReviewAverage,customerReviewCount,name,sku'
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"products"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"customerReviewAverage"
				Element:span
					:
				Element:span
				Element:span
					"4.1"
				Element:span
					,
				Element:span
				Element:span
					"customerReviewCount"
				Element:span
					:
				Element:span
				Element:span
					411
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Insignia™ - Soundbar Home Theater Speaker System"
				Element:span
					,
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					4841342
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"customerReviewAverage"
				Element:span
					:
				Element:span
				Element:span
					"4.3"
				Element:span
					,
				Element:span
				Element:span
					"customerReviewCount"
				Element:span
					:
				Element:span
				Element:span
					411
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Sunpak - PlatinumPlus 6000PG 61\" Tripod"
				Element:span
					,
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					1205204
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					To search for products based on customer review criteria, you can use the
				Element:code
					customerReviewAverage
					and/or the
				Element:code
					customerReviewCount
					attributes. You can also limit the product information returned using our
				Element:code
					show
					functionality.
				Element:em
					HINT: You can specify additional attributes in your search or to be included in the response document for most attributes in the Products API.
			Node:
			(type) c
			(layer)1
				Element:p
					In this example, we are searching for all products that have a customer review average greater than four and a customer review count greater than 100. In addition, we are limiting the product information returned to customer review average, customer review count, name and sku, and forcing a format of json (default is xml when using the Products API).
			Node:
			(type) h1
			(layer)1
				Element:h1
					Products API
			Node:
			(type) c
			(layer)1
				Element:p
					The Best Buy Product API provides a simple, REST-based interface for our entire product catalog, past and present. This includes pricing, availability, specifications, descriptions, and images for more than one million current and historical products. In addition, we offer full archives, updated daily, to make it easier to establish our full catalog locally.
				Element:strong
					Most product information is updated near real-time, including product pricing.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					PLEASE NOTE: Music and movie data may be used only where an ability to purchase the related music or movies from BESTBUY.COM is provided to end users. Developers using music and movie data to redirect to BESTBUY.COM must become members of the Best Buy Affiliate Program to allow the sale of music and movies through BESTBUY.COM under the terms of the Affiliate Program.
			Node:
			(type) c
			(layer)1
				Element:h2
					Detail
			Node:
			(type) c
			(layer)1
				Element:p
					The Best Buy Detail attributes contain a wealth of knowledge about Best Buy products. The intention of these attributes is to provide product descriptions, dimensions, accessories and reviews.
			Node:
			(type) c
			(layer)1
				Element:h3
					Attribute List
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:th
					Type
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					accessories.sku
				Element:td
					Collection of SKUs that could be an accessory to originating SKU
				Element:td
					long
				Element:tr
				Element:td
				Element:strong
					color
				Element:td
					Product color
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					condition
				Element:td
					Identifies if the product is new, refurbished or pre-owned
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					customerReviewAverage
				Element:td
					Average “score” or ratings as submitted by reviewers
				Element:td
					float
				Element:tr
				Element:td
				Element:strong
					customerReviewCount
				Element:td
					Number of customer reviews
				Element:td
					integer
				Element:tr
				Element:td
				Element:strong
					customerTopRated
				Element:td
					Identifies if the product is top rated based on ratings from reviewers. If the Avg rating >= 4.5 and Qty of ratings >= 15, customerTopRated is set to be “true”, else is set to “false”
				Element:td
					boolean
				Element:tr
				Element:td
				Element:strong
					depth
				Element:td
					Product depth (inches)
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					description
				Element:td
					Product description
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					details.name
				Element:td
					Collection of details about product (Example: whether a camera has a zoom)
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					details.value
				Element:td
					Collection of values that support the product (Example: A camera’s number of Megapixels or amount of zoom)
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					digital
				Element:td
					Identifies if product is available in a digital format
				Element:td
					boolean
				Element:tr
				Element:td
				Element:strong
					features.feature
				Element:td
					Collection of product features
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					format
				Element:td
					Identifies media product format
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					frequentlyPurchasedWith.sku
				Element:td
					Collection of SKUs that are frequently purchased with originating SKU
				Element:td
					long
				Element:tr
				Element:td
				Element:strong
					height
				Element:td
					Product height (inches)
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					includedItemList.includedItem
				Element:td
					Collection of items included with product (Example: Canon EOS 60D Digital SLR Camera, EF-S 18-135mm IS lens, Battery pack, Battery charger)
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					longDescription
				Element:td
					Detailed product description
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					longDescriptionHtml
				Element:td
					Detailed product description with HTML formatting
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					manufacturer
				Element:td
					Product manufacturer
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					modelNumber
				Element:td
					Manufacturer product model number
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					name
				Element:td
					Product name
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					preowned
				Element:td
					Identifies if product has been previously owned (used)
				Element:td
					boolean
				Element:tr
				Element:td
				Element:strong
					quantityLimit
				Element:td
					Maximum quantity of product that can be ordered
				Element:td
					integer
				Element:tr
				Element:td
				Element:strong
					relatedProducts.sku
				Element:td
					Collection of SKUs that are similar to originating SKU
				Element:td
					long
				Element:tr
				Element:td
				Element:strong
					releaseDate
				Element:td
					Date the product was released
				Element:td
					date
				Element:tr
				Element:td
				Element:strong
					shortDescription
				Element:td
					Brief product description
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					shortDescriptionHtml
				Element:td
					Brief product description (HTML formatting)
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					sku
				Element:td
					Best Buy unique product identifier
				Element:td
					long
				Element:tr
				Element:td
				Element:strong
					upc
				Element:td
					Universal Product Code (UPC)
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					warrantyLabor
				Element:td
					Manufacture labor warranty description
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					warrantyParts
				Element:td
					Manufacture parts warranty description
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					weight
				Element:td
					Product weight
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					width
				Element:td
					Product width (inches)
				Element:td
					string
			Node:
			(type) c
			(layer)1
				Element:h2
					Pricing and Sales Ranking
			Node:
			(type) c
			(layer)1
				Element:p
					Best Buy’s Pricing attributes make it easy to identify the product price, if a product is on sale, how much you can save and even when we made our last pricing changes. We also provide sales ranking over given time periods so you can have an idea of the best-sellers.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					bestSellingRank
				Element:td
					Ranks products by number of units sold
				Element:tr
				Element:td
				Element:strong
					dollarSavings
				Element:td
					Identifies amount saved
				Element:tr
				Element:td
				Element:strong
					lowPriceGuarantee
				Element:td
					Identifies if a product qualifies for the Best Buy low price guarantee
				Element:tr
				Element:td
				Element:strong
					onSale
				Element:td
					Identifies if sale price is less than regular price
				Element:tr
				Element:td
				Element:strong
					percentSavings
				Element:td
					Identifies the percent saved between the regularPrice and salePrice
				Element:tr
				Element:td
				Element:strong
					priceRestriction
				Element:td
					Identifies product sale price display restrictions (
				Element:i
					guidelines for displaying lowest salePrice are sent to developers with privileged keys
					):
				Element:li
					MAP restriction identifies Minimum Advertised Price; actual selling price may not be shown until prodcut is added to cart
				Element:li
					ICR restriction identifies In-Checkout Rebate Price; actual selling price may not be shown until checkout
				Element:tr
				Element:td
				Element:strong
					priceUpdateDate
				Element:td
					Date and time product price was last updated
				Element:tr
				Element:td
				Element:strong
					priceWithPlan.newTwoYearPlan
				Element:td
					Mobile phone price when purchased with new 2-year plan
				Element:tr
				Element:td
				Element:strong
					priceWithPlan.upgradeTwoYearPlan
				Element:td
					Mobile phone price when purchased with 2-year upgrade plan
				Element:tr
				Element:td
				Element:strong
					priceWithPlan.newTwoYearPlanSalePrice
				Element:td
					Mobile phone sale price when purchased with 2-year plan
				Element:tr
				Element:td
				Element:strong
					priceWithPlan.upgradeTwoYearPlanSalePrice
				Element:td
					Mobile phone sale price when purchased with 2-year upgrade plan
				Element:tr
				Element:td
				Element:strong
					priceWithPlan.newTwoYearPlanRegularPrice
				Element:td
					Mobile phone price when purchased with new 2-year plan
				Element:tr
				Element:td
				Element:strong
					priceWithPlan.upgradeTwoYearPlanRegularPrice
				Element:td
					Mobile phone price when purchased with 2-year upgrade plan
				Element:tr
				Element:td
				Element:strong
					regularPrice
				Element:td
					Product’s regular selling price
				Element:tr
				Element:td
				Element:strong
					salePrice
				Element:td
					Current item selling price
				Element:tr
				Element:td
				Element:strong
					salesRankLongTerm
				Element:td
					Sales rank over past 5-21 days
				Element:tr
				Element:td
				Element:strong
					salesRankMediumTerm
				Element:td
					Sales rank over past 2-4 days
				Element:tr
				Element:td
				Element:strong
					salesRankShortTerm
				Element:td
					Sales rank over past day
			Node:
			(type) c
			(layer)1
				Element:h2
					Availability
			Node:
			(type) c
			(layer)1
				Element:p
					The Availability attributes provide details into which products can be purchased online and which products can be picked up in stores.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					friendsAndFamilyPickup
				Element:td
					Identifies if a product is eligible for friends and family pickup
				Element:tr
				Element:td
				Element:strong
					homeDelivery
				Element:td
					Identifies if a product must be fulfilled using home delivery instead of shipping
				Element:tr
				Element:td
				Element:strong
					inStoreAvailability
				Element:td
					Identifies if a product is available for purchase in a Best Buy store
				Element:tr
				Element:td
				Element:strong
					inStoreAvailabilityText
				Element:td
					Additional information regarding inStoreAvailability
				Element:tr
				Element:td
				Element:strong
					inStoreAvailabilityTextHtml
				Element:td
					Additional information regarding inStoreAvailability (HTML formatting)
				Element:tr
				Element:td
				Element:strong
					inStoreAvailabilityUpdateDate
				Element:td
					Provides date and time inStoreAvailability last updated
				Element:tr
				Element:td
				Element:strong
					inStorePickup
				Element:td
					Identifies if a product can be purchased online and picked up in a store
				Element:tr
				Element:td
				Element:strong
					onlineAvailability
				Element:td
					Identifies if a product can be purchased online
				Element:tr
				Element:td
				Element:strong
					onlineAvailabilityText
				Element:td
					Additional information regarding online availability
				Element:tr
				Element:td
				Element:strong
					onlineAvailabilityTextHtml
				Element:td
					Additional information regarding online availability (HTML formatting)
				Element:tr
				Element:td
				Element:strong
					onlineAvailabilityUpdateDate
				Element:td
					Provides date and time onlineAvailability was last updated
				Element:tr
				Element:td
				Element:strong
					orderable
				Element:td
					Product ordering status
				Element:tr
				Element:td
				Element:strong
					specialOrder
				Element:td
					Identifies whether a product will require special handling for delivery
			Node:
			(type) c
			(layer)1
				Element:h2
					Shipping and Delivery
			Node:
			(type) c
			(layer)1
				Element:p
					The Shipping and Delivery attributes provide details about the cost of shipping or delivery of a product. A product can be shippable or deliverable, but not both.
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Sample
				Element:code
					shippingLevelsOfService
					response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"shippingLevelsOfService"
				Element:span
					:[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"serviceLevelId"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"serviceLevelName"
				Element:span
					:
				Element:span
				Element:span
					"Standard"
				Element:span
					,
				Element:span
				Element:span
					"unitShippingPrice"
				Element:span
					:
				Element:span
				Element:span
					2.99
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"serviceLevelId"
				Element:span
					:
				Element:span
				Element:span
					3
				Element:span
					,
				Element:span
				Element:span
					"serviceLevelName"
				Element:span
					:
				Element:span
				Element:span
					"Expedited"
				Element:span
					,
				Element:span
				Element:span
					"unitShippingPrice"
				Element:span
					:
				Element:span
				Element:span
					10.99
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"serviceLevelId"
				Element:span
					:
				Element:span
				Element:span
					5
				Element:span
					,
				Element:span
				Element:span
					"serviceLevelName"
				Element:span
					:
				Element:span
				Element:span
					"Express"
				Element:span
					,
				Element:span
				Element:span
					"unitShippingPrice"
				Element:span
					:
				Element:span
				Element:span
					14.99
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					freeShipping
				Element:td
					Identifies if a product qualifies for free shipping
				Element:tr
				Element:td
				Element:strong
					shippingCost
				Element:td
					Provides product’s lowest shipping costs
				Element:tr
				Element:td
				Element:strong
					shippingWeight
				Element:td
					Identifies product’s shipping weight (pounds)
				Element:tr
				Element:td
				Element:strong
					shippingLevelsOfService
				Element:td
					An array of shipping options
				Element:tr
				Element:td
				Element:strong
					shippingLevelsOfService.serviceLevelId
				Element:td
					ID of the shipping level of service
				Element:tr
				Element:td
				Element:strong
					shippingLevelsOfService.serviceLevelName
				Element:td
					Name of the shipping level of service
				Element:tr
				Element:td
				Element:strong
					shippingLevelsOfService.unitShippingPrice
				Element:td
					Price of the shipping level of service
			Node:
			(type) c
			(layer)1
				Element:h2
					Images
			Node:
			(type) c
			(layer)1
				Element:p
					The Images attributes provide multiple images for a product. These include large, small, and side images and even interactive 360 degree images.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					accessoriesImage
				Element:td
					URL of accessories image
				Element:tr
				Element:td
				Element:strong
					alternateViewsImage
				Element:td
					URL of alternate image
				Element:tr
				Element:td
				Element:strong
					angleImage
				Element:td
					URL of product’s angle image
				Element:tr
				Element:td
				Element:strong
					backViewImage
				Element:td
					URL of rear image
				Element:tr
				Element:td
				Element:strong
					energyGuideImage
				Element:td
					URL of product’s EnergyGuide image
				Element:tr
				Element:td
				Element:strong
					image
				Element:td
					URL of BESTBUY.COM product detail page image
				Element:tr
				Element:td
				Element:strong
					largeFrontImage
				Element:td
					URL of large front image
				Element:tr
				Element:td
				Element:strong
					largeImage
				Element:td
					URL of image
				Element:tr
				Element:td
				Element:strong
					leftViewImage
				Element:td
					URL of left image
				Element:tr
				Element:td
				Element:strong
					mediumImage
				Element:td
					URL of medium image
				Element:tr
				Element:td
				Element:strong
					remoteControlImage
				Element:td
					URL of remote control image
				Element:tr
				Element:td
				Element:strong
					rightViewImage
				Element:td
					URL of right image
				Element:tr
				Element:td
				Element:strong
					spin360Url
				Element:td
					URL of 360-degree image
				Element:tr
				Element:td
				Element:strong
					thumbnailImage
				Element:td
					URL of image used on BESTBUY.COM listing pages
				Element:tr
				Element:td
				Element:strong
					topViewImage
				Element:td
					URL of top image
			Node:
			(type) c
			(layer)1
				Element:h3
					Serving Images Over SSL
			Node:
			(type) c
			(layer)1
				Element:p
					By default, all images are served over HTTP. For example
				Element:code
					http://img.bbystatic.com/BestBuy_US/images/products/4971/4971903_sb.jpg
			Node:
			(type) c
			(layer)1
				Element:p
					If your application is HTTPS and you need to serve our images over HTTPS, there are two quick adjustments you need to make:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Switch the scheme from
				Element:code
					http
					to
				Element:code
					https
				Element:li
					Switch the hostname from
				Element:code
					img.bbystatic.com
					to
				Element:code
					img-ssl.bbystatic.com
			Node:
			(type) c
			(layer)1
				Element:p
					Put another way, you should do a string replace from
				Element:code
					http://img.bbystatic.com/
					to
				Element:code
					https://img-ssl.bbystatic.com/
					. The resulting image URL should look like
				Element:code
					https://img-ssl.bbystatic.com/BestBuy_US/images/products/4971/4971903_sb.jpg
			Node:
			(type) c
			(layer)1
				Element:h2
					Links
			Node:
			(type) c
			(layer)1
				Element:p
					The Links attributes provide a way for you to direct customers to a BESTBUY.COM product detail page or create a BESTBUY.COM cart on their behalf while including the product in the cart.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					addToCartUrl
				Element:td
					URL to BESTBUY.COM with item in cart
				Element:tr
				Element:td
				Element:strong
					url
				Element:td
					URL to BESTBUY.COM product detail page
			Node:
			(type) c
			(layer)1
				Element:p
				Element:br
					For our
				Element:strong
					affiliate partners
					we provide this same functionality but use a special link so you can get credit for your sale. Affiliates add their LinkShare Affiliate Tracking Code (LID) to their query request. The URL generated will direct the customer to BESTBUY.COM with this item in their cart and credit the affiliate with the sale.
				Element:i
					Additional information on the affiliate program can be found
				Element:a
					here
					.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					linkShareAffiliateAddToCartUrl
				Element:td
					URL to BESTBUY.COM with item in cart
				Element:tr
				Element:td
				Element:strong
					linkShareAffiliateUrl
				Element:td
					URL to BESTBUY.COM product detail page
			Node:
			(type) c
			(layer)1
				Element:h2
					Categorizations
			Node:
			(type) c
			(layer)1
				Element:p
					Best Buy provides multiple ways to group products based on your needs.
			Node:
			(type) c
			(layer)1
				Element:p
					The department, class and subclass attributes provide categorization structure or groupings of products. These attributes are returned as separate attributes but are related. The department attribute provides the more general categorization while the class and subclass attributes narrow the focus to be more specific. The class and subclass attributes are less volatile than category attributes and are the recommended attributes for grouping products.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:th
					Type
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					class
				Element:td
					Class name
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					classId
				Element:td
					Class identifiers
				Element:td
					integer
				Element:tr
				Element:td
				Element:strong
					department
				Element:td
					Department name
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					departmentId
				Element:td
					Department identifiers
				Element:td
					integer
				Element:tr
				Element:td
				Element:strong
					subclass
				Element:td
					Subclass name
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					subclassId
				Element:td
					Subclass identifier
				Element:td
					integer
			Node:
			(type) c
			(layer)1
				Element:p
					The categoryPath attributes provide a hierarchal view of a product returned as a collection. The collections start with the most general categorization, while subsequent categories narrow to be more specific. The number of categories returned can be 3+ layers deep. The products within the categories also tend to be slightly more volatile than department, class and subclass groupings.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:th
					Type
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					categoryPath.id
				Element:td
					Category identifiers
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					categoryPath.name
				Element:td
					Category names
				Element:td
					string
			Node:
			(type) c
			(layer)1
				Element:p
					The list attributes are used for specific events such as Valentine’s Day. These lists are curated by Best Buy merchant teams for customer visibility for a specific event or purpose.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:th
					Type
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					lists.endDate
				Element:td
					End date shown in list
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					lists.listId
				Element:td
					Name shown in list
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					lists.startDate
				Element:td
					Start date shown in list
				Element:td
					string
			Node:
			(type) c
			(layer)1
				Element:h2
					Offers and Deals
			Node:
			(type) c
			(layer)1
				Element:p
					The Best Buy offer attributes provide a comprehensive view into the deals at Best Buy. This includes what is in our Sunday circular (also available online), our “Deal of the Day” and other special offers like “Free Shipping on Orders $35 and Up.” Each offer will contain a description of the offer and a link to the offer on
				Element:strong
					BESTBUY.COM
					where applicable. Offer information is grouped together in a collection. Each product can have one or more offers associated to it.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					NOTE: Offers are updated on a daily basis. Offers are subject to change and applicability will be determined at checkout.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attributes
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					offers.endDate
				Element:td
					Offer end date
				Element:tr
				Element:td
				Element:strong
					offers.id
				Element:td
					Offer identifier
				Element:tr
				Element:td
				Element:strong
					offers.startDate
				Element:td
					Offer start date
				Element:tr
				Element:td
				Element:strong
					offers.text
				Element:td
					Description of offer
				Element:tr
				Element:td
				Element:strong
					offers.type
				Element:td
					Offer types can include the following:
				Element:li
					special_offer: identified by Best Buy marketing managers
				Element:li
					digital_insert: identifies products that are a part of weekly insert that can be found in a Sunday newspaper
				Element:li
					deal_of_the_day: small group of products being promoted for one day only
				Element:tr
				Element:td
				Element:strong
					offers.url
				Element:td
					URL of offer information on BESTBUY.COM
			Node:
			(type) c
			(layer)1
				Element:h2
					Listing Products
			Node:
			(type) c
			(layer)1
				Element:p
					We offer various metadata to support you when listing Best Buy products. This includes information such as whether a product is active, if it is new or refurbished, the type of product (music, movie, hardgood, bundle, game, blacktie, or software) and more.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:th
					Type
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					active
				Element:td
					Identifies if product is currently supported in the BESTBUY.COM catalog
				Element:td
					boolean
				Element:tr
				Element:td
				Element:strong
					activeUpdateDate
				Element:td
					Date and time the active attribute was last changed
				Element:td
					date
				Element:tr
				Element:td
				Element:strong
					bundledIn.sku
				Element:td
					Returns SKUs of bundles that that include this product
				Element:td
					long
				Element:tr
				Element:td
				Element:strong
					itemUpdateDate
				Element:td
					Date and time any change was made to this product
				Element:td
					date
				Element:tr
				Element:td
				Element:strong
					members.sku
				Element:td
					Collection of skus within a bundle
				Element:td
					long
				Element:tr
				Element:td
				Element:strong
					new
				Element:td
					Identifies if the product was added within last 30 days
				Element:td
					boolean
				Element:tr
				Element:td
				Element:strong
					secondaryMarket
				Element:td
					Identifies if product is a secondary market product
				Element:td
					boolean
				Element:tr
				Element:td
				Element:strong
					startDate
				Element:td
					Date Best Buy began selling product
				Element:td
					date
				Element:tr
				Element:td
				Element:strong
					type
				Element:td
					Best Buy product type, see section below for more details
				Element:td
					string
			Node:
			(type) c
			(layer)1
				Element:h3
					Product Type Details
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					blackTie
				Element:td
					Extended warranty services provided by the Best Buy GeekSquad team
				Element:tr
				Element:td
				Element:strong
					bundle
				Element:td
					A group of products; group can include both material and digital products
				Element:tr
				Element:td
				Element:strong
					game
				Element:td
					Games; includes both material and digital (downloadable) game products
				Element:tr
				Element:td
				Element:strong
					hardgood
				Element:td
					Products that are not of type music, movie, game, blackTie, software or bundle
				Element:tr
				Element:td
				Element:strong
					movie
				Element:td
					Movies; inclues both material and digital (downloadable) movie products
				Element:tr
				Element:td
				Element:strong
					music
				Element:td
					Music; includes both material and digital (downloadable) music products
				Element:tr
				Element:td
				Element:strong
					software
				Element:td
					Software; includes material and digital (downloadable) software products
			Node:
			(type) c
			(layer)1
				Element:h2
					Warranties
			Node:
			(type) c
			(layer)1
				Element:p
					The Warranties endpoint within the Best Buy Products API helps you access a list of warranties associated with a Best Buy product, along with select data associated with the warranty. For more detailed information about a specific warranty, you can look at that warranty by SKU in our Products endpoint.
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Search for warranties associated with SKU 5005633
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/products/5005633/warranties.json?apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					[{
				Element:span
				Element:span
					"skuId"
				Element:span
					:
				Element:span
				Element:span
					"2745188"
				Element:span
					,
				Element:span
				Element:span
					"shortName"
				Element:span
					:
				Element:span
				Element:span
					"1-Year Accidental Geek Squad Protection"
				Element:span
					,
				Element:span
				Element:span
					"currentPrice"
				Element:span
					:
				Element:span
				Element:span
					149.99
				Element:span
					,
				Element:span
				Element:span
					"type"
				Element:span
					:
				Element:span
				Element:span
					"GSP"
				Element:span
					,
				Element:span
				Element:span
					"department"
				Element:span
					:
				Element:span
				Element:span
					"7"
				Element:span
					,
				Element:span
				Element:span
					"subclass"
				Element:span
					:
				Element:span
				Element:span
					"210"
				Element:span
					,
				Element:span
				Element:span
					"protectionType"
				Element:span
					:
				Element:span
				Element:span
					"Accidental"
				Element:span
					,
				Element:span
				Element:span
					"paymentType"
				Element:span
					:
				Element:span
				Element:span
					"ONETIME"
				Element:span
					,
				Element:span
				Element:span
					"term"
				Element:span
					:
				Element:span
				Element:span
					"12 months"
				Element:span
					,
				Element:span
				Element:span
					"class"
				Element:span
					:
				Element:span
				Element:span
					"332"
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
			Node:
			(type) c
			(layer)1
				Element:h3
					Common Attributes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:th
					Type
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					protectionType
				Element:td
					Collection of warranties offering specific protections
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					paymentType
				Element:td
					Collection of warranties available with a specific type of payment
				Element:td
					string
				Element:tr
				Element:td
				Element:strong
					term
				Element:td
					Collection of warranties available for a certain length of time
				Element:td
					string
			Node:
			(type) c
			(layer)1
				Element:p
				Element:strong
					Note:
					Descriptions of other warranty-related attributes, including
				Element:code
					skuId
					,
				Element:code
					shortName
					,
				Element:code
					currentPrice
					,
				Element:code
					type
					,
				Element:code
					department
					,
				Element:code
					class
					, and
				Element:code
					subclass
					can be found in our core Products documentation.
			Node:
			(type) c
			(layer)1
				Element:h2
					Products Bulk Download
			Node:
			(type) c
			(layer)1
				Element:p
					There are two files generated for all products:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:code
					https://api.bestbuy.com/v1/products.xml.zip?apiKey=YourAPIKey
					- XML format
				Element:li
				Element:code
					https://api.bestbuy.com/v1/products.json.zip?apiKey=YourAPIKey
					- JSON format
			Node:
			(type) c
			(layer)1
				Element:p
					There is one file generated for all available stores for
				Element:strong
					Best Buy
					products:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:code
					https://api.bestbuy.com/v1/storeAvailability.tsv.zip?apiKey=YourAPIKey
					- TSV (tab seperated values) format
			Node:
			(type) c
			(layer)1
				Element:h2
					Product Subset Downloads
			Node:
			(type) c
			(layer)1
				Element:p
					If you are interested in only one type of product, you can make a bulk download of one of our subsets. Subsets are also available each day by 9:00 am(CST).
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					productsActive
				Element:td
					Includes digital, preowned; excludes BlackTie plans
				Element:tr
				Element:td
					productsInactive
				Element:td
					Includes all inactive products; includes digital, preowned, BlackTie plans
				Element:tr
				Element:td
					productsMusic
				Element:td
					Active music
				Element:tr
				Element:td
					productsMovie
				Element:td
					Active movies
				Element:tr
				Element:td
					productsHardgood
				Element:td
					Active hardgoods; includes preowned
				Element:tr
				Element:td
					productsGame
				Element:td
					Active games; includes preowned
				Element:tr
				Element:td
					productsSoftware
				Element:td
					Active software
				Element:tr
				Element:td
					productsBlackTie
				Element:td
					Active BlackTie
				Element:tr
				Element:td
					productsDigital
				Element:td
					Active digital products
			Node:
			(type) c
			(layer)1
				Element:h3
					Query Syntax
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					https://api.bestbuy.com/v1/subsets/[subset].[format].zip?apiKey=YourAPIKey
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					[format] must be
				Element:em
					xml
					or
				Element:em
					json
				Element:li
					[subset] must be a “Type” from the above list
			Node:
			(type) c
			(layer)1
				Element:h3
					Sample Query For Digital Products
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					https://api.bestbuy.com/v1/subsets/productsDigital.xml.zip?apiKey=YourAPIKey
			Node:
			(type) h1
			(layer)1
				Element:h1
					Buying Options (Open Box) API
			Node:
			(type) c
			(layer)1
				Element:p
					The Buying Options API helps you access some of our best deals. This is where you’ll find information about ship-from-store eligible Open Box products including availability, condition and special pricing, with more to come as we build out this API further. Our Open Box endpoints provide access to several categories of Best Buy merchandise, similar to the “Buying Options” tab on
				Element:strong
					BESTBUY.COM
					product detail pages. We typically have multiple Open Box products for a single SKU. When a customer purchases an Open Box product on
				Element:strong
					BESTBUY.COM
					we ship from the closest Best Buy store based on the customer shipping address. To assist in selecting the correct Open Box product we assign a condition of “excellent or certified” to the product in every Open Box offer.
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					“excellent” - products that look brand new in appearance, with no physical flaws, scratches or scuffs and include all original parts and accessories
				Element:li
					“certified” - products that have passed the Geek Squad Certification process.
			Node:
			(type) c
			(layer)1
				Element:p
					We have split Open Box into multiple endpoints:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					The
				Element:strong
					Open Box Single SKU
					endpoint lets you query for a specific product using the product identifier (SKU) for any available Open Box offers.
				Element:li
					The
				Element:strong
					Open Box by list of SKUs
					endpoint lets you query for a list of products using product identifier (SKU) for any available Open Box offers.
				Element:li
					The
				Element:strong
					Open Box by Category
					endpoint lets you query for a set of products based on their categories.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					All responses returned will be in a json format. In addition, we only return results for available product. We check for newly available product every five minutes. If you are an affiliate partner please see the
				Element:a
					Affiliate FAQ
					for instructions on proper use.
			Node:
			(type) c
			(layer)1
				Element:h2
					Common Attributes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					customerReviews.averageScore
				Element:td
					Provides an average of all the ratings submitted for a product by reviewers. The customer can rate the product on a scale of 1-5 where 5 is the highest. Ratings may be returned using decimals
				Element:tr
				Element:td
				Element:strong
					customerReviews.count
				Element:td
					The total number of reviews collected
				Element:tr
				Element:td
				Element:strong
					descriptions.short
				Element:td
					A brief description of a product
				Element:tr
				Element:td
				Element:strong
					images.standard
				Element:td
					URL of BESTBUY.COM product detail page image
				Element:tr
				Element:td
				Element:strong
					links.product
				Element:td
					Link to the specific product in the Products API using a product identifier (SKU)
				Element:tr
				Element:td
				Element:strong
					links.web
				Element:td
					Link to the BESTBUY.COM product detail page using the Buying Options tab
				Element:tr
				Element:td
				Element:strong
					links.addToCart
				Element:td
					URL to BESTBUY.COM with item in cart
				Element:tr
				Element:td
				Element:strong
					names.title
				Element:td
					Name of the product
				Element:tr
				Element:td
				Element:strong
					offers.condition
				Element:td
					The condition attribute will either be “excellent” (products that look brand new in appearance,with no physical flaws, scratches or scuffs and include all original parts and accessories) or “certified” (products that have passed the Geek Squad Certification process)
				Element:tr
				Element:td
				Element:strong
					offers.prices.current,
				Element:td
					“Open box” product’s current selling price
				Element:tr
				Element:td
				Element:strong
					offers.prices.regular
				Element:td
					“Open box” product’s regular selling price
				Element:tr
				Element:td
				Element:strong
					prices.current
				Element:td
					“New” product’s current selling price
				Element:tr
				Element:td
				Element:strong
					prices.regular
				Element:td
					“New” product’s regular selling price
				Element:tr
				Element:td
				Element:strong
					sku
				Element:td
					Unique identifier for products sold by Best Buy
			Node:
			(type) c
			(layer)1
				Element:h2
					Open Box Single SKU
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/beta/products/8610161/openBox?apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					openBox
				Element:span
					(
				Element:span
					8610161
				Element:span
					).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Search all open box offers for SKU
				Element:strong
					8610161
					. We can see there are at least two offers
				Element:em
					excellent
					and
				Element:em
					certified
					.
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"results"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"customerReviews"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"averageScore"
				Element:span
					:
				Element:span
				Element:span
					"4.5"
				Element:span
					,
				Element:span
				Element:span
					"count"
				Element:span
					:
				Element:span
				Element:span
					471
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"descriptions"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"short"
				Element:span
					:
				Element:span
				Element:span
					"Google Chrome 64-bitTechnical details: Intel&#174; Celeron&#174; processor; 11.6\" display; 2GB memory; 16GB eMMC flash memorySpecial features: Bluetooth; HDMI outputNote: DVD/CD drive not included"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"images"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"standard"
				Element:span
					:
				Element:span
				Element:span
					"http://img.bbystatic.com/BestBuy_US/images/products/8610/8610161_rc.jpg"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"links"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"product"
				Element:span
					:
				Element:span
				Element:span
					"https://api.bestbuy.com/v1/products/8610161.json?apiKey=YourAPIKey"
				Element:span
					,
				Element:span
				Element:span
					"web"
				Element:span
					:
				Element:span
				Element:span
					"http://www.bestbuy.com/site/acer-11-6-chromebook-intel-celeron-2gb-memory-16gb-emmc-flash-memory-moonstone-white/8610161.p?id=1219351773817&skuId=8610161&cmp=RMX&ky=2l9pmD3wUBb9cc0tkHo49KBFCMPCiIPY4#tab=buyingOptions"
				Element:span
					,
				Element:span
				Element:span
					"addToCart"
				Element:span
					:
				Element:span
				Element:span
					"https://api.bestbuy.com/click/-/8610161/cart"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"names"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"title"
				Element:span
					:
				Element:span
				Element:span
					"Acer - 11.6\" Chromebook - Intel Celeron - 2GB Memory - 16GB eMMC Flash Memory - Moonstone White"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"offers"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"condition"
				Element:span
					:
				Element:span
				Element:span
					"excellent"
				Element:span
					,
				Element:span
				Element:span
					"prices"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"current"
				Element:span
					:
				Element:span
				Element:span
					175.99
				Element:span
					,
				Element:span
				Element:span
					"regular"
				Element:span
					:
				Element:span
				Element:span
					199
				Element:span
				Element:span
					}
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"condition"
				Element:span
					:
				Element:span
				Element:span
					"certified"
				Element:span
					,
				Element:span
				Element:span
					"prices"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"current"
				Element:span
					:
				Element:span
				Element:span
					187.99
				Element:span
					,
				Element:span
				Element:span
					"regular"
				Element:span
					:
				Element:span
				Element:span
					199
				Element:span
				Element:span
					}
				Element:span
				Element:span
					}
				Element:span
				Element:span
					],
				Element:span
				Element:span
					"prices"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"current"
				Element:span
					:
				Element:span
				Element:span
					199
				Element:span
					,
				Element:span
				Element:span
					"regular"
				Element:span
					:
				Element:span
				Element:span
					199
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					"8610161"
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					The Open Box Single SKU endpoint allows you to query by SKU all Open Box offers associated with a SKU. If there are no Open Box offers available, the query will return a HTTP 200 response code with an empty result set.
			Node:
			(type) c
			(layer)1
				Element:h2
					Open Box by List of SKUs
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/beta/products/openBox(sku%20in(5729048,7528703,4839357,8153056,8610161))?apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					openBox
				Element:span
					(
				Element:span
					'sku in(5729048,7528703,4839357,8153056,8610161)'
				Element:span
					).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Returns available Open Box offers for 5 different SKUs
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"metadata"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"resultSet"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"count"
				Element:span
					:
				Element:span
				Element:span
					6
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"context"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"canonicalUrl"
				Element:span
					:
				Element:span
				Element:span
					"https://api.bestbuy.com/beta/products/openBox(sku%20in(5729048,7528703,4839357,8153056,8610161,4591017))?apiKey=YourAPIKey"
				Element:span
				Element:span
					}
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"results"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"customerReviews"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"averageScore"
				Element:span
					:
				Element:span
				Element:span
					"4.5"
				Element:span
					,
				Element:span
				Element:span
					"count"
				Element:span
					:
				Element:span
				Element:span
					471
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"descriptions"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"short"
				Element:span
					:
				Element:span
				Element:span
					"Google Chrome 64-bitTechnical details: Intel&#174; Celeron&#174; processor; 11.6\" display; 2GB memory; 16GB eMMC flash memorySpecial features: Bluetooth; HDMI outputNote: DVD/CD drive not included"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"images"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"standard"
				Element:span
					:
				Element:span
				Element:span
					"http://img.bbystatic.com/BestBuy_US/images/products/8610/8610161_rc.jpg"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"links"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"product"
				Element:span
					:
				Element:span
				Element:span
					"https://api.bestbuy.com/v1/products/8610161.json?apiKey=YourAPIKey"
				Element:span
					,
				Element:span
				Element:span
					"web"
				Element:span
					:
				Element:span
				Element:span
					"http://www.bestbuy.com/site/acer-11-6-chromebook-intel-celeron-2gb-memory-16gb-emmc-flash-memory-moonstone-white/8610161.p?id=1219351773817&skuId=8610161&cmp=RMX&ky=2l9pmD3wUBb9cc0tkHo49KBFCMPCiIPY4#tab=buyingOptions"
				Element:span
					,
				Element:span
				Element:span
					"addToCart"
				Element:span
					:
				Element:span
				Element:span
					"https://api.bestbuy.com/click/-/8610161/cart"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"names"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"title"
				Element:span
					:
				Element:span
				Element:span
					"Acer - 11.6\" Chromebook - Intel Celeron - 2GB Memory - 16GB eMMC Flash Memory - Moonstone White"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"offers"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"condition"
				Element:span
					:
				Element:span
				Element:span
					"excellent"
				Element:span
					,
				Element:span
				Element:span
					"prices"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"current"
				Element:span
					:
				Element:span
				Element:span
					175.99
				Element:span
					,
				Element:span
				Element:span
					"regular"
				Element:span
					:
				Element:span
				Element:span
					199
				Element:span
				Element:span
					}
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"condition"
				Element:span
					:
				Element:span
				Element:span
					"certified"
				Element:span
					,
				Element:span
				Element:span
					"prices"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"current"
				Element:span
					:
				Element:span
				Element:span
					187.99
				Element:span
					,
				Element:span
				Element:span
					"regular"
				Element:span
					:
				Element:span
				Element:span
					199
				Element:span
				Element:span
					}
				Element:span
				Element:span
					}
				Element:span
				Element:span
					],
				Element:span
				Element:span
					"prices"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"current"
				Element:span
					:
				Element:span
				Element:span
					199
				Element:span
					,
				Element:span
				Element:span
					"regular"
				Element:span
					:
				Element:span
				Element:span
					199
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					"8610161"
				Element:span
				Element:span
					},
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					The Open Box by List of SKUs endpoint allows you to query all Open Box offers associated with a list of SKUs. The endpoint will return any available Open Box offers. If there is not an offer for a particular SKU in the list, that SKU will not be represented in the results. If there are no offers for any of the SKUs in the list, the query will return an HTTP 200 (OK) response code with an empty result set.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					NOTE: This endpoint accepts and returns at most 100 SKUs. The results are not paginated. Expect an HTTP 400 (Bad Request) response if you submit more than 100 SKUs.
			Node:
			(type) c
			(layer)1
				Element:h2
					Open Box by Category
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/beta/products/openBox(categoryId=abcat0400000)?apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					openBox
				Element:span
					(
				Element:span
					'categoryId=abcat0400000)'
				Element:span
					).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Search all Open Box offers for SKUs that are a part of category
				Element:strong
					abcat0400000
					;
				Element:em
					our Cameras & Camcorders category
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"results"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"customerReviews"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"averageScore"
				Element:span
					:
				Element:span
				Element:span
					"4.7"
				Element:span
					,
				Element:span
				Element:span
					"count"
				Element:span
					:
				Element:span
				Element:span
					145
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"descriptions"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"short"
				Element:span
					:
				Element:span
				Element:span
					"Compatible with most Canon DSLR cameras; stepping motor; 52mm filter size; 11.8\" minimum focus distance"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"images"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"standard"
				Element:span
					:
				Element:span
				Element:span
					"http://img.bbystatic.com/BestBuy_US/images/products/5729/5729048_sc.jpg"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"links"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"product"
				Element:span
					:
				Element:span
				Element:span
					"https://api.bestbuy.com/v1/products/5729048.json?apiKey=YourAPIKey"
				Element:span
					,
				Element:span
				Element:span
					"web"
				Element:span
					:
				Element:span
				Element:span
					"http://www.bestbuy.com/site/canon-ef-40mm-f-2-8-stm-standard-lens-black/5729048.p?id=1218688218296&skuId=5729048&cmp=RMX&ky=2l9pmD3wUBb9cc0tkHo49KBFCMPCiIPY4#tab=buyingOptions"
				Element:span
					,
				Element:span
				Element:span
					"addToCart"
				Element:span
					:
				Element:span
				Element:span
					"https://api.bestbuy.com/click/-/5729048/cart"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"names"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"title"
				Element:span
					:
				Element:span
				Element:span
					"Canon - EF 40mm f/2.8 STM Standard Lens - Black"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"offers"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"condition"
				Element:span
					:
				Element:span
				Element:span
					"excellent"
				Element:span
					,
				Element:span
				Element:span
					"prices"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"current"
				Element:span
					:
				Element:span
				Element:span
					167.99
				Element:span
					,
				Element:span
				Element:span
					"regular"
				Element:span
					:
				Element:span
				Element:span
					199.99
				Element:span
				Element:span
					}
				Element:span
				Element:span
					}
				Element:span
				Element:span
					],
				Element:span
				Element:span
					"prices"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"current"
				Element:span
					:
				Element:span
				Element:span
					199.99
				Element:span
					,
				Element:span
				Element:span
					"regular"
				Element:span
					:
				Element:span
				Element:span
					199.99
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					"5729048"
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					The Open Box by Category endpoint allows you to query all Open Box offers associated with the SKUs in the requested category. If there are no Open Box offers available, the query will return a HTTP 200 response code with an empty result set. You will want to search by Category ID.
				Element:em
					It is not possible to search by Category Name at this time.
			Node:
			(type) c
			(layer)1
				Element:p
					We recommend using our
				Element:a
					Categories API
					to identify the desired category. You can also look at the
				Element:a
					Products API
					category attributes to help identify those categories that you want to use to search Open Box offers.
			Node:
			(type) c
			(layer)1
				Element:p
					Use
				Element:a
					Pagination
					to review or retrieve the entire result set. If additional product information is needed you can use the
				Element:code
					links.product
					attribute to go to the
				Element:a
					Products API
					for a wealth of product information.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Categories API
			Node:
			(type) c
			(layer)1
				Element:p
					The Categories API allows you to traverse the many categories on
				Element:strong
					BESTBUY.COM
					and perform product searches based on category names or identifiers. The Categories API also allows you to search for specific product attributes within a specific category (example: TVs less than $100), search using multiple product attributes within a specific category (example: TVs released in the last year that are less than $100) or look at Best Buy taxonomy to better search and present Best Buy product data (example: HD TVs released in the last year that are less than $100).
			Node:
			(type) c
			(layer)1
				Element:h3
					Category and Subcategory Paths
			Node:
			(type) c
			(layer)1
				Element:p
					As part of the category details, we provide a flat hierarchical path for each category. The
				Element:code
					path
					is a collection of all the categories in the path, starting with the root.
			Node:
			(type) c
			(layer)1
				Element:p
					Similarly, the Subcategories path attributes provide a collection of subcategories for the parent category. Each category can have one or more subcategories associated to it, which are identified by subcategory ids and names.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					The Products API also includes the category path information for each product. For additional information on the category attributes in Products API, refer to
				Element:a
					Categorizations.
			Node:
			(type) c
			(layer)1
				Element:h2
					Common Attributes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					name
				Element:td
					Used to find all subcategories (e.g., parents, siblings, children) within a specific category
				Element:tr
				Element:td
				Element:strong
					id
				Element:td
					Used to find all results within a specific category (e.g., abcat0100000)
				Element:tr
				Element:td
				Element:strong
					path.name
				Element:td
					Used to find all categories, starting with the root, within a particular path (e.g., electronics)
				Element:tr
				Element:td
				Element:strong
					path.id
				Element:td
					Used to find all categories, starting with the root, within a particular path (e.g., abcat0014001)
				Element:tr
				Element:td
				Element:strong
					subCategories.name
				Element:td
					Used to identify subcategories within a specific category (e.g., Kitchen Essentials within Gift Ideas)
				Element:tr
				Element:td
				Element:strong
					subCategories.id
				Element:td
					Used to identify subcategories within a specific category (e.g., abcat0011002)
			Node:
			(type) c
			(layer)1
				Element:h2
					Get All Categories
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/categories?format=json&show=id&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					categories
				Element:span
					(
				Element:span
					''
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'id'
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"from"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"to"
				Element:span
					:
				Element:span
				Element:span
					10
				Element:span
					,
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					4328
				Element:span
					,
				Element:span
				Element:span
					"currentPage"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"totalPages"
				Element:span
					:
				Element:span
				Element:span
					433
				Element:span
					,
				Element:span
				Element:span
					"queryTime"
				Element:span
					:
				Element:span
				Element:span
					"0.003"
				Element:span
					,
				Element:span
				Element:span
					"totalTime"
				Element:span
					:
				Element:span
				Element:span
					"0.025"
				Element:span
					,
				Element:span
				Element:span
					"partial"
				Element:span
					:
				Element:span
				Element:span
					false
				Element:span
					,
				Element:span
				Element:span
					"canonicalUrl"
				Element:span
					:
				Element:span
				Element:span
					"/v1/categories?show=id&format=json&apiKey=YourAPIKey"
				Element:span
					,
				Element:span
				Element:span
					"categories"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"id"
				Element:span
					:
				Element:span
				Element:span
					"abcat0010000"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"id"
				Element:span
					:
				Element:span
				Element:span
					"abcat0020001"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"id"
				Element:span
					:
				Element:span
				Element:span
					"abcat0020002"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"id"
				Element:span
					:
				Element:span
				Element:span
					"abcat0020004"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"id"
				Element:span
					:
				Element:span
				Element:span
					"abcat0100000"
				Element:span
				Element:span
					}]
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					The query to the right will return all the Best Buy product categories. Query is filtered to show only
				Element:code
					id
					s.
			Node:
			(type) c
			(layer)1
				Element:h2
					Search for a Category
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/categories(name=Sony%20DSLR%20Camera*)?format=json&show=path&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					categories
				Element:span
					(
				Element:span
					'name=Sony DSLR Camera*'
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'path'
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					// The util package is loaded to print the complete object structure
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					require
				Element:span
					(
				Element:span
					'util'
				Element:span
					).
				Element:span
					inspect
				Element:span
					(
				Element:span
					data
				Element:span
					,
				Element:span
					false
				Element:span
					,
				Element:span
					null
				Element:span
					));
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"from"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"to"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"currentPage"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"totalPages"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"queryTime"
				Element:span
					:
				Element:span
				Element:span
					"0.011"
				Element:span
					,
				Element:span
				Element:span
					"totalTime"
				Element:span
					:
				Element:span
				Element:span
					"0.014"
				Element:span
					,
				Element:span
				Element:span
					"partial"
				Element:span
					:
				Element:span
				Element:span
					false
				Element:span
					,
				Element:span
				Element:span
					"canonicalUrl"
				Element:span
					:
				Element:span
				Element:span
					"/v1/categories(name=\"Sony DSLR Camera*\")?show=path&format=json&apiKey=YourAPIKey"
				Element:span
					,
				Element:span
				Element:span
					"categories"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"path"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"id"
				Element:span
					:
				Element:span
				Element:span
					"cat00000"
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Best Buy"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"id"
				Element:span
					:
				Element:span
				Element:span
					"pcmcat128500050004"
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Name Brands"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"id"
				Element:span
					:
				Element:span
				Element:span
					"cat15063"
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Sony"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"id"
				Element:span
					:
				Element:span
				Element:span
					"pcmcat97200050015"
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Sony DSLR Camera"
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					The following query will return the category path for the category
				Element:code
					name
					specified in the input. In the below example we are requesting the category path for a
				Element:strong
					Sony DSLR Camera
					. The query results are shown in a flat hierarchical path starting from the root. In this case
				Element:strong
					Best Buy
					is the root category which is the first in the path, followed by its child category
				Element:strong
					Name Brands
					, whose child is
				Element:strong
					Sony
					, and its child
				Element:strong
					Sony DSLR Camera
					, which is also the last category in this path.
			Node:
			(type) c
			(layer)1
				Element:h2
					Categories Bulk Download
			Node:
			(type) c
			(layer)1
				Element:p
					There are two files generated for all categories:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:code
					https://api.bestbuy.com/v1/categories.xml.zip?apiKey=YourAPIKey
					- XML format
				Element:li
				Element:code
					https://api.bestbuy.com/v1/categories.json.zip?apiKey=YourAPIKey
					- JSON format
			Node:
			(type) h1
			(layer)1
				Element:h1
					Recommendations API
			Node:
			(type) c
			(layer)1
				Element:p
					The Recommendations API offers Trending, Most Viewed and Also Viewed information about
				Element:strong
					Best Buy
					products based on customer behavior at
				Element:strong
					BESTBUY.COM
					.
			Node:
			(type) c
			(layer)1
				Element:h2
					Shared Attributes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					customerReviews.averageScore
				Element:td
					An average of all the ratings submitted for a product by reviewers
				Element:tr
				Element:td
				Element:strong
					customerReviews.count
				Element:td
					Total number of reviews collected
				Element:tr
				Element:td
				Element:strong
					description.short
				Element:td
					Brief description of a product
				Element:tr
				Element:td
				Element:strong
					images.standard
				Element:td
					URL of the BESTBUY.COM product detail page image
				Element:tr
				Element:td
				Element:strong
					links.addToCart
				Element:td
					URL that will direct the customer to BESTBUY.COM with the item in their cart
				Element:tr
				Element:td
				Element:strong
					links.product
				Element:td
					Link to the specific sku in the Products API
				Element:tr
				Element:td
				Element:strong
					links.web
				Element:td
					Link to the BESTBUY.COM product detail page
				Element:tr
				Element:td
				Element:strong
					names.title
				Element:td
					Name of the product
				Element:tr
				Element:td
				Element:strong
					prices.current
				Element:td
					Current selling price
				Element:tr
				Element:td
				Element:strong
					prices.regular
				Element:td
					Regular selling price
				Element:tr
				Element:td
				Element:strong
					sku
				Element:td
					Unique identifier for products sold by Best Buy
			Node:
			(type) c
			(layer)1
				Element:h2
					Trending Products
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/beta/products/trendingViewed(categoryId=abcat0400000)?apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					recommendations
				Element:span
					(
				Element:span
					'trendingViewed'
				Element:span
					,
				Element:span
					'abcat0400000'
				Element:span
					).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					In this example we request Trending products based on category abcat0400000 otherwise known as “Cameras & Camcorders”. When pulling by category you should always use the category id. It is not possible to query by category name. For more information about identifying category ids please refer to our
				Element:a
					Categories API
					documentation.
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"results"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"customerReviews"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"averageScore"
				Element:span
					:
				Element:span
				Element:span
					"4.9"
				Element:span
					,
				Element:span
				Element:span
					"count"
				Element:span
					:
				Element:span
				Element:span
					309
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"descriptions"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"short"
				Element:span
					:
				Element:span
				Element:span
					"20.2-megapixel APS-C CMOS sensorShooting speeds up to 7 fpsBuilt-in Wi-Fi"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"images"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"standard"
				Element:span
					:
				Element:span
				Element:span
					"http://img.bbystatic.com/BestBuy_US/images/products/8896/8896132_sc.jpg"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"links"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"product"
				Element:span
					:
				Element:span
				Element:span
					"https://api.bestbuy.com/v1/products/8896132.json?apiKey=YourAPIKey"
				Element:span
					,
				Element:span
				Element:span
					"web"
				Element:span
					:
				Element:span
				Element:span
					"http://www.bestbuy.com/site/canon-eos-70d-dslr-camera-with-18-135mm-is-stm-lens-black/8896132.p?id=1218941181224&skuId=8896132&cmp=RMX&ky=2l9pmD3wUBb9cc0tkHo49KBFCMPCiIPY4"
				Element:span
					,
				Element:span
				Element:span
					"addToCart"
				Element:span
					:
				Element:span
				Element:span
					"http://www.bestbuy.com/site/olspage.jsp?id=pcmcat152200050035&type=category&cmp=RMX&ky=2l9pmD3wUBb9cc0tkHo49KBFCMPCiIPY4&qvsids=8896132"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"names"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"title"
				Element:span
					:
				Element:span
				Element:span
					"Canon - EOS 70D DSLR Camera with 18-135mm IS STM Lens - Black"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"prices"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"current"
				Element:span
					:
				Element:span
				Element:span
					1449.99
				Element:span
					,
				Element:span
				Element:span
					"regular"
				Element:span
					:
				Element:span
				Element:span
					1549.99
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"rank"
				Element:span
					:
				Element:span
				Element:span
					6
				Element:span
					,
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					"8896132"
				Element:span
				Element:span
					},
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					The Trending Products endpoint returns top ten products, by rank, based on customer views of the
				Element:strong
					BESTBUY.COM
					product detail page over a rolling three hour time period. Trending growth is based on a comparison against the previous three hour time period. You can also pull this same information by
				Element:strong
					category
					or
				Element:strong
					subcategory
					. For more information about identifying category ids please refer to our
				Element:a
					Categories API
					documentation.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					Note: Minimum of 50 page views/hr required for inclusion. In addition, deep subcategories may not have enough user traffic to generate trending data.
			Node:
			(type) c
			(layer)1
				Element:h3
					Trending Products Specific Attributes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					rank
				Element:td
					The rank of a product as compared to the velocity of other trending products. The number rank 1 identifies the most highly trending product while a number 10 rank would identify the 10th trending product
			Node:
			(type) c
			(layer)1
				Element:h2
					Most Popular Viewed
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/beta/products/mostViewed(categoryId=abcat0107000)?apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					recommendations
				Element:span
					(
				Element:span
					'mostViewed'
				Element:span
					,
				Element:span
					'abcat0107000'
				Element:span
					).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Request Most Viewed products based on category abcat0107000 otherwise known as “TV & Home Theater Accessories.” When pulling by category you should always use the category id. It is not possible to query by category name.
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"results"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"customerReviews"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"averageScore"
				Element:span
					:
				Element:span
				Element:span
					"4.6"
				Element:span
					,
				Element:span
				Element:span
					"count"
				Element:span
					:
				Element:span
				Element:span
					15
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"descriptions"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"short"
				Element:span
					:
				Element:span
				Element:span
					"Lets you connect your Apple&#174; TV to a VGA-enabled projector; converts digital HDMI output to analog VGA signal; 3.5mm audio port; 6' cord"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"images"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"standard"
				Element:span
					:
				Element:span
				Element:span
					"http://images.bestbuy.com/BestBuy_US/images/products/1740/1740039_sc.jpg"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"links"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"product"
				Element:span
					:
				Element:span
				Element:span
					"https://api.bestbuy.com/v1/products/1740039.json"
				Element:span
					,
				Element:span
				Element:span
					"addToCart"
				Element:span
					:
				Element:span
				Element:span
					"http://www.bestbuy.com/site/olspage.jsp?id=pcmcat152200050035&type=category&cmp=RMX&ky=1xrtkOPXgHdxEmF4yQx1jGyxiihDiJ5c2&qvsids=1740039"
				Element:span
					,
				Element:span
				Element:span
					"web"
				Element:span
					:
				Element:span
				Element:span
					"http://www.bestbuy.com/site/belkin-hdmi-to-vga-adapter/1740039.p?id=1219062507184&skuId=1740039&cmp=RMX&ky=2dN2vg9ikE823Sb2cqFFchnSnf6JkvQna"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"names"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"title"
				Element:span
					:
				Element:span
				Element:span
					"Belkin - HDMI-to-VGA Adapter"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"prices"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"current"
				Element:span
					:
				Element:span
				Element:span
					25.99
				Element:span
					,
				Element:span
				Element:span
					"regular"
				Element:span
					:
				Element:span
				Element:span
					49.99
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"rank"
				Element:span
					:
				Element:span
				Element:span
					7
				Element:span
					,
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					"1740039"
				Element:span
				Element:span
					},
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					The Most Popular Viewed endpoint returns the top ten products, by rank, of the most frequently viewed products on
				Element:strong
					BESTBUY.COM
					. You can also pull this same information by
				Element:strong
					category
					or
				Element:strong
					subcategory
					. To find out additional information about identifying category ids please refer to our
				Element:a
					Categories API
					documentation. This data for Most Popular Viewed is refreshed every two hours with a maximum accumulation time of 48 hours when determining the top ten products.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					Note: The difference between Trending Products and Most Popular Viewed Products is that Trending Products reflects change in velocity of product views while Most Popular Viewed reflects page views only.
			Node:
			(type) c
			(layer)1
				Element:h3
					Most Popular Product Specific Attributes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					rank
				Element:td
					The rank of a product based on how frequently it is viewed on BESTBUY.COM product detailed page
			Node:
			(type) c
			(layer)1
				Element:h2
					Also Viewed
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/beta/products/5747275/alsoViewed?apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					recommendations
				Element:span
					(
				Element:span
					'alsoViewed'
				Element:span
					,
				Element:span
					5747275
				Element:span
					).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"results"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"customerReviews"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"averageScore"
				Element:span
					:
				Element:span
				Element:span
					null
				Element:span
					,
				Element:span
				Element:span
					"count"
				Element:span
					:
				Element:span
				Element:span
					null
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"descriptions"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"short"
				Element:span
					:
				Element:span
				Element:span
					null
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"images"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"standard"
				Element:span
					:
				Element:span
				Element:span
					"http://images.bestbuy.com/BestBuy_US/images/products/nonsku/default_movies_l.jpg"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"links"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"product"
				Element:span
					:
				Element:span
				Element:span
					"https://api.bestbuy.com/v1/products/5747275.json"
				Element:span
					,
				Element:span
				Element:span
					"addToCart"
				Element:span
					:
				Element:span
				Element:span
					"http://www.bestbuy.com/site/olspage.jsp?id=pcmcat152200050035&type=category&cmp=RMX&ky=1xrtkOPXgHdxEmF4yQx1jGyxiihDiJ5c2&qvsids=5747275"
				Element:span
					,
				Element:span
				Element:span
					"web"
				Element:span
					:
				Element:span
				Element:span
					"http://www.bestbuy.com/site/batman-begins-blu-ray-disc/8880044.p?id=1484301&skuId=8880044&cmp=RMX&ky=1xrtkOPXgHdxEmF4yQx1jGyxiihDiJ5c2"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"names"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"title"
				Element:span
					:
				Element:span
				Element:span
					"Batman Begins (2 Disc) (Ultraviolet Digital Copy) (Blu-ray Disc)"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"prices"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"current"
				Element:span
					:
				Element:span
				Element:span
					9.99
				Element:span
					,
				Element:span
				Element:span
					"regular"
				Element:span
					:
				Element:span
				Element:span
					9.99
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"rank"
				Element:span
					:
				Element:span
				Element:span
					3
				Element:span
					,
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					"5747275"
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					The Also Viewed Products endpoint can be used to identify top ten products that were viewed along with the originating product. These results are determined based on aggregated customer browsing behavior over the past thirty days on
				Element:strong
					BESTBUY.COM
					.
			Node:
			(type) c
			(layer)1
				Element:h3
					Also Viewed Product Specific Attributes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					rank
				Element:td
					The rank of the product based on how many views a product received after starting with originating SKU. The number 1 rank identifies the highest number of page views an associated product received while looking at originating SKU while the number 10 rank identifies the product with the 10th highest page views while look at same originating product
			Node:
			(type) h1
			(layer)1
				Element:h1
					Stores API
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/stores?format=json&show=city,longName&pageSize=2&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					stores
				Element:span
					(
				Element:span
					''
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'city,longName'
				Element:span
					,
				Element:span
					pageSize
				Element:span
					:
				Element:span
					2
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Returns the city and store name of 2 stores
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"from"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"to"
				Element:span
					:
				Element:span
				Element:span
					2
				Element:span
					,
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					1587
				Element:span
					,
				Element:span
				Element:span
					"currentPage"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"totalPages"
				Element:span
					:
				Element:span
				Element:span
					794
				Element:span
					,
				Element:span
				Element:span
					"stores"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"city"
				Element:span
					:
				Element:span
				Element:span
					"San Juan"
				Element:span
					,
				Element:span
				Element:span
					"longName"
				Element:span
					:
				Element:span
				Element:span
					"Best Buy - Hato Rey"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"city"
				Element:span
					:
				Element:span
				Element:span
					"Bayamon"
				Element:span
					,
				Element:span
				Element:span
					"longName"
				Element:span
					:
				Element:span
				Element:span
					"Best Buy - Rio Hondo Mall"
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					The Best Buy Stores API provides store information for all Best Buy stores in the United States and Puerto Rico. This information includes address, location, hours and services offered.
			Node:
			(type) c
			(layer)1
				Element:p
					In addition, store availability of a product can be determined by querying the Products API together with the Stores API. Refer to In Store Availability for more information on these type of queries.
			Node:
			(type) c
			(layer)1
				Element:h2
					Common Attributes
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/stores(postalCode=55423)?format=json&show=storeId,storeType,name,city,region&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					stores
				Element:span
					(
				Element:span
					'postalCode=55423'
				Element:span
					,
				Element:span
					{
				Element:span
					show
				Element:span
					:
				Element:span
					'storeId,storeType,name,city,region'
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Returns all stores at the ZIP code 55423 (Richfield, MN)
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"from"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"to"
				Element:span
					:
				Element:span
				Element:span
					3
				Element:span
					,
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					3
				Element:span
					,
				Element:span
				Element:span
					"currentPage"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"totalPages"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"stores"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"storeId"
				Element:span
					:
				Element:span
				Element:span
					2387
				Element:span
					,
				Element:span
				Element:span
					"storeType"
				Element:span
					:
				Element:span
				Element:span
					"Mobile SAS"
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Best Buy Mobile - Richfield"
				Element:span
					,
				Element:span
				Element:span
					"city"
				Element:span
					:
				Element:span
				Element:span
					"Richfield"
				Element:span
					,
				Element:span
				Element:span
					"region"
				Element:span
					:
				Element:span
				Element:span
					"MN"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"storeId"
				Element:span
					:
				Element:span
				Element:span
					281
				Element:span
					,
				Element:span
				Element:span
					"storeType"
				Element:span
					:
				Element:span
				Element:span
					"Big Box"
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Richfield"
				Element:span
					,
				Element:span
				Element:span
					"city"
				Element:span
					:
				Element:span
				Element:span
					"Richfield"
				Element:span
					,
				Element:span
				Element:span
					"region"
				Element:span
					:
				Element:span
				Element:span
					"MN"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"storeId"
				Element:span
					:
				Element:span
				Element:span
					8001
				Element:span
					,
				Element:span
				Element:span
					"storeType"
				Element:span
					:
				Element:span
				Element:span
					"Express Kiosk"
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Best Buy HQ"
				Element:span
					,
				Element:span
				Element:span
					"city"
				Element:span
					:
				Element:span
				Element:span
					"Richfield"
				Element:span
					,
				Element:span
				Element:span
					"region"
				Element:span
					:
				Element:span
				Element:span
					"MN"
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					The Stores API enables you to retrieve the basic store information for all Best Buy stores, a specific Best Buy store or those stores that match a set of search parameters.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					address
				Element:td
					Street address
				Element:tr
				Element:td
				Element:strong
					address2
				Element:td
					Street address 2 provides additional street address information for the Best Buy store in the result set
				Element:tr
				Element:td
				Element:strong
					city
				Element:td
					City name
				Element:tr
				Element:td
				Element:strong
					country
				Element:td
					Country name
				Element:tr
				Element:td
				Element:strong
					distance
				Element:td
					Store distance from specified location in miles; attribute is not queryable; use with lat and long or postal code
				Element:tr
				Element:td
				Element:strong
					fullPostalCode
				Element:td
					9-digit postal code if available for store location
				Element:tr
				Element:td
				Element:strong
					lat
				Element:td
					Latitude
				Element:tr
				Element:td
				Element:strong
					lng
				Element:td
					Longitude
				Element:tr
				Element:td
				Element:strong
					location
				Element:td
					Details about location of a store; primarily used for identifying Best Buy Express Kiosk stores
				Element:tr
				Element:td
				Element:strong
					longName
				Element:td
					Full store name
				Element:tr
				Element:td
				Element:strong
					name
				Element:td
					Store name
				Element:tr
				Element:td
				Element:strong
					phone
				Element:td
					Store phone number; phone number for Express stores goes to Best Buy Customer Service
				Element:tr
				Element:td
				Element:strong
					postalCode
				Element:td
					5-digit postal code
				Element:tr
				Element:td
				Element:strong
					region
				Element:td
					State, territory
				Element:tr
				Element:td
				Element:strong
					storeId
				Element:td
					Store number
				Element:tr
				Element:td
				Element:strong
					storeType
				Element:td
					Indicates the type of store. There are six types of Best Buy stores: “Big Box”, “Mobile SAS”, “Express Kiosk”, “Warehouse Sale”, “Outlet Center” and “PAC Standalone Store”
				Element:li
					“Big Box” value represents large showroom stores featuring HDTVs, computers, gaming, appliances, cell phones, tablets, Geek Squad services and more
				Element:li
					“Mobile SAS” value represents specialty shops focused on smartphones, tablets, accessories, services and plans
				Element:li
					“Express Kiosk” value represents vending machine-style, self-checkout stores offering audio goods and accessories, found in airports, on college campuses and more
				Element:li
					“Warehouse Sale” value represents occasional sale locations
				Element:li
					“Outlet Center” value represents locations that sell open box and clearance products. Outlet Centers are open only a portion of the week
				Element:li
					“PAC Standalone Store” value represents Pacific Sales locations not located within a Big Box store - these locations only sell the Pacific Sales selection of kitchen and bath products
			Node:
			(type) c
			(layer)1
				Element:h2
					Area Function
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/stores(area(55423,10))?format=json&show=storeId,storeType,name&pageSize=2&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					stores
				Element:span
					(
				Element:span
					'area(55423,10)'
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'storeId,storeType,name'
				Element:span
					,
				Element:span
					pageSize
				Element:span
					:
				Element:span
					2
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					data
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Returns stores within 10 miles of ZIP code 55423 (Richfield, MN)
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"from"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"to"
				Element:span
					:
				Element:span
				Element:span
					2
				Element:span
					,
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					22
				Element:span
					,
				Element:span
				Element:span
					"currentPage"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"totalPages"
				Element:span
					:
				Element:span
				Element:span
					11
				Element:span
					,
				Element:span
				Element:span
					"stores"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"storeId"
				Element:span
					:
				Element:span
				Element:span
					2387
				Element:span
					,
				Element:span
				Element:span
					"storeType"
				Element:span
					:
				Element:span
				Element:span
					"Mobile SAS"
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Best Buy Mobile - Richfield"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"storeId"
				Element:span
					:
				Element:span
				Element:span
					281
				Element:span
					,
				Element:span
				Element:span
					"storeType"
				Element:span
					:
				Element:span
				Element:span
					"Big Box"
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Richfield"
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					The Stores API includes a special function
				Element:code
					area(location,distance)
					enabling you to locate stores near a specified location.
			Node:
			(type) c
			(layer)1
				Element:p
					Use the
				Element:code
					postalCode
					attribute or a
				Element:code
					lat
					-
				Element:code
					lng
					pair to search based on a location. When postal code is used the reference point in the postal code (zipcode) area is determined by a standard mapping service. If no distance is specified in the function, radius is defaulted to 10 miles. The
				Element:code
					location
					will be populated with the distance from the specified postal code or lat/long to the store in miles.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					Note
					:
				Element:em
					You may notice the stores returned are stated to be just over 10 miles from the ZIP code. This is due to the way return distance is calculated. The search area is defined as a square, bounded by location point +/- distance identified in request. All stores in that square are returned. Return distance is calculated linearly from the location point (creates a circle). Stores near the corner of the square might be listed as farther than the query distance specified.
			Node:
			(type) c
			(layer)1
				Element:h2
					Hours
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/stores(storeId=1118)?format=json&show=hours,hoursAmPm,gmtOffset,detailedHours&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					stores
				Element:span
					(
				Element:span
					'storeId=1118'
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'hours,hoursAmPm,gmtOffset,detailedHours'
				Element:span
					})
				Element:span
					.
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					// The util package is loaded to print the complete object structure
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					require
				Element:span
					(
				Element:span
					'util'
				Element:span
					).
				Element:span
					inspect
				Element:span
					(
				Element:span
					data
				Element:span
					,
				Element:span
					false
				Element:span
					,
				Element:span
					null
				Element:span
					));
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Shows all hours that store #1118 (San Juan, PR) is open
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"from"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"to"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"currentPage"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"totalPages"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"stores"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"hours"
				Element:span
					:
				Element:span
				Element:span
					"Mon: 10-9; Tue: 10-9; Wed: 10-9; Fri: 12:01-10; Sat: 9-10; Sun: 11-8"
				Element:span
					,
				Element:span
				Element:span
					"hoursAmPm"
				Element:span
					:
				Element:span
				Element:span
					"Mon: 10am-9pm; Tue: 10am-9pm; Wed: 10am-9pm; Fri: 12:01am-10pm; Sat: 9am-10pm; Sun: 11am-8pm"
				Element:span
					,
				Element:span
				Element:span
					"gmtOffset"
				Element:span
					:
				Element:span
				Element:span
					-5
				Element:span
					,
				Element:span
				Element:span
					"detailedHours"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"day"
				Element:span
					:
				Element:span
				Element:span
					"Sunday"
				Element:span
					,
				Element:span
				Element:span
					"date"
				Element:span
					:
				Element:span
				Element:span
					"2015-11-22"
				Element:span
					,
				Element:span
				Element:span
					"open"
				Element:span
					:
				Element:span
				Element:span
					"11:00"
				Element:span
					,
				Element:span
				Element:span
					"close"
				Element:span
					:
				Element:span
				Element:span
					"20:00"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"day"
				Element:span
					:
				Element:span
				Element:span
					"Monday"
				Element:span
					,
				Element:span
				Element:span
					"date"
				Element:span
					:
				Element:span
				Element:span
					"2015-11-23"
				Element:span
					,
				Element:span
				Element:span
					"open"
				Element:span
					:
				Element:span
				Element:span
					"10:00"
				Element:span
					,
				Element:span
				Element:span
					"close"
				Element:span
					:
				Element:span
				Element:span
					"21:00"
				Element:span
				Element:span
					}
				Element:span
				Element:span
					// Typically returns 14 days, truncating from documentation
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					The Hours attributes provide the days and times each Best Buy store is open for the following two weeks. We start our weeks on Sunday and provide hours in both a 12-hour and 24-hour clock. The times displayed are for the local time zones of the Best Buy store being returned. The Detailed Hours attributes provide the most accurate information of when stores will be opened or closed. This can be helpful during holidays as store hours may vary during this time.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					Hint: Detailed hours are filtered out from the search results by default. Query with
				Element:code
					show=all
					or
				Element:code
					show=detailedHours
					to see in the search results.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					detailedHours.day
				Element:td
					Days of the week store will be open
				Element:tr
				Element:td
				Element:strong
					detailedHours.date
				Element:td
					Dates store will be open
				Element:tr
				Element:td
				Element:strong
					detailedHours.open
				Element:td
					Time store will open (24-hour clock)
				Element:tr
				Element:td
				Element:strong
					detailedHours.close
				Element:td
					Time store will close (24-hour clock)
				Element:tr
				Element:td
				Element:strong
					gmtOffset
				Element:td
					Time difference from GMT
				Element:tr
				Element:td
				Element:strong
					hours
				Element:td
					Regular Best Buy store hours Monday through Friday for the calendar year; displayed in local time zone
				Element:tr
				Element:td
				Element:strong
					hoursAmPm
				Element:td
					Regular Best Buy store hours Monday through Friday for the calendar year with am and pm identifiers; displayed in local time zone
			Node:
			(type) c
			(layer)1
				Element:h2
					Services Offered
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/stores(storeId=1118)?format=json&show=services&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					bby
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'bestbuy'
				Element:span
					)(
				Element:span
					'YourAPIKey'
				Element:span
					);
				Element:span
					bby
				Element:span
					.
				Element:span
					stores
				Element:span
					(
				Element:span
					'storeId=1118'
				Element:span
					,{
				Element:span
					show
				Element:span
					:
				Element:span
					'services'
				Element:span
					}).
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					data
				Element:span
					){
				Element:span
					// The util package is loaded to print the complete object structure
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					require
				Element:span
					(
				Element:span
					'util'
				Element:span
					).
				Element:span
					inspect
				Element:span
					(
				Element:span
					data
				Element:span
					,
				Element:span
					false
				Element:span
					,
				Element:span
					null
				Element:span
					));
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Shows all services available at store #1118 (San Juan, PR)
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"from"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"to"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"currentPage"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"totalPages"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"stores"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"services"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"service"
				Element:span
					:
				Element:span
				Element:span
					"Windows Store"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"service"
				Element:span
					:
				Element:span
				Element:span
					"Geek Squad Services"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"service"
				Element:span
					:
				Element:span
				Element:span
					"Best Buy Mobile"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"service"
				Element:span
					:
				Element:span
				Element:span
					"Best Buy For Business"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"service"
				Element:span
					:
				Element:span
				Element:span
					"Apple Shop"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"service"
				Element:span
					:
				Element:span
				Element:span
					"Electronics Recycling"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"service"
				Element:span
					:
				Element:span
				Element:span
					"Best Buy Marine Powered by Geek Squad"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"service"
				Element:span
					:
				Element:span
				Element:span
					"Samsung Experience"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"service"
				Element:span
					:
				Element:span
				Element:span
					"LG Experience"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"service"
				Element:span
					:
				Element:span
				Element:span
					"Trade-In"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"service"
				Element:span
					:
				Element:span
				Element:span
					"Car & GPS Installation Services"
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					The Stores API includes information related to the services offered at each of the Best Buy stores.
				Element:code
					services
					is a collection of different services offered at a specified store.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:strong
					services.service
				Element:td
					Collection of services offered at each Best Buy store
			Node:
			(type) c
			(layer)1
				Element:h2
					In-Store Availability
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					"https://api.bestbuy.com/v1/stores(area(44.882942,-93.2775,3)&storeType=Express)+products(sku=5038019)?format=json&show=storeId,storeType,city,region,name,products.name,products.sku,products&pageSize=1&apiKey=YourAPIKey"
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					//Not yet implemented
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Shows Express stores within 3 miles of 44.882942,-93.2775 (Richfield, MN) that carry SKU 5038019 (Insignia 5-Way Stereo Splitter).
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"from"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"to"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					3
				Element:span
					,
				Element:span
				Element:span
					"currentPage"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"totalPages"
				Element:span
					:
				Element:span
				Element:span
					3
				Element:span
					,
				Element:span
				Element:span
					"stores"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"storeId"
				Element:span
					:
				Element:span
				Element:span
					8001
				Element:span
					,
				Element:span
				Element:span
					"storeType"
				Element:span
					:
				Element:span
				Element:span
					"Express Kiosk"
				Element:span
					,
				Element:span
				Element:span
					"city"
				Element:span
					:
				Element:span
				Element:span
					"Richfield"
				Element:span
					,
				Element:span
				Element:span
					"region"
				Element:span
					:
				Element:span
				Element:span
					"MN"
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Best Buy HQ"
				Element:span
					,
				Element:span
				Element:span
					"products"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Insignia™ - 6\" 5-Way Stereo Splitter - White"
				Element:span
					,
				Element:span
				Element:span
					"sku"
				Element:span
					:
				Element:span
				Element:span
					5038019
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					The Stores API, in conjunction with the Products API, allows you to search stores for a product and identify if it is available. In-store availability searches will return only those stores that have a given product in stock. Stores not returned do not have that product in stock. When completing an in-store availability query you should limit the stores that are a part of the query.
			Node:
			(type) c
			(layer)1
				Element:p
					Availability in stores is calculated using counts and previous-day sales to determine if the product is likely to be available, might be available or is unlikely to be available. The algorithm errs on the side of caution, and anything that is not available defaults to “not available”.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					HINT: The Products API attribute
				Element:code
					inStoreAvailability
					will tell you if a product is sold in stores but not if it’s available at a particular store. Using the In-Store availability queries is equivalent to checking product availability in store.
			Node:
			(type) c
			(layer)1
				Element:h2
					Stores Bulk Download
			Node:
			(type) c
			(layer)1
				Element:p
					There is one file generated for all available stores for
				Element:strong
					Best Buy
					products:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:code
					https://api.bestbuy.com/v1/storeAvailability.tsv.zip?apiKey=YourAPIKey
					- TSV (tab seperated values) format
			Node:
			(type) h1
			(layer)1
				Element:h1
					Commerce API
			Node:
			(type) c
			(layer)1
				Element:p
					The Best Buy Commerce API allows our partners to introduce a seamless cart experience to their customers, exposing the ability to select various fulfillment options including
				Element:em
					Store Pickup
					at one of our 1,400+ locations,
				Element:em
					Ship To Home
					and
				Element:em
					Home Delivery
					. If you have not yet been issued a Commerce API key, please contact
				Element:a
					developer@bestbuy.com
					.
			Node:
			(type) c
			(layer)1
				Element:p
					Within the Commerce APIs, partners have the ability to integrate your e-commerce solution with Best Buy’s online experience.
			Node:
			(type) c
			(layer)1
				Element:h2
					Functionality
			Node:
			(type) c
			(layer)1
				Element:p
					Full documentation supplied once you have a CAPI Key. Commerce API functionality includes:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Look up product availability, delivery dates, shipping costs prior to order submission
				Element:li
					Create orders including
				Element:em
					Store Pick Up
					,
				Element:em
					Ship to Home
					and
				Element:em
					Home Delivery
				Element:li
					Look up order information
				Element:li
					Modify/Cancel an Order
			Node:
			(type) c
			(layer)1
				Element:h2
					Getting a Commerce API Key
			Node:
			(type) c
			(layer)1
				Element:p
					Please contact us at
				Element:a
					developer@bestbuy.com
					to request an invite to the Commerce API program and a corresponding API Key. Current CAPI partners can access reporting and documentation via the same address.
			Node:
			(type) c
			(layer)1
				Element:a
					shell
			Node:
			(type) c
			(layer)1
				Element:a
					javascript
