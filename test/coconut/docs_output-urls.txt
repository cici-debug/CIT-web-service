Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					API documentation
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Coconut's API is a config-based API built with simplicity and flexibility in mind.
							Element:br
								Encode your first video in less than 5 minutes.
			Node:
			(type) h1
			(layer)1
				Element:h1
					API Reference
			Node:
			(type) c
			(layer)1
				Element:p
				Element:a
					Docs
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								List of supported Output URLs
						Node:
						(type) c
						(layer)2
							Element:p
								We support a number of CDN and protocols as Output URL.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Amazon S3 & S3-compatible services
									Node:
									(type) c
									(layer)3
										Element:p
										Element:em
											URL pattern:
										Element:code
											s3://access_key:secret_key@bucket/object_key
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Special headers
									Node:
									(type) c
									(layer)3
										Element:p
											You can append special headers to the URL. For example:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											s3://access_key:secret_key@bucket/object_key?x-amz-storage-class=REDUCED_REDUNDANCY
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Usage for S3-compatible services
									Node:
									(type) c
									(layer)3
										Element:p
											There are many S3-compatibles services such as:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Google Cloud Storage
										Element:li
										Element:a
											Openstack Swift
										Element:li
										Element:a
											Connectria's Cloud Storage
										Element:li
										Element:a
											Eucalyptus
										Element:li
										Element:a
											Riak CS
										Element:li
										Element:a
											Caringo
									Node:
									(type) c
									(layer)3
										Element:p
											To specify the service, use the
										Element:code
											host
											parameter.
									Node:
									(type) c
									(layer)3
										Element:p
											To use the Google Cloud Storage service:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											s3://access_key:secret_key@bucket/object_key?host=storage.googleapis.com
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Rackspace Cloud Files
									Node:
									(type) c
									(layer)3
										Element:p
										Element:em
											URL pattern:
										Element:code
											cf://username:api_key@container/object_key
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Windows Azure
									Node:
									(type) c
									(layer)3
										Element:p
										Element:em
											URL pattern:
										Element:code
											az://account:access_key@container/filename
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Backblaze B2
									Node:
									(type) c
									(layer)3
										Element:p
										Element:em
											URL pattern:
										Element:code
											b2://account_id:app_key@bucket_id/path/filename
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											OpenStack
									Node:
									(type) c
									(layer)3
										Element:p
										Element:em
											URL pattern:
										Element:code
											os://auth_token@host/v1/account/container/filename
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											FTP
									Node:
									(type) c
									(layer)3
										Element:p
										Element:em
											URL pattern:
										Element:code
											ftp://login:password@host:port/path/filename
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											SFTP
									Node:
									(type) c
									(layer)3
										Element:p
										Element:em
											URL pattern:
										Element:code
											sftp://login:password@host:port/path/filename
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											HTTP(s)
									Node:
									(type) c
									(layer)3
										Element:p
										Element:em
											URL pattern:
										Element:code
											http://yourhost.com/coconut/script
									Node:
									(type) c
									(layer)3
										Element:p
											Upload the new encoded video to the specified HTTP address using multipart form POST request.
									Node:
									(type) c
									(layer)3
										Element:p
											The parameter name containing the file object is
										Element:code
											encoded_video
											by default. To change it, add the query string
										Element:code
											http_file_name=data
											so data will have the file object.
									Node:
									(type) c
									(layer)3
										Element:p
											You also receive the thumbnail data in
										Element:code
											thumbnail
											.
									Node:
									(type) c
									(layer)3
										Element:p
											Other parameters are sent as well:
										Element:code
											encoded_video_id
											,
										Element:code
											video_id
											,
										Element:code
											job_id
											.
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Getting started
										Element:li
										Element:a
											Creating jobs
										Element:ul
										Element:li
										Element:a
											Config file
										Element:ul
										Element:li
										Element:a
											Variables
										Element:li
										Element:a
											Source
										Element:li
										Element:a
											Video encoding
										Element:li
										Element:a
											HLS
										Element:li
										Element:a
											MPEG-DASH
										Element:li
										Element:a
											Video previews
										Element:li
										Element:a
											Webhook
										Element:li
										Element:a
											Tutorials
										Element:ul
										Element:li
										Element:a
											Encoding videos
										Element:li
										Element:a
											Creating thumbnails
										Element:li
										Element:a
											HTTP Live Streaming
										Element:li
										Element:a
											Receiving Webhooks
										Element:li
										Element:a
											Sample
										Element:li
										Element:span
											References
										Element:ul
										Element:li
										Element:a
											Supported CDN
										Element:li
										Element:a
											Format Specs
										Element:li
										Element:a
											Libraries
										Element:li
										Element:a
											Error codes
									Node:
									(type) c
									(layer)3
										Element:hr
