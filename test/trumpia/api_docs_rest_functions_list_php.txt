Node:
(type) c
(layer)0
	Element:body
									Node:
									(type) h3
									(layer)3
										Element:h3
											Login
									Node:
									(type) c
									(layer)3
										Element:strong
											Warning!
									Node:
									(type) c
									(layer)3
										Element:span
											The email address, username, or password is incorrect. Please note that your password is case-sensitive.
									Node:
									(type) c
									(layer)3
										Element:label
											Username or Email
											Please enter your username or e-mail address.
									Node:
									(type) c
									(layer)3
										Element:label
											Password
											Please enter your password.
									Node:
									(type) c
									(layer)3
										Element:label
											Remember Me
									Node:
									(type) c
									(layer)3
										Element:a
											Forgot Password?
									Node:
									(type) h3
									(layer)3
										Element:h3
											Forgot your password?
											Please enter your username or email address that you signed up with.
									Node:
									(type) c
									(layer)3
										Element:label
											Username or Email
											Username for Password Please enter your username or e-mail address.
									Node:
									(type) c
									(layer)3
										Element:a
											LOGIN
									Node:
									(type) c
									(layer)3
										Element:a
											NAV
										Element:img
										Element:img
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Comparison
										Element:li
										Element:a
											REST
										Element:span
										Element:ul
										Element:li
										Element:a
											Overview
										Element:li
										Element:a
											Functions
										Element:span
										Element:ul
										Element:li
										Element:a
											List
										Element:li
										Element:a
											Subscription
										Element:li
										Element:a
											Custom Data Field
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Keyword
										Element:li
										Element:a
											Publication
										Element:li
										Element:a
											Resource Balance
										Element:li
										Element:a
											Organization Name
										Element:li
										Element:a
											Social Media Account
										Element:li
										Element:a
											Email Sender Address
										Element:li
										Element:a
											Status Report
										Element:li
										Element:a
											PUSH Notifications
										Element:span
										Element:ul
										Element:li
										Element:a
											List
										Element:li
										Element:a
											Subscription
										Element:li
										Element:a
											Custom Data Field
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Keyword
										Element:li
										Element:a
											Publication
										Element:li
										Element:a
											Organization Name
										Element:li
										Element:a
											Social Media Account
										Element:li
										Element:a
											Email Sender Address
										Element:li
										Element:a
											System Status Codes
										Element:span
										Element:ul
										Element:li
										Element:a
											Common
										Element:li
										Element:a
											List
										Element:li
										Element:a
											Subscription
										Element:li
										Element:a
											Custom Data Field
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Keyword
										Element:li
										Element:a
											Publication
										Element:li
										Element:a
											Organization Name
										Element:li
										Element:a
											Social Media Account
										Element:li
										Element:a
											Email Sender Address
										Element:li
										Element:a
											Status Report
										Element:li
										Element:a
											HTTP
										Element:span
										Element:ul
										Element:li
										Element:a
											Overview
										Element:li
										Element:a
											Functions
										Element:span
										Element:ul
										Element:li
										Element:a
											List
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Keyword
										Element:li
										Element:a
											Check Response
										Element:li
										Element:a
											PUSH Notifications
										Element:span
										Element:ul
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											System Status Codes
										Element:span
										Element:ul
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											SDK
										Element:span
										Element:ul
										Element:li
										Element:a
											SDK Overview
										Element:li
										Element:a
											Setting Up SDK
										Element:li
										Element:a
											API Request via SDK
										Element:span
										Element:ul
										Element:li
										Element:a
											Distribution List API
										Element:li
										Element:a
											Subscription API
										Element:li
										Element:a
											Message API
										Element:li
										Element:a
											Receiving Push
										Element:br
											Notification via SDK
										Element:span
										Element:ul
										Element:li
										Element:a
											Distribution List
										Element:li
										Element:a
											Subscription
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Receiving Inbound Message
										Element:li
										Element:a
											Additional Resources
										Element:span
										Element:ul
										Element:li
										Element:a
											API Settings
										Element:li
										Element:a
											Text Delivery Reports
										Element:li
										Element:a
											Email Delivery Reports
										Element:li
										Element:a
											Supported Message Characters
										Element:li
										Element:a
											Supported MMS Types
										Element:li
										Element:a
											URL Encoded Characters
									Node:
									(type) c
									(layer)3
										Element:span
											REST
											>
									Node:
									(type) c
									(layer)3
										Element:a
											Functions
											>
									Node:
									(type) c
									(layer)3
										Element:a
											List
											>
									Node:
									(type) c
									(layer)3
										Element:a
											On This Page
									Node:
									(type) c
									(layer)3
										Element:ul
									Node:
									(type) c
									(layer)3
										Element:span
									Node:
									(type) c
									(layer)3
										Element:a
									Node:
									(type) h3
									(layer)3
										Element:h3
											List
										Element:span
											(Last Updated : 01/04/2017)
									Node:
									(type) c
									(layer)3
										Element:p
											A distribution list enables you to create a specific group of subscriptions. The list can then be used for targeted messaging or marketing campaigns, which means you are reaching only the most relevant subscribers.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Methods
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:tbody
										Element:tr
										Element:td
											PUT
										Element:td
										Element:code
											/rest/v1/{user_name}/list
										Element:tr
										Element:td
											GET
										Element:td
										Element:code
											/rest/v1/{user_name}/list
										Element:tr
										Element:td
											GET
										Element:td
										Element:code
											/rest/v1/{user_name}/list/{list_id}
										Element:tr
										Element:td
											POST
										Element:td
										Element:code
											/rest/v1/{user_name}/list/{list_id}
										Element:tr
										Element:td
											DELETE
										Element:td
										Element:code
											/rest/v1/{user_name}/list/{list_id}
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														PUT List
												Node:
												(type) c
												(layer)4
													Element:p
														Create a distribution list by setting details such as list name, display name, frequency, and a description of the list. Upon submitting your request, the request ID and list ID will be returned so that you can track the request. After your request has been completely processed, a PUSH Notification will be sent to you indicating the success or failure of the request.
												Node:
												(type) c
												(layer)4
													Element:p
														Once a distribution list is created, you can then add subscriptions to it by using the
													Element:a
														PUT Subscription
														request.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Resource Information
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:td
														Response Formats
													Element:td
														JSON
													Element:tr
													Element:td
														Allowed Methods
													Element:td
														PUT
													Element:tr
													Element:td
														URL
													Element:td
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/list
													Element:tr
													Element:td
														{user_name}
													Element:td
														Your account username (this can be found in the Account Settings page after logging in.)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Header Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Content-Type
													Element:span
														&ast;
													Element:td
														application/json
													Element:tr
													Element:td
														X-Apikey
													Element:span
														&ast;
													Element:td
														Your API key (This can be found in the API Settings page after logging in.)
													Element:br
													Element:br
														Example value: 123456789abc1011
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Body Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														list_name
													Element:span
														&ast;
													Element:td
														The name of the distribution list.
													Element:br
													Element:br
														Example value: GeneralList
													Element:tr
													Element:td
														display_name
													Element:span
														&ast;
													Element:td
														The display name will be the name that your subscribers will see when signing up for your distribution list. As this name is public, make sure it makes sense to your future subscribers. There is a 50-character limit.
													Element:br
													Element:br
														Example value: GeneralList
													Element:tr
													Element:td
														frequency
													Element:span
														&ast;
													Element:td
														The frequency of messages your subscribers receive each month must be disclosed, according to mobile industry regulations. The maximum value is 999.
													Element:br
													Element:br
														Example value: 4
													Element:tr
													Element:td
														description
													Element:span
														&ast;
													Element:td
														The description of what types of messages your subscribers will receive when they opt in to this list must be disclosed. There is a 20-character limit.
													Element:br
													Element:br
														Example value: promo alerts
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Code sample for PUT List
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														"Request Example: PUT http://api.trumpia.com/rest/v1/{user_name}/list"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"list_name"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"listname0001"
													Element:span
														,
													Element:span
													Element:span
														"display_name"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"display name"
													Element:span
														,
													Element:span
													Element:span
														"frequency"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"2"
													Element:span
														,
													Element:span
													Element:span
														"description"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"test list"
													Element:span
													Element:span
														}
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"request_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"1234561234567asdf123"
													Element:span
														,
													Element:span
													Element:span
														"list_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"987987987980"
													Element:span
													Element:span
														}
													Element:span
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<? //PUT List - Create a distribution list. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/list"; $request_data = array( "list_name" => "listname0001", "display_name" => "testlist", "frequency" => "2", "description" => "test description" ); $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setRequestBody(json_encode($request_data)); $request_rest->setMethod("PUT"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success $response_data = json_decode($json_response_data); echo "request_id : " . $response_data->request_id . "<br>"; echo "list_id : " . $response_data->list_id; } else { echo $response_status ." - connection failure"; } ?>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														//PUT List - Create a distribution list. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>List Put Sample Code</title> <body> <% String username = "username"; String listName = "listname0001"; String displayName = "test display name"; String frequency = "2"; String description = "test description"; JSONObject listPut = new JSONObject(); listPut.put("list_name", listName); listPut.put("display_name", displayName); listPut.put("frequency", frequency); listPut.put("description", description); String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/list"; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestMethod("PUT"); conn.setDoOutput(true); conn.setDoInput(true); conn.setUseCaches(false); conn.setAllowUserInteraction(false); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); OutputStream outPutStream = conn.getOutputStream(); Writer writer = new OutputStreamWriter(outPutStream, "UTF-8"); writer.write(listPut.toJSONString()); writer.close(); outPutStream.close(); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														//PUT List - Create a distribution list. using Newtonsoft.Json; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class ListInfo { public string list_name { get; set; } public string display_name { get; set; } public string frequency { get; set; } public string description { get; set; } } class Result { public string request_id { get; set; } public string list_id { get; set; } } class ListPut { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; //PUT var list = new ListInfo() { list_name = "listname0001", display_name = "display name", frequency = "2", description = "test list" }; Uri postUrl = new Uri(string.Format("http://api.trumpia.com/rest/v1/{0}/list",username)); var response = client.PutAsJsonAsync(postUrl, list).Result; if(response.IsSuccessStatusCode) { var p = response.Content.ReadAsAsync<Result>().Result; string json = JsonConvert.SerializeObject(p); Console.WriteLine(json); } } } } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														GET List
												Node:
												(type) c
												(layer)4
													Element:p
														Look up basic information, like list IDs and names, of existing distribution lists, or look up detailed information from a specific distribution list.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Resource Information
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:td
														Response Formats
													Element:td
														JSON
													Element:tr
													Element:td
														Allowed Methods
													Element:td
														GET
													Element:tr
													Element:td
														URL
													Element:td
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/list
													Element:br
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/list/{list_id}
													Element:tr
													Element:td
														{user_name}
													Element:td
														Your account username (this can be found in the Account Settings page after logging in.)
													Element:tr
													Element:td
														{list_id}
													Element:td
														Get information from a specific list using the list_id.
													Element:br
													Element:br
														Example value: 12345
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Header Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Content-Type
													Element:span
														&ast;
													Element:td
														application/json
													Element:tr
													Element:td
														X-Apikey
													Element:span
														&ast;
													Element:td
														Your API key (This can be found in the API Settings page after logging in.)
													Element:br
													Element:br
														Example value: 123456789abc1011
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Code sample for GET List
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														"Request Example (all lists): GET http://api.trumpia.com/rest/v1/{user_name}/list"
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"list"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"list_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"987987987980"
													Element:span
														,
													Element:span
													Element:span
														"list_name"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"listname0001"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"list_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"987987987981"
													Element:span
														,
													Element:span
													Element:span
														"list_name"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"listname0002"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"list_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"987987987982"
													Element:span
														,
													Element:span
													Element:span
														"list_name"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"listname0003"
													Element:span
													Element:span
														}
													Element:span
													Element:span
														]
													Element:span
													Element:span
														}
													Element:span
													Element:span
														"Request Example (of a specific list): GET http://api.trumpia.com/rest/v1/{user_name}/list/{list_id}"
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"display_name"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"display name"
													Element:span
														,
													Element:span
													Element:span
														"description"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"test list"
													Element:span
														,
													Element:span
													Element:span
														"list_name"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"listname0001"
													Element:span
														,
													Element:span
													Element:span
														"frequency"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"2"
													Element:span
														,
													Element:span
													Element:span
														"subscription_count"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"0"
													Element:span
														,
													Element:span
													Element:span
														"mobile_count"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"0"
													Element:span
														,
													Element:span
													Element:span
														"im_count"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"0"
													Element:span
														,
													Element:span
													Element:span
														"email_count"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"0"
													Element:span
													Element:span
														}
													Element:span
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<? //GET List - Retrieve all distribution lists. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/list"; $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setMethod("GET"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success echo $json_response_data; } else { echo $response_status ." - connection failure"; } ?> <? //GET List - Retrieve a distribution list by ID. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/list"; $list_id = "987987987980"; $request_url = $request_url . "/" . $list_id; $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setMethod("GET"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success echo $json_response_data; } else { echo $response_status ." - connection failure"; } ?>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														//GET List - Retrieve all distribution lists. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>List Get All Sample Code</title> <body> <% String username = "username"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/list"; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html> //GET List - Retrieve a distribution list by ID. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>List Get By Id Sample Code</title> <body> <% String username = "username"; String listId = "987987987980"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/list/" + listId; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														//GET List - Retrieve all distribution lists. using Newtonsoft.Json; using Newtonsoft.Json.Linq; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace sampleCode { class ListInfo { public JArray list { get; set; } } class ListGet { static void Main(string[] args) { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.BaseAddress = new Uri("http://api.trumpia.com"); client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; //GET HttpResponseMessage response = await client.GetAsync(string.Format("/rest/v1/{0}/list",username)); if (response.IsSuccessStatusCode) { ListInfo listInfo = await response.Content.ReadAsAsync<ListInfo>(); string json = JsonConvert.SerializeObject(listInfo); Console.WriteLine(json); } } } } } //GET List - Retrieve a distribution list by ID. using Newtonsoft.Json; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class ListInfo { public string list_name { get; set; } public string display_name { get; set; } public string frequency { get; set; } public string description { get; set; } public string subscription_count { get; set; } public string mobile_count { get; set; } public string email_count { get; set; } public string im_count { get; set; } } class ListDetailGet { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.BaseAddress = new Uri("http://api.trumpia.com"); client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; var listId = "987987987980"; //GET HttpResponseMessage response = await client.GetAsync(string.Format("/rest/v1/{0}/list/{1}", username, listId)); if (response.IsSuccessStatusCode) { ListInfo listInfo = await response.Content.ReadAsAsync<ListInfo>(); string json = JsonConvert.SerializeObject(listInfo); Console.WriteLine(json); } } } } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														POST List
												Node:
												(type) c
												(layer)4
													Element:p
														Update the information, including the name, display name, frequency, and description, of a specific distribution list.
												Node:
												(type) c
												(layer)4
													Element:aside
														You will only need to include parameters that will be updated. Be sure to include existing and new values. Parameters that will remain the same value can be excluded.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Resource Information
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:td
														Response Formats
													Element:td
														JSON
													Element:tr
													Element:td
														Allowed Methods
													Element:td
														POST
													Element:tr
													Element:td
														URL
													Element:td
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/list/{list_id}
													Element:tr
													Element:td
														{user_name}
													Element:td
														Your account username (this can be found in the Account Settings page after logging in.)
													Element:tr
													Element:td
														{list_id}
													Element:td
														list_id of list being updated.
													Element:br
													Element:br
														Example value: 12345
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Header Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Content-Type
													Element:span
														&ast;
													Element:td
														application/json
													Element:tr
													Element:td
														X-Apikey
													Element:span
														&ast;
													Element:td
														Your API key (This can be found in the API Settings page after logging in.)
													Element:br
													Element:br
														Example value: 123456789abc1011
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Body Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														list_name
													Element:td
														The name of your distribution list that has been previously created. This is the list to which the subscriber will be added.
													Element:br
													Element:br
														Example value: GeneralList
													Element:tr
													Element:td
														display_name
													Element:td
														The display name will be the name that your subscribers will see when signing up for your distribution list. As this name is public, make sure it makes sense to your future subscribers. There is a 50-character limit.
													Element:br
													Element:br
														Example value: GeneralList
													Element:tr
													Element:td
														frequency
													Element:td
														The frequency of messages your subscribers receive each month must be disclosed, according to mobile industry regulations. The maximum value is 999.
													Element:br
													Element:br
														Example value: 4
													Element:tr
													Element:td
														description
													Element:td
														The description of what types of messages your subscribers will receive when they opt in to this list must be disclosed. There is a 20-character limit.
													Element:br
													Element:br
														Example value: promo alerts
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Code sample for POST List
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														"Request Example: POST http://api.trumpia.com/rest/v1/{user_name}/list/{list_id}"
														{
													Element:span
														"list_name"
														:
													Element:span
														"listname0001"
														,
													Element:span
														"display_name"
														:
													Element:span
														"display name"
														,
													Element:span
														"frequency"
														:
													Element:span
														"2"
														,
													Element:span
														"description"
														:
													Element:span
														"test list"
														}
													Element:span
														"Response Example:"
														{
													Element:span
														"request_id"
														:
													Element:span
														"1234561234567asdf123"
														}
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<? //POST List - Update a distribution list. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/list"; $list_id = "588889"; $request_url = $request_url . "/" . $list_id; $request_data = array( "list_name" => "12345", "display_name" => "testlist2", "frequency" => "20", "description" => "test description" ); $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setRequestBody(json_encode($request_data)); $request_rest->setMethod("POST"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success $response_data = json_decode($json_response_data); echo "request_id : " . $response_data->request_id . "<br>"; } else { echo $response_status ." - connection failure"; } ?>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														//POST List - Update a distribution list. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>List Post Sample Code</title> <body> <% String username = "username"; String listId = "987987987980"; String listName = "listname0001"; String displayName = "test display name"; String frequency = "2"; String description = "test description"; JSONObject listPost = new JSONObject(); listPost.put("list_name", listName); listPost.put("display_name", displayName); listPost.put("frequency", frequency); listPost.put("description", description); String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/list/" + listId; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestMethod("POST"); conn.setDoOutput(true); conn.setDoInput(true); conn.setUseCaches(false); conn.setAllowUserInteraction(false); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); OutputStream outPutStream = conn.getOutputStream(); Writer writer = new OutputStreamWriter(outPutStream, "UTF-8"); writer.write(listPost.toJSONString()); writer.close(); outPutStream.close(); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														//POST List - Update a distribution list. using Newtonsoft.Json; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class ListInfo { public string list_name { get; set; } public string display_name { get; set; } public string frequency { get; set; } public string description { get; set; } } class Result { public string request_id { get; set; } } class ListPost { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; var listId = "987987987980"; //POST var list = new ListInfo() { list_name = "listname0001", display_name = "display name", frequency = "2", description = "test list" }; Uri postUrl = new Uri(string.Format("http://api.trumpia.com/rest/v1/{0}/list/{1}", username, listId)); var response = client.PostAsJsonAsync(postUrl, list).Result; if (response.IsSuccessStatusCode) { var p = response.Content.ReadAsAsync<Result>().Result; string json = JsonConvert.SerializeObject(p); Console.WriteLine(json); } } } } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														DELETE List
												Node:
												(type) c
												(layer)4
													Element:p
														Permanently remove a distribution list.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Resource Information
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:td
														Response Formats
													Element:td
														JSON
													Element:tr
													Element:td
														Allowed Methods
													Element:td
														DELETE
													Element:tr
													Element:td
														URL
													Element:td
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/list/{list_id}
													Element:tr
													Element:td
														{user_name}
													Element:td
														Your account username (this can be found in the Account Settings page after logging in.)
													Element:tr
													Element:td
														{list_id}
													Element:td
														list_id of list being deleted.
													Element:br
													Element:br
														Example value: 12345
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Header Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Content-Type
													Element:span
														&ast;
													Element:td
														application/json
													Element:tr
													Element:td
														X-Apikey
													Element:span
														&ast;
													Element:td
														Your API key (This can be found in the API Settings page after logging in.)
													Element:br
													Element:br
														Example value: 123456789abc1011
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Code sample for DELETE List
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														"Request Example: DELETE http://api.trumpia.com/rest/v1/{user_name}/list/{list_id}"
													Element:span
														"Response Example:"
														{
													Element:span
														"request_id"
														:
													Element:span
														"1234561234567asdf123"
														}
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<? //list DELETE include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/list"; $list_id = "987987987980"; $request_url = $request_url . "/" . $list_id; $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setMethod("DELETE"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success echo $json_response_data; } else { echo $response_status ." - connection failure"; } ?>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														//DELETE List - Delete a distribution list. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>List Delete Sample Code</title> <body> <% String username = "username"; String listId = "987987987980"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/list/" + listId; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestMethod("DELETE"); conn.setDoOutput(true); conn.setAllowUserInteraction(false); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														//DELETE List - Delete a distribution list. using Newtonsoft.Json; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class Result { public string request_id { get; set; } } class ListDelete { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; var listId = "987987987980"; //DELETE Uri deleteUrl = new Uri(string.Format("http://api.trumpia.com/rest/v1/{0}/list/{1}", username, listId)); var response = client.DeleteAsync(deleteUrl).Result; if (response.IsSuccessStatusCode) { var p = response.Content.ReadAsAsync<Result>().Result; string json = JsonConvert.SerializeObject(p); Console.WriteLine(json); } } } } }
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:a
														SOURCE COPY
												Node:
												(type) c
												(layer)4
													Element:footer
														Trumpia is a DBA of DoCircle, Inc. All rights reserved.
													Element:br
														*Message and data rates may apply.
													Element:strong
													Element:a
														1-888-707-3030
													Element:span
														1-888-707-3030
														/ support@trumpia.com
													Element:br
														6:00 AM - 6:00 PM Pacific (Weekdays) / 8:00 AM - 4:00 PM Pacific (Weekend)
													Element:a
													Element:span
													Element:br
														Go to top
												Node:
												(type) c
												(layer)4
													Element:noscript
													Element:img
