Node:
(type) c
(layer)0
	Element:body
									Node:
									(type) h3
									(layer)3
										Element:h3
											Login
									Node:
									(type) c
									(layer)3
										Element:strong
											Warning!
									Node:
									(type) c
									(layer)3
										Element:span
											The email address, username, or password is incorrect. Please note that your password is case-sensitive.
									Node:
									(type) c
									(layer)3
										Element:label
											Username or Email
											Please enter your username or e-mail address.
									Node:
									(type) c
									(layer)3
										Element:label
											Password
											Please enter your password.
									Node:
									(type) c
									(layer)3
										Element:label
											Remember Me
									Node:
									(type) c
									(layer)3
										Element:a
											Forgot Password?
									Node:
									(type) h3
									(layer)3
										Element:h3
											Forgot your password?
											Please enter your username or email address that you signed up with.
									Node:
									(type) c
									(layer)3
										Element:label
											Username or Email
											Username for Password Please enter your username or e-mail address.
									Node:
									(type) c
									(layer)3
										Element:a
											LOGIN
									Node:
									(type) c
									(layer)3
										Element:a
											NAV
										Element:img
										Element:img
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Comparison
										Element:li
										Element:a
											REST
										Element:span
										Element:ul
										Element:li
										Element:a
											Overview
										Element:li
										Element:a
											Functions
										Element:span
										Element:ul
										Element:li
										Element:a
											List
										Element:li
										Element:a
											Subscription
										Element:li
										Element:a
											Custom Data Field
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Keyword
										Element:li
										Element:a
											Publication
										Element:li
										Element:a
											Resource Balance
										Element:li
										Element:a
											Organization Name
										Element:li
										Element:a
											Social Media Account
										Element:li
										Element:a
											Email Sender Address
										Element:li
										Element:a
											Status Report
										Element:li
										Element:a
											PUSH Notifications
										Element:span
										Element:ul
										Element:li
										Element:a
											List
										Element:li
										Element:a
											Subscription
										Element:li
										Element:a
											Custom Data Field
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Keyword
										Element:li
										Element:a
											Publication
										Element:li
										Element:a
											Organization Name
										Element:li
										Element:a
											Social Media Account
										Element:li
										Element:a
											Email Sender Address
										Element:li
										Element:a
											System Status Codes
										Element:span
										Element:ul
										Element:li
										Element:a
											Common
										Element:li
										Element:a
											List
										Element:li
										Element:a
											Subscription
										Element:li
										Element:a
											Custom Data Field
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Keyword
										Element:li
										Element:a
											Publication
										Element:li
										Element:a
											Organization Name
										Element:li
										Element:a
											Social Media Account
										Element:li
										Element:a
											Email Sender Address
										Element:li
										Element:a
											Status Report
										Element:li
										Element:a
											HTTP
										Element:span
										Element:ul
										Element:li
										Element:a
											Overview
										Element:li
										Element:a
											Functions
										Element:span
										Element:ul
										Element:li
										Element:a
											List
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Keyword
										Element:li
										Element:a
											Check Response
										Element:li
										Element:a
											PUSH Notifications
										Element:span
										Element:ul
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											System Status Codes
										Element:span
										Element:ul
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											SDK
										Element:span
										Element:ul
										Element:li
										Element:a
											SDK Overview
										Element:li
										Element:a
											Setting Up SDK
										Element:li
										Element:a
											API Request via SDK
										Element:span
										Element:ul
										Element:li
										Element:a
											Distribution List API
										Element:li
										Element:a
											Subscription API
										Element:li
										Element:a
											Message API
										Element:li
										Element:a
											Receiving Push
										Element:br
											Notification via SDK
										Element:span
										Element:ul
										Element:li
										Element:a
											Distribution List
										Element:li
										Element:a
											Subscription
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Receiving Inbound Message
										Element:li
										Element:a
											Additional Resources
										Element:span
										Element:ul
										Element:li
										Element:a
											API Settings
										Element:li
										Element:a
											Text Delivery Reports
										Element:li
										Element:a
											Email Delivery Reports
										Element:li
										Element:a
											Supported Message Characters
										Element:li
										Element:a
											Supported MMS Types
										Element:li
										Element:a
											URL Encoded Characters
									Node:
									(type) c
									(layer)3
										Element:span
											REST
											>
									Node:
									(type) c
									(layer)3
										Element:a
											Functions
											>
									Node:
									(type) c
									(layer)3
										Element:a
											Subscription
											>
									Node:
									(type) c
									(layer)3
										Element:a
											On This Page
									Node:
									(type) c
									(layer)3
										Element:ul
									Node:
									(type) c
									(layer)3
										Element:span
									Node:
									(type) c
									(layer)3
										Element:a
									Node:
									(type) h3
									(layer)3
										Element:h3
											Subscription
										Element:span
											(Last Updated : 01/04/2017)
									Node:
									(type) c
									(layer)3
										Element:p
											Add subscriptions into distribution lists. Store name, mobile numbers, landline, email addresses, and custom data for each subscription.
									Node:
									(type) c
									(layer)3
										Element:aside
											It is important to note that all API users, whether on a paid basis or not, must comply with our Terms of Use, industry privacy regulations, and all applicable law including, but not limited to, the TCPA, CAN-SPAM Act, and the CTIA Short Code Monitoring Handbook. Subscriptions should be added only with the express consent of subscribers, and subscribers should be given permission to opt-out, which is enabled by default with the platform.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Methods
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:tbody
										Element:tr
										Element:td
											PUT
										Element:td
										Element:code
											/rest/v1/{user_name}/subscription
										Element:tr
										Element:td
											GET
										Element:td
										Element:code
											/rest/v1/{user_name}/subscription
										Element:tr
										Element:td
											GET
										Element:td
										Element:code
											/rest/v1/{user_name}/subscription/{subscription_id}
										Element:tr
										Element:td
											GET
										Element:td
										Element:code
											/rest/v1/{user_name}/subscription/search
										Element:tr
										Element:td
											POST
										Element:td
										Element:code
											/rest/v1/{user_name}/subscription/{subscription_id}
										Element:tr
										Element:td
											DELETE
										Element:td
										Element:code
											/rest/v1/{user_name}/subscription/{subscription_id}
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														PUT Subscription
												Node:
												(type) c
												(layer)4
													Element:p
														Create a subscription record for a subscriber. A unique mobile number, landline, or email address is required for a new subscription. This record is required for sending messages to the subscriber and for most API requests.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Resource Information
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:td
														Response Formats
													Element:td
														JSON
													Element:tr
													Element:td
														Allowed Methods
													Element:td
														PUT
													Element:tr
													Element:td
														URL
													Element:td
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/subscription
													Element:tr
													Element:td
														{user_name}
													Element:td
														Your account username (this can be found in the Account Settings page after logging in.)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Header Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Content-Type
													Element:span
														&ast;
													Element:td
														application/json
													Element:tr
													Element:td
														X-Apikey
													Element:span
														&ast;
													Element:td
														Your API key (This can be found in the API Settings page after logging in.)
													Element:br
													Element:br
														Example value: 123456789abc1011
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Body Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														list_name
													Element:span
														&ast;
													Element:td
														The name of your distribution list that has been previously created. This is the list to which the subscriber will be added.
													Element:tr
													Element:td
														subscriptions
													Element:span
														&ast;
													Element:td
														Subscriptions information must be provided for at least one of the following keys. See Subscription Object table below.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														> Subscription Object
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														first_name
													Element:td
														First name of subscription.
													Element:tr
													Element:td
														last_name
													Element:td
														Last name of subscription.
													Element:tr
													Element:td
														voice_device
													Element:td
														If the subscription needs to be reached out via voice, voice_device has to be specified. If voice_device is not specified, a voice message cannot be sent to the subscription.
													Element:br
													Element:br
													Element:em
														Note: Supported countries for voice are US, Canada, Guam and Puerto Rico.
													Element:br
													Element:br
														The possible values for voice_device are 'Landline' and 'Mobile' . When you set the voice_device attribute, you must also register the respective landline or mobile information. For example, if you register the mobile number instead of landline and set voice_device to 'Landline', then the voice message cannot be sent.
													Element:tr
													Element:td
														email
													Element:td
														Email address of the subscription.
													Element:tr
													Element:td
														mobile
													Element:td
														See Mobile Object table below.
													Element:tr
													Element:td
														landline
													Element:td
														See Landline Object table below.
													Element:tr
													Element:td
														customdata
													Element:td
														Add custom data such as birthday, age, etc. This is created using
													Element:a
														PUT Custom Data Field
														. Existing customdata_ids can be found using
													Element:a
														GET Custom Data Field
														. See Custom Data Object table below.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														>> Mobile Object
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														number
													Element:span
														&ast;
													Element:td
														Mobile phone number.
													Element:tr
													Element:td
														country_code
													Element:td
														Country code of the number.
													Element:br
													Element:br
														Default value: 1
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														>> Landline Object
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														number
													Element:span
														&ast;
													Element:td
														Landline phone number.
													Element:tr
													Element:td
														country_code
													Element:td
														Country code of the number.
													Element:br
													Element:br
														Default value: 1
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														>> Custom Data Object
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														customdata_id
													Element:span
														&ast;
													Element:td
														Custom data field ID.
													Element:tr
													Element:td
														value
													Element:span
														&ast;
													Element:td
														Custom data value. There are basic, differing restrictions for each type of custom data field.
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Field Type
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Text Field
													Element:td
														This must contain only alphanumeric characters. You can get max_length via GET Custom Data Field.
													Element:tr
													Element:td
														Radio Button
													Element:td
														Enter a fixed value. You can get the fixed value via GET Custom Data Field.
													Element:tr
													Element:td
														Drop-down List
													Element:td
														Enter a fixed value. You can get the fixed value via GET Custom Data Field.
													Element:tr
													Element:td
														Date & Time
													Element:td
														Enter the value with this format:
													Element:br
														- Date only Case : YYYY-MM-DD
													Element:br
														- Date & Time Case : YYYY-MM-DD hh:mm:ss
													Element:tr
													Element:td
														Text Area
													Element:td
														This must contain only alphanumeric characters. Max_length is 4000 characters.
													Element:tr
													Element:td
														Number
													Element:td
														This must contain only numeric characters. You can get min and max value via GET Custom Data Field.
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Code sample for PUT Subscription
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														"Request Example: PUT http://api.trumpia.com/rest/v1/{user_name}/subscription"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"list_name"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"listname0001,listname0002,listname0003"
													Element:span
														,
													Element:span
													Element:span
														"subscriptions"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"first_name"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"Subscriber's First Name"
													Element:span
														,
													Element:span
													Element:span
														"last_name"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"Subscriber's Last Name"
													Element:span
														,
													Element:span
													Element:span
														"email"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"subscriber_email0001@api.trumpia.com"
													Element:span
														,
													Element:span
													Element:span
														"mobile"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"number"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"2003004000"
													Element:span
														,
													Element:span
													Element:span
														"country_code"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"1"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"voice_device"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"mobile"
													Element:span
														,
													Element:span
													Element:span
														"customdata"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"customdata_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														987987987987
													Element:span
														,
													Element:span
													Element:span
														"value"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"Apple"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"customdata_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														987987987980
													Element:span
														,
													Element:span
													Element:span
														"value"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"2014-10-10 00:00:01"
													Element:span
													Element:span
														}
													Element:span
													Element:span
														]
													Element:span
													Element:span
														},
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"first_name"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"Subscriber's First Name02"
													Element:span
														,
													Element:span
													Element:span
														"email"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"subscriber_email0002@api.trumpia.com"
													Element:span
														,
													Element:span
													Element:span
														"landline"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"number"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"3004005000"
													Element:span
														,
													Element:span
													Element:span
														"country_code"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"1"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"voice_device"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"landline"
													Element:span
													Element:span
														}
													Element:span
													Element:span
														]
													Element:span
													Element:span
														}
													Element:span
													Element:span
														"Example response:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"request_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"1234561234567asdf123"
													Element:span
													Element:span
														}
													Element:span
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<? // PUT Subscription - Create one or multiple subscriptions. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/subscription"; $request_data = array( "list_name" => "listname0001", "subscriptions" => array( array( "first_name" => "Subscriber's First Name", "last_name" => "Subscriber's Last Name", "email" => "subscriber_email0001@trumpia.com", "aim" => "aimname", "mobile" => array("number" => "2003004000", "country_code" => "1"), "landline" => array("number" => "3004005000", "country_code" => "1"), "voice_device" => "mobile", "customdata" => array( array( "customdata_id" => "987987987989", "value" => "Customdata value", ) ) ), array( "first_name" => "Subscriber's First Name02", "last_name" => "Subscriber's Last Name02", "email" => "subscriber_email0002@trumpia.com", "aim" => "aimname02", "mobile" => array("number"=>"2003004001", "country_code" => "1"), "landline" => array("number"=>"3004005001", "country_code" => "1"), "voice_device" => "landline" ) ) ); $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setRequestBody(json_encode($request_data)); $request_rest->setMethod("PUT"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success $response_data = json_decode($json_response_data); echo "request_id : " . $response_data->request_id; } else { echo $response_status ." - connection failure"; } ?>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// PUT Subscription - Create one or multiple subscriptions. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>Subscription Put Sample Code</title> <body> <% String username = "username"; JSONObject mobile = new JSONObject(); mobile.put("number", "2003004000"); mobile.put("country_code", "1"); JSONObject landline = new JSONObject(); landline.put("number", "3004005000"); landline.put("country_code", "1"); JSONObject customData = new JSONObject(); customData.put("customdata_id", "987987987987"); customData.put("value", "Customdata value"); JSONArray customDataArray = new JSONArray(); customDataArray.add(customData); JSONArray subscriptions = new JSONArray(); JSONObject subscription = new JSONObject(); subscription.put("first_name", "FirstName"); subscription.put("last_name", "LastName"); subscription.put("email", "test@email.com"); subscription.put("aim", "aimname"); subscription.put("mobile", mobile); subscription.put("landline", landline); subscription.put("voice_device", "mobile"); subscription.put("customdata", customDataArray); subscriptions.add(subscription); JSONObject subscriptionPut = new JSONObject(); subscriptionPut.put("list_name", "listname0001"); subscriptionPut.put("subscriptions", subscriptions); String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/subscription"; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestMethod("PUT"); conn.setDoOutput(true); conn.setDoInput(true); conn.setUseCaches(false); conn.setAllowUserInteraction(false); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); OutputStream outPutStream = conn.getOutputStream(); Writer writer = new OutputStreamWriter(outPutStream, "UTF-8"); writer.write(subscriptionPut.toJSONString()); writer.close(); outPutStream.close(); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// PUT Subscription - Create one or multiple subscriptions. using Newtonsoft.Json; using Newtonsoft.Json.Linq; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class SubscriptionInfo { public string list_name { get; set; } public JArray subscriptions { get; set; } } class Result { public string request_id { get; set; } } class SubscriptionPut { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; //PUT JObject subscription = new JObject(); subscription.Add("first_name", "Subscriber's First Name"); subscription.Add("last_name", "Subscriber's Last Name"); subscription.Add("email", "subscriber_email0001@trumpia.com"); subscription.Add("aim", "aimname"); JObject mobile = new JObject(); mobile.Add("number", "2003004000"); mobile.Add("country_code", "1"); subscription.Add("mobile", mobile); JObject landline = new JObject(); landline.Add("number", "3004005000"); landline.Add("country_code", "1"); subscription.Add("landline", landline); JObject customData = new JObject(); customData.Add("customdata_id", "987987987989"); customData.Add("value", "Customdata value"); JArray customDataArray = new JArray(); customDataArray.Add(customData); subscription.Add("customdata", customDataArray); JArray array = new JArray(); array.Add(subscription); var info = new SubscriptionInfo() { list_name = "listname0001", subscriptions = array }; Uri postUrl = new Uri(string.Format("http://api.trumpia.com/rest/v1/{0}/subscription", username)); var response = client.PutAsJsonAsync(postUrl, info).Result; if (response.IsSuccessStatusCode) { var p = response.Content.ReadAsAsync<Result>().Result; string json = JsonConvert.SerializeObject(p); Console.WriteLine(json); } } } } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														GET Subscription
												Node:
												(type) c
												(layer)4
													Element:p
														Look up basic information, like list IDs and names, of existing distribution lists, or look up detailed information from a specific distribution list.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Resource Information
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:td
														Response Formats
													Element:td
														JSON
													Element:tr
													Element:td
														Allowed Methods
													Element:td
														GET
													Element:tr
													Element:td
														URL
													Element:td
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/subscription
													Element:br
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/subscription/{subscription_id}
													Element:tr
													Element:td
														{user_name}
													Element:td
														Your account username (this can be found in the Account Settings page after logging in.)
													Element:tr
													Element:td
														{subscription_id}
													Element:td
														Get the information of this subscription.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Header Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Content-Type
													Element:span
														&ast;
													Element:td
														application/json
													Element:tr
													Element:td
														X-Apikey
													Element:span
														&ast;
													Element:td
														Your API key (This can be found in the API Settings page after logging in.)
													Element:br
													Element:br
														Example value: 123456789abc1011
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Query String
												Node:
												(type) c
												(layer)4
													Element:p
														You can retrieve a full set or a subset of subscriptions. They will be in descending order by created date. You can also get a partial set of subscribers using the row_size and page parameters.
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														row_size
													Element:td
														The number of subscription ID’s you want to retrieve. Entered value can only be a numeric value between 100 and 10000.
													Element:br
													Element:br
														Default value: 100
													Element:tr
													Element:td
														page
													Element:td
														You can receive a partial set of subscriptions in descending order by created date.
													Element:br
													Element:br
														Default value: 1
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Code sample for GET Subscription
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														"Request Example: (with row_size and page)"
													Element:span
													Element:span
														"GET http://api.trumpia.com/rest/v1/{user_name}/subscription?row_size=100&page=3"
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"subscription_id_list"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														"987987987980"
													Element:span
														,
													Element:span
														"987987987981"
													Element:span
														,
													Element:span
														"987987987982","
													Element:span
														987987987988
													Element:span
														","
													Element:span
														987987987989
													Element:span
														" ] } "
													Element:span
														Request
													Element:span
													Element:span
														Example:
													Element:span
													Element:span
														for
													Element:span
													Element:span
														a
													Element:span
													Element:span
														specific
													Element:span
													Element:span
														subscription
													Element:span
														" "
													Element:span
														GET
													Element:span
													Element:span
														http://api.trumpia.com/rest/v
													Element:span
														1
													Element:span
														/
													Element:span
														{
													Element:span
														user_name
													Element:span
														}
													Element:span
														/subscription/
													Element:span
														{
													Element:span
														subscription_id
													Element:span
														}
													Element:span
														" "
													Element:span
														Response
													Element:span
													Element:span
														Example:
													Element:span
														" { "
													Element:span
														list_ids
													Element:span
														" : [ "
													Element:span
														987987987980
													Element:span
														", "
													Element:span
														987987987981
													Element:span
														", "
													Element:span
														987987987982
													Element:span
														", "
													Element:span
														987987987983
													Element:span
														" ], "
													Element:span
														created_date
													Element:span
														" : "
													Element:span
														2012-02-27
													Element:span
													Element:span
														18
													Element:span
														:
													Element:span
														05
													Element:span
														:
													Element:span
														33
													Element:span
														", "
													Element:span
														landline
													Element:span
														" : { "
													Element:span
														value
													Element:span
														" : "
													Element:span
														3004005000
													Element:span
														", "
													Element:span
														country_code
													Element:span
														" :1, "
													Element:span
														verified
													Element:span
														" : "
													Element:span
														true
													Element:span
														" }, "
													Element:span
														email
													Element:span
														" : { "
													Element:span
														value
													Element:span
														" : "
													Element:span
														subscriber_email
													Element:span
														0001
													Element:span
														@api.trumpia.com
													Element:span
														", "
													Element:span
														verified
													Element:span
														" : "
													Element:span
														true
													Element:span
														" }, "
													Element:span
														first_name
													Element:span
														" : "
													Element:span
														Subscriber's
													Element:span
													Element:span
														First
													Element:span
													Element:span
														Name
													Element:span
														", "
													Element:span
														customdata
													Element:span
														" : [ { "
													Element:span
														customdata_id
													Element:span
														" : 987987987987, "
													Element:span
														name
													Element:span
														" : "
													Element:span
														favorite
													Element:span
													Element:span
														fruit
													Element:span
														", "
													Element:span
														value
													Element:span
														" : "
													Element:span
														Apple
													Element:span
														" }, { "
													Element:span
														customdata_id
													Element:span
														" : 987987987980, "
													Element:span
														name
													Element:span
														" : "
													Element:span
														birthday
													Element:span
														", "
													Element:span
														value
													Element:span
														" : "
													Element:span
														2014-10-10
													Element:span
													Element:span
														00
													Element:span
														:
													Element:span
														00
													Element:span
														:
													Element:span
														01
													Element:span
														"
													Element:span
													Element:span
														}
													Element:span
													Element:span
														]
													Element:span
													Element:span
														}
													Element:span
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<? // GET Subscription - Retrieve all subscription. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/subscription?"; $page = 2; $row_size = 100; $request_url = $request_url . "page=" . $page . "&row_size=" . $row_size; $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setMethod("GET"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success echo $json_response_data; } else { echo $response_status ." - connection failure"; } ?> <? // GET Subscription - Retrieve a subscription by ID. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/subscription"; $subscription_id = "987987987980"; $request_url = $request_url . "/" . $subscription_id; $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setMethod("GET"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success echo $json_response_data; } else { echo $response_status ." - connection failure"; } ?>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// GET Subscription - Retrieve all subscription. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>SubscriptionGetAll Sample Code</title> <body> <% String username = "username"; int page = 2; int rowSize = 100; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/subscription?page=" + page + "&row_size=" + rowSize; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html> // GET Subscription - Retrieve a subscription by ID. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>Subscription Get By Id Sample Code</title> <body> <% String username = "username"; String subscriptionID = "987987987980"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/subscription/" + subscriptionID; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// GET Subscription - Retrieve all subscription. using Newtonsoft.Json; using Newtonsoft.Json.Linq; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class SubscriptionInfo { public JArray subscription_id_list { get; set; } } class SubscriptionGet { static void Main(string[] args) { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.BaseAddress = new Uri("http://api.trumpia.com"); client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; var page = 2; var rowSize = 100; //GET HttpResponseMessage response = await client.GetAsync(string.Format("/rest/v1/{0}/subscription?page={1}&row_size={2}", username, page, rowSize)); if (response.IsSuccessStatusCode) { SubscriptionInfo subscriptionList = await response.Content.ReadAsAsync<SubscriptionInfo>(); string json = JsonConvert.SerializeObject(subscriptionList); Console.WriteLine(json); } } } } } // GET Subscription - Retrieve a subscription by ID. using Newtonsoft.Json; using Newtonsoft.Json.Linq; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class SubscriptionInfo { public string first_name{ get; set; } public string last_name { get; set; } public string created_date { get; set; } public JObject mobile { get; set; } public JObject email { get; set; } } class SubscriptionDetailGet { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.BaseAddress = new Uri("http://api.trumpia.com"); client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; var subscriptionId = "987987987980"; //GET HttpResponseMessage response = await client.GetAsync(string.Format("/rest/v1/{0}/subscription/{1}", username, subscriptionId)); if (response.IsSuccessStatusCode) { SubscriptionInfo subscriptionInfo = await response.Content.ReadAsAsync<SubscriptionInfo>(); string json = JsonConvert.SerializeObject(subscriptionInfo); Console.WriteLine(json); } } } } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														GET Subscription (Search)
												Node:
												(type) c
												(layer)4
													Element:p
														Search for subscription IDs by various data types, including first or last name, phone number, email address, date the account was created, and more.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Resource Information
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:td
														Response Formats
													Element:td
														JSON
													Element:tr
													Element:td
														Allowed Methods
													Element:td
														GET
													Element:tr
													Element:td
														URL
													Element:td
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/subscription/search
													Element:tr
													Element:td
														{user_name}
													Element:td
														Your account username (this can be found in the Account Settings page after logging in.)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Header Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Content-Type
													Element:span
														&ast;
													Element:td
														application/json
													Element:tr
													Element:td
														X-Apikey
													Element:span
														&ast;
													Element:td
														Your API key (This can be found in the API Settings page after logging in.)
													Element:br
													Element:br
														Example value: 123456789abc1011
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Query String
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														search_type
													Element:td
														Search for the type of subscription data by setting the search_type (ie. phone number, email, first name, etc.). This will allow you to search for subscriptions that contain data for the specified type.
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														1
													Element:td
														Email
													Element:tr
													Element:td
														2
													Element:td
														Mobile
													Element:tr
													Element:td
														3
													Element:td
														Landline
													Element:tr
													Element:td
														102
													Element:td
														Country Code
													Element:tr
													Element:td
														103
													Element:td
														Created Date
													Element:tr
													Element:td
														104
													Element:td
														First Name
													Element:tr
													Element:td
														105
													Element:td
														Last Name
													Element:tr
													Element:td
														search_data
													Element:td
														Based on the search_type selected above, you must provide the appropriate data. For example, if you would like to search for a specific subscription ID by email, set search_type=1 and provide that contact's email address for search_data, such as search_data=johndoh@mail.com. If you would like to retrieve all the subscription IDs for which there are data for particular search types, for example all subscriptions with email addresses, set search_data=all. This feature only works for search types 1-4.
													Element:br
													Element:br
														For searching by created date (i.e., search_type=103), the search_data must be in the format: YYYY-MM-DD hh:mm:ss~YYYY-MM-DD hh:mm:ss (ex: 2013-03-01 13:00:00~2013-04-01 13:00:00). To search over a date range, use the character "~" between the two dates.
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														YYYY
													Element:td
														four-digit year
													Element:tr
													Element:td
														MM
													Element:td
														two-digit month (01=January, etc.)
													Element:tr
													Element:td
														DD
													Element:td
														two-digit day of month (01 through 31)
													Element:tr
													Element:td
														hh
													Element:td
														two digit hours (00 through 23; am/pm NOT allowed)
													Element:tr
													Element:td
														mm
													Element:td
														two digit minutes (00 through 59)
													Element:tr
													Element:td
														ss
													Element:td
														two digit seconds (00 through 59)
													Element:tr
													Element:td
														list_id
													Element:td
														You may limit the search to a specific distribution list.
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Code sample for GET Subscription (search)
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														"The following example includes the parameters and values necessary to search for the subscription with the email address johndoh@mail.com from the distribution list 12345. Request Example: (search for one subscription ID by email address):"
													Element:span
													Element:span
														"GET http://api.trumpia.com//rest/v1/{user_name}/subscription/search?search_type=1&search_data=johndoh@mail.com&list_id=12345"
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"subscription_id_list"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														"987987987980"
													Element:span
													Element:span
														]
													Element:span
													Element:span
														}
													Element:span
													Element:span
														"Request Example (search for all subscription ID’s by phone number): To search your entire database for all the subscriptions that have a landline phone number saved, you would submit the following call:"
													Element:span
													Element:span
														"GET http://api.trumpia.com//rest/v1/{user_name}/subscription/search?search_type=3&search_data=all"
													Element:span
													Element:span
														"Response Example: The subscription ID’s for all the relevant subscriptions will be returned:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"subscription_id_list"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														"987987987980"
													Element:span
														,
													Element:span
														"987987987981"
													Element:span
														,
													Element:span
														"987987987982"
													Element:span
														,
													Element:span
														"987987987983"
													Element:span
														,
													Element:span
														"987987987984"
													Element:span
														,
													Element:span
														"987987987985"
													Element:span
														,
													Element:span
														"987987987986"
													Element:span
														,
													Element:span
														"987987987987"
													Element:span
													Element:span
														]
													Element:span
													Element:span
														}
													Element:span
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<? // GET Search Subscription - Lookup one or multiple subscriptions. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/subscription/search?"; $search_type = "1"; $search_data = "subscriber_email0001@trumpia.com"; $list_id = "987987987980"; $request_url = $request_url . "search_type=" . $search_type . "&search_data=" . $subscription_id . "&list_id=" . $list_id; $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setMethod("GET"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success echo $json_response_data; } else { echo $response_status ." - connection failure"; } ?>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// GET Search Subscription - Lookup one or multiple subscriptions. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>SubscriptionSearchGet Sample Code</title> <body> <% String username = "username"; String searchType = "1"; String searchData = "subscriber_email0001@trumpia.com"; String listID = "987987987980"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/subscription/search?search_type=" +searchType+ "&search_data=" +searchData+ "&list_id=" + listID; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// GET Search Subscription - Lookup one or multiple subscriptions. using Newtonsoft.Json; using Newtonsoft.Json.Linq; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class SubscriptionInfo { public JArray subscription_id_list { get; set; } } class SubscriptionSearchGet { static void Main(string[] args) { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.BaseAddress = new Uri("http://api.trumpia.com"); client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; var searchType = 1; var searchData = "subscriber_email0001@trumpia.com"; var listId = "16654"; //GET HttpResponseMessage response = await client.GetAsync(string.Format("/rest/v1/{0}/subscription/search?search_type={1}&search_data={2}&list_id={3}", username, searchType, searchData, listId)); if (response.IsSuccessStatusCode) { SubscriptionInfo subscriptionList = await response.Content.ReadAsAsync<SubscriptionInfo>(); string json = JsonConvert.SerializeObject(subscriptionList); Console.WriteLine(json); } } } } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														POST Subscription
												Node:
												(type) c
												(layer)4
													Element:p
														Update the contact information, such as name, phone number, email address, and distribution list, for an existing subscription.
												Node:
												(type) c
												(layer)4
													Element:aside
														You will only need to include parameters that will be updated. Be sure to include existing and new values. Parameters that will remain the same value can be excluded.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Resource Information
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:td
														Response Formats
													Element:td
														JSON
													Element:tr
													Element:td
														Allowed Methods
													Element:td
														POST
													Element:tr
													Element:td
														URL
													Element:td
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/subscription/{subscription_id}
													Element:tr
													Element:td
														{user_name}
													Element:td
														Your account username (this can be found in the Account Settings page after logging in.)
													Element:tr
													Element:td
														{subscription_id}
													Element:td
														Subscription_id that is being edited.
													Element:br
													Element:br
														Example value: 987987987980
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Header Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Content-Type
													Element:span
														&ast;
													Element:td
														application/json
													Element:tr
													Element:td
														X-Apikey
													Element:span
														&ast;
													Element:td
														Your API key (This can be found in the API Settings page after logging in.)
													Element:br
													Element:br
														Example value: 123456789abc1011
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Body Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														list_name
													Element:td
														The name of your distribution list that has been previously created. This is the list to which the subscriber will be added.
													Element:tr
													Element:td
														subscriptions
													Element:td
														See Subscription Object table below.
													Element:br
													Element:br
													Element:i
														Note: In case you are deleting specific data from a subscription, put "delete" as the value to the desired parameter.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														> Subscription Object
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														first_name
													Element:td
														First name of subscription.
													Element:tr
													Element:td
														last_name
													Element:td
														Last name of subscription.
													Element:tr
													Element:td
														email
													Element:td
														Email address of the subscription.
													Element:tr
													Element:td
														mobile
													Element:td
														See Mobile Object table below.
													Element:tr
													Element:td
														landline
													Element:td
														See Landline Object table below.
													Element:tr
													Element:td
														customdata
													Element:td
														Add custom data such as birthday, age, etc. This is created using
													Element:a
														PUT Custom Data Field
														. Existing customdata_ids can be found using
													Element:a
														GET Custom Data Field
														. See Custom Data Object table below.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														>> Mobile Object
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														number
													Element:td
														Mobile phone number.
													Element:tr
													Element:td
														country_code
													Element:td
														Country code of the number.
													Element:br
													Element:br
														Default value: 1
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														>> Landline Object
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														number
													Element:td
														Landline phone number.
													Element:tr
													Element:td
														country_code
													Element:td
														Country code of the number.
													Element:br
													Element:br
														Default value: 1
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														>> Custom Data Object
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														customdata_id
													Element:span
														&ast;
													Element:td
														Custom data field ID.
													Element:tr
													Element:td
														value
													Element:span
														&ast;
													Element:td
														Custom data value. There are basic, differing restrictions for each type of custom data field.
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Field Type
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Text Field
													Element:td
														This must contain only alphanumeric characters. You can get max_length via GET Custom Data Field.
													Element:tr
													Element:td
														Radio Button
													Element:td
														Enter a fixed value. You can get the fixed value via GET Custom Data Field.
													Element:tr
													Element:td
														Drop-down List
													Element:td
														Enter a fixed value. You can get the fixed value via GET Custom Data Field.
													Element:tr
													Element:td
														Date & Time
													Element:td
														Enter the value with this format:
													Element:br
														- Date only Case : YYYY-MM-DD
													Element:br
														- Date & Time Case : YYYY-MM-DD hh:mm:ss
													Element:tr
													Element:td
														Text Area
													Element:td
														This must contain only alphanumeric characters. Max_length is 4000 characters.
													Element:tr
													Element:td
														Number
													Element:td
														This must contain only numeric characters. You can get min and max value via GET Custom Data Field.
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Code sample for POST Subscription
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														"Request Example: POST http://api.trumpia.com/rest/v1/{user_name}/subscription/{subscription_id}"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"list_name"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"listname0001,listname0002,listname0003"
													Element:span
														,
													Element:span
													Element:span
														"subscriptions"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"first_name"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"Subscriber's First Name"
													Element:span
														,
													Element:span
													Element:span
														"last_name"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"Subscriber's Last Name"
													Element:span
														,
													Element:span
													Element:span
														"email"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"subscriber_email0001@api.trumpia.com"
													Element:span
														,
													Element:span
													Element:span
														"aim"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"aimname"
													Element:span
														,
													Element:span
													Element:span
														"mobile"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"number"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"2003004000"
													Element:span
														,
													Element:span
													Element:span
														"country_code"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"1"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"customdata"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"customdata_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														987987987987
													Element:span
														,
													Element:span
													Element:span
														"value"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"Apple"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"customdata_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														987987987980
													Element:span
														,
													Element:span
													Element:span
														"value"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"2014-10-10 00:00:01"
													Element:span
													Element:span
														}
													Element:span
													Element:span
														]
													Element:span
													Element:span
														}
													Element:span
													Element:span
														]
													Element:span
													Element:span
														}
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"request_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"1234561234567asdf123"
													Element:span
													Element:span
														}
													Element:span
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<? // POST Subscription - Update a subscription. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/subscription"; $subscription_id = "987987987980"; $request_url = $request_url. "/". $subscription_id; $request_data = array( "list_name" => "listname0001", "subscriptions" => array( array( "first_name" => "Subscriber's First Name", "last_name" => "Subscriber's Last Name", "email" => "subscriber_email0001@trumpia.com", "aim" => "aimname", "mobile" => array("number"=>"2003004000", "country_code" => "1"), "landline" => array("number"=>"3004005000", "country_code" => "1"), "voice_device" => "mobile", "customdata" => array( array( "customdata_id" => "987987987989", "value" => "Customdata value", ) ) ) ) ); $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setRequestBody(json_encode($request_data)); $request_rest->setMethod("POST"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success $response_data = json_decode($json_response_data); echo "request_id : " . $response_data->request_id; } else { echo $response_status ." - connection failure"; } ?>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// POST Subscription - Update a subscription. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>Subscription Post Sample Code</title> <body> <% String username = "username"; JSONObject mobile = new JSONObject(); mobile.put("number", "2003004000"); mobile.put("country_code", "1"); JSONObject landline = new JSONObject(); landline.put("number", "3004005000"); landline.put("country_code", "1"); JSONObject customData = new JSONObject(); customData.put("customdata_id", "987987987987"); customData.put("value", "Customdata value"); JSONArray customDataArray = new JSONArray(); customDataArray.add(customData); JSONArray subscriptions = new JSONArray(); JSONObject subscription = new JSONObject(); subscription.put("first_name", "FirstName"); subscription.put("last_name", "LastName"); subscription.put("email", "test@email.com"); subscription.put("aim", "aimname"); subscription.put("mobile", mobile); subscription.put("landline", landline); subscription.put("voice_device", "mobile"); subscription.put("customdata", customDataArray); subscriptions.add(subscription); JSONObject subscriptionPut = new JSONObject(); subscriptionPut.put("list_name", "listname0001"); subscriptionPut.put("subscriptions", subscriptions); String subscriptionID = "987987987980"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/subscription/" + subscriptionID; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestMethod("POST"); conn.setDoOutput(true); conn.setDoInput(true); conn.setUseCaches(false); conn.setAllowUserInteraction(false); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); OutputStream outPutStream = conn.getOutputStream(); Writer writer = new OutputStreamWriter(outPutStream, "UTF-8"); writer.write(subscriptionPut.toJSONString()); writer.close(); outPutStream.close(); if (conn.getResponseCode() != 200) { %> URL : <%=urlStr%> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// POST Subscription - Update a subscription. using Newtonsoft.Json; using Newtonsoft.Json.Linq; using System; using System.Net.Http; using System.Net.Http.Headers; using System.Threading.Tasks; namespace samplecode { class SubscriptionInfo { public string list_name { get; set; } public JArray subscriptions { get; set; } } class Result { public string request_id { get; set; } } class SubscriptionPost { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; var subscriptionId = "987987987980"; //POST JObject subscription = new JObject(); subscription.Add("first_name", "Subscriber's First Name"); subscription.Add("last_name", "Subscriber's Last Name"); subscription.Add("email", "subscriber_email0001@trumpia.com"); subscription.Add("aim", "aimname"); JObject mobile = new JObject(); mobile.Add("number", "2003004000"); mobile.Add("country_code", "1"); subscription.Add("mobile", mobile); JObject landline = new JObject(); landline.Add("number", "2003005000"); landline.Add("country_code", "1"); subscription.Add("landline", landline); JObject customData = new JObject(); customData.Add("customdata_id", "987987987989"); customData.Add("value", "Customdata value"); JArray customDataArray = new JArray(); customDataArray.Add(customData); subscription.Add("customdata", customDataArray); JArray array = new JArray(); array.Add(subscription); var list = new SubscriptionInfo() { list_name = "listname0001", subscriptions = array }; Uri postUrl = new Uri(string.Format("http://api.trumpia.com/rest/v1/{0}/subscription/{1}", username, subscriptionId)); var response = client.PostAsJsonAsync(postUrl, list).Result; if (response.IsSuccessStatusCode) { var p = response.Content.ReadAsAsync<Result>().Result; string json = JsonConvert.SerializeObject(p); Console.WriteLine(json); } } } } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														DELETE Subscription
												Node:
												(type) c
												(layer)4
													Element:p
														Permanently remove a subscription.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Resource Information
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:td
														Response Formats
													Element:td
														JSON
													Element:tr
													Element:td
														Allowed Methods
													Element:td
														DELETE
													Element:tr
													Element:td
														URL
													Element:td
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/subscription/{subscription_id}
													Element:tr
													Element:td
														{user_name}
													Element:td
														Your account username (this can be found in the Account Settings page after logging in.)
													Element:tr
													Element:td
														{subscription_id}
													Element:td
														Subscription_id that is being deleted.
													Element:br
													Element:br
														Example value: 987987987980
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Header Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Content-Type
													Element:span
														&ast;
													Element:td
														application/json
													Element:tr
													Element:td
														X-Apikey
													Element:span
														&ast;
													Element:td
														Your API key (This can be found in the API Settings page after logging in.)
													Element:br
													Element:br
														Example value: 123456789abc1011
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Code sample for DELETE Subscription
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														"Request Example: DELETE http://api.trumpia.com/rest/v1/{user_name}/subscription/{subscription_id}"
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"subscription_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														987987987980
													Element:span
													Element:span
														}
													Element:span
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<? // DELETE Subscription - Delete a subscription. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/subscription"; $subscription_id = "987987987980"; $request_url = $request_url . "/" . $subscription_id; $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setMethod("DELETE"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success echo $json_response_data; } else { echo $response_status ." - connection failure"; } ?>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// DELETE Subscription - Delete a subscription. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>Subscription Delete Sample Code</title> <body> <% String username = "username"; String subscriptionID = "987987987980"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/subscription/" + subscriptionID; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestMethod("DELETE"); conn.setDoOutput(true); conn.setAllowUserInteraction(false); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// DELETE Subscription - Delete a subscription. using Newtonsoft.Json; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class Result { public string request_id { get; set; } } class SubscriptionDelete { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; var subscriptionId = "987987987980"; //DELETE Uri deleteUrl = new Uri(string.Format("http://api.trumpia.com/rest/v1/{0}/subscription/{1}", username, subscriptionId)); var response = client.DeleteAsync(deleteUrl).Result; if (response.IsSuccessStatusCode) { var p = response.Content.ReadAsAsync<Result>().Result; string json = JsonConvert.SerializeObject(p); Console.WriteLine(json); } } } } }
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:a
														SOURCE COPY
												Node:
												(type) c
												(layer)4
													Element:footer
														Trumpia is a DBA of DoCircle, Inc. All rights reserved.
													Element:br
														*Message and data rates may apply.
													Element:strong
													Element:a
														1-888-707-3030
													Element:span
														1-888-707-3030
														/ support@trumpia.com
													Element:br
														6:00 AM - 6:00 PM Pacific (Weekdays) / 8:00 AM - 4:00 PM Pacific (Weekend)
													Element:a
													Element:span
													Element:br
														Go to top
												Node:
												(type) c
												(layer)4
													Element:noscript
													Element:img
