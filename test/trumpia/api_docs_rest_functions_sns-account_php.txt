Node:
(type) c
(layer)0
	Element:body
									Node:
									(type) h3
									(layer)3
										Element:h3
											Login
									Node:
									(type) c
									(layer)3
										Element:strong
											Warning!
									Node:
									(type) c
									(layer)3
										Element:span
											The email address, username, or password is incorrect. Please note that your password is case-sensitive.
									Node:
									(type) c
									(layer)3
										Element:label
											Username or Email
											Please enter your username or e-mail address.
									Node:
									(type) c
									(layer)3
										Element:label
											Password
											Please enter your password.
									Node:
									(type) c
									(layer)3
										Element:label
											Remember Me
									Node:
									(type) c
									(layer)3
										Element:a
											Forgot Password?
									Node:
									(type) h3
									(layer)3
										Element:h3
											Forgot your password?
											Please enter your username or email address that you signed up with.
									Node:
									(type) c
									(layer)3
										Element:label
											Username or Email
											Username for Password Please enter your username or e-mail address.
									Node:
									(type) c
									(layer)3
										Element:a
											LOGIN
									Node:
									(type) c
									(layer)3
										Element:a
											NAV
										Element:img
										Element:img
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Comparison
										Element:li
										Element:a
											REST
										Element:span
										Element:ul
										Element:li
										Element:a
											Overview
										Element:li
										Element:a
											Functions
										Element:span
										Element:ul
										Element:li
										Element:a
											List
										Element:li
										Element:a
											Subscription
										Element:li
										Element:a
											Custom Data Field
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Keyword
										Element:li
										Element:a
											Publication
										Element:li
										Element:a
											Resource Balance
										Element:li
										Element:a
											Organization Name
										Element:li
										Element:a
											Social Media Account
										Element:li
										Element:a
											Email Sender Address
										Element:li
										Element:a
											Status Report
										Element:li
										Element:a
											PUSH Notifications
										Element:span
										Element:ul
										Element:li
										Element:a
											List
										Element:li
										Element:a
											Subscription
										Element:li
										Element:a
											Custom Data Field
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Keyword
										Element:li
										Element:a
											Publication
										Element:li
										Element:a
											Organization Name
										Element:li
										Element:a
											Social Media Account
										Element:li
										Element:a
											Email Sender Address
										Element:li
										Element:a
											System Status Codes
										Element:span
										Element:ul
										Element:li
										Element:a
											Common
										Element:li
										Element:a
											List
										Element:li
										Element:a
											Subscription
										Element:li
										Element:a
											Custom Data Field
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Keyword
										Element:li
										Element:a
											Publication
										Element:li
										Element:a
											Organization Name
										Element:li
										Element:a
											Social Media Account
										Element:li
										Element:a
											Email Sender Address
										Element:li
										Element:a
											Status Report
										Element:li
										Element:a
											HTTP
										Element:span
										Element:ul
										Element:li
										Element:a
											Overview
										Element:li
										Element:a
											Functions
										Element:span
										Element:ul
										Element:li
										Element:a
											List
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Keyword
										Element:li
										Element:a
											Check Response
										Element:li
										Element:a
											PUSH Notifications
										Element:span
										Element:ul
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											System Status Codes
										Element:span
										Element:ul
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											SDK
										Element:span
										Element:ul
										Element:li
										Element:a
											SDK Overview
										Element:li
										Element:a
											Setting Up SDK
										Element:li
										Element:a
											API Request via SDK
										Element:span
										Element:ul
										Element:li
										Element:a
											Distribution List API
										Element:li
										Element:a
											Subscription API
										Element:li
										Element:a
											Message API
										Element:li
										Element:a
											Receiving Push
										Element:br
											Notification via SDK
										Element:span
										Element:ul
										Element:li
										Element:a
											Distribution List
										Element:li
										Element:a
											Subscription
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Receiving Inbound Message
										Element:li
										Element:a
											Additional Resources
										Element:span
										Element:ul
										Element:li
										Element:a
											API Settings
										Element:li
										Element:a
											Text Delivery Reports
										Element:li
										Element:a
											Email Delivery Reports
										Element:li
										Element:a
											Supported Message Characters
										Element:li
										Element:a
											Supported MMS Types
										Element:li
										Element:a
											URL Encoded Characters
									Node:
									(type) c
									(layer)3
										Element:span
											REST
											>
									Node:
									(type) c
									(layer)3
										Element:a
											Functions
											>
									Node:
									(type) c
									(layer)3
										Element:a
											Social Media Account
											>
									Node:
									(type) c
									(layer)3
										Element:a
											On This Page
									Node:
									(type) c
									(layer)3
										Element:ul
									Node:
									(type) c
									(layer)3
										Element:span
									Node:
									(type) c
									(layer)3
										Element:a
									Node:
									(type) h3
									(layer)3
										Element:h3
											Social Media Account
										Element:span
											(Last Updated : 01/04/2017)
									Node:
									(type) c
									(layer)3
										Element:p
											You should register your social networking account(s) and page(s) before publishing content. You can register your Facebook account, Facebook page, or Twitter account.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Methods
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:tbody
										Element:tr
										Element:td
											PUT
										Element:td
										Element:code
											/rest/v1/{user_name}/account/sns
										Element:tr
										Element:td
											GET
										Element:td
										Element:code
											/rest/v1/{user_name}/account/sns
										Element:tr
										Element:td
											GET
										Element:td
										Element:code
											/rest/v1/{user_name}/account/sns/{sns_id}
										Element:tr
										Element:td
											GET
										Element:td
										Element:code
											/rest/v1/{user_name}/account/sns/{sns_id}/page
										Element:tr
										Element:td
											GET
										Element:td
										Element:code
											/rest/v1/{user_name}/account/sns/{sns_id}/page/{page_id}
										Element:tr
										Element:td
											DELETE
										Element:td
										Element:code
											/rest/v1/{user_name}/account/sns/{sns_id}
										Element:tr
										Element:td
											DELETE
										Element:td
										Element:code
											/rest/v1/{user_name}/account/sns/{sns_id}/page/{page_id}
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														PUT SNS Account
												Node:
												(type) c
												(layer)4
													Element:p
														Register a Facebook account, Facebook page, or Twitter account.
												Node:
												(type) c
												(layer)4
													Element:p
														When you perform a PUT SNS Account, you will receive an authentication_url. After logging into Facebook or Twitter via the authentication_url, you can complete the register process. You can then verify if the request was successful.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Resource Information
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:td
														Response Formats
													Element:td
														JSON
													Element:tr
													Element:td
														Allowed Methods
													Element:td
														PUT
													Element:tr
													Element:td
														URL
													Element:td
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/account/sns
													Element:tr
													Element:td
														{user_name}
													Element:td
														Your account username (this can be found in the Account Settings page after logging in.)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Header Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Content-Type
													Element:span
														&ast;
													Element:td
														application/json
													Element:tr
													Element:td
														X-Apikey
													Element:span
														&ast;
													Element:td
														Your API key (This can be found in the API Settings page after logging in.)
													Element:br
													Element:br
														Example value: 123456789abc1011
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Body Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														name
													Element:span
														&ast;
													Element:td
														The type of SNS service. Valid value is facebook, twitter, or facebook_page. The service is case-insensitive.
													Element:br
													Element:br
													Element:i
														Note: facebook_page_id is required if the service is "facebook_page".
													Element:tr
													Element:td
														description
													Element:span
														&ast;
													Element:td
														A number value. ^[1-9][0-9]{0,17}$
													Element:br
													Element:br
														This is the unique ID created by Facebook. You can find this ID within the Facebook page's Info page.
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Code sample for PUT SNS Account
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														"Request Example: Register a Facebook or Twitter account. PUT http://api.trumpia.com/rest/v1/{user_name}/account/sns"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"service"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"facebook"
													Element:span
													Element:span
														}
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"request_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"1234561234567asdf123"
													Element:span
														,
													Element:span
													Element:span
														"authentication_url"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"https://www.facebook.com/oauth?get_info.php"
													Element:span
													Element:span
														}
													Element:span
													Element:span
														"Request Example: Register a Facebook page. PUT http://api.trumpia.com/rest/v1/{user_name}/account/sns"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"service"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"facebook_page"
													Element:span
														,
													Element:span
													Element:span
														"facebook_page_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"456456456000"
													Element:span
													Element:span
														}
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"request_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"1234561234567asdf123"
													Element:span
														,
													Element:span
													Element:span
														"authentication_url"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"https://www.facebook.com/oauth?get_info.php"
													Element:span
													Element:span
														}
													Element:span
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<? // PUT SNS Account - Register a Facebook or Twitter account. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/account/sns"; $request_data = array( "service" => "twitter" ); $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setRequestBody(json_encode($request_data)); $request_rest->setMethod("PUT"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success $response_data = json_decode($json_response_data); echo "request_id : " . $response_data->request_id . "<br>"; echo "service : " . $response_data->service . "<br>"; echo "sns_id : " . $response_data->sns_id . "<br>"; echo "status : " . $response_data->status; } else { echo $response_status ." - connection failure"; } ?> <? // PUT SNS Account - Register a Facebook page. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/account/sns"; $request_data = array( "service" => "facebook_page", "facebook_page_id" => "456456456000" ); $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setRequestBody(json_encode($request_data)); $request_rest->setMethod("PUT"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success $response_data = json_decode($json_response_data); echo "request_id : " . $response_data->request_id . "<br>"; echo "service : " . $response_data->service . "<br>"; echo "page_id : " . $response_data->sns_id . "<br>"; echo "status : " . $response_data->status; } else { echo $response_status ." - connection failure"; } ?>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// PUT SNS Account - Register a Facebook or Twitter account. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>SNS Account PUT Sample Code</title> <body> <% String service = "twitter"; JSONObject snsAccountPut = new JSONObject(); snsAccountPut.put("service", service); String username = "username"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/account/sns"; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestMethod("PUT"); conn.setDoOutput(true); conn.setDoInput(true); conn.setUseCaches(false); conn.setAllowUserInteraction(false); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); OutputStream outPutStream = conn.getOutputStream(); Writer writer = new OutputStreamWriter(outPutStream, "UTF-8"); writer.write(snsAccountPut.toJSONString()); writer.close(); outPutStream.close(); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html> // PUT SNS Account - Register a Facebook page. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>Facebook Page PUT Sample Code</title> <body> <% String service = "facebook_page"; String pageId = "456456456000"; JSONObject snsAccountPut = new JSONObject(); snsAccountPut.put("service", service); snsAccountPut.put("facebook_page_id", pageId); String username = "username"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/account/sns"; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestMethod("PUT"); conn.setDoOutput(true); conn.setDoInput(true); conn.setUseCaches(false); conn.setAllowUserInteraction(false); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); OutputStream outPutStream = conn.getOutputStream(); Writer writer = new OutputStreamWriter(outPutStream, "UTF-8"); writer.write(snsAccountPut.toJSONString()); writer.close(); outPutStream.close(); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// PUT SNS Account - Register a Facebook or Twitter account. using Newtonsoft.Json; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class SnsAccountInfo { public string service { get; set; } } class Result { public string request_id { get; set; } public string authentication_url { get; set; } } class SnsPut { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; //PUT var info = new SnsAccountInfo() { service = "facebook" }; Uri postUrl = new Uri(string.Format("http://api.trumpia.com/rest/v1/{0}/account/sns", username)); var response = client.PutAsJsonAsync(postUrl, info).Result; if (response.IsSuccessStatusCode) { var p = response.Content.ReadAsAsync<Result>().Result; string json = JsonConvert.SerializeObject(p); Console.WriteLine(json); } } } } } // PUT SNS Account - Register a Facebook page. using Newtonsoft.Json; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class SnsPageAccountInfo { public string service { get; set; } public string facebook_page_id { get; set; } } class Result { public string request_id { get; set; } public string authentication_url { get; set; } } class SnsPagePut { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; //PUT var info = new SnsPageAccountInfo() { service = "facebook_page", facebook_page_id = "456456456000" }; Uri postUrl = new Uri(string.Format("http://api.trumpia.com/rest/v1/{0}/account/sns", username)); var response = client.PutAsJsonAsync(postUrl, info).Result; if (response.IsSuccessStatusCode) { var p = response.Content.ReadAsAsync<Result>().Result; string json = JsonConvert.SerializeObject(p); Console.WriteLine(json); } } } } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														GET SNS Account
												Node:
												(type) c
												(layer)4
													Element:p
														Lookup basic information(SNS IDs and names of existing Facebook accounts, Facebook pages, or Twitter accounts), or lookup detailed information of a specific account and page.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Resource Information
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:td
														Response Formats
													Element:td
														JSON
													Element:tr
													Element:td
														Allowed Methods
													Element:td
														GET
													Element:tr
													Element:td
														URL
													Element:td
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/account/sns
													Element:br
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/account/sns/{sns_id}
													Element:br
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/account/sns/{sns_id}/page
													Element:br
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/account/sns/{sns_id}/page/{page_id}
													Element:tr
													Element:td
														{user_name}
													Element:td
														Your account username (this can be found in the Account Settings page after logging in.)
													Element:tr
													Element:td
														{sns_id}
													Element:td
														Retrieve information for this SNS ID.
													Element:tr
													Element:td
														{page_id}
													Element:td
														Retrieve information for this Facebook Page ID.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Header Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Content-Type
													Element:span
														&ast;
													Element:td
														application/json
													Element:tr
													Element:td
														X-Apikey
													Element:span
														&ast;
													Element:td
														Your API key (This can be found in the API Settings page after logging in.)
													Element:br
													Element:br
														Example value: 123456789abc1011
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Code Sample for GET SNS Account
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														"Request Example: Get all lists of Facebook accounts, Facebook pages, and Twitter accounts. GET http://api.trumpia.com/rest/v1/{user_name}/account/sns"
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"facebook_id_list"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														"987987987980"
													Element:span
														,
													Element:span
													Element:span
														"987987987981"
													Element:span
													Element:span
														],
													Element:span
													Element:span
														"twitter_id_list"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														"987987987982"
													Element:span
														,
													Element:span
													Element:span
														"987987987983"
													Element:span
														,
													Element:span
													Element:span
														"987987987984"
													Element:span
														,
													Element:span
													Element:span
														"987987987985"
													Element:span
													Element:span
														]
													Element:span
													Element:span
														}
													Element:span
													Element:span
														"Request Example: Get a specific Facebook or Twitter account. GET http://api.trumpia.com/rest/v1/{user_name}/account/sns/{sns_id}"
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"service"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"facebook"
													Element:span
														,
													Element:span
													Element:span
														"sns_name"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"fb.account01"
													Element:span
													Element:span
														}
													Element:span
													Element:span
														"Request Example: Get a Facebook page or set of pages associated with a specific Facebook account. GET http://api.trumpia.com/rest/v1/{user_name}/account/sns/{sns_id}/page"
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"facebook_page_id_list"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														"456456456000"
													Element:span
														,
													Element:span
													Element:span
														"456456456001"
													Element:span
														,
													Element:span
													Element:span
														"456456456002"
													Element:span
														,
													Element:span
													Element:span
														"456456456003"
													Element:span
													Element:span
														]
													Element:span
													Element:span
														}
													Element:span
													Element:span
														"Request Example: Get a specific Facebook page. GET http://api.trumpia.com/rest/v1/{user_name}/account/sns/{sns_id}/page/{page_id}"
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"service"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"facebook_page"
													Element:span
														,
													Element:span
													Element:span
														"page_name"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"fb.account01"
													Element:span
														,
													Element:span
													Element:span
														"facebook_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"987987987980"
													Element:span
													Element:span
														}
													Element:span
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<? // GET SNS Account - Retrieve all Facebook and Twitter account. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/account/sns"; $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setMethod("GET"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success echo $json_response_data; } else { echo $response_status ." - connection failure"; } ?> <? // GET SNS Account - Retrieve a Facebook or Twitter account by ID. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/account/sns"; $sns_id = "987987987980"; $request_url = $request_url . "/" . $sns_id; $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setMethod("GET"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success echo $json_response_data; } else { echo $response_status ." - connection failure"; } ?> <? // GET SNS Account - Retrieve all Facebook pages. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/account/sns"; $sns_id = "987987987980"; $request_url = $request_url . "/" . $sns_id. "/page"; $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setMethod("GET"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success echo $json_response_data; } else { echo $response_status ." - connection failure"; } ?> <? // GET SNS Account - Retrieve a Facebook page by ID. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/account/sns"; $sns_id = "987987987980"; $page_id = "456456456000"; $request_url = $request_url . "/" . $sns_id. "/page/" . $page_id; $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setMethod("GET"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success echo $json_response_data; } else { echo $response_status ." - connection failure"; } ?>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// GET SNS Account - Retrieve all Facebook and Twitter account. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>SNS Account GET Sample Code</title> <body> <% String username = "username"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/account/sns"; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html> // GET SNS Account - Retrieve a Facebook or Twitter account by ID. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>SNS Account GET (by ID) Sample Code</title> <body> <% String username = "username"; String snsId = "987987987980"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/account/sns/" + snsId; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html> // GET SNS Account - Retrieve all Facebook pages. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>Facebook Page GET Sample Code</title> <body> <% String username = "username"; String snsId = "987987987980"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/account/sns/" + snsId + "/page"; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html> // GET SNS Account - Retrieve a Facebook page by ID. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>Facebook Page GET (by ID) Sample Code</title> <body> <% String username = "username"; String snsId = "987987987980"; String pageId = "456456456000"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/account/sns/" + snsId + "/page/" + pageId; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// GET SNS Account - Retrieve all Facebook and Twitter account. using Newtonsoft.Json; using Newtonsoft.Json.Linq; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class SnsAccountInfo { public JArray twitter_id_list { get; set; } public JArray facebook_id_list { get; set; } } class SnsGet { static void Main(string[] args) { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.BaseAddress = new Uri("http://api.trumpia.com"); client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; //GET HttpResponseMessage response = await client.GetAsync(string.Format("/rest/v1/{0}/account/sns", username)); if (response.IsSuccessStatusCode) { SnsAccountInfo snsInfo = await response.Content.ReadAsAsync<SnsAccountInfo>(); string json = JsonConvert.SerializeObject(snsInfo); Console.WriteLine(json); } } } } } // GET SNS Account - Retrieve a Facebook or Twitter account by ID. using Newtonsoft.Json; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class SnsDetailInfo { public string sns_name { get; set; } public string service { get; set; } } class SnsDetailGet { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.BaseAddress = new Uri("http://api.trumpia.com"); client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; var snsId = "987987987980"; //GET HttpResponseMessage response = await client.GetAsync(string.Format("/rest/v1/{0}/account/sns/{1}", username, snsId)); if (response.IsSuccessStatusCode) { SnsDetailInfo snsInfo = await response.Content.ReadAsAsync<SnsDetailInfo>(); string json = JsonConvert.SerializeObject(snsInfo); Console.WriteLine(json); } } } } } // GET SNS Account - Retrieve all Facebook pages. using Newtonsoft.Json; using Newtonsoft.Json.Linq; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class SnsPageAccountInfo { public JArray facebook_page_id_list { get; set; } } class SnsPageGet { static void Main(string[] args) { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.BaseAddress = new Uri("http://api.trumpia.com"); client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; var snsId = "987987987980"; //GET HttpResponseMessage response = await client.GetAsync(string.Format("/rest/v1/{0}/account/sns/{1}/page", username, snsId)); if (response.IsSuccessStatusCode) { SnsPageAccountInfo snsPageInfo = await response.Content.ReadAsAsync<SnsPageAccountInfo>(); string json = JsonConvert.SerializeObject(snsPageInfo); Console.WriteLine(json); } } } } } // GET SNS Account - Retrieve a Facebook page by ID. using Newtonsoft.Json; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class SnsPageDetailInfo { public string service { get; set; } public string page_name { get; set; } public string facebook_id { get; set; } } class SnsPageDetailGet { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.BaseAddress = new Uri("http://api.trumpia.com"); client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; var snsId = "987987987980"; var pageId = "456456456000"; //GET HttpResponseMessage response = await client.GetAsync(string.Format("/rest/v1/{0}/account/sns/{1}/page/{2}", username, snsId, pageId)); if (response.IsSuccessStatusCode) { SnsPageDetailInfo snsPageInfo = await response.Content.ReadAsAsync<SnsPageDetailInfo>(); string json = JsonConvert.SerializeObject(snsPageInfo); Console.WriteLine(json); } } } } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														DELETE SNS Account
												Node:
												(type) c
												(layer)4
													Element:p
														Permanently remove a Facebook account, Facebook page, or Twitter page.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Resource Information
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:td
														Response Formats
													Element:td
														JSON
													Element:tr
													Element:td
														Allowed Methods
													Element:td
														DELETE
													Element:tr
													Element:td
														URL
													Element:td
													Element:code
														http://api.trumpia.com/rest/v1/{username}/account/sns/{sns_id}
													Element:br
													Element:code
														http://api.trumpia.com/rest/v1/{username}/account/sns/{sns_id}/page/{page_id}
													Element:tr
													Element:td
														{user_name}
													Element:td
														Your account username (this can be found in the Account Settings page after logging in.)
													Element:tr
													Element:td
														{sns_id}
													Element:td
														Delete information for this SNS ID.
													Element:tr
													Element:td
														{page_id}
													Element:td
														Delete information for this Facebook Page ID.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Header Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Content-Type
													Element:span
														&ast;
													Element:td
														application/json
													Element:tr
													Element:td
														X-Apikey
													Element:span
														&ast;
													Element:td
														Your API key (This can be found in the API Settings page after logging in.)
													Element:br
													Element:br
														Example value: 123456789abc1011
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Code sample for DELETE SNS ACCOUNT
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
													Element:span
														"Request Example: Delete a specific Facebook or Twitter account. DELETE http://api.trumpia.com/rest/v1/{user_name}/account/sns/{sns_id}"
													Element:span
													Element:span
														"Request Example: Delete a specific Facebook page. DELETE http://api.trumpia.com/rest/v1/{user_name}/account/sns/{sns_id}/page/{page_id}"
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"request_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"1234561234567asdf123"
													Element:span
													Element:span
														}
													Element:span
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<? // DELETE SNS Account - Delete a Facebook or Twitter account. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/account/sns"; $sns_id = "987987987980"; $request_url = $request_url . "/" . $sns_id; $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setMethod("DELETE"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success echo $json_response_data; } else { echo $response_status ." - connection failure"; } ?> <? // DELETE SNS Account - Delete a Facebook page. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/account/sns"; $sns_id = "987987987980"; $page_id = "456456456000"; $request_url = $request_url . "/" . $sns_id. "/page/" . $page_id; $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setMethod("DELETE"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success echo $json_response_data; } else { echo $response_status ." - connection failure"; } ?>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// DELETE SNS Account - Delete a Facebook or Twitter account. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>SNS Account DELETE Sample Code</title> <body> <% String username = "username"; String snsId = "987987987980"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/account/sns/" + snsId; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestMethod("DELETE"); conn.setDoOutput(true); conn.setAllowUserInteraction(false); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html> // DELETE SNS Account - Delete a Facebook page. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>Facebook Page DELETE Sample Code</title> <body> <% String username = "username"; String snsId = "987987987980"; String pageId = "456456456000"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/account/sns/" + snsId + "/page/" + pageId; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestMethod("DELETE"); conn.setDoOutput(true); conn.setAllowUserInteraction(false); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// DELETE SNS Account - Delete a Facebook or Twitter account. using Newtonsoft.Json; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class Result { public string request_id { get; set; } } class SnsDelete { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; var snsId = "987987987980"; //DELETE Uri deleteUrl = new Uri(string.Format("http://api.trumpia.com/rest/v1/{0}/account/sns/{1}", username, snsId)); var response = client.DeleteAsync(deleteUrl).Result; if (response.IsSuccessStatusCode) { var p = response.Content.ReadAsAsync<Result>().Result; string json = JsonConvert.SerializeObject(p); Console.WriteLine(json); } } } } } // DELETE SNS Account - Delete a Facebook page. using Newtonsoft.Json; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class Result { public string request_id { get; set; } } class SnsPageDelete { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; var snsId = "987987987980"; var pageId = "456456456000"; //DELETE Uri deleteUrl = new Uri(string.Format("http://api.trumpia.com/rest/v1/{0}/account/sns/{1}/page/{2}", username, snsId, pageId)); var response = client.DeleteAsync(deleteUrl).Result; if (response.IsSuccessStatusCode) { var p = response.Content.ReadAsAsync<Result>().Result; string json = JsonConvert.SerializeObject(p); Console.WriteLine(json); } } } } }
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:a
														SOURCE COPY
												Node:
												(type) c
												(layer)4
													Element:footer
														Trumpia is a DBA of DoCircle, Inc. All rights reserved.
													Element:br
														*Message and data rates may apply.
													Element:strong
													Element:a
														1-888-707-3030
													Element:span
														1-888-707-3030
														/ support@trumpia.com
													Element:br
														6:00 AM - 6:00 PM Pacific (Weekdays) / 8:00 AM - 4:00 PM Pacific (Weekend)
													Element:a
													Element:span
													Element:br
														Go to top
												Node:
												(type) c
												(layer)4
													Element:noscript
													Element:img
