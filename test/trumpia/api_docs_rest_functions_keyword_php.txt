Node:
(type) c
(layer)0
	Element:body
									Node:
									(type) h3
									(layer)3
										Element:h3
											Login
									Node:
									(type) c
									(layer)3
										Element:strong
											Warning!
									Node:
									(type) c
									(layer)3
										Element:span
											The email address, username, or password is incorrect. Please note that your password is case-sensitive.
									Node:
									(type) c
									(layer)3
										Element:label
											Username or Email
											Please enter your username or e-mail address.
									Node:
									(type) c
									(layer)3
										Element:label
											Password
											Please enter your password.
									Node:
									(type) c
									(layer)3
										Element:label
											Remember Me
									Node:
									(type) c
									(layer)3
										Element:a
											Forgot Password?
									Node:
									(type) h3
									(layer)3
										Element:h3
											Forgot your password?
											Please enter your username or email address that you signed up with.
									Node:
									(type) c
									(layer)3
										Element:label
											Username or Email
											Username for Password Please enter your username or e-mail address.
									Node:
									(type) c
									(layer)3
										Element:a
											LOGIN
									Node:
									(type) c
									(layer)3
										Element:a
											NAV
										Element:img
										Element:img
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Comparison
										Element:li
										Element:a
											REST
										Element:span
										Element:ul
										Element:li
										Element:a
											Overview
										Element:li
										Element:a
											Functions
										Element:span
										Element:ul
										Element:li
										Element:a
											List
										Element:li
										Element:a
											Subscription
										Element:li
										Element:a
											Custom Data Field
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Keyword
										Element:li
										Element:a
											Publication
										Element:li
										Element:a
											Resource Balance
										Element:li
										Element:a
											Organization Name
										Element:li
										Element:a
											Social Media Account
										Element:li
										Element:a
											Email Sender Address
										Element:li
										Element:a
											Status Report
										Element:li
										Element:a
											PUSH Notifications
										Element:span
										Element:ul
										Element:li
										Element:a
											List
										Element:li
										Element:a
											Subscription
										Element:li
										Element:a
											Custom Data Field
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Keyword
										Element:li
										Element:a
											Publication
										Element:li
										Element:a
											Organization Name
										Element:li
										Element:a
											Social Media Account
										Element:li
										Element:a
											Email Sender Address
										Element:li
										Element:a
											System Status Codes
										Element:span
										Element:ul
										Element:li
										Element:a
											Common
										Element:li
										Element:a
											List
										Element:li
										Element:a
											Subscription
										Element:li
										Element:a
											Custom Data Field
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Keyword
										Element:li
										Element:a
											Publication
										Element:li
										Element:a
											Organization Name
										Element:li
										Element:a
											Social Media Account
										Element:li
										Element:a
											Email Sender Address
										Element:li
										Element:a
											Status Report
										Element:li
										Element:a
											HTTP
										Element:span
										Element:ul
										Element:li
										Element:a
											Overview
										Element:li
										Element:a
											Functions
										Element:span
										Element:ul
										Element:li
										Element:a
											List
										Element:li
										Element:a
											Contact
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Keyword
										Element:li
										Element:a
											Check Response
										Element:li
										Element:a
											PUSH Notifications
										Element:span
										Element:ul
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											System Status Codes
										Element:span
										Element:ul
										Element:li
										Element:a
											Direct SMS
										Element:li
										Element:a
											SDK
										Element:span
										Element:ul
										Element:li
										Element:a
											SDK Overview
										Element:li
										Element:a
											Setting Up SDK
										Element:li
										Element:a
											API Request via SDK
										Element:span
										Element:ul
										Element:li
										Element:a
											Distribution List API
										Element:li
										Element:a
											Subscription API
										Element:li
										Element:a
											Message API
										Element:li
										Element:a
											Receiving Push
										Element:br
											Notification via SDK
										Element:span
										Element:ul
										Element:li
										Element:a
											Distribution List
										Element:li
										Element:a
											Subscription
										Element:li
										Element:a
											Message
										Element:li
										Element:a
											Receiving Inbound Message
										Element:li
										Element:a
											Additional Resources
										Element:span
										Element:ul
										Element:li
										Element:a
											API Settings
										Element:li
										Element:a
											Text Delivery Reports
										Element:li
										Element:a
											Email Delivery Reports
										Element:li
										Element:a
											Supported Message Characters
										Element:li
										Element:a
											Supported MMS Types
										Element:li
										Element:a
											URL Encoded Characters
									Node:
									(type) c
									(layer)3
										Element:span
											REST
											>
									Node:
									(type) c
									(layer)3
										Element:a
											Functions
											>
									Node:
									(type) c
									(layer)3
										Element:a
											Keyword
											>
									Node:
									(type) c
									(layer)3
										Element:a
											On This Page
									Node:
									(type) c
									(layer)3
										Element:ul
									Node:
									(type) c
									(layer)3
										Element:span
									Node:
									(type) c
									(layer)3
										Element:a
									Node:
									(type) h3
									(layer)3
										Element:h3
											Keyword
										Element:span
											(Last Updated : 01/04/2017)
									Node:
									(type) c
									(layer)3
										Element:p
											A mobile keyword enables API users to collect new subscriptions automatically through any SMS-enabled mobile phone. An auto-response message can also be set up that is sent to new subscribers after texting in the keyword. Parameter values can be set so that you can receive an inbound PUSH Notification by email or SMS whenever the keyword is texted in.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Methods
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:tbody
										Element:tr
										Element:td
											PUT
										Element:td
										Element:code
											/rest/v1/{user_name}/keyword
										Element:tr
										Element:td
											GET
										Element:td
										Element:code
											/rest/v1/{user_name}/keyword
										Element:tr
										Element:td
											GET
										Element:td
										Element:code
											/rest/v1/{user_name}/keyword/{keyword_id}
										Element:tr
										Element:td
											POST
										Element:td
										Element:code
											/rest/v1/{user_name}/keyword/{keyword_id}
										Element:tr
										Element:td
											DELETE
										Element:td
										Element:code
											/rest/v1/{user_name}/keyword/{keyword_id}
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														PUT Keyword
												Node:
												(type) c
												(layer)4
													Element:p
														Create a mobile keyword that can collect phone numbers, user information, and automatically send a response message.
												Node:
												(type) c
												(layer)4
													Element:aside
														Please note that the following terms must be included in ALL materials promoting your keyword(s), whether online, print, television or radio.
													Element:br
													Element:br
														- Message frequency (i.e. 4 msg a month).
													Element:br
														- Disclosure stating message and data rates may apply.
													Element:br
														- HELP instructions (i.e., Text HELP for help)
													Element:br
														- STOP or opt-out instructions (i.e., Text STOP to opt-out)
													Element:br
														- Customer Service contact information.
													Element:br
														- Links to your full Terms & Conditions and Privacy Policy.
													Element:br
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Resource Information
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:td
														Response Formats
													Element:td
														JSON
													Element:tr
													Element:td
														Allowed Methods
													Element:td
														PUT
													Element:tr
													Element:td
														URL
													Element:td
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/keyword
													Element:tr
													Element:td
														{user_name}
													Element:td
														Your account username (this can be found in the Account Settings page after logging in.)
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Header Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Content-Type
													Element:span
														&ast;
													Element:td
														application/json
													Element:tr
													Element:td
														X-Apikey
													Element:span
														&ast;
													Element:td
														Your API key (This can be found in the API Settings page after logging in.)
													Element:br
													Element:br
														Example value: 123456789abc1011
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Body Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														keyword
													Element:span
														&ast;
													Element:td
														The keyword that users will text. The keyword must be one word with no spaces. It is case-insensitive. There is a 4- to 50-character limit.
													Element:tr
													Element:td
														lists
													Element:span
														&ast;
													Element:td
														The list_name to which the keyword is attached. Contacts will be automatically added to the list.
													Element:tr
													Element:td
														allow_message
													Element:span
														&ast;
													Element:td
														This enables users to add their own message or response after the keyword. This message will be sent to your Inbox.
													Element:tr
													Element:td
														auto_response
													Element:span
														&ast;
													Element:td
														Configure the settings of your auto-response message. See Auto Response Object table below.
													Element:tr
													Element:td
														org_name_id
													Element:td
														The organization name ID you wish to include in the mobile message. Only registered organization name IDs can be used. You can get the registered organization name IDs via
													Element:a
														GET Organization Name
														. The default organization name is used if this parameter is not specified.
													Element:tr
													Element:td
														notify
													Element:td
														Configure to be notified of any messages from your users. Either email or mobile must be set. See Notify Object table below.
													Element:tr
													Element:td
														optin_type
													Element:td
														The opt-in types for keyword sign-up. You can change the default value at Sign In > Account > General Default Setting. The default opt-in type is used if this parameter is not specified.
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														1
													Element:td
														Single Opt-In: The subscriber only needs to text in a keyword to complete their sign-up.
													Element:tr
													Element:td
														2
													Element:td
														Double Opt-In: After a subscriber texts in a keyword, they will be asked to reply yes or no to verify their sign-up. If they reply yes, their sign-up is complete.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														> Auto Response Object
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														message
													Element:span
														&ast;
													Element:td
														The content of your auto-response message.
													Element:a
														Supported Character Set
														.
													Element:br
													Element:br
														Character limits vary per country. The maximum length for a message is 160 characters as default. For instance, SMS messages for Canadian accounts are limited to 140 characters. Although a 160 character message can be sent in full to US mobile numbers, Canadian mobile devices will only receive the first 140 characters.
													Element:br
													Element:br
														Also, please note that the SMS header and footer are counted as part of the message and should be taken into consideration when composing a message.
													Element:tr
													Element:td
														frequency
													Element:td
														The number of times an auto-response message will be delivered when a user texts in the keyword.
													Element:table
														Default value: 1
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														1
													Element:td
														everytime
													Element:tr
													Element:td
														2
													Element:td
														only once per mobile number
													Element:tr
													Element:td
														3
													Element:td
														only once every day
													Element:tr
													Element:td
														alternative_message
													Element:td
														The content of an alternative auto-response message. This message will be sent if a user texts in the keyword more than once.
													Element:a
														Supported Character Set
														.
													Element:br
													Element:br
														Character limits vary per country. The maximum length for a message is 160 characters as default. For instance, SMS messages for Canadian accounts are limited to 140 characters. Although a 160 character message can be sent in full to US mobile numbers, Canadian mobile devices will only receive the first 140 characters.
													Element:br
													Element:br
														Also, please note that the SMS header and footer are counted as part of the message and should be taken into consideration when composing a message.
													Element:tr
													Element:td
														alternative_coupon
													Element:td
														This alternate message will be sent to your user in case you have run out of coupon codes. To set up a coupon code to be inserted into the message of your auto-response or alternative_message, you must login to your account dashboard.
													Element:br
													Element:br
														Character limits vary per country. The maximum length for a message is 160 characters as default. For instance, SMS messages for Canadian accounts are limited to 140 characters. Although a 160 character message can be sent in full to US mobile numbers, Canadian mobile devices will only receive the first 140 characters.
													Element:br
													Element:br
														Also, please note that the SMS header and footer are counted as part of the message and should be taken into consideration when composing a message.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														> Notify Object
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														email
													Element:td
														Email address where a notification will be sent when a person signs up via this keyword.
													Element:br
													Element:br
														Example value: testemail@testdomain.com
													Element:tr
													Element:td
														mobile
													Element:td
														Mobile phone numbers where a notification will be sent when a person signs up via this keyword.
													Element:br
													Element:br
														Example value: 2003004000
													Element:tr
													Element:td
														subscription
													Element:span
														&ast;
													Element:td
														Valid value is all or new.
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														all
													Element:td
														Notify for all subscriptions.
													Element:tr
													Element:td
														new
													Element:td
														Notify only when the subscriber's mobile number is new to your subscription database.
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Code sample for PUT Keyword
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														"Request Example: PUT http://api.trumpia.com/rest/v1/{user_name}/keyword"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"keyword"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"testKeyword"
													Element:span
														,
													Element:span
													Element:span
														"lists"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"987987987980,987987987981"
													Element:span
														,
													Element:span
													Element:span
														"allow_message"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"true"
													Element:span
														,
													Element:span
													Element:span
														"auto_response"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"frequency"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"2"
													Element:span
														,
													Element:span
													Element:span
														"message"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"hi this is auto response message"
													Element:span
														,
													Element:span
													Element:span
														"alternative_message"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"welcome back :)"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"notify"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"email"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"subscriber_email0001@api.trumpia.com"
													Element:span
														,
													Element:span
													Element:span
														"mobile"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"2003004000"
													Element:span
														,
													Element:span
													Element:span
														"subscription"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"new"
													Element:span
													Element:span
														}
													Element:span
													Element:span
														}
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"request_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"1234561234567asdf123"
													Element:span
													Element:span
														}
													Element:span
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<? // PUT Keyword - Create a keyword. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/keyword"; $request_data = array( "keyword" => "testKeyword", "lists" => "987987987980,987987987981", "allow_message" => "TRUE", "auto_response" => array("message"=>"auto response message. coupon code : [$CouponCode-coupon]", "frequency"=>"2", "alternative_message"=>"alternative message", "alternative_coupon"=>"alternative coupon message"), "notify" => array("email"=>"subscriber_email0001@trumpia.com", "mobile"=>"2003004000", "subscription"=>"NEW") ); $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setRequestBody(json_encode($request_data)); $request_rest->setMethod("PUT"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success $response_data = json_decode($json_response_data); echo "request_id : " . $response_data->request_id . "<br>"; } else { echo $response_status ." - connection failure"; } ?>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// PUT Keyword - Create a keyword. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>Keyword Put Sample Code</title> <body> <% String keyword = "testKeyword"; String username = "username"; String keywordId = "12345"; String lists = "987987987980,987987987981"; String allowMessage = "TRUE"; JSONObject autoResponse = new JSONObject(); autoResponse.put("message", "auto response message. coupon code : [$CouponCode-coupon]"); autoResponse.put("frequency", "2"); autoResponse.put("alternative_message", "alternative message"); autoResponse.put("alternative_coupon", "alternative coupon message"); JSONObject notify = new JSONObject(); notify.put("email", "subscriber_email0001@trumpia.com"); notify.put("mobile", "2003004000"); notify.put("subscription", "NEW"); JSONObject listPost = new JSONObject(); listPost.put("keyword", keyword); listPost.put("lists", lists); listPost.put("allow_message", allowMessage); listPost.put("auto_response", autoResponse); listPost.put("notify", notify); String urlStr = "api.trumpia.com/rest/v1/" + username + "/keyword"; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestMethod("PUT"); conn.setDoOutput(true); conn.setDoInput(true); conn.setUseCaches(false); conn.setAllowUserInteraction(false); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); OutputStream outPutStream = conn.getOutputStream(); Writer writer = new OutputStreamWriter(outPutStream, "UTF-8"); writer.write(listPut.toJSONString()); writer.close(); outPutStream.close(); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// PUT Keyword - Create a keyword. using Newtonsoft.Json; using Newtonsoft.Json.Linq; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class KeywordInfo { public string keyword { get; set; } public string lists { get; set; } public string allow_message { get; set; } public JObject auto_response { get; set; } public JObject notify { get; set; } } class Result { public string request_id { get; set; } } class KeywordPut { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; //PUT JObject autoResponseData = new JObject(); autoResponseData.Add("message", "hi this is auto response message"); autoResponseData.Add("frequency", "2"); autoResponseData.Add("alternative_message", "welcome back :)"); JObject notifyData = new JObject(); notifyData.Add("subscription", "new"); notifyData.Add("email", "subscriber_email0001@trumpia.com"); var info = new KeywordInfo() { keyword = "testKeyword", lists = "987987987980,987987987981", allow_message = "TRUE", auto_response = autoResponseData, notify = notifyData }; Uri postUrl = new Uri(string.Format("http://api.trumpia.com/rest/v1/{0}/keyword", username)); var response = client.PutAsJsonAsync(postUrl, info).Result; if (response.IsSuccessStatusCode) { var p = response.Content.ReadAsAsync<Result>().Result; string json = JsonConvert.SerializeObject(p); Console.WriteLine(json); } } } } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														GET Keyword
												Node:
												(type) c
												(layer)4
													Element:p
														Lookup general information about your mobile keywords, including ID, name, and short code, or more detailed information, like auto-response message, for an individual keyword.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Resource Information
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:td
														Response Formats
													Element:td
														JSON
													Element:tr
													Element:td
														Allowed Methods
													Element:td
														GET
													Element:tr
													Element:td
														URL
													Element:td
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/keyword
													Element:br
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/keyword/{keyword_id}
													Element:tr
													Element:td
														{user_name}
													Element:td
														Your account username (this can be found in the Account Settings page after logging in.)
													Element:tr
													Element:td
														{keyword_id}
													Element:td
														Get information about a specific keyword using the keyword_id.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Header Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Content-Type
													Element:span
														&ast;
													Element:td
														application/json
													Element:tr
													Element:td
														X-Apikey
													Element:span
														&ast;
													Element:td
														Your API key (This can be found in the API Settings page after logging in.)
													Element:br
													Element:br
														Example value: 123456789abc1011
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Code sample for GET Keyword
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														"Request Example (to retrieve general information for all your keywords): GET http://api.trumpia.com/rest/v1/{user_name}/keyword"
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"keyword"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														{
													Element:span
														"keyword_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"987987987980"
													Element:span
														,
													Element:span
														"keyword"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"testKeyword"
													Element:span
														,
													Element:span
														"shortcode"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"95577"
													Element:span
														},
													Element:span
													Element:span
														{
													Element:span
														"keyword_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"987987987981"
													Element:span
														,
													Element:span
														"keyword"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"testKeyword"
													Element:span
														,
													Element:span
														"shortcode"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"95577"
													Element:span
														},
													Element:span
													Element:span
														{
													Element:span
														"keyword_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"987987987982"
													Element:span
														,
													Element:span
														"keyword"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"testKeyword"
													Element:span
														,
													Element:span
														"shortcode"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"95577"
													Element:span
														}
													Element:span
													Element:span
														]
													Element:span
													Element:span
														}
													Element:span
													Element:span
														"Request Example (to retrieve complete information for a specific keyword): GET http://api.trumpia.com/rest/v1/{user_name}/keyword/{keyword_id}"
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"keyword"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"testKeyword"
													Element:span
														,
													Element:span
													Element:span
														"auto_response_message"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"This is the keyword message."
													Element:span
														,
													Element:span
													Element:span
														"shortcode"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"95577"
													Element:span
														,
													Element:span
													Element:span
														"alternative_message"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"Hi there!"
													Element:span
														,
													Element:span
													Element:span
														"alternative_coupon"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"This is the alternative coupon message."
													Element:span
													Element:span
														}
													Element:span
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<? //GET Keyword - Retrieve all keywords. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/keyword"; $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setMethod("GET"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success echo $json_response_data; } else { echo $response_status ." - connection failure"; } ?> <? // GET Keyword - Retrieve a keyword by ID. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/keyword"; $keyword_id = "987987987980"; $request_url = $request_url . "/" . $keyword_id; $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setMethod("GET"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success echo $json_response_data; } else { echo $response_status ." - connection failure"; } ?>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														//GET Keyword - Retrieve all keywords. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>Keyword Get All Sample Code</title> <body> <% String username = "username"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/keyword"; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html> // GET Keyword - Retrieve a keyword by ID. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>Keyword Get By Id Sample Code</title> <body> <% String username = "username"; String keywordId = "987987987980"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/keyword/" + keywordId; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														//GET Keyword - Retrieve all keywords. using Newtonsoft.Json; using Newtonsoft.Json.Linq; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class KeywordInfo { public JArray keyword { get; set;} } class KeywordGet { static void Main(string[] args) { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.BaseAddress = new Uri("http://api.trumpia.com"); client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; //GET HttpResponseMessage response = await client.GetAsync(string.Format("/rest/v1/{0}/keyword", username)); if (response.IsSuccessStatusCode) { KeywordInfo keywordInfo = await response.Content.ReadAsAsync<KeywordInfo>(); string json = JsonConvert.SerializeObject(keywordInfo); Console.WriteLine(json); } } } } } // GET Keyword - Retrieve a keyword by ID. using Newtonsoft.Json; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class KeywordInfo { public string keyword { get; set; } public string shortcode { get; set; } public string auto_response_message { get; set; } public string alternative_message { get; set; } } class KeywordDetailGet { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.BaseAddress = new Uri("http://api.trumpia.com"); client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; var keywordId = "987987987980"; //GET HttpResponseMessage response = await client.GetAsync(string.Format("/rest/v1/{0}/keyword/{1}", username, keywordId)); if (response.IsSuccessStatusCode) { KeywordInfo keywordInfo = await response.Content.ReadAsAsync<KeywordInfo>(); string json = JsonConvert.SerializeObject(keywordInfo); Console.WriteLine(json); } } } } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														POST Keyword
												Node:
												(type) c
												(layer)4
													Element:p
														Update your mobile keyword and auto-response message. All values can be changed except for the name of your keyword (i.e., "keyword" parameter).
												Node:
												(type) c
												(layer)4
													Element:aside
														You will only need to include parameters that will be updated. Be sure to include existing and new values. Parameters that will remain the same value can be excluded.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Resource Information
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:td
														Response Formats
													Element:td
														JSON
													Element:tr
													Element:td
														Allowed Methods
													Element:td
														POST
													Element:tr
													Element:td
														URL
													Element:td
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/keyword/{keyword_id}
													Element:tr
													Element:td
														{user_name}
													Element:td
														Your account username (this can be found in the Account Settings page after logging in.)
													Element:tr
													Element:td
														{keyword_id}
													Element:td
														The keyword_id that is being edited.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Header Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Content-Type
													Element:span
														&ast;
													Element:td
														application/json
													Element:tr
													Element:td
														X-Apikey
													Element:span
														&ast;
													Element:td
														Your API key (This can be found in the API Settings page after logging in.)
													Element:br
													Element:br
														Example value: 123456789abc1011
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Body Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														lists
													Element:td
														The list_name to which the keyword is attached. Contacts will be automatically added to the list.
													Element:tr
													Element:td
														allow_message
													Element:td
														This enables users to add their own message or response after the keyword. This message will be sent to your Inbox.
													Element:tr
													Element:td
														auto_response
													Element:td
														Configure the settings of your auto-response message. See Auto Response Object table below.
													Element:tr
													Element:td
														org_name_id
													Element:td
														The organization name ID you wish to include in the mobile message. Only registered organization name IDs can be used. You can get the registered organization name IDs via
													Element:a
														GET Organization Name
														. The default organization name is used if this parameter is not specified.
													Element:tr
													Element:td
														notify
													Element:td
														Configure to be notified of any messages from your users. Either email or mobile must be set.
													Element:br
														- After successful update, subscription must exist if notify exists on the keyword.
													Element:br
														- After successful update, either email or mobile must exist if notify exists on the keyword.
													Element:br
														See Notify Object table below.
													Element:tr
													Element:td
														optin_type
													Element:td
														The opt-in types for keyword sign-up.
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														1
													Element:td
														Single Opt-In: The subscriber only needs to text in a keyword to complete their sign-up.
													Element:tr
													Element:td
														2
													Element:td
														Double Opt-In: After a subscriber texts in a keyword, they will be asked to reply yes or no to verify their sign-up. If they reply yes, their sign-up is complete.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														> Auto Response Object
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														message
													Element:td
														The content of your auto-response message.
													Element:a
														Supported Character Set
														.
													Element:br
													Element:br
														Character limits vary per country. The maximum length for a message is 160 characters as default. For instance, SMS messages for Canadian accounts are limited to 140 characters. Although a 160 character message can be sent in full to US mobile numbers, Canadian mobile devices will only receive the first 140 characters.
													Element:br
													Element:br
														Also, please note that the SMS header and footer are counted as part of the message and should be taken into consideration when composing a message.
													Element:tr
													Element:td
														frequency
													Element:td
														The number of times an auto-response message will be delivered when a user texts in the keyword.
													Element:table
														Default value: 1
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														1
													Element:td
														everytime
													Element:tr
													Element:td
														2
													Element:td
														only once per mobile number
													Element:tr
													Element:td
														3
													Element:td
														only once every day
													Element:tr
													Element:td
														alternative_message
													Element:td
														The content of an alternative auto-response message. This message will be sent if a user texts in the keyword more than once.
													Element:a
														Supported Character Set
														.
													Element:br
													Element:br
														Character limits vary per country. The maximum length for a message is 160 characters as default. For instance, SMS messages for Canadian accounts are limited to 140 characters. Although a 160 character message can be sent in full to US mobile numbers, Canadian mobile devices will only receive the first 140 characters.
													Element:br
													Element:br
														Also, please note that the SMS header and footer are counted as part of the message and should be taken into consideration when composing a message.
													Element:tr
													Element:td
														alternative_coupon
													Element:td
														This alternate message will be sent to your user in case you have run out of coupon codes. To set up a coupon code to be inserted into the message of your auto-response or alternative_message, you must login to your account dashboard.
													Element:br
													Element:br
														Character limits vary per country. The maximum length for a message is 160 characters as default. For instance, SMS messages for Canadian accounts are limited to 140 characters. Although a 160 character message can be sent in full to US mobile numbers, Canadian mobile devices will only receive the first 140 characters.
													Element:br
													Element:br
														Also, please note that the SMS header and footer are counted as part of the message and should be taken into consideration when composing a message.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														> Notify Object
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														email
													Element:td
														Email address where a notification will be sent when a person signs up via this keyword.
													Element:br
													Element:br
														Example value: testemail@testdomain.com
													Element:tr
													Element:td
														mobile
													Element:td
														Mobile phone numbers where a notification will be sent when a person signs up via this keyword.
													Element:br
													Element:br
														Example value: 2003004000
													Element:tr
													Element:td
														subscription
													Element:td
														Valid value is all or new.
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														all
													Element:td
														Notify for all subscriptions.
													Element:tr
													Element:td
														new
													Element:td
														Notify only when the subscriber's mobile number is new to your subscription database.
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Code samples for POST Keyword
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														"Request Example: POST http://api.trumpia.com/rest/v1/{user_name}/keyword/{keyword_id}"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"notify"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"email"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"subscriber_email0001@api.trumpia.com"
													Element:span
														,
													Element:span
													Element:span
														"mobile"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"2003004000"
													Element:span
													Element:span
														}
													Element:span
													Element:span
														}
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"request_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"1234561234567asdf123"
													Element:span
													Element:span
														}
													Element:span
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<? // POST Keyword - Update a keyword. include "
													Element:a
														request_rest.php
														"; $request_url = "api.trumpia.com/rest/v1/{user_name}/keyword"; $keyword_id = "987987987980"; $request_url = $request_url . "/" . $keyword_id; $request_data = array( "lists" => "987987987980,987987987981,987987987982", "allow_message" => "TRUE", "auto_response" => array("message"=>"auto response message edit", "frequency"=>"2", "alternative_message"=>"alternative message edit"), "notify" => array("email"=>"subscriber_email0001@trumpia.com", "mobile"=>"2003004000", "subscription"=>"NEW") ); $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setRequestBody(json_encode($request_data)); $request_rest->setMethod("POST"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success $response_data = json_decode($json_response_data); echo "request_id : " . $response_data->request_id; } else { echo $response_status ." - connection failure"; } ?>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// POST Keyword - Update a keyword. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>Keyword Post Sample Code</title> <body> <% String username = "username"; String keywordId = "987987987980"; String lists = "987987987980,987987987981,987987987982"; String allowMessage = "TRUE"; JSONObject autoResponse = new JSONObject(); autoResponse.put("message", "auto response message edit"); autoResponse.put("frequency", "2"); autoResponse.put("alternative_message", "alternative message edit"); JSONObject notify = new JSONObject(); notify.put("email", "subscriber_email0001@trumpia.com"); notify.put("mobile", "2003004000"); notify.put("subscription", "NEW"); JSONObject keywordPost = new JSONObject(); keywordPost.put("lists", lists); keywordPost.put("allow_message", allowMessage); keywordPost.put("auto_response", autoResponse); keywordPost.put("notify", notify); String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/keyword/" + keywordId; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestMethod("POST"); conn.setDoOutput(true); conn.setDoInput(true); conn.setUseCaches(false); conn.setAllowUserInteraction(false); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); OutputStream outPutStream = conn.getOutputStream(); Writer writer = new OutputStreamWriter(outPutStream, "UTF-8"); writer.write(listPost.toJSONString()); writer.close(); outPutStream.close(); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// POST Keyword - Update a keyword. using Newtonsoft.Json; using Newtonsoft.Json.Linq; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class KeywordInfo { public string lists { get; set; } public string allow_message { get; set; } public JObject auto_response { get; set; } public JObject notify { get; set; } } class Result { public string request_id { get; set; } } class KeywordPost { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; var keywordId = "987987987980"; //POST JObject autoResponseData = new JObject(); autoResponseData.Add("message", "hi this is auto response message"); autoResponseData.Add("frequency", "2"); autoResponseData.Add("alternative_message", "welcome back :)"); JObject notifyData = new JObject(); notifyData.Add("subscription", "new"); notifyData.Add("email", "subscriber_email0001@trumpia.com"); var list = new KeywordInfo() { lists = "987987987980,987987987981", allow_message = "TRUE", auto_response = autoResponseData, notify = notifyData }; Uri postUrl = new Uri(string.Format("http://api.trumpia.com/rest/v1/{0}/keyword/{1}", username, keywordId)); var response = client.PostAsJsonAsync(postUrl, list).Result; if (response.IsSuccessStatusCode) { var p = response.Content.ReadAsAsync<Result>().Result; string json = JsonConvert.SerializeObject(p); Console.WriteLine(json); } } } } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														DELETE Keyword
												Node:
												(type) c
												(layer)4
													Element:p
														Permanently delete a mobile keyword.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Resource Information
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:tbody
													Element:tr
													Element:td
														Response Formats
													Element:td
														JSON
													Element:tr
													Element:td
														Allowed Methods
													Element:td
														DELETE
													Element:tr
													Element:td
														URL
													Element:td
													Element:code
														http://api.trumpia.com/rest/v1/{user_name}/keyword/{keyword_id}
													Element:tr
													Element:td
														{user_name}
													Element:td
														Your account username (this can be found in the Account Settings page after logging in.)
													Element:tr
													Element:td
														{keyword_id}
													Element:td
														The keyword_id that will be deleted. Keyword_ids can be found using GET Keyword.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Header Parameters
												Node:
												(type) c
												(layer)4
													Element:span
													Element:strong
														&ast;
														required parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:colgroup
													Element:col
													Element:col
													Element:thead
													Element:tr
													Element:th
														Parameter
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														Content-Type
													Element:span
														&ast;
													Element:td
														application/json
													Element:tr
													Element:td
														X-Apikey
													Element:span
														&ast;
													Element:td
														Your API key (This can be found in the API Settings page after logging in.)
													Element:br
													Element:br
														Example value: 123456789abc1011
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														Code sample for DELETE Keyword
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														"Request Example:"
													Element:span
													Element:span
														"DELETE http://api.trumpia.com/rest/v1/{user_name}/keyword/{keyword_id}"
													Element:span
													Element:span
														"Response Example:"
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"request_id"
													Element:span
													Element:span
														:
													Element:span
													Element:span
														"1234561234567asdf123"
													Element:span
													Element:span
														}
													Element:span
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<? // DELETE Keyword - Delete a keyword. include "
													Element:a
														request_rest.php
														"; $request_url = "http://api.trumpia.com/rest/v1/{user_name}/keyword"; $keyword_id = "987987987980"; $request_url = $request_url . "/" . $keyword_id; $request_rest = new RestRequest(); $request_rest->setRequestURL($request_url); $request_rest->setAPIKey("{api_key}"); $request_rest->setMethod("DELETE"); $result = $request_rest->execute(); $response_status = $result[0]; $json_response_data = $result[1]; if ($response_status == "200") { //success echo $json_response_data; } else { echo $response_status ." - connection failure"; } ?>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// DELETE Keyword - Delete a keyword. <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> <%@ page import="org.json.simple.JSONArray" %> <%@ page import="org.json.simple.JSONObject" %> <%@ page import="java.io.BufferedReader" %> <%@ page import="java.io.IOException" %> <%@ page import="java.io.InputStreamReader" %> <%@ page import="java.io.OutputStream" %> <%@ page import="java.io.OutputStreamWriter" %> <%@ page import="java.io.Writer" %> <%@ page import="java.net.HttpURLConnection" %> <%@ page import="java.net.URL" %> <html> <title>Keyword Delete Sample Code</title> <body> <% String username = "username"; String keywordId = "987987987980"; String urlStr = "http://api.trumpia.com/rest/v1/" + username + "/keyword/" + keywordId; URL url = new URL(urlStr); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); conn.setRequestMethod("DELETE"); conn.setDoOutput(true); conn.setAllowUserInteraction(false); conn.setRequestProperty("Content-type", "application/json"); conn.setRequestProperty("X-Apikey", "12345aaaaa67890aaaaa"); if (conn.getResponseCode() != 200) { %> Error : <%=conn.getResponseMessage()%> <% }else{ // Buffer the result into a string BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuilder sb = new StringBuilder(); String line; while ((line = rd.readLine()) != null) { sb.append(line); } rd.close(); conn.disconnect(); %> Response : <%=sb.toString()%> <% } %> </body> </html>
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														// DELETE Keyword - Delete a keyword. using Newtonsoft.Json; using System; using System.Collections.Generic; using System.Linq; using System.Net.Http; using System.Net.Http.Headers; using System.Text; using System.Threading.Tasks; namespace samplecode { class Result { public string request_id { get; set; } } class KeywordDelete { static void Main() { RunAsync().Wait(); } static async Task RunAsync() { using (var client = new HttpClient()) { var apikey = "12345aaaaa67890aaaaa"; client.DefaultRequestHeaders.Accept.Clear(); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json")); client.DefaultRequestHeaders.Add("X-Apikey", string.Format("{0}", apikey)); var username = "username"; var keywordId = "987987987980"; //DELETE Uri deleteUrl = new Uri(string.Format("http://api.trumpia.com/rest/v1/{0}/keyword/{1}", username, keywordId)); var response = client.DeleteAsync(deleteUrl).Result; if (response.IsSuccessStatusCode) { var p = response.Content.ReadAsAsync<Result>().Result; string json = JsonConvert.SerializeObject(p); Console.WriteLine(json); } } } } }
												Node:
												(type) c
												(layer)4
													Element:a
														JSON
												Node:
												(type) c
												(layer)4
													Element:a
														PHP
												Node:
												(type) c
												(layer)4
													Element:a
														JSP
												Node:
												(type) c
												(layer)4
													Element:a
														C#
												Node:
												(type) c
												(layer)4
													Element:a
														SOURCE COPY
												Node:
												(type) c
												(layer)4
													Element:footer
														Trumpia is a DBA of DoCircle, Inc. All rights reserved.
													Element:br
														*Message and data rates may apply.
													Element:strong
													Element:a
														1-888-707-3030
													Element:span
														1-888-707-3030
														/ support@trumpia.com
													Element:br
														6:00 AM - 6:00 PM Pacific (Weekdays) / 8:00 AM - 4:00 PM Pacific (Weekend)
													Element:a
													Element:span
													Element:br
														Go to top
												Node:
												(type) c
												(layer)4
													Element:noscript
													Element:img
