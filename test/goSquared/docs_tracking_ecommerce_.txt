Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Ecommerce tracking with GoSquared
			Node:
			(type) c
			(layer)1
				Element:p
					Transactions are a special type of event, used to track when a user has purchased something from you. The data is reported in
				Element:a
					Ecommerce Analytics
					and
				Element:a
					People Analytics
					.
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					// transaction ID should be unique and must be specified.
				Element:span
					var
					transactionID =
				Element:span
					'transaction-id'
					; _gs(
				Element:span
					'transaction'
					, transactionID, {
				Element:span
					// track immediately
					track:
				Element:span
					true
					}, [ {
				Element:span
					name
					:
				Element:span
					'Product 1'
					,
				Element:span
					price
					:
				Element:span
					1
					,
				Element:span
					quantity
					:
				Element:span
					5
					}, {
				Element:span
					name
					:
				Element:span
					'Product 2'
					,
				Element:span
					price
					:
				Element:span
					5
					,
				Element:span
					category
					:
				Element:span
					'Test Products'
					} ]);
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
					GoSquared =
				Element:span
					require
					(
				Element:span
					'gosquared'
					);
				Element:span
					var
					gosquared =
				Element:span
					new
					GoSquared({
				Element:span
					site_token
					:
				Element:span
					'your-site-token'
					,
				Element:span
					api_key
					:
				Element:span
					'your-api-key'
					});
				Element:span
					// transaction ID should be unique and must be specified.
				Element:span
					var
					transactionID =
				Element:span
					'transaction-id'
					;
				Element:span
					var
					transaction = gosquared.createTransaction(transactionID); transaction.addItems([ {
				Element:span
					name
					:
				Element:span
					'Product 1'
					,
				Element:span
					price
					:
				Element:span
					1
					,
				Element:span
					quantity
					:
				Element:span
					5
					}, {
				Element:span
					name
					:
				Element:span
					'Product 2'
					,
				Element:span
					price
					:
				Element:span
					5
					,
				Element:span
					category
					:
				Element:span
					'Test Products'
					} ]); transaction.track(
				Element:span
					{});
				Element:span
					function
					(
				Element:span
					err, resp
					)
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					require_once
					(
				Element:span
					'gosquared-php-sdk/main.php'
					); $GS =
				Element:span
					new
					GoSquared(
				Element:span
					array
					(
				Element:span
					'site_token'
					=>
				Element:span
					'your-site-token'
					,
				Element:span
					'api_key'
					=>
				Element:span
					'your-api-key'
					));
				Element:span
					// transaction ID should be unique and must be specified.
					$transactionID =
				Element:span
					'transaction-id'
					; $transaction = $GS->Transaction($transactionID); $transaction->add_items(
				Element:span
					array
					(
				Element:span
					array
					(
				Element:span
					'name'
					=>
				Element:span
					'Product 1'
					,
				Element:span
					'price'
					=>
				Element:span
					1
					,
				Element:span
					'quantity'
					=>
				Element:span
					5
					),
				Element:span
					array
					(
				Element:span
					'name'
					=>
				Element:span
					'Product 2'
					,
				Element:span
					'price'
					=>
				Element:span
					5
					,
				Element:span
					'category'
					=>
				Element:span
					'Test Products'
					) )); $result = $transaction->track();
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Track transactions for a specific person
						Node:
						(type) c
						(layer)2
							Element:p
								When an identified user triggers a transaction, you can track it with their user ID to associate it with their profile. Once tracked, you can search, filter and sort your users in
							Element:a
								People Analytics
								to find people who have made transactions.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
							Element:span
								// so long as the user has been identified, this can be exactly the same as above
							Element:span
								// transaction ID should be unique and must be specified.
							Element:span
								var
								transactionID =
							Element:span
								'transaction-id'
								; _gs(
							Element:span
								'transaction'
								, transactionID, {
							Element:span
								// track immediately
								track:
							Element:span
								true
								}, [ {
							Element:span
								name
								:
							Element:span
								'Product 1'
								,
							Element:span
								price
								:
							Element:span
								1
								,
							Element:span
								quantity
								:
							Element:span
								5
								} ]);
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
							Element:span
								var
								GoSquared =
							Element:span
								require
								(
							Element:span
								'gosquared'
								);
							Element:span
								var
								gosquared =
							Element:span
								new
								GoSquared({
							Element:span
								site_token
								:
							Element:span
								'your-site-token'
								,
							Element:span
								api_key
								:
							Element:span
								'your-api-key'
								});
							Element:span
								// transaction ID should be unique and must be specified.
							Element:span
								var
								transactionID =
							Element:span
								'transaction-id'
								;
							Element:span
								var
								person = gosquared.createPerson(
							Element:span
								'user-id'
								);
							Element:span
								var
								transaction = person.createTransaction(transactionID); transaction.addItem(
							Element:span
								'My Product'
								, {
							Element:span
								price
								:
							Element:span
								10
								,
							Element:span
								quantity
								:
							Element:span
								1
								}); transaction.track(
							Element:span
								{});
							Element:span
								function
								(
							Element:span
								err, resp
								)
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
							Element:span
								require_once
								(
							Element:span
								'gosquared-php-sdk/main.php'
								); $GS =
							Element:span
								new
								GoSquared(
							Element:span
								array
								(
							Element:span
								'site_token'
								=>
							Element:span
								'your-site-token'
								,
							Element:span
								'api_key'
								=>
							Element:span
								'your-api-key'
								)); $person = $GS->Person(
							Element:span
								'user-id'
								);
							Element:span
								// transaction ID should be unique and must be specified.
								$transactionID =
							Element:span
								'transaction-id'
								; $transaction = $person->Transaction($transactionID); $transaction->add_item(
							Element:span
								'My Product'
								,
							Element:span
								array
								(
							Element:span
								'price'
								=>
							Element:span
								10
								,
							Element:span
								'quantity'
								=>
							Element:span
								1
								)); $result = $transaction->track();
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Custom transaction properties
						Node:
						(type) c
						(layer)2
							Element:p
								By default, the total quantity and revenue for a transaction is calculated by summing up each individual item. This can be overridden, which can be useful if coupons have been applied or for certain specific cases. If
							Element:code
								revenue
								is specified for an individual item, that will be used instead of the
							Element:code
								price Ã— quantity
								. If no quantity is provided, it is assumed to be 1.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
							Element:span
								// transaction ID should be unique and must be specified.
							Element:span
								var
								transactionID =
							Element:span
								'transaction-id'
								; _gs(
							Element:span
								'transaction'
								, transactionID, {
							Element:span
								track
								:
							Element:span
								true
								,
							Element:span
								revenue
								:
							Element:span
								119.99
								,
							Element:span
								quantity
								:
							Element:span
								1
								}, [ {
							Element:span
								name
								:
							Element:span
								'Product 1'
								,
							Element:span
								revenue
								:
							Element:span
								119.99
								} ]);
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
							Element:span
								var
								GoSquared =
							Element:span
								require
								(
							Element:span
								'gosquared'
								);
							Element:span
								var
								gosquared =
							Element:span
								new
								GoSquared({
							Element:span
								site_token
								:
							Element:span
								'your-site-token'
								,
							Element:span
								api_key
								:
							Element:span
								'your-api-key'
								});
							Element:span
								// transaction ID should be unique and must be specified.
							Element:span
								var
								transactionID =
							Element:span
								'transaction-id'
								;
							Element:span
								var
								transaction = gosquared.createTransaction(transactionID, {
							Element:span
								revenue
								:
							Element:span
								119.99
								,
							Element:span
								quantity
								:
							Element:span
								1
								}); transaction.addItem(
							Element:span
								'Product 1'
								, {
							Element:span
								revenue
								:
							Element:span
								119.99
								}); transaction.track(
							Element:span
								{});
							Element:span
								function
								(
							Element:span
								err, resp
								)
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
							Element:span
								require_once
								(
							Element:span
								'gosquared-php-sdk/main.php'
								); $GS =
							Element:span
								new
								GoSquared(
							Element:span
								array
								(
							Element:span
								'site_token'
								=>
							Element:span
								'your-site-token'
								,
							Element:span
								'api_key'
								=>
							Element:span
								'your-api-key'
								));
							Element:span
								// transaction ID should be unique and must be specified.
								$transactionID =
							Element:span
								'transaction-id'
								; $transaction = $GS->Transaction($transactionID,
							Element:span
								array
								(
							Element:span
								'revenue'
								=>
							Element:span
								119.99
								,
							Element:span
								'quantity'
								=>
							Element:span
								1
								)); $transaction->add_item(
							Element:span
								'Peoduct 1'
								,
							Element:span
								array
								(
							Element:span
								'revenue'
								=>
							Element:span
								119.99
								)); $result = $transaction->track();
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Next Steps
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								Read the
							Element:a
								full reference
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:a
							Element:p
								Beautifully simple software to grow your business. Proudly made in London.
							Element:a
							Element:img
							Element:a
							Element:img
							Element:a
							Element:img
							Element:p
								Â© 2006â€“2017 Go Squared Ltd.
