Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					OAuth
			Node:
			(type) c
			(layer)1
				Element:hr
					SynapsePay uses OAuth 2.0 for authentication. This means when you register a user to SynapsePay, you get back `oauth_key` & `refresh_token` on the user to access all of the user functionality. This resource lets you get a new `oauth_key` and `refresh_token` when the old ones expire. ## Authentication (OAuth + Fingerprint) SynapsePay uses OAuth 2.0 for authentication. This means when you register a user to SynapsePay, you get back oauth_key & refresh_token on the user. OAuth Key currently expires in 2 hours. After OAuth Key expires, you can use the refresh token to generate a new OAuth Key. When the OAuth Key is refreshed, a new refresh token might be issued as well. Refresh tokens expire after 10 uses and update periodically. We manage this complexity for you. To get the most recent Refresh token, do a [GET](doc:get-user) on user. Along with OAuth, the core network also uses device fingerprints for authentication. Fingerprints are used to identify the device that is trying to access a user's information. You need to supply fingerprints when you create a user. Additionally, you can incorporate two factor authentication ("2FA") into your user login process when your user connects with a different device. To do so, just supply the new, non-verified fingerprint. If the user supplies a non-verified fingerprint at login, the user will be directed to the 2FA process. We return the linked phone numbers in the API call response with key "phone_numbers". You can let the user select the phone number from that list and then make the API call again by specifying the phone_number you want the 2FA to be sent. This will trigger the 2FA protocol and a PIN will be sent to the selected phone number. The user will be able to verify the device via this API call itself. You can supply "validation_pin" under the user object and the verification will be triggered. *Here's a useful [blog post](https://discuss.synapsepay.com/t/collecting-fingerprints-on-different-devices/18) for collecting fingerprints. > If you do not want to use 2FA, store the fingerprint used when creating the user and supply the fingerprint when performing actions with the user. This way the system will not detect a new device and no 2FAs will be triggered. > To avoid storing the fingerprint, you can also pass a hashed version of your `user_pk+client_id+client_secret`. That way the value is still somewhat secret, but you won't need to store it for each unique user.
			Node:
			(type) c
			(layer)1
				Element:footer
				Element:a
					readme.io
