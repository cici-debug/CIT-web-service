Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Users
			Node:
			(type) c
			(layer)1
				Element:hr
					User resources are generic user classes that store basic information regarding a user or business. ## User Object [block:html] { "html": "<div class=\"api-manager\"><div class=\"param-table\"><div class=\"table\"><div class=\"tr\"><div class=\"td param\"><strong>_id<span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Object ID of a user object</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">_links.self.</span>href<span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>HAL style link for the user object</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">client.</span>id<span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">integer</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>ID of the client where the user was created</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">client.</span>name<span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Name of the client that created the user</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">doc_status.</span>physical_doc<span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>[DEPRECATED] Status of physical document verification</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">doc_status.</span>virtual_doc<span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>[DEPRECATED] Status of virtual document verification</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">documents[</span>id<span class=\"text-muted\">]</span><span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>ID of the document</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">documents[</span>name<span class=\"text-muted\">]</span><span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Name of the document owner</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">documents[</span>permission_scope<span class=\"text-muted\">]</span><span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Permission scope of the document. More details can be <a href=\"#document-permission-scope\">found here</a>.</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">documents.physical_docs.[</span>id<span class=\"text-muted\">]</span><span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>ID of the physical document</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">documents.physical_docs.[</span>document_type<span class=\"text-muted\">]</span><span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Type of the physical document</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">documents.physical_docs.[</span>last_updated<span class=\"text-muted\">]</span><span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">integer</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Date when the document was last updated. The value is a unix timestamp in milliseconds.</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">documents.physical_docs.[</span>status<span class=\"text-muted\">]</span><span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Status of the physical document.</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">documents.social_docs.[</span>id<span class=\"text-muted\">]</span><span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>ID of the social document</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">documents.social_docs.[</span>document_type<span class=\"text-muted\">]</span><span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Type of the social document</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">documents.social_docs.[</span>last_updated<span class=\"text-muted\">]</span><span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">integer</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Date when the document was last updated. The value is a unix timestamp in milliseconds.</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">documents.social_docs.[</span>status<span class=\"text-muted\">]</span><span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Status of the social document.</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">documents.virtual_docs.[</span>id<span class=\"text-muted\">]</span><span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>ID of the virtual document</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">documents.virtual_docs.[</span>document_type<span class=\"text-muted\">]</span><span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Type of the virtual document</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">documents.virtual_docs.[</span>last_updated<span class=\"text-muted\">]</span><span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">integer</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Date when the document was last updated. The value is a unix timestamp in milliseconds.</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">documents.virtual_docs.[</span>status<span class=\"text-muted\">]</span><span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Status of the virtual document.</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">extra.</span>date_joined<span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">integer</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Date when the user was created. The value is a unix timestamp in milliseconds.</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">extra.</span>is_business<span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">boolean</strong><span class=\"param-default text-muted\">false</span><div marked=\"\" class=\"ng-isolate-scope\"><p>Boolean that denotes if the user object is a business account or personal.</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">extra.</span>supp_id<span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Any supplied ID given by the client that created the user</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">extra.</span>cip_tag<span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">integer</strong><span class=\"param-default text-muted\">1</span><div marked=\"\" class=\"ng-isolate-scope\"><p>CIP tag assigned to the user profile.</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong>is_hidden<span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">boolean</strong><span class=\"param-default text-muted\">false</span><div marked=\"\" class=\"ng-isolate-scope\"><p>Value denotes if the user can be searched by email/name on Synapse services</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong>legal_names<span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">array of strings</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Legal names/Full names associated with the user object</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">logins[</span>email<span class=\"text-muted\">]</span><span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Email associated with the login</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong><span class=\"text-muted\">logins[</span>scope<span class=\"text-muted\">]</span><span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><span class=\"param-default text-muted\">READ_AND_WRITE</span><div marked=\"\" class=\"ng-isolate-scope\"><p>Value denotes what permissions the login credentials has. Currently only two scopes are supported: READ_AND_WRITE &amp; READ.</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong>permission<span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Denotes the account standing. Look at the user permissions section below to learn more</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong>phone_numbers<span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">array of strings</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Phone numbers/2FA devices associated with the user</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong>photos<span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">array of strings</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>Public avatars associated with the account</p>\n</div></div></div><div class=\"tr\"><div class=\"td param\"><strong>refresh_token<span class=\"colon\">:</span></strong></div><div class=\"td\"> <strong class=\"param-type\">string</strong><div marked=\"\" class=\"ng-isolate-scope\"><p>The refresh token associated with the user and your gateway</p>\n</div></div></div></div></div></div>" } [/block] ## User Types User resources can be used to register two account types: [block:parameters] { "data": { "h-0": "Account Type", "h-1": "Comment", "0-0": "Individual", "1-0": "Business", "0-1": "Used to register a personal account.", "1-1": "Used to register a business entity account." }, "cols": 2, "rows": 2 } [/block] ## Customer Identification Program (CIP) & Know Your Customer (KYC) CIP & KYC are important components of running a successful FinTech business. You can utilize Synapse's CIP tools to validate customer information and stay compliant. Depending upon the CIP program you wish to put in place, Synapse recognizes three types of documents: **1. Physical Documents:** These are images of documents being uploaded to Synapse for verification. Eg. Image of a Driver's License, Proof of Address, etc. A complete list of documents that we are capable of verifying as physical documents can be found [here](#physical-document-types). **2. Virtual Documents:** Documents uploaded in meta data form are called virtual documents. Eg. SSN Number, TIN, etc. A complete list of documents that we are capable of verifying as virtual documents can be found [here](#virtual-document-types). **3. Social Documents:** If you use Facebook, Twitter or Linkedin for singing up customers, you can supply those URLs as a form of identity as well. A complete list of documents that we are capable of verifying as social documents can be found [here](#social-document-types). ## Authentication (OAuth + Fingerprint) [Guide to user fingerprints](doc:oauth-resources) ## User Permissions Every user in Synapse has a set of permissions. The permissions dictate what the user can and cannot do within the network. You can find the user permission associated with each user under the permissions key on the user JSON response. Following are the user permissions and what they mean. [block:parameters] { "data": { "h-0": "Permission", "h-1": "Comment", "0-0": "UNVERIFIED", "1-0": "RECEIVE", "2-0": "SEND-AND-RECEIVE", "3-0": "LOCKED", "0-1": "User has been created in the system, but has not been verified yet. This means the user instance has been created, but no KYC information has been supplied on the user.", "1-1": "The user may only receive funds given the user has been created.", "2-1": "The user may send or receive funds.", "3-1": "User account has been locked by Synapse. This can happen because of multiple reasons but mostly fraud related." }, "cols": 2, "rows": 4 } [/block] ## Document Status Along with the user permissions, you can also view the status of user's documents. Same document status conversations are followed for all 3 document types ([Physical](#physical-document-types), [Virtual](#virtual-document-types) & [Social](#social-document-types)). Following are different document statues and what they mean. [block:parameters] { "data": { "h-0": "Status", "h-1": "Comment", "0-0": "MISSING|INVALID", "1-0": "RESUBMIT|INVALID", "2-0": "SUBMITTED", "5-0": "SUBMITTED|VALID", "0-1": "Document has not been uploaded yet.", "1-1": "Document invalid, resubmission needed.", "2-1": "Document was submitted but not validated.", "5-1": "Document is valid.", "4-0": "SUBMITTED|INVALID", "4-1": "Document invalid, but resubmission not needed.", "3-0": "SUBMITTED|REVIEWING", "3-1": "Document uploaded and is being reviewed." }, "cols": 2, "rows": 6 } [/block] ## Document Permission Scope Each document is given permissions based on the CIP program put in place for your gateway. This helps decide over all permissions associated with the user account. Permission scope helps determine if the user is allowed to send funds, receive funds and up to what amount (daily, weekly or monthly). If multiple documents are submitted on the profile, the worst permission scope ends up being the permissions associated with the user account. This makes sure that your CIP program is never invalidated, thus keeping you compliant. Following are the examples of different kinds of permission scopes [block:parameters] { "data": { "h-0": "Permission Scope", "h-1": "Comment", "0-0": "RECEIVE|5000|DAILY", "0-1": "The user has receive-only permissions up to 5,000 units (any currency) per day.", "1-0": "RECEIVE|5000|MONTHLY", "1-1": "The user has receive-only permissions up to 5,000 units (any currency) every month.", "2-0": "SEND|RECEIVE|5000|DAILY", "2-1": "The user can send or receive funds up to 5,000 units (any currency) every day." }, "cols": 2, "rows": 3 } [/block] So as you can see, permission scopes follow the following syntax: `PERMISSON(1)|PERMISSION(2)|PERMISSON(n)|ALLOWED_AMOUNT|FREQUENCY`. ## Supported Entity Types [block:parameters] { "data": { "h-0": "Entity Types", "h-1": "Comment", "0-0": "M", "1-0": "F", "2-0": "O", "4-0": "LLC", "5-0": "CORP", "6-0": "PARTNERSHIP", "7-0": "SOLE-PROPRIETORSHIP", "0-1": "Male", "1-1": "Female", "2-1": "Other", "4-1": "Limited Liability Company", "5-1": "Corporation", "6-1": "Any type of partnership", "7-1": "Sole proprietorship", "3-0": "NOT_KNOWN", "3-1": "Do not wish to specify (acceptable in case of Individuals only)", "8-0": "TRUST", "8-1": "Trust", "9-0": "ESTATE", "9-1": "Estate" }, "cols": 2, "rows": 10 } [/block] ## Supported Entity Scope [block:parameters] { "data": { "0-0": "Not Known", "h-0": "Entity Scopes", "1-0": "Airport", "2-0": "Arts & Entertainment", "3-0": "Automotive", "4-0": "Bank & Financial Services", "5-0": "Bar", "6-0": "Book Store", "7-0": "Business Services", "8-0": "Religious Organization", "9-0": "Club", "10-0": "Community/Government", "11-0": "Concert Venue", "12-0": "Doctor", "13-0": "Event Planning/Event Services", "14-0": "Food/Grocery", "15-0": "Health/Medical/Pharmacy", "16-0": "Home Improvement", "17-0": "Hospital/Clinic", "18-0": "Hotel", "19-0": "Landmark", "20-0": "Lawyer", "21-0": "Library", "22-0": "Licensed Financial Representative", "23-0": "Local Business", "24-0": "Middle School", "25-0": "Movie Theater", "26-0": "Museum/Art Gallery", "27-0": "Outdoor Gear/Sporting Goods", "28-0": "Pet Services", "29-0": "Professional Services", "30-0": "Public Places", "31-0": "Real Estate", "32-0": "Restaurant/Cafe", "33-0": "School", "34-0": "Shopping/Retail", "35-0": "Spas/Beauty/Personal Care", "36-0": "Sports Venue", "37-0": "Sports/Recreation/Activities", "38-0": "Tours/Sightseeing", "39-0": "Train Station", "40-0": "Transportation", "41-0": "University", "42-0": "Aerospace/Defense", "43-0": "Automobiles and Parts", "44-0": "Bank/Financial Institution", "45-0": "Biotechnology", "46-0": "Cause", "47-0": "Chemicals", "48-0": "Community Organization", "49-0": "Company", "50-0": "Computers/Technology", "51-0": "Consulting/Business Services", "52-0": "Education", "53-0": "Elementary School", "54-0": "Energy/Utility", "55-0": "Engineering/Construction", "56-0": "Farming/Agriculture", "57-0": "Food/Beverages", "58-0": "Government Organization", "59-0": "Health/Beauty", "60-0": "Health/Medical/Pharmaceuticals", "61-0": "Industrials", "62-0": "Insurance Company", "63-0": "Internet/Software", "64-0": "Legal/Law", "65-0": "Media/News/Publishing", "66-0": "Mining/Materials", "67-0": "Non-Governmental Organization (NGO)", "68-0": "Non-Profit Organization", "69-0": "Organization", "70-0": "Political Organization", "71-0": "Political Party", "72-0": "Preschool", "73-0": "Retail and Consumer Merchandise", "74-0": "Small Business", "75-0": "Telecommunication", "76-0": "Transport/Freight", "77-0": "Travel/Leisure" }, "cols": 1, "rows": 78 } [/block] ## Multiple Logins Every user object has an array of logins. This means that a user object - like a bank account - can be turned into a joint account pretty easily. Multiple logins allow us and you to setup corporate accounts with ease. Since most business accounts have multiple people who may access the account, this feature comes in handy. ## Physical Document Types Following is the complete list of physical documents that we are capable of verifying: [block:parameters] { "data": { "h-0": "document_type", "h-1": "Comments", "0-0": "GOVT_ID", "2-0": "SELFIE", "3-0": "PROOF_OF_ADDRESS", "0-1": "User's government issued photo ID (driver's license, state ID, or passport).", "2-1": "Picture of user's face.", "3-1": "User's proof of address (i.e. Utility Bill).", "7-0": "SSN_CARD", "7-1": "SSN Card of the user.", "6-0": "AUTHORIZATION", "6-1": "ACH authorization signed by the user.", "8-0": "EIN_DOC", "12-0": "AOI", "14-0": "LOE", "16-0": "SUBSCRIPTION_AGREEMENT", "17-0": "PROMISSORY_NOTE", "18-0": "LEGAL_AGREEMENT", "19-0": "OTHER", "8-1": "Form 147C issued to the business.", "12-1": "Articles of Incorporation.", "14-1": "Letter of Engagement.", "16-1": "Subscription agreement.", "17-1": "Promissory Note.", "18-1": "Any other legal agreement.", "19-1": "If you don't need us to validate a physical document but still want to submit for the record, you can use OTHER as the type as well.", "9-0": "W9_DOC", "11-0": "VOIDED_CHECK", "9-1": "W-9 with EIN Number.", "11-1": "Voided Check of the Individual/business.", "4-0": "PROOF_OF_INCOME", "4-1": "User's proof of income (i.e. Pay Stub).", "5-0": "PROOF_OF_ACCOUNT", "5-1": "User's proof of account ownership (i.e. Bank statement).", "10-0": "W2_DOC", "10-1": "W-2 Document", "13-0": "BYLAWS_DOC", "13-1": "Bylaw document.", "15-0": "CIP_DOC", "15-1": "CIP & Business description document.", "1-0": "VIDEO_AUTHORIZATION", "1-1": "(In Beta) 5 second authorization video of the user. Read more [here](https://blog.synapsepay.com/updates/video-auth)." }, "cols": 2, "rows": 20 } [/block] ## Virtual Document Types Following is the complete list of virtual documents that we are capable of verifying: [block:parameters] { "data": { "h-0": "document_type", "h-1": "Comments", "0-0": "SSN", "4-0": "TIN", "0-1": "SSN Number of the user.", "4-1": "TIN/EIN Number of the business.", "5-1": "DUNS Number of the business.", "5-0": "DUNS", "6-0": "OTHER", "6-1": "If you don't need us to validate the virtual document but still want to submit for the record, you can use OTHER as the type as well.", "1-0": "PASSPORT", "1-1": "Passport number of the user.", "2-0": "DRIVERS_LICENSE", "2-1": "Driver's license number of the user.", "3-0": "PERSONAL_IDENTIFICATION", "3-1": "Personal Identification number of the user." }, "cols": 2, "rows": 7 } [/block] ## Social Document Types Following is the complete list of social documents that we are capable of verifying: [block:parameters] { "data": { "h-0": "document_type", "0-0": "FACEBOOK", "1-0": "LINKEDIN", "2-0": "TWITTER", "3-0": "OTHER", "h-1": "Comments", "0-1": "Facebook URL of the user's profile.", "1-1": "LinkedIn URL of the user's profile.", "2-1": "Twitter URL of the user's profile.", "3-1": "If you don't need us to validate the social document but still want to submit for the record, you can use OTHER as the type as well." }, "cols": 2, "rows": 4 } [/block] ## Photo ID Requirements Following is a list of suggestions to improve accuracy for Photo ID uploads 1. Steady image 2. ID occupies most of image 3. ID and text are aligned properly 4. Plain black background 5. Min resolution ~1200 pixels, minor axis 6. Good natural lighting (avg pixel intensity ~150) 7. No flash 8. Name, address & DOB matches those supplied to us in base doc **Suggested File Size:** Maximum file size of 2 Mb for JPG images (most high quality JPG are around 1Mb). **Suggested File Type: ** JPEG/PNG are the preferred file type for these images. Please remember that Base64 should be padded (see example below): jpg - "data:image/jpeg;base64,<actual_file_data>" png - "data:image/png;base64,<actual_file_data>"
			Node:
			(type) c
			(layer)1
				Element:footer
				Element:a
					readme.io
