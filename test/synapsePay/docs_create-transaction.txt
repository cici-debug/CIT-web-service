Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
				Element:span
					post
					Create Transaction
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Definition
									Node:
									(type) c
									(layer)3
										Element:span
											{{ api_url }}
									Node:
									(type) c
									(layer)3
										Element:span
											{{ page_api_url }}
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Parameters
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Body Params
												Node:
												(type) c
												(layer)4
													Element:strong
														required
													Element:span
														to.
														type
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Receiving node type
												Node:
												(type) c
												(layer)4
													Element:strong
														required
													Element:span
														to.
														id
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Receiving node ID
												Node:
												(type) c
												(layer)4
													Element:strong
														required
													Element:span
														amount.
														amount
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														double
														Amount user wishes to send
												Node:
												(type) c
												(layer)4
													Element:strong
														required
													Element:span
														amount.
														currency
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Currency of the transaction amount
												Node:
												(type) c
												(layer)4
													Element:strong
													Element:span
														extra.
														supp_id
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														ID supplied to the transaction
												Node:
												(type) c
												(layer)4
													Element:strong
													Element:span
														extra.
														note
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Memo tagged with the transaction
												Node:
												(type) c
												(layer)4
													Element:strong
													Element:span
														extra.
														webhook
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														[DEPRECATED] Webhook supplied to the transaction. Use [subscription webhooks](doc:subscriptions) instead.
												Node:
												(type) c
												(layer)4
													Element:strong
													Element:span
														extra.
														process_on
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														integer
												Node:
												(type) c
												(layer)4
													Element:span
														0
														When the transaction should be processed. The value is the delta value. Which means when 1 is supplied it means that the transaction will be processed tomorrow.
												Node:
												(type) c
												(layer)4
													Element:strong
														required
													Element:span
														extra.
														ip
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														IP address of the user device while creating transaction
												Node:
												(type) c
												(layer)4
													Element:strong
													Element:span
														extra.other.
														attachments
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														array of strings
														Array of padded base64 of attachments
												Node:
												(type) c
												(layer)4
													Element:strong
													Element:span
														fees[
														fee
													Element:span
														]
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														double
														Fee associated with the transaction
												Node:
												(type) c
												(layer)4
													Element:strong
													Element:span
														fees[
														note
													Element:span
														]
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Reason for the fee
												Node:
												(type) c
												(layer)4
													Element:strong
													Element:span
														fees[to].
														id
													Element:span
														:
												Node:
												(type) c
												(layer)4
													Element:strong
														string
														Node ID where the fee would be credited when the transaction settled. Fee node has to be SYNAPSE-US type always
												Node:
												(type) c
												(layer)4
													Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Examples
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Result Format
									Node:
									(type) c
									(layer)3
										Element:hr
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Documentation
											[block:embed] {} [/block] [block:callout] { "type": "info", "title": "Transaction Settle Times", "body": "In most cases, transactions do not settle immediately. See [here](https://help.synapsepay.com/hc/en-us/articles/205312588-How-long-does-a-transaction-take-to-settle-) for more details.\n\n*Note: transactions settle in sandbox in about 15 minutes.*" } [/block] [block:callout] { "type": "info", "title": "Transaction Updates:", "body": "Stay updated on the status of transactions with [Transaction Statuses](https://docs.synapsepay.com/docs/trans-resources#section-transaction-status) and [Transaction Codes](https://docs.synapsepay.com/docs/transaction-codes)." } [/block] ## Idempotent Requests Transactions POST call supports [idempotency](https://en.wikipedia.org/wiki/Idempotence) for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a transaction fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single charge is created. To perform an idempotent request, attach a unique key to any POST request made to the API via the `X-SP-IDEMPOTENCY-KEY: <key>` header. Remember: The idempotency keys expire after 24 hours. [block:code] { "codes": [ { "code": "curl -X POST -H \"Content-Type: application/json\" -H \"X-SP-GATEWAY: e3f19e4bd4022c86e7f2|11c94ba6bad74d24a0158bc707f0fc19a86dc08f\" -H \"X-SP-USER-IP: 216.3.128.12\" -H \"X-SP-USER: oauth-3203b663-1763-4833-af67-af19a751159f|e716990e50b67a1177736960b6357524b22090ccab093d068b3d7a18dbde3f4c\" -H \"X-SP-IDEMPOTENCY-KEY: 1234678987654322345680\" -d '{\n \"to\":{\n \"type\":\"ACH-US\",\n \"id\":\"5739eda886c2735cc02d55d2\"\n },\n \"amount\":{\n \"amount\":1000,\n \"currency\":\"USD\"\n },\n \"extra\":{\n \"ip\":\"192.168.0.1\"\n }\n}' \"https://sandbox.synapsepay.com/api/3/users/5770486c86c273414e90cdba/nodes/577d563486c2733dd03b1f01/trans\"", "language": "curl" }, { "code": "{\n \"error\": {\n \"en\": \"Unable to save object. Error: Idempotency key already used once.\"\n },\n \"error_code\": \"400\",\n \"http_code\": \"409\",\n \"success\": false\n}", "language": "json", "name": "" } ] } [/block]
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:a
											readme.io
