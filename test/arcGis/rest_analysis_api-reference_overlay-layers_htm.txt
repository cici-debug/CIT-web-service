Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
				Element:a
					ArcGIS REST API: Spatial Analysis Service
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:aside
													Element:h4
														Getting Started
													Element:h4
														Tasks
													Element:h4
														Context
												Node:
												(type) c
												(layer)4
													Element:a
														Back to Top
			Node:
			(type) h1
			(layer)1
				Element:h1
					Overlay Layers
			Node:
			(type) c
			(layer)1
															Node:
															(type) c
															(layer)5
																Element:aside
																Element:h4
																	In this topic
																Element:h5
																	In this topic
																Element:ul
																Element:li
																Element:a
																	Request URL
																Element:li
																Element:a
																	Request Parameters
																Element:li
																Element:a
																	Response
																Element:li
																Element:a
																	Accessing results
															Node:
															(type) c
															(layer)5
																Element:p
																Element:img
															Node:
															(type) c
															(layer)5
																Element:p
																	The
																Element:b
																	Overlay Layers
																	task combines two or more layers into one single layer. You can think of overlay as peering through a stack of maps and creating a single map containing all the information found in the stack. In fact, before the advent of GIS, cartographers would literally copy maps onto clear acetate sheets, overlay these sheets on a light table, and hand draw a new map from the overlaid data. Overlay is much more than a merging of line work; all the attributes of the features taking part in the overlay are carried through to the final product. Overlay is used to answer one of the most basic questions of geography, "what is on top of what?" For example:
															Node:
															(type) c
															(layer)5
																Element:ul
																Element:li
																	What parcels are within the 100-year floodplain? (Within is just another way of saying on top of.)
																Element:li
																	What roads are within what counties?
																Element:li
																	What land use is on top of what soil type?
																Element:li
																	What wells are within abandoned military bases?
															Node:
															(type) c
															(layer)5
						Node:
						(type) c
						(layer)2
							Element:h2
								Request URL
						Node:
						(type) c
						(layer)2
							Element:p
							Element:pre
							Element:code
								http://<analysis url>/OverlayLayers/submitJob
															Node:
															(type) c
															(layer)5
						Node:
						(type) c
						(layer)2
							Element:h2
								Request Parameters
						Node:
						(type) c
						(layer)2
							Element:p
						Node:
						(type) c
						(layer)2
							Element:h4
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:colgroup
							Element:thead
							Element:tr
							Element:th
								Parameter
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
							Element:p
							Element:span
								inputLayer
							Element:p
								(Required)
							Element:td
							Element:p
								The point, line, or polygon features that will be overlayed with the
							Element:span
								overlayLayer
							Element:p
							Element:i
								Syntax
								: As described in detail in the
							Element:a
								Feature Input
								topic, this parameter can be
							Element:ul
							Element:li
								a URL to a feature service layer with an optional filter to select specific features, or
							Element:li
								a feature collection.
							Element:p
							Element:i
								Examples
								:
							Element:ul
							Element:li
							Element:span
								{"url": <feature service layer url>, "filter": <where clause>}
							Element:li
							Element:span
								{"layerDefinition": {}, "featureSet": {}, "filter": <where clause>}
							Element:tr
							Element:td
							Element:p
							Element:span
								overlayLayer
							Element:p
								(Required)
							Element:td
							Element:p
								The features that will be overlaid with the
							Element:span
								inputLayer
								features.
							Element:p
							Element:i
								Syntax
								: As described in detail in the
							Element:a
								Feature Input
								topic, this parameter can be
							Element:ul
							Element:li
								a URL to a feature service layer with an optional filter to select specific features, or
							Element:li
								a feature collection.
							Element:p
							Element:i
								Examples
								:
							Element:ul
							Element:li
							Element:span
								{"url": <feature service layer url>, "filter": <where clause>}
							Element:li
							Element:span
								{"layerDefinition": {}, "featureSet": {}, "filter": <where clause>}
							Element:tr
							Element:td
							Element:p
							Element:span
								overlayType
							Element:td
							Element:p
								The type of overlay to be performed.
							Element:p
							Element:i
								Values
								:
							Element:span
								Intersect
								|
							Element:span
								Union
								|
							Element:span
								Erase
							Element:p
							Element:h4
							Element:table
							Element:colgroup
							Element:colgroup
							Element:tbody
							Element:tr
							Element:td
							Element:img
							Element:td
							Element:p
							Element:span
								Intersect
								— Computes a geometric intersection of the input layers. Features or portions of features which overlap in both the
							Element:span
								inputLayer
								and
							Element:span
								overlayLayer
								layer will be written to the output layer. This is the default.
							Element:tr
							Element:td
							Element:img
							Element:td
							Element:p
							Element:span
								Union
								—Computes a geometric union of the input layers. All features and their attributes will be written to the output layer. This option is only valid if both the
							Element:span
								inputLayer
								and the
							Element:span
								overlayLayer
								contain polygon features.
							Element:tr
							Element:td
							Element:img
							Element:td
							Element:p
							Element:span
								Erase
								— Only those features or portions of features in the
							Element:span
								overlayLayer
								that are not within the features in the
							Element:span
								inputLayer
								layer are written to the output.
							Element:p
							Element:i
								Example
								:
							Element:span
								"overlayType": "Union"
							Element:tr
							Element:td
							Element:p
							Element:span
								outputType
							Element:td
							Element:p
								The type of intersection you want to find. This parameter is only valid when the
							Element:span
								overlayType
								is
							Element:span
								Intersect
							Element:p
							Element:i
								Values
								:
							Element:span
								Input
								|
							Element:span
								Line
								|
							Element:span
								Point
							Element:ul
							Element:li
							Element:span
								Input
								- The features returned will be the same geometry type as the
							Element:span
								inputLayer
								or
							Element:span
								overlayLayer
								with the lowest dimension geometry. If all inputs are polygons, the output will contain polygons. If one or more of the inputs are lines and none of the inputs are points, the output will be line. If one or more of the inputs are points, the output will contain points. This is the default.
							Element:li
							Element:span
								Line
								- Line intersections will be returned. This is only valid if none of the inputs are points.
							Element:li
							Element:span
								Point
								- Point intersections will be returned. If the inputs are line or polygon, the output will be a multipoint layer.
							Element:tr
							Element:td
							Element:p
							Element:span
								snapToInput
							Element:td
							Element:p
								A Boolean value indicating if feature vertices in the
							Element:span
								inputLayer
								are allowed to move. The default is
							Element:span
								false
								and means if the distance between features is less than the
							Element:span
								tolerance
								value, all features from both layers can move to allow snapping to each other. When set to
							Element:span
								true
								, only features in
							Element:span
								overlayLayer
								can move to snap to the
							Element:span
								inputLayer
								features.
							Element:p
							Element:i
								Values
								:
							Element:span
								true
								|
							Element:span
								false
							Element:p
							Element:i
								Example
								:
							Element:span
								"snapToInput": true
							Element:tr
							Element:td
							Element:p
							Element:span
								tolerance
							Element:td
							Element:p
								A double value of the minimum distance separating all feature coordinates as well as the distance a coordinate can move in X or Y (or both). The units of
							Element:span
								tolerance
								are the same as the units of the
							Element:span
								inputLayer
								.
							Element:tr
							Element:td
							Element:p
							Element:span
								outputName
							Element:td
							Element:p
								If provided, the task will create a feature service of the results. You define the name of the service. If
							Element:span
								outputName
								is not supplied, the task will return a feature collection.
							Element:i
								Syntax:
							Element:pre
							Element:code
								{ "serviceProperties": { "name": "<service name>" } }
							Element:tr
							Element:td
							Element:p
							Element:span
								context
							Element:td
							Element:p
								Context contains additional settings that affect task execution. For Overlay Layers, there are two settings.
							Element:ol
							Element:li
							Element:a
								Extent
								(
							Element:span
								extent
								)—a bounding box that defines the analysis area. Only those features in the
							Element:span
								inputLayer
								and
							Element:span
								overlayLayer
								and that intersect the bounding box will be overlaid.
							Element:li
							Element:a
								Output Spatial Reference
								(
							Element:span
								outSR
								)—the output features will be projected into the output spatial reference.
							Element:p
							Element:i
								Syntax
								:
							Element:pre
							Element:code
								{ "extent" : {extent} "outSR" : {spatial reference} }
							Element:tr
							Element:td
							Element:p
							Element:span
								f
							Element:td
							Element:p
								The response format. The default response format is
							Element:span
								html
								.
							Element:p
							Element:i
								Values
								:
							Element:span
								html
								|
							Element:span
								json
															Node:
															(type) c
															(layer)5
						Node:
						(type) c
						(layer)2
							Element:h2
								Response
						Node:
						(type) c
						(layer)2
							Element:p
								When you submit a request, the service assigns a unique job ID for the transaction.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:i
								Syntax:
							Element:pre
							Element:code
								{ "jobId": "<unique job identifier>", "jobStatus": "<job status>" }
						Node:
						(type) c
						(layer)2
							Element:p
								After the initial request is submitted you can use the
							Element:span
								jobId
								to periodically check the status of the job and messages as described in the topic
							Element:a
								Checking job status
								. Once the job has successfully completed, you use the
							Element:span
								jobId
								to retrive the results. To track the status, you can make a request of the following form:
							Element:pre
							Element:code
								http://<analysis url>/OverlayLayers/jobs/<jobId>
															Node:
															(type) c
															(layer)5
						Node:
						(type) c
						(layer)2
							Element:h2
								Accessing results
						Node:
						(type) c
						(layer)2
							Element:p
								When the status of the job request is
							Element:span
								esriJobSucceded
								, you can access the results of the analysis by making a request of the following form.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								http://<analysis url>/OverlayLayers/jobs/<jobId>/results/outputLayer?token=<your token>&f=json
						Node:
						(type) c
						(layer)2
							Element:p
						Node:
						(type) c
						(layer)2
							Element:h4
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:colgroup
							Element:thead
							Element:tr
							Element:th
								Parameter
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
							Element:p
							Element:span
								outputLayer
							Element:td
							Element:p
								The features that are the result of the overlay. The type of feature (point, line, or polygon) depends on the input parameter settings.
							Element:i
								Example:
							Element:pre
							Element:code
								{"url": "http://<analysis url>/OverlayLayers/jobs/<jobId>/results/outputLayer"}
							Element:p
								The result has properties for parameter name, data type, and value. The contents of value depends upon the
							Element:span
								outputName
								parameter provided in the initial request.
							Element:ul
							Element:li
								If
							Element:span
								outputName
								was provided,
							Element:span
								value
								contains the url to the feature service layer.
							Element:p
							Element:pre
							Element:code
								{ "paramName":"outputLayer", "dataType":"GPString", "value":{"url":"<hosted featureservice layer url>"} }
							Element:li
								If
							Element:span
								outputName
								was not provided,
							Element:span
								value
								contains a feature collection.
							Element:p
							Element:pre
							Element:code
								{ "paramName":"outputLayer", "dataType":"GPString", "value":{"layerDefinition": {}, "featureSet": {} } }
							Element:p
								See the topic
							Element:a
								Feature Output
								for more information about how the result layer or collection is accessed.
						Node:
						(type) c
						(layer)2
							Element:hr
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
								Feedback on this topic?
						Node:
						(type) c
						(layer)2
							Element:h5
								In this topic
						Node:
						(type) c
						(layer)2
							Element:h5
								In this topic
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Request URL
							Element:li
							Element:a
								Request Parameters
							Element:li
							Element:a
								Response
							Element:li
							Element:a
								Accessing results
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:p
							Element:small
							Element:a
								Copyright © 2017 Esri
								. All rights reserved. |
							Element:a
								Privacy
								|
							Element:a
								Terms of use
								|
							Element:a
								Plain English
								|
							Element:a
								FAQ
