Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
				Element:a
					ArcGIS REST API: Spatial Analysis Service
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:aside
													Element:h4
														Getting Started
													Element:h4
														Tasks
													Element:h4
														Context
												Node:
												(type) c
												(layer)4
													Element:a
														Back to Top
			Node:
			(type) h1
			(layer)1
				Element:h1
					Plan Routes
			Node:
			(type) c
			(layer)1
															Node:
															(type) c
															(layer)5
																Element:aside
																Element:h4
																	In this topic
																Element:h5
																	In this topic
																Element:ul
																Element:li
																Element:a
																	Licensing
																Element:li
																Element:a
																	Limits
																Element:li
																Element:a
																	Request URL
																Element:li
																Element:a
																	Request Parameters
																Element:li
																Element:a
																	Response
																Element:li
																Element:a
																	Accessing results
																Element:li
																Element:a
																	Route names and starting and ending locations
															Node:
															(type) c
															(layer)5
																Element:p
																Element:img
															Node:
															(type) c
															(layer)5
																Element:p
																	The
																Element:b
																	Plan Routes
																	task determines how to efficiently divide tasks among a mobile workforce.
															Node:
															(type) c
															(layer)5
																Element:p
																	You provide the input, which includes a set of stops and the number of vehicles available to visit the stops, and the tool assigns the stops to vehicles and returns routes showing how each vehicle can reach their assigned stops in the least amount of time.
															Node:
															(type) c
															(layer)5
																Element:p
																	With Plan Routes, mobile workforces reach more jobsites in less time, which increases productivity and improves customer service. Organizations often use Plan Routes to:
															Node:
															(type) c
															(layer)5
																Element:ul
																Element:li
																	Inspect homes, restaurants, and construction sites
																Element:li
																	Provide repair, installation, and technical services
																Element:li
																	Deliver items and small packages
																Element:li
																	Make sales calls
																Element:li
																	Provide van transportation from spectators' homes to events
															Node:
															(type) c
															(layer)5
																Element:p
																	The output from Plan Routes includes a layer of routes showing the shortest paths to visit the stops; a layer of the stops assigned to routes, as well as any stops that couldn't be reached due to the given parameter settings; and a layer of directions containing the travel itinerary for each route.
			Node:
			(type) c
			(layer)1
															Node:
															(type) c
															(layer)5
																Element:h5
																	Note:
															Node:
															(type) c
															(layer)5
																Element:p
																	This task is designed to provide a simple solution to the most common uses of fleet routing, or assigning stops to routes, people, or vehicles and finding the best routes between the stops.
																Element:span
																	If you require additional flexibility to solve a more specialized problem, consider using the
																	It provides many more options, such as honoring time windows at stops; adding barriers to block portions of the road network; setting vehicle-specific limits on maximum travel time, maximum number of stops to visit, and so on.
																Element:a
																	Vehicle Routing Problem Service
																	instead.
															Node:
															(type) c
															(layer)5
						Node:
						(type) c
						(layer)2
							Element:h2
								Licensing
						Node:
						(type) c
						(layer)2
							Element:p
								As described in the
							Element:a
								Get Started
								topic, in order to use any analysis task, the administrator of the organization needs to grant you certain basic privileges. To use Plan Routes, you also need to be granted the
							Element:span
								Network Analysis
								privilege.
															Node:
															(type) c
															(layer)5
						Node:
						(type) c
						(layer)2
							Element:h2
								Limits
						Node:
						(type) c
						(layer)2
							Element:p
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:span
								stopsLayer
								—maximum
							Element:span
								2,000
								features
							Element:li
							Element:span
								routeCount
								—maximum
							Element:span
								100
							Element:li
							Element:span
								maxStopsPerRoute
								—maximum
							Element:span
								200
															Node:
															(type) c
															(layer)5
						Node:
						(type) c
						(layer)2
							Element:h2
								Request URL
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								http://<analysis url>/PlanRoutes/submitJob
															Node:
															(type) c
															(layer)5
						Node:
						(type) c
						(layer)2
							Element:h2
								Request Parameters
						Node:
						(type) c
						(layer)2
							Element:p
						Node:
						(type) c
						(layer)2
							Element:h4
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:colgroup
							Element:thead
							Element:tr
							Element:th
								Parameter
							Element:th
								Details
							Element:tbody
							Element:tr
							Element:td
							Element:p
							Element:span
								stopsLayer
							Element:p
								(Required)
							Element:td
							Element:p
								The points that the vehicles, drivers, or routes, should visit.
							Element:p
								The fields on the input stops are included in the output stops, so if your input layer has a field such as Name, Address, or ProductDescription, that information will be available in the results.
							Element:p
							Element:i
								Syntax
								: As described in detail in the
							Element:a
								Feature Input
								topic, this parameter can be
							Element:ul
							Element:li
								a URL to a feature service layer with an optional filter to select specific features, or
							Element:li
								a feature collection.
							Element:p
							Element:i
								Examples
								:
							Element:ul
							Element:li
							Element:span
								{"url": <feature service layer url>, "filter": <where clause>}
							Element:li
							Element:span
								{"layerDefinition": {}, "featureSet": {}, "filter": <where clause>}
							Element:tr
							Element:td
							Element:p
							Element:span
								routeCount
							Element:p
								(Required)
							Element:td
							Element:p
								The number of vehicles that are available to visit the stops. The tool supports up to
							Element:span
								100
								vehicles. The default value is 0.
							Element:p
								The tool may be able to find and return a solution that uses fewer vehicles than the number you specify for this parameter. The number of vehicles returned also depends on four other parameters: the total number of stops in
							Element:span
								stopsLayer
								, the number of stops per vehicle you allow (
							Element:span
								maxStopsPerRoute
								), the travel time between stops, the time spent at each stop (
							Element:span
								stopServiceTime
								), and any limit you set on the total route time per vehicle (
							Element:span
								maxRouteTime
								).
							Element:p
							Element:i
								Example:
							Element:span
								"routeCount": 8
							Element:tr
							Element:td
							Element:p
							Element:span
								maxStopsPerRoute
							Element:p
								(Required)
							Element:td
							Element:p
								The maximum number of stops a route, or vehicle, is allowed to visit. The largest value you can specify is
							Element:span
								200
								. The default value is zero.
							Element:p
								This is one of two parameters that balance the overall workload across routes. The other is
							Element:span
								maxRouteTime
								.
							Element:p
								By lowering the maximum number of stops that can be assigned to each vehicle, the vehicles are more likely to have an equal number of stops assigned to them. This helps balance workloads among drivers. The drawback, however, is that it may result in a solution that is less efficient.
							Element:p
								By increasing the stops per vehicle, the tool has more freedom to find more efficient solutions; however, the workload may be unevenly distributed among drivers and vehicles. Note that you can balance workloads by time instead of number of stops by specifying a value for the
							Element:span
								maxRouteTime
								parameter.
							Element:p
								The following examples demonstrate the effects of limiting the maximum stops per vehicle or the total time per vehicle. In all of these examples, two routes start at the same location and visit a total of six stops.
							Element:p
							Element:h4
							Element:table
							Element:colgroup
							Element:colgroup
							Element:tbody
							Element:tr
							Element:td
							Element:p
							Element:img
							Element:td
							Element:p
								Balanced travel times and stops per route:
							Element:p
								The stops are more or less uniformly spread apart, so setting
							Element:span
								maxStopsPerRoute=3
								to evenly distribute the workload results in routes that are roughly the same duration.
							Element:tr
							Element:td
							Element:p
							Element:img
							Element:td
							Element:p
								Balanced stops per route but unbalanced travel times:
							Element:p
								Five of the six stops are clustered near the starting location, but one stop is set apart and requires a much longer drive to be reached. Dividing the stops equally between the two routes (
							Element:span
								maxStopsPerRoute=3
								) causes unbalanced travel times.
							Element:tr
							Element:td
							Element:p
							Element:img
							Element:td
							Element:p
								Unbalanced stops per route but balanced travel times:
							Element:p
								The stops are in the same location as the previous graphic. By increasing the value of
							Element:span
								maxStopsPerRoute
								to
							Element:span
								4
								, and limiting the total travel time per vehicle (
							Element:span
								maxRouteTime
								), the travel times are balanced even though one route visits more stops.
							Element:p
							Element:i
								Example
								:
							Element:span
								"maxStopsPerRoute": 3
							Element:tr
							Element:td
							Element:p
							Element:span
								routeStartTime
							Element:p
								(Required)
							Element:td
							Element:p
								Specify when the vehicles or people start their routes. The time is specified as Unix time (milliseconds since midnight, January 1 1970).
							Element:p
								The starting time value is the same for all routes; that is, all routes start at the same time.
							Element:p
								Time zones affect what value you assign to
							Element:span
								routeStartTime
								. The time zone for the start time is based on the time zone in which the starting point is geographically located. For instance, if you have one route starting location and it is located in Pacific Standard Time (PST), the time you specify for
							Element:span
								routeStartTime
								is in PST.
							Element:p
								There are a couple of scenarios to beware of given that starting times are based on where the starting points are located. One situation to be careful of is when you are located in one time zone but your starting locations are in another times zone. For instance, assume you are in Pacific Standard Time (UTC-8:00) and the vehicles you are routing are stationed in Mountain Standard Time (UTC-7:00). If it is currently 9:30 a.m. PST (10:30 a.m. MST) and your vehicles need to begin their routes in 30 minutes, you would set the start time to 11:00 a.m. That is, the starting locations for the routes are in the Mountain time zone, and it is currently 10:30 a.m. there, therefore, a starting time of 30 minutes from now is 11:00 a.m. Make sure you set the parameter according to the proper time zone.
							Element:p
								The other situation that requires caution is where starting locations are spread across multiple time zones. The time you set for
							Element:span
								routeStartTime
								is specific to the time zone in which the starting location is—regardless of whether there are one or more starting locations in the problem you submit. For instance, if one route starts from a point in PST and another route starts from MST, and you enter 11:00 a.m. as the start time, the route in PST will start at 11:00 a.m. PST and the route in MST will start at 11:00 a.m. MST—a one-hour difference. The starting times are the same in local time, but offset in actual time, or UTC.
							Element:p
								The service automatically determines the time zones of the input starting locations (
							Element:span
								startLayer
								) for you.
							Element:p
							Element:i
								Examples
								:
							Element:ul
							Element:li
							Element:span
								"timeOfDay": 1413964800000
								// 8:00, 22 October 2014. Routes will depart their starting locations at 8:00 a.m., 22 October. Any routes with starting points in Mountain Standard Time start at 8:00 a.m., 22 October 2014 MST; any routes with starting points in Pacific Standard Time start at 8:00 a.m. 22 October 2014 PST, and so on.
							Element:li
							Element:span
								"timeOfDay": 1426674000000
								// 10:20, 18 March 2015.
							Element:tr
							Element:td
							Element:p
							Element:span
								startLayer
							Element:p
								(Required)
							Element:td
							Element:p
								Provide the locations where the people or vehicles start their routes. You can specify one or many starting locations.
							Element:p
								If specifying one, all routes will start from the one location. If specifying many starting locations, each route needs exactly one predefined starting location, and the following criteria must be met:
							Element:ul
							Element:li
								The number of routes (
							Element:span
								routeCount
								) must equal the number of points in
							Element:span
								startLayer
								. (However, when only one point is included in
							Element:span
								startLayer
								, it is assumed that all routes start from the same location, and the two numbers can be different.)
							Element:li
								The starting location for each route must be identified with the
							Element:span
								startLayerRouteIDField
								parameter. This implies that the input points in
							Element:span
								startLayer
								have a unique identifier. Bear in mind that if you also have many ending locations, those locations need to be predetermined as well. The predetermined start and end locations of each route are paired together by matching route ID values.
							Element:p
								See the the section of this topic entitled
							Element:a
								Starting and ending locations of routes
								to learn more.
							Element:p
							Element:i
								Syntax
								: As described in detail in the
							Element:a
								Feature Input
								topic, this parameter can be
							Element:ul
							Element:li
								a URL to a feature service layer with an optional filter to select specific features, or
							Element:li
								a feature collection.
							Element:p
							Element:i
								Examples
								:
							Element:ul
							Element:li
							Element:span
								{"url": <feature service layer url>, "filter": <where clause>}
							Element:li
							Element:span
								{"layerDefinition": {}, "featureSet": {}, "filter": <where clause>}
							Element:tr
							Element:td
							Element:p
							Element:span
								startLayerRouteIDField
							Element:td
							Element:p
								Choose a field that uniquely identifies points in
							Element:span
								startLayer
								. This parameter is required when
							Element:span
								startLayer
								has more than one point; it is ignored otherwise.
							Element:p
								The
							Element:span
								startLayerRouteIDField
								parameter helps identify where routes begin and indicates the names of the output routes.
							Element:p
								See the the section of this topic entitled
							Element:a
								Starting and ending locations of routes
								to learn more.
							Element:p
							Element:i
								Example
								:
							Element:span
								"startLayerRouteIDField": "DriverName"
							Element:tr
							Element:td
							Element:p
							Element:span
								returnToStart
							Element:td
							Element:p
								A
							Element:span
								true
								value indicates each route must end its trip at the same place where it started. The starting location is defined by the
							Element:span
								startLayer
								and
							Element:span
								startLayerRouteIDField
								parameters.
							Element:p
								The default value is
							Element:span
								true
								.
							Element:p
							Element:i
								Example
								:
							Element:span
								"returnToStart": "false"
							Element:tr
							Element:td
							Element:p
							Element:span
								endLayer
							Element:td
							Element:p
								Provide the locations where the people or vehicles end their routes.
							Element:p
								If
							Element:span
								endLayer
								is specified,
							Element:span
								returnToStart
								must be set to
							Element:span
								true
								.
							Element:p
								You can specify one or many ending locations.
							Element:p
								If specifying one, all routes will end at the one location. If specifying many ending locations, each route needs exactly one predefined ending location, and the following criteria must be met:
							Element:ul
							Element:li
								The number of routes (
							Element:span
								routeCount
								) must equal the number of points in
							Element:span
								endLayer
								. (However, when only one point is included in
							Element:span
								endLayer
								, it is assumed that all routes end at the same location, and the two numbers can be different.)
							Element:li
								The ending location for each route must be identified with the
							Element:span
								endLayerRouteIDField
								parameter. This implies that the input points in
							Element:span
								endLayer
								have a unique identifier. Bear in mind that if you also have many starting locations, those locations need to be predetermined as well. The predetermined start and end locations of each route are paired together by matching route ID values.
							Element:p
								See the the section of this topic entitled
							Element:a
								Starting and ending locations of routes
								to learn more.
							Element:p
							Element:i
								Syntax
								: As described in detail in the
							Element:a
								Feature Input
								topic, this parameter can be
							Element:ul
							Element:li
								a URL to a feature service layer with an optional filter to select specific features, or
							Element:li
								a feature collection.
							Element:p
							Element:i
								Examples
								:
							Element:ul
							Element:li
							Element:span
								{"url": <feature service layer url>, "filter": <where clause>}
							Element:li
							Element:span
								{"layerDefinition": {}, "featureSet": {}, "filter": <where clause>}
							Element:tr
							Element:td
							Element:p
							Element:span
								endLayerRouteIDField
							Element:td
							Element:p
								Choose a field that uniquely identifies points in
							Element:span
								endLayer
								. This parameter is required when
							Element:span
								endLayer
								has more than one point; it is ignored if there is one point or if
							Element:span
								returnToStart
								is
							Element:span
								true
								.
							Element:p
								The
							Element:span
								endLayerRouteIDField
								parameter helps identify where routes end and indicates the names of the output routes.
							Element:p
								See the the section of this topic entitled
							Element:a
								Starting and ending locations of routes
								to learn more.
							Element:p
							Element:i
								Example
								:
							Element:span
								"endLayerRouteIDField": "Name"
							Element:tr
							Element:td
							Element:p
							Element:span
								travelMode
							Element:td
							Element:p
								Specify the mode of transportation for the analysis.
							Element:p
								Travel modes are managed in ArcGIS Online and can be configured by the administrator of your organization to better reflect your organization's workflows. You need to specify the JSON object containing the settings for a travel mode supported by your organization. To get a list of supported travel modes, execute the
							Element:span
								GetTravelModes
								tool from the
							Element:a
								Utilities service
								.
							Element:p
								The value for the
							Element:span
								travelMode
								parameter should be a JSON object representing travel mode settings. When you use the
							Element:span
								GetTravelModes
								tool from the Utilities service, You get a string representing the travel mode JSON. You need to convert this string to a valid JSON object using your API and then pass the JSON object as the value for the
							Element:span
								travelMode
								parameter.
							Element:p
								For example, below is a string representing the Walking Time travel mode as returned by the
							Element:span
								GetTravelModes
								tool.
							Element:pre
							Element:code
								"{\"attributeParameterValues\": [{\"parameterName\": \"Restriction Usage\", \"attributeName\": \"Walking\", \"value\": \"PROHIBITED\"}, {\"parameterName\": \"Restriction Usage\", \"attributeName\": \"Preferred for Pedestrians\", \"value\": \"PREFER_LOW\"}, {\"parameterName\": \"Walking Speed (km/h)\", \"attributeName\": \"WalkTime\", \"value\": 5}], \"description\": \"Follows paths and roads that allow pedestrian traffic and finds solutions that optimize travel time. The walking speed is set to 5 kilometers per hour.\", \"impedanceAttributeName\": \"WalkTime\", \"simplificationToleranceUnits\": \"esriMeters\", \"uturnAtJunctions\": \"esriNFSBAllowBacktrack\", \"restrictionAttributeNames\": [\"Preferred for Pedestrians\", \"Walking\"], \"useHierarchy\": false, \"simplificationTolerance\": 2, \"timeAttributeName\": \"WalkTime\", \"distanceAttributeName\": \"Miles\", \"type\": \"WALK\", \"id\": \"caFAgoThrvUpkFBW\", \"name\": \"Walking Time\"}"
							Element:p
								The above value should be converted to a valid JSON object and passed as the value for the
							Element:span
								travelMode
								parameter
							Element:p
							Element:span
								travelMode=
							Element:pre
							Element:code
								{ "attributeParameterValues": [ { "parameterName": "Restriction Usage", "attributeName": "Walking", "value": "PROHIBITED" }, { "parameterName": "Restriction Usage", "attributeName": "Preferred for Pedestrians", "value": "PREFER_LOW" }, { "parameterName": "Walking Speed (km\/h)", "attributeName": "WalkTime", "value": 5 } ], "description": "Follows paths and roads that allow pedestrian traffic and finds solutions that optimize travel time. The walking speed is set to 5 kilometers per hour.", "impedanceAttributeName": "WalkTime", "simplificationToleranceUnits": "esriMeters", "uturnAtJunctions": "esriNFSBAllowBacktrack", "restrictionAttributeNames": [ "Preferred for Pedestrians", "Walking" ], "useHierarchy": false, "simplificationTolerance": 2, "timeAttributeName": "WalkTime", "distanceAttributeName": "Miles", "type": "WALK", "id": "caFAgoThrvUpkFBW", "name": "Walking Time" }
							Element:h5
								Caution:
							Element:p
								Plan Routes task only supports time-based travel modes, i.e. travel modes that specify a time-based impedance attribute. A travel mode is time-based if the
							Element:span
								impedanceAttributeName
								property has the same value as the
							Element:span
								timeAttributeName
								property in the travel mode JSON. A distance based value for the
							Element:span
								travelMode
								parameter causes a failure.
							Element:tr
							Element:td
							Element:p
							Element:span
								stopServiceTime
							Element:td
							Element:p
								Indicates how much time, in minutes, is spent at each stop. The units are minutes. All stops are assinged the same service duration from this parameter—unique values for individual stops cannot be specified with this service.
							Element:p
							Element:i
								Example
								:
							Element:span
								"stopServiceTime": 10
								//The routes will spend 10 minutes at each visited stop.
							Element:tr
							Element:td
							Element:p
							Element:span
								maxRouteTime
							Element:td
							Element:p
								The amount of time you specify here limits the maximum duration of each route. The maximum route time is an accumulation of travel time and the total service time at visited stops (
							Element:span
								stopServiceTime
								). This parameter is commonly used to prevent drivers from working too many hours or to balance workloads across routes or drivers.
							Element:p
								The units are minutes. The default value, which is also the maximum value, is
							Element:span
								525600
								minutes, or one year.
							Element:p
							Element:i
								Example
								:
							Element:span
								"maxRouteTime": 600
								//None of the routes can last longer than 600 minutes, or 10 hours.
							Element:tr
							Element:td
							Element:p
							Element:span
								outputName
							Element:td
							Element:p
								If provided, the task will create a feature service of the results. You define the name of the service. If
							Element:span
								outputName
								is not supplied, the task will return a feature collection.
							Element:i
								Syntax:
							Element:pre
							Element:code
								{ "serviceProperties": { "name": "<service name>" } }
							Element:tr
							Element:td
							Element:p
							Element:span
								context
							Element:td
							Element:p
								Context contains additional settings that affect task execution. For Plan Routes, there are two settings:
							Element:ol
							Element:li
							Element:p
							Element:a
								Extent
								(
							Element:span
								extent
								)—A bounding box that defines the analysis area. Only those points in the
							Element:span
								inputLayer
								,
							Element:span
								startLayer
								, and
							Element:span
								endLayer
								that are within the bounding box can be visited by routes.
							Element:li
							Element:p
							Element:a
								Output Spatial Reference
								(
							Element:span
								outSR
								)
							Element:ul
							Element:li
								If the output is a feature service, the spatial reference will be the same as
							Element:span
								stopslayer
								. Setting
							Element:span
								outSR
								for feature services has no effect.
							Element:li
								If the output is a feature collection, the features will be in the spatial reference of the
							Element:span
								outSR
								value or the spatial reference of
							Element:span
								stopsLayer
								when
							Element:span
								outSR
								is not specified.
							Element:i
								Syntax:
							Element:pre
							Element:code
								{ "extent" : {extent} "outSR" : {spatial reference} }
							Element:tr
							Element:td
							Element:p
							Element:span
								f
							Element:td
							Element:p
								The response format. The default response format is
							Element:span
								html
								.
							Element:p
							Element:i
								Values
								:
							Element:span
								html
								|
							Element:span
								json
															Node:
															(type) c
															(layer)5
						Node:
						(type) c
						(layer)2
							Element:h2
								Response
						Node:
						(type) c
						(layer)2
							Element:p
								When you submit a request, the service assigns a unique job ID for the transaction.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:i
								Syntax:
							Element:pre
							Element:code
								{ "jobId": "<unique job identifier>", "jobStatus": "<job status>" }
						Node:
						(type) c
						(layer)2
							Element:p
								After the initial request is submitted you can use the
							Element:span
								jobId
								to periodically check the status of the job and messages as described in the topic
							Element:a
								Checking job status
								. Once the job has successfully completed, you use the
							Element:span
								jobId
								to retrive the results. To track the status, you can make a request of the following form:
							Element:pre
							Element:code
								http://<analysis url>/PlanRoutes/jobs/<jobId>
															Node:
															(type) c
															(layer)5
						Node:
						(type) c
						(layer)2
							Element:h2
								Accessing results
						Node:
						(type) c
						(layer)2
							Element:p
								When the status of the job request is
							Element:span
								esriJobSucceded
								, you can access the results of the analysis by making a request of the following form.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								http://<analysis url>/PlanRoutes/jobs/<jobId>/results/<output parameter name>?token=<your token>&f=json
						Node:
						(type) c
						(layer)2
							Element:p
						Node:
						(type) c
						(layer)2
							Element:h4
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:colgroup
							Element:thead
							Element:tr
							Element:th
								Parameter
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
							Element:p
							Element:span
								routesLayer
							Element:td
							Element:p
								The output routes that visit the assigned stops.
							Element:i
								Example:
							Element:pre
							Element:code
								{"url": "http://<analysis url>/PlanRoutes/jobs/<jobId>/results/RoutesLayer"}
							Element:p
								The result has properties for parameter name, data type, and value. The contents of value depends upon the
							Element:span
								outputName
								parameter provided in the initial request.
							Element:ul
							Element:li
								If
							Element:span
								outputName
								was provided,
							Element:span
								value
								contains the url to the feature service layer.
							Element:p
							Element:pre
							Element:code
								{ "paramName":"routesLayer", "dataType":"GPString", "value":{"url":"<hosted featureservice layer url>"} }
							Element:li
								If
							Element:span
								OutputName
								was not provided,
							Element:span
								value
								contains a feature collection.
							Element:p
							Element:pre
							Element:code
								{ "paramName":"routesLayer", "dataType":"GPString", "value":{"layerDefinition": {}, "featureSet": {} } }
							Element:p
								See
							Element:a
								Feature Output
								for more information about how the result layer or collection is accessed.
							Element:p
							Element:i
								Fields in the output
								:
							Element:p
							Element:ul
							Element:li
							Element:span
								RouteName
								—The name of the route. The name is automatically generated if one starting and one ending location is provided; the name is derived from the field value of
							Element:span
								startLayerRouteIDField
								or
							Element:span
								endLayerRouteIDField
								when many starting or ending locations are provided.
							Element:li
							Element:span
								StopCount
								—The total number of stops assigned to the route. The stop count excludes the two starting and ending points of a route.
							Element:li
							Element:span
								TotalTime
								—The expected duration of the route, in minutes. The total time includes the total service and travel times.
							Element:li
							Element:span
								TotalServiceTime
								—The total time, in minutes, expected to be spent servicing stops. The total service time excludes travel time. Note that route start and route end points don't have service times.
							Element:li
							Element:span
								TotalTravelTime
								—The total time, in minutes, expected to be spent traveling between stops. The total travel time excludes service times.
							Element:li
							Element:span
								TotalMiles
								—The total expected travel distance of the route, in miles.
							Element:li
							Element:span
								TotalKilometers
								—The total expected travel distance of the route, in kilometers.
							Element:li
							Element:span
								StartTime
								—The time and date the route is expected to begin its journey. The time is presented using the time zone in which the starting point is located.
							Element:li
							Element:span
								EndTime
								—The time and date the route is expected to end its journey. The time is presented using the time zone in which the ending point is located.
							Element:li
							Element:span
								StartTimeUTC
								—The time and date the route is expected to begin its journey. The time is presented using UTC.
							Element:li
							Element:span
								EndTimeUTC
								—The time and date the route is expected to end its journey. The time is presented using UTC.
							Element:tr
							Element:td
							Element:p
							Element:span
								assignedStopsLayer
							Element:td
							Element:p
								The stops assigned to routes.
							Element:i
								Example:
							Element:pre
							Element:code
								{"url": "http://<analysis url>/PlanRoutes/jobs/<jobId>/results/AssignedStopsLayer"}
							Element:p
							Element:i
								Fields in the output
								:
							Element:p
							Element:ul
							Element:li
							Element:span
								RouteName
								—The name of the route. The name is automatically generated if one starting and one ending location is provided; the name is derived from the field value of
							Element:span
								startLayerRouteIDField
								or
							Element:span
								endLayerRouteIDField
								when many starting or ending locations are provided.
							Element:li
							Element:span
								Sequence
								—The order in which the stop is visited by the route that is assigned to the stop.
							Element:li
							Element:span
								ServiceTime
								—The amount of time spent at the stop. The value is in minutes.
							Element:li
							Element:span
								FromPrevTravelTime
								—The expected travel time, in minutes, to reach the current stop from the previous stop. It is 0 for the first stop. The service times at stops are excluded from this value.
							Element:li
							Element:span
								FromPrevDistance
								—The expected travel distance, in miles, between the previous stop and the current stop. It is 0 for the first stop.
							Element:li
							Element:span
								FromPrevDistanceKilometers
								—The expected travel distance, in kilometers, between the previous stop and the current stop. It is 0 for the first stop.
							Element:li
							Element:span
								ArriveTime
								—The time and date the route is expected to arrive at the stop. The time is presented using the time zone in which the stop is located.
							Element:li
							Element:span
								DepartTime
								—The time and date the route is expected to depart the stop after any service time. The time is presented using the time zone in which the stop is located.
							Element:li
							Element:span
								ArriveTimeUTC
								—The time and date the route is expected to arrive at the stop. The time is presented using UTC.
							Element:li
							Element:span
								DepartTimeUTC
								—The time and date the route is expected to depart the stop. The time is presented using UTC.
							Element:li
							Element:span
								StopType
								—Indicates whether the stop represents the starting location of the route (Route start), the ending location of the route (Route end), or a typical stop along the route (Stop).
							Element:tr
							Element:td
							Element:p
							Element:span
								unassignedStopsLayer
							Element:td
							Element:p
								The stops that couldn't be assigned to any routes.
							Element:i
								Example:
							Element:pre
							Element:code
								{"url": "http://<analysis url>/PlanRoutes/jobs/<jobId>/results/UnassignedStopsLayer"}
							Element:p
							Element:i
								Fields in the output
								:
							Element:p
							Element:ul
							Element:li
							Element:span
								ViolatedConstraint
								—Indicates why the stop was not assigned to a route when the
							Element:span
								Status
								field has a value of Not Reached; it is blank otherwise.
							Element:li
							Element:span
								Status
								—Indicates whether the stop was located on a road segment (OK), not located (it was too far from a road segment), or not reached. When the value is Not Reached, the
							Element:span
								ViolatedConstraint
								field provides more information.
															Node:
															(type) c
															(layer)5
						Node:
						(type) c
						(layer)2
							Element:h2
								Route names and starting and ending locations
						Node:
						(type) c
						(layer)2
							Element:p
								Plan Routes determines how to assign stops to many routes. But before it can do that, it requires certain inputs that you provide, including the locations where each route starts and ends. This section describes how to set beginning and ending locations and how to associate them with specific routes, or drivers. It also describes how the output routes are automatically named given their starting or ending locations.
						Node:
						(type) c
						(layer)2
							Element:p
								Several parameters can be used in combination to set the start and end points. To briefly introduce them, they are listed below with a short description of how they are relevant. These parameters are referenced in more detail in the subsections that follow.
						Node:
						(type) c
						(layer)2
							Element:p
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:span
								startLayer
								—This parameter is always required, but what is important to know when specifying the related parameters listed here is whether
							Element:span
								startlayer
								contains one or many points.
							Element:li
							Element:span
								startLayerRouteIDField
								—Required when more than one point is in
							Element:span
								startLayer
								.
							Element:li
							Element:span
								returnToStart
								—Set to
							Element:span
								true
								if you want routes to end where they began; set to
							Element:span
								false
								if they end elsewhere (you must also add the
							Element:span
								endLayer
								parameter when false).
							Element:li
							Element:span
								endLayer
								—Required when
							Element:span
								returnToStart
								is
							Element:span
								false
								; it is ignored otherwise.
							Element:li
							Element:span
								endLayerRouteIDField
								—Required when
							Element:span
								returnToStart
								is
							Element:span
								false
								and
							Element:span
								endLayer
								contains more than one point.
						Node:
						(type) c
						(layer)2
							Element:p
								The illustrations in these subsections show two routes only for simplicity. The Plan Routes tool works in the same way when more routes are specified.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											One starting point and returning to start
									Node:
									(type) c
									(layer)3
										Element:p
											The most common and simplest problem to set up is one where all routes start and end at the same location. A charitable organization seeking to efficiently deliver donations to people in need parks its delivery vans at a single warehouse. On delivery days, volunteers load the vans, which then fan out to various stops to deliver the packages. The vans return to the warehouse when all the deliveries are made.
									Node:
									(type) c
									(layer)3
										Element:p
											Provide the following parameters to set up this start-and-end problem type:
									Node:
									(type) c
									(layer)3
										Element:p
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:span
											startLayer
											—Include one point to represent the starting location (for example, the warehouse).
										Element:li
										Element:span
											returnToStart
											—Set to
										Element:span
											true
											.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:figure
										Element:img
										Element:figcaption
											Input: One start location and returning to start
									Node:
									(type) c
									(layer)3
										Element:p
											The output routes start and end at the same, single location.
										Element:figure
										Element:img
										Element:figcaption
											Output: One start location and returning to start
									Node:
									(type) c
									(layer)3
										Element:p
											It is assumed that any driver can be assigned to any route since all routes start and end at the same location; therefore, the routes are assigned generic names.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											One starting point and one ending point
									Node:
									(type) c
									(layer)3
										Element:p
											Sometimes all routes start at one location and end at another. For instance, when planning routes for several buses parked at a depot that will pick up spectators from their homes and take them to an event, such as a concert, the depot is specified as the single starting location, and the venue of the event becomes the single ending location.
									Node:
									(type) c
									(layer)3
										Element:p
											Provide the following parameters to solve this problem type:
									Node:
									(type) c
									(layer)3
										Element:p
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:span
											startLayer
											—Include one point representing the starting location (for example, the bus depot).
										Element:li
										Element:span
											returnToStart
											—Set to
										Element:span
											false
											.
										Element:li
										Element:span
											endLayer
											—Include one point representing the ending location (for example, the concert).
									Node:
									(type) c
									(layer)3
										Element:p
										Element:figure
										Element:img
										Element:figcaption
											Input: One start and one end location
									Node:
									(type) c
									(layer)3
										Element:p
											The output routes start at one location and end at another.
										Element:figure
										Element:img
										Element:figcaption
											Output: One start and one end location
									Node:
									(type) c
									(layer)3
										Element:p
											Because all drivers start and end at the same two locations, respectively, it is assumed any driver can drive any route, and therefore the output routes are generically named.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Many starting points and returning to start
									Node:
									(type) c
									(layer)3
										Element:p
											For this problem type, each route starts from a unique point, visits its assigned stops, and finishes at the place where it began. This problem type is used, for instance, to route inspectors who start the day at their homes, go to various inspection sites, and return home at the end of the day.
									Node:
									(type) c
									(layer)3
										Element:p
											Provide the following parameters to solve this problem type:
									Node:
									(type) c
									(layer)3
										Element:p
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:span
											startLayer
											—Include multiple points in this layer: one for each starting location (for example, an inspector's home). Note that each route is always assigned its own starting point for this problem type. If a subset of routes start at the same location, add their starting points next to or on top of each other to ensure each route has its own corresponding starting location.
										Element:li
										Element:span
											startLayerRouteIDField
											—Choose the ID field for this parameter. The start layer must have a field that uniquely identifies the routes, or drivers. It can be a route number, the driver's name, or some other unique name.
										Element:li
										Element:span
											returnToStart
											—Set to
										Element:span
											true
											.
									Node:
									(type) c
									(layer)3
										Element:figure
										Element:img
										Element:figcaption
											Input: Many start locations and returning to start
									Node:
									(type) c
									(layer)3
										Element:p
											The output routes start at multiple locations and end at their starting locations.
										Element:figure
										Element:img
										Element:figcaption
											Output: Many start locations and returning to start
									Node:
									(type) c
									(layer)3
										Element:p
											The routes and their drivers start at unique locations, so
										Element:span
											startLayerRouteID
											is specified. The output route names are automatically generated to be the same as the route ID values so that the routes can be assigned and delivered to the appropriate drivers.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Many starting points and one ending point
									Node:
									(type) c
									(layer)3
										Element:p
											Each route starts from a unique point, visits its assigned stops, and converges with the other routes at a single ending location for this problem type. For instance, school bus drivers in a rural school district park their buses at their country homes at night. In the morning, they start their routes from home, pick up students, and drop them off at one school.
									Node:
									(type) c
									(layer)3
										Element:p
											Provide the following parameters to solve this problem type:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:span
											startLayer
											—Include multiple points in this layer: one for each starting location (for example, the bus drivers' homes). Note that each route is always assigned its own starting point for this problem type. If a subset of routes start at the same location, add their starting points next to or on top of each other to ensure each route has its own corresponding starting location.
										Element:li
										Element:span
											startLayerRouteIDField
											—Choose the ID field for this parameter. The start layer must have a field that uniquely identifies the routes, or drivers. It can be a route number, the driver's name, or some other unique name.
										Element:li
										Element:span
											returnToStart
											—Set to
										Element:span
											false
											.
										Element:li
										Element:span
											endLayer
											—Include one point representing the ending location (for example, the school).
									Node:
									(type) c
									(layer)3
										Element:p
										Element:figure
										Element:img
										Element:figcaption
											Input: Many start locations and one end location
									Node:
									(type) c
									(layer)3
										Element:p
											The output routes start at multiple locations and end at one location.
										Element:figure
										Element:img
										Element:figcaption
											Output: Many start locations and one end location
									Node:
									(type) c
									(layer)3
										Element:p
											The routes and their drivers start at unique locations, so
										Element:span
											startLayerRouteID
											is specified. The output route names are automatically generated to be the same as the route ID values so that the routes can be assigned and delivered to the appropriate drivers.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											One starting points to many ending points
									Node:
									(type) c
									(layer)3
										Element:p
											In the one-to-many problem type, all routes start from one point, visit their assigned stops, and end at unique locations. For a utility company that needs to hang shut-off warning tags on the doors of delinquent customers, employees are offered extra pay to hang the tags on their way home from work. The employees who accept the task pick up the tags from the central office, drive to various stops to hang the tags, and end their routes at their own homes.
									Node:
									(type) c
									(layer)3
										Element:p
											Provide the following parameters to solve this problem type:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:span
											startLayer
											—Include one point representing the starting location (for example, the central office).
										Element:li
										Element:span
											returnToStart
											—Set to
										Element:span
											false
											.
										Element:li
										Element:span
											endLayer
											—Include multiple points in this layer: one for each ending location (for example, the employee homes). Note that each route is always assigned its own ending point for this problem type. If a subset of routes end at the same location, add their ending points next to or on top of each other to ensure each route has its own corresponding ending location.
										Element:li
										Element:span
											endLayerRouteIDField
											—Choose the ID field for this parameter. The end layer must have a field that uniquely identifies the routes, or drivers. It can be a route number, the driver's name, or some other unique name.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:figure
										Element:img
										Element:figcaption
											Input: One start location and many end locations
									Node:
									(type) c
									(layer)3
										Element:p
											The output routes start at one location and end at multiple locations.
										Element:figure
										Element:img
										Element:figcaption
											Output: One start location and many end location
									Node:
									(type) c
									(layer)3
										Element:p
											The routes and their drivers end at unique locations, so
										Element:span
											endLayerRouteID
											is specified. The output route names are automatically generated to be the same as the route ID values so that the routes can be assigned and delivered to the appropriate drivers.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Many starting points to many ending points
									Node:
									(type) c
									(layer)3
										Element:p
											In some planning scenarios, each route has unique starting and ending locations.
									Node:
									(type) c
									(layer)3
										Element:p
											Provide the following parameters to solve this problem type:
									Node:
									(type) c
									(layer)3
										Element:p
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:span
											startLayer
											—Include multiple points in this layer: one for each starting location. Note that each route is always assigned its own starting point for this problem type. If a subset of routes start at the same location, add their starting points next to or on top of each other to ensure each route has its own corresponding starting location.
										Element:li
										Element:span
											startLayerRouteIDField
											—Choose the ID field for this parameter. The start layer must have a field that uniquely identifies the routes, or drivers. It can be a route number, the driver's name, or some other unique name.
										Element:li
										Element:span
											returnToStart
											—Set to
										Element:span
											false
											.
										Element:li
										Element:span
											endLayer
											—Include multiple points in this layer: one for each ending location. Note that each route is always assigned its own ending point for this problem type. If a subset of routes end at the same location, add their ending points next to or on top of each other to ensure each route has its own corresponding ending location
										Element:li
										Element:span
											endLayerRouteIDField
											—Choose the ID field for this parameter. The end layer must have a field that uniquely identifies the routes, or drivers. It can be a route number, the driver's name, or some other unique name.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:figure
										Element:img
										Element:figcaption
											Input: Many start and end locations
									Node:
									(type) c
									(layer)3
										Element:p
											The output routes start at many locations and end at multiple locations.
										Element:figure
										Element:img
										Element:figcaption
											Output: Many start and end locations
									Node:
									(type) c
									(layer)3
										Element:hr
									Node:
									(type) c
									(layer)3
										Element:p
										Element:a
											Feedback on this topic?
									Node:
									(type) c
									(layer)3
										Element:h5
											In this topic
									Node:
									(type) c
									(layer)3
										Element:h5
											In this topic
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Licensing
										Element:li
										Element:a
											Limits
										Element:li
										Element:a
											Request URL
										Element:li
										Element:a
											Request Parameters
										Element:li
										Element:a
											Response
										Element:li
										Element:a
											Accessing results
										Element:li
										Element:a
											Route names and starting and ending locations
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:p
										Element:small
										Element:a
											Copyright © 2017 Esri
											. All rights reserved. |
										Element:a
											Privacy
											|
										Element:a
											Terms of use
											|
										Element:a
											Plain English
											|
										Element:a
											FAQ
