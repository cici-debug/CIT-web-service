Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
				Element:a
					ArcGIS REST API: Spatial Analysis Service
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:aside
													Element:h4
														Getting Started
													Element:h4
														Tasks
													Element:h4
														Context
												Node:
												(type) c
												(layer)4
													Element:a
														Back to Top
			Node:
			(type) h1
			(layer)1
				Element:h1
					Find Existing Locations
			Node:
			(type) c
			(layer)1
															Node:
															(type) c
															(layer)5
																Element:aside
																Element:h4
																	In this topic
																Element:h5
																	In this topic
																Element:ul
																Element:li
																Element:a
																	Request URL
																Element:li
																Element:a
																	Request Parameters
																Element:li
																Element:a
																	Response
																Element:li
																Element:a
																	Accessing results
															Node:
															(type) c
															(layer)5
																Element:p
																Element:img
															Node:
															(type) c
															(layer)5
																Element:p
																	The
																Element:b
																	Find Existing Locations
																	task selects features in the input layer that meet a query you specify. A query is made up of one or more expressions. There are two types of expressions: attribute and spatial. An example of an attribute expression is that a parcel must be vacant, which is an attribute of the Parcels layer (
																Element:span
																	where STATUS = 'VACANT'
																	). An example of a spatial expression is that the parcel must also be within a certain distance of a river (
																Element:span
																	Parcels within a distance of 0.75 Miles from Rivers
																	).
															Node:
															(type) c
															(layer)5
						Node:
						(type) c
						(layer)2
							Element:h2
								Request URL
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								http://<analysis url>/FindExistingLocations/submitJob
						Node:
						(type) c
						(layer)2
							Element:p
															Node:
															(type) c
															(layer)5
						Node:
						(type) c
						(layer)2
							Element:h2
								Request Parameters
						Node:
						(type) c
						(layer)2
							Element:p
						Node:
						(type) c
						(layer)2
							Element:h4
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:colgroup
							Element:thead
							Element:tr
							Element:th
								Parameter
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
							Element:p
							Element:span
								inputLayers
							Element:p
								(Required)
							Element:td
							Element:p
								A list of layers that will be used in the
							Element:span
								expressions
								parameter.
							Element:p
							Element:h5
								Note:
							Element:p
								Only those features in the first layer will be written to the output.
								Each layer in the list can be:
							Element:ul
							Element:li
								a URL to a feature service layer with an optional filter to select specific features, or
							Element:li
								a feature collection.
							Element:p
							Element:i
								Examples
								:
							Element:ul
							Element:li
							Element:span
								{"url": <feature service layer url>, "filter": <where clause>}
							Element:li
							Element:span
								{"layerDefinition": {}, "featureSet": {}, "filter": <where clause>}
							Element:p
							Element:i
								Example list of urls:
							Element:pre
							Element:code
								[ {"url": "http://someservices.arcgis.com/ees4FIJk4mpkX1ID/arcgis/rest/services/LAParkSitingData/FeatureServer/0"}, {"url": "http://someservices.arcgis.com/ees4FIJk4mpkX1ID/arcgis/rest/services/LAParkSitingData/FeatureServer/1"}, {"url": "http://someservices.arcgis.com/ees4FIJk4mpkX1ID/arcgis/rest/services/LAParkSitingData/FeatureServer/2"} ]
							Element:tr
							Element:td
							Element:p
							Element:span
								expressions
							Element:p
								(Required)
							Element:td
							Element:p
								This is a list of expressions. There are two types of expressions, attribute and spatial.
							Element:p
							Element:i
								Example attribute expression:
							Element:pre
								Notes:
							Element:code
								[ { "operator": "and", "layer": 0, "where": "STATUS = 'VACANT'" } ]
							Element:ul
							Element:li
							Element:span
								operator
								can be either
							Element:span
								and
								or
							Element:span
								or
							Element:li
							Element:span
								layer
								is the index of the layer in the
							Element:span
								inputLayers
								parameter.
							Element:li
								The
							Element:span
								where
								clause must be surrounded by double quotes.
							Element:li
								When dealing with text fields, values must be single-quoted (
							Element:span
								'VACANT'
								).
							Element:li
								Date fields support all queries except LIKE. Dates are strings in
							Element:span
								YYYY:MM:DD hh:mm:ss
								format. Here's an example using the date field
							Element:span
								ObsDate
								:
							Element:ul
							Element:li
							Element:span
								"where": "ObsDate >= '1998-04-30 13:30:00' "
							Element:p
							Element:h4
							Element:table
							Element:colgroup
							Element:colgroup
							Element:thead
							Element:tr
							Element:th
								Operator
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
							Element:p
							Element:span
								=
							Element:td
							Element:p
								Equal
							Element:tr
							Element:td
							Element:p
							Element:span
								>
							Element:td
							Element:p
								Greater than
							Element:tr
							Element:td
							Element:p
							Element:span
								<
							Element:td
							Element:p
								Less than
							Element:tr
							Element:td
							Element:p
							Element:span
								>=
							Element:td
							Element:p
								Greater than or equal to
							Element:tr
							Element:td
							Element:p
							Element:span
								<=
							Element:td
							Element:p
								Less than or equal to
							Element:tr
							Element:td
							Element:p
							Element:span
								<>
							Element:td
							Element:p
								Not equal
							Element:tr
							Element:td
							Element:p
							Element:span
								LIKE '%<string>'
							Element:td
							Element:p
								A percent symbol (%) signifies a wildcard, meaning that anything is acceptable in its placeâ€”one character, a hundred characters, or no character. This expression would select Mississippi and Missouri among USA state names:
							Element:p
							Element:span
								STATE_NAME LIKE 'Miss%'
							Element:tr
							Element:td
							Element:p
							Element:span
								BETWEEN <value1> AND <value2>
							Element:td
							Element:p
								Selects a record if it has a value greater than or equal to <value1> and less than or equal to <value2>. For example, this expression selects all records with an HHSIZE value greater than or equal to 3 and less than or equal to 10:
							Element:p
							Element:span
								HHSIZE BETWEEN 3 AND 10
							Element:p
								The above is equivalent to:
							Element:p
							Element:span
								HHSIZE >= 3 AND HHSIZE <= 10
							Element:p
								This operator applies to numeric or date fields. Here is an example of a date query on the field
							Element:span
								ObsDate
								:
							Element:p
							Element:span
								ObsDate BETWEEN '1998-04-30 00:00:00' AND '1998-04-30 23:59:59'
							Element:p
								Time is optional.
							Element:tr
							Element:td
							Element:p
							Element:span
								NOT BETWEEN <value1> AND <value2>
							Element:td
							Element:p
								Selects a record if it has a value outside the range between <value1> and <value2>. For example, this expression selects all records whose HHSIZE value is less than 5 and greater than 7:
							Element:p
							Element:span
								HHSIZE NOT BETWEEN 5 AND 7
							Element:p
								The above is equivalent to:
							Element:p
							Element:span
								HHSIZE < 5 OR HHSIZE > 7
							Element:p
								This operator applies to numeric or date fields.
							Element:p
							Element:i
								Example spatial expression:
							Element:pre
							Element:code
								[ { "operator": "and", "layer": 0, "spatialRel": "withinDistance", "selectingLayer": 1, "distance": 10, "units": "miles" } ]
							Element:ul
							Element:li
							Element:span
								operator
								can be either
							Element:span
								and
								or
							Element:span
								or
							Element:li
							Element:span
								layer
								is the index of the layer in the
							Element:span
								inputLayers
								parameter. The result of the expression is features in this layer.
							Element:li
							Element:span
								spatialRel
								is the spatial relationship. There are eight spatial relationships.
							Element:h4
							Element:table
							Element:colgroup
							Element:colgroup
							Element:thead
							Element:tr
							Element:th
								spatialRel
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
							Element:p
							Element:span
								intersects
							Element:p
							Element:span
								notIntersects
							Element:td
							Element:p
							Element:figure
							Element:img
							Element:p
								A feature in
							Element:span
								layer
								passes the intersect test if it overlaps any part of a feature in
							Element:span
								selectingLayer
								, including touches (where features share a common point).
							Element:ul
							Element:li
							Element:span
								intersects
								â€”If a feature in
							Element:span
								layer
								intersects a feature in
							Element:span
								selectingLayer
								, the feature in
							Element:span
								layer
								is included in the output.
							Element:li
							Element:span
								notIntersects
								â€”If a feature in
							Element:span
								layer
								intersects a feature in
							Element:span
								selectingLayer
								, the feature in
							Element:span
								layer
								is excluded from the output.
							Element:tr
							Element:td
							Element:p
							Element:span
								withinDistance
							Element:p
							Element:span
								notWithinDistance
							Element:td
							Element:p
							Element:figure
							Element:img
							Element:p
								The within a distance relationship uses the straight-line distance between features in
							Element:span
								layer
								to those in
							Element:span
								selectingLayer
								.
							Element:ul
							Element:li
							Element:span
								withinDistance
								â€”A feature in
							Element:span
								layer
								is selected (included in the output) if any part is within the specified distance of a feature in
							Element:span
								selectingLayer
								; for example, parcels within 100 meters of a river will be included in the output.
							Element:li
							Element:span
								notWithinDistance
								â€”A feature in
							Element:span
								layer
								is excluded (not included in the output) if it is within a distance of a feature in
							Element:span
								selectingLayer
								; for example, parcels within 100 meters of a river will not be included in the output. You can think of this relationship as "is farther away than".
							Element:p
							Element:b
								Note
								:
							Element:ul
							Element:li
								Distances are calculated between the closest parts of features. For example, if parcels are to be within 0.75 miles of the Los Angeles River, parcels are selected if any part of the parcel is within 0.75 miles. If the criteria is that the entire parcel must be within 0.75 miles, you would use the Create Buffers tool with a distance of 0.75 miles around the Los Angeles River to create a new layer. You would then create an expression where parcels
							Element:span
								within
								the buffer layer.
							Element:tr
							Element:td
							Element:p
							Element:span
								contains
							Element:p
							Element:span
								notContains
							Element:td
							Element:p
							Element:figure
							Element:img
							Element:p
								A feature in
							Element:span
								layer
								passes this test if it completely surrounds a feature in
							Element:span
								selectingLayer
								. No portion of the contained feature can be outside the containing feature; however, the contained feature is allowed to touch the containing feature (that is, share a common point along its boundary).
							Element:ul
							Element:li
							Element:span
								contains
								â€”If a feature in
							Element:span
								layer
								contains a feature in
							Element:span
								selectingLayer
								, the feature in
							Element:span
								layer
								is included in the output.
							Element:li
							Element:span
								notContains
								â€”If a feature in
							Element:span
								layer
								contains a feature in
							Element:span
								selectingLayer
								, the feature in the first layer is excluded from the output.
							Element:p
							Element:b
								Note
								:
							Element:ul
							Element:li
								You can use the contains relationship with points and lines. For example, you have a layer of street centerlines (lines) and a layer of manhole covers (points), and you want to find streets that contain a manhole cover. You could use
							Element:span
								contains
								to find streets that contain manhole covers, but in order for a line to contain a point, the point must be exactly on the line (that is, in GIS terms, they are snapped to each other). If there is any doubt about this, use the
							Element:span
								withinDistance
								relationship with a suitable distance value.
							Element:tr
							Element:td
							Element:p
							Element:span
								within
							Element:p
							Element:span
								notWithin
							Element:td
							Element:p
							Element:figure
							Element:img
							Element:p
								A feature in
							Element:span
								layer
								passes this test if it is completely surrounded by a feature in
							Element:span
								selectingLayer
								. The entire feature in
							Element:span
								layer
								must be within the containing feature; however, the two features are allowed to touch (that is, share a common point along its boundary).
							Element:ul
							Element:li
							Element:span
								within
								â€”If a feature in
							Element:span
								layer
								is completely within a feature in
							Element:span
								selectingLayer
								, the feature in
							Element:span
								layer
								is included in the output.
							Element:li
							Element:span
								notWithin
								â€”If a feature in
							Element:span
								layer
								is completely within a feature in
							Element:span
								selectingLayer
								, the feature in
							Element:span
								layer
								is excluded from the output.
							Element:p
							Element:b
								Note
								:
							Element:ul
							Element:li
								You can use the within relationship for points and lines, just as you can with the contains relationship. For example, your first layer contains points representing manhole covers and you want to find the manholes that are on street centerlines (as opposed to parking lots or other non-street features). You could use
							Element:span
								within
								to find manhole points within street centerlines, but in order for a point to contain a line, the point must be exactly on the line (that is, in GIS terms, they are snapped to each other). If there is any doubt about this, use the
							Element:span
								withinDistance
								relationship with a suitable distance value.
							Element:li
							Element:span
								distance
								is the distance to use for the
							Element:span
								withinDistance
								and
							Element:span
								notWithinDistance
								spatial relationship.
							Element:li
							Element:span
								units
								is the units for
							Element:span
								distance
								.
							Element:i
								Values
								:
							Element:span
								Meters
								|
							Element:span
								Kilometers
								|
							Element:span
								Feet
								|
							Element:span
								Yards
								|
							Element:span
								Miles
							Element:p
								An expression may be a list, which denotes a group. The first operator in the group indicates how the group expression is added to the previous expression. Grouping expressions is only necessary when you need to create two or more distinct sets of features from the same layer. One way to think of grouping is that without grouping, you would have to execute Find Existing Locations multiple times and merge the results.
							Element:p
							Element:p
								Following is an example where grouping is needed:
							Element:ul
							Element:li
								You have a layer representing places that contain toxic chemicals. Each feature has an attribute, CHEMICAL, containing the name of the toxic chemical known to exist at the site.
							Element:li
								You want to find toxic sites containing Mercury or Selenium that are near a river (layer 0).
							Element:li
								You also want to find toxic sites containing Benzene or Lead that are near a park (layer 1).
							Element:p
							Element:i
								Example of grouping using a list:
							Element:pre
							Element:code
								[ { "operator": "and", "layer": 0, "spatialRel": "withinDistance", "selectingLayer": 1, "distance": 0.5, "units": "Miles" }, [ { "operator": "and", "layer": 0, "where": "CHEMICAL = 'MERCURY'" }, { "operator": "or", "layer": 0, "where": "CHEMICAL = 'SELENIUM'" }, ], [ { "operator": "or", "layer": 0, "spatialRel": "withinDistance", "selectingLayer": 2, "distance": 0.5, "units": "Miles" }, [ { "operator": "and", "layer": 0, "where": "CHEMICAL = 'BENZENE'" }, { "operator": "or", "layer": 0, "where": "CHEMICAL = 'LEAD'" } ] ] ]
							Element:tr
							Element:td
							Element:p
							Element:span
								outputName
							Element:td
							Element:p
								If provided, the task will create a feature service of the results. You define the name of the service. If
							Element:span
								outputName
								is not supplied, the task will return a feature collection.
							Element:i
								Syntax:
							Element:pre
							Element:code
								{ "serviceProperties": { "name": "<service name>" } }
							Element:tr
							Element:td
							Element:p
							Element:span
								context
							Element:td
							Element:p
								Context contains additional settings that affect task execution. For Find Existing Locations, there are two settings.
							Element:ol
							Element:li
							Element:a
								Extent
								(
							Element:span
								extent
								)â€”a bounding box that defines the analysis area. Only those features in the input list
							Element:span
								inputLayers
								that intersect the bounding box will be analyzed.
							Element:li
							Element:a
								Output Spatial Reference
								(
							Element:span
								outSR
								)â€”the output features will be projected into the output spatial reference.
							Element:p
							Element:i
								Syntax:
							Element:pre
							Element:code
								{ "extent" : {extent} "outSR" : {spatial reference} }
							Element:tr
							Element:td
							Element:p
							Element:span
								f
							Element:td
							Element:p
								The response format. The default response format is
							Element:span
								html
								.
							Element:p
							Element:i
								Values
								:
							Element:span
								html
								|
							Element:span
								json
															Node:
															(type) c
															(layer)5
						Node:
						(type) c
						(layer)2
							Element:h2
								Response
						Node:
						(type) c
						(layer)2
							Element:p
								When you submit a request, the service assigns a unique job ID for the transaction.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:i
								Syntax:
							Element:pre
							Element:code
								{ "jobId": "<unique job identifier>", "jobStatus": "<job status>" }
						Node:
						(type) c
						(layer)2
							Element:p
								After the initial request is submitted you can use the
							Element:span
								jobId
								to periodically check the status of the job and messages as described in the topic
							Element:a
								Checking job status
								. Once the job has successfully completed, you use the
							Element:span
								jobId
								to retrieve the results. To track the status, you can make a request of the following form:
							Element:pre
							Element:code
								http://<analysis url>/FindExistingLocations/jobs/<jobId>
															Node:
															(type) c
															(layer)5
						Node:
						(type) c
						(layer)2
							Element:h2
								Accessing results
						Node:
						(type) c
						(layer)2
							Element:p
								When the status of the job request is
							Element:span
								esriJobSucceded
								, you can access the results of the analysis by making a request of the following form:
							Element:pre
							Element:code
								http://<analysis url>/FindExistingLocations/jobs/<jobId>/results/<output parameter name>?token=<your token>&f=json
						Node:
						(type) c
						(layer)2
							Element:p
						Node:
						(type) c
						(layer)2
							Element:h4
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:colgroup
							Element:thead
							Element:tr
							Element:th
								Parameter
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
							Element:p
							Element:span
								resultLayer
							Element:td
							Element:p
							Element:i
								Request example:
							Element:pre
							Element:code
								{"url": "http://<analysis url>/FindExistingLocations/jobs/<jobId>/results/resultLayer"}
							Element:p
								The result has properties for parameter name, data type, and value. The contents of value depends upon the
							Element:span
								outputName
								parameter provided in the initial request.
							Element:ul
							Element:li
								If
							Element:span
								outputName
								was provided,
							Element:span
								value
								contains the url to the feature service layer.
							Element:pre
							Element:code
								{ "paramName":"unknown", "dataType":"GPString", "value":{"url":"<hosted featureservice layer url>"} }
							Element:li
								If
							Element:span
								outputName
								was not provided,
							Element:span
								value
								contains a feature collection.
							Element:pre
							Element:code
								{ "paramName":"unknown", "dataType":"GPString", "value":{"layerDefinition": {}, "featureSet": {}} }
							Element:p
								See
							Element:a
								Feature Output
								for more information about how the result layer or collection is accessed.
						Node:
						(type) c
						(layer)2
							Element:hr
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
								Feedback on this topic?
						Node:
						(type) c
						(layer)2
							Element:h5
								In this topic
						Node:
						(type) c
						(layer)2
							Element:h5
								In this topic
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Request URL
							Element:li
							Element:a
								Request Parameters
							Element:li
							Element:a
								Response
							Element:li
							Element:a
								Accessing results
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:p
							Element:small
							Element:a
								Copyright Â© 2017 Esri
								. All rights reserved. |
							Element:a
								Privacy
								|
							Element:a
								Terms of use
								|
							Element:a
								Plain English
								|
							Element:a
								FAQ
