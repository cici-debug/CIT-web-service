Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					API Reference
			Node:
			(type) c
			(layer)1
				Element:p
					This is a full documenation on the API of the MODE cloud platform.
			Node:
			(type) c
			(layer)1
				Element:dl
				Element:dt
					Version
				Element:dd
					2.1
				Element:dt
					Base URL
				Element:dd
				Element:code
					https://api.tinkermode.com
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Introduction
						Node:
						(type) c
						(layer)2
							Element:p
								The MODE API is an
							Element:strong
								HTTP-based API
								that allows hardware devices, mobile apps and external servers to interact wth the MODE cloud in a straighforward manner. It is a
							Element:strong
								RESTful API
								, with a few exceptions where non-RESTful access is more suitable.
						Node:
						(type) c
						(layer)2
							Element:p
								All API requests should be made securely via HTTPS. For prototyping with devices that are not capable of making HTTPS connections, the API is also available via unencrypted HTTP. You are highly discouraged from using unsecure access for your production system.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Request Headers
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Content Type and Content Length
									Node:
									(type) c
									(layer)3
										Element:p
											If an API request contains a request body, it must also contain
										Element:code
											Content-Type
											and
										Element:code
											Content-Length
											headers. Depending on the API resource/endpoint, the request body is expected to be either in JSON (
										Element:code
											application/json
											) or as a web form (
										Element:code
											application/x-www-form-urlencoded
											).
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Authorization
									Node:
									(type) c
									(layer)3
										Element:p
											Some resources/endpoints have methods that can only be accessed by certain authorized clients. To access these restricted methods, the client must provide an
										Element:code
											Authorization
											request header, which should be in the following format:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											Authorization: ModeCloud <AUTH_CODE>
									Node:
									(type) c
									(layer)3
										Element:p
											where
										Element:code
											<AUTH_CODE>
											is an authentication token.
									Node:
									(type) c
									(layer)3
										Element:p
											How the authentication token can be obtained depends on the nature of the API client, as explained below.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Client Authentication
						Node:
						(type) c
						(layer)2
							Element:p
								Requests to the MODE API is usually made by one of the following entities: a user (by way of a mobile or web app), a device, or an authorized external program/service. An API client can identify itself by using the
							Element:code
								Authorization
								request header, which contains an authentication token.
						Node:
						(type) c
						(layer)2
							Element:p
								Here are the ways to obtain this token:
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											For Users
									Node:
									(type) c
									(layer)3
										Element:p
											The token is obtained through requests to the
										Element:a
											Authentication
											endpoints. Depending on project settings, user authentication may involve round-trip verification by an SMS message, direct password input, or special server-to-server API calls.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											For Devices
									Node:
									(type) c
									(layer)3
										Element:p
											The token is the
										Element:strong
											API Key
											assigned to a device instance when it was provisioned. If the device was pre-provisioned, you can retrieve this key from the Developer Console. If you are using On-demand Device Provisioning, this key is returned in the API call that adds a device to a home.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											For Other Clients
									Node:
									(type) c
									(layer)3
										Element:p
											You can provision
										Element:strong
											Project API Keys
											for use by external programs or services that integrate with the MODE platform.
									Node:
									(type) c
									(layer)3
										Element:p
											For example, you may have a scheduler service that sends commands to your devices periodically. Or, if you have your own user account system, your server will need to make backend API calls to MODE during user registration and login.
									Node:
									(type) c
									(layer)3
										Element:p
											For these API clients, you can provision Project API Keys in your project's
										Element:strong
											Settings
											screen on the Developer Console. You can also control what additional permissions a Project Key can have besides basic API access.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								WebSocket Endpoints
						Node:
						(type) c
						(layer)2
							Element:p
								Some of the API endpoints are intended for clients to establish
							Element:a
								WebSocket
								connections. They do not behave like regular RESTful API resources. These include:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								WebSocket endpoint that allows a user to
							Element:a
								listen to events
								happening at her home(s).
							Element:li
								WebSocket endpoint that allows a device to
							Element:a
								listen to commands
								sent by users or authorized client programs.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Resources
						Node:
						(type) c
						(layer)2
							Element:p
								Here are the
							Element:a
								API resources/endpoints
								available to clients:
						Node:
						(type) c
						(layer)2
							Element:dl
							Element:dt
							Element:a
								Users
							Element:dd
							Element:p
								Registered end-users of a project.
							Element:dt
							Element:a
								Homes
							Element:dd
							Element:p
								A "home" represents a container of devices and is owned/managed by one or more users.
							Element:dt
							Element:a
								Devices
							Element:dd
							Element:p
								Cloud-aware devices that have been registered to a home. Some devices connect to the cloud directly, while some are under the control of a hub.
							Element:dt
							Element:a
								Authentication
							Element:dd
							Element:p
								For handling API client authentication. These resources do not adhere strictly to a RESTful model.
							Element:dt
							Element:a
								Device Registration
							Element:dd
							Element:p
								For initiating the process to register devices to homes. This step is required unless the project was configured to allow
							Element:strong
								On-Demand Device Provisioning
								.
							Element:dt
							Element:a
								User Session
							Element:dd
							Element:p
								This resource becomes available after a user has successfully authenticated with the API service.
