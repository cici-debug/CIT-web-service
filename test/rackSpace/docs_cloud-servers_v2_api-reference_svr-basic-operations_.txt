Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
				Element:span
					Rackspace
					Developer Docs
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:p
					Letâ€™s Build Something Powerful Together!
			Node:
			(type) c
			(layer)1
				Element:a
				Element:span
				Element:span
					Submit an issue
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Cloud Servers 2.0
				Element:li
				Element:a
					Getting started
				Element:ul
				Element:li
				Element:a
					Get your credentials
				Element:li
				Element:a
					Send API requests to Cloud Servers
				Element:ul
				Element:li
				Element:a
					Install CLI client and Cloud Servers Virtual Interface extension
				Element:li
				Element:a
					Convert cURL examples to run on Windows
				Element:li
				Element:a
					Authenticate to the Rackspace Cloud
				Element:ul
				Element:li
				Element:a
					Authenticating by using the nova client
				Element:li
				Element:a
					Authenticating by using cURL
				Element:li
				Element:a
					Cloud Servers Concepts
				Element:ul
				Element:li
				Element:a
					How Cloud Servers work
				Element:li
				Element:a
					Create your first server
				Element:ul
				Element:li
				Element:a
					Listing images
				Element:li
				Element:a
					Listing flavors
				Element:li
				Element:a
					Booting a new server with your cloud network
				Element:li
				Element:a
					Getting server details
				Element:li
				Element:a
					Listing servers
				Element:li
				Element:a
					Deleting your cloud server
				Element:li
				Element:a
					Create your first network
				Element:ul
				Element:li
				Element:a
					Creating network
				Element:li
				Element:a
					Listing flavors
				Element:li
				Element:a
					Booting a new server with your cloud network
				Element:li
				Element:a
					Getting network details
				Element:li
				Element:a
					Deleting your cloud network
				Element:li
				Element:a
					Attach your network to an existing server
				Element:ul
				Element:li
				Element:a
					Creating a virtual interface
				Element:li
				Element:a
					Listing virtual interfaces for a server
				Element:li
				Element:a
					Deleting a virtual interface from a server
				Element:li
				Element:a
					General API information
				Element:ul
				Element:li
				Element:a
					Service access endpoints
				Element:li
				Element:a
					Request and response types
				Element:li
				Element:a
					Links and References
				Element:li
				Element:a
					Paginated collections
				Element:ul
				Element:li
				Element:a
					JSON Collection
				Element:li
				Element:a
					Efficient Polling with the Changes-Since Parameter
				Element:li
				Element:a
					Limits
				Element:ul
				Element:li
				Element:a
					Rate Limits
				Element:li
				Element:a
					Absolute Limits
				Element:li
				Element:a
					Quotas
				Element:li
				Element:a
					Faults
				Element:ul
				Element:li
				Element:a
					Synchronous Faults
				Element:li
				Element:a
					Asynchronous Faults
				Element:li
				Element:a
					badRequest
				Element:li
				Element:a
					itemNotFound
				Element:li
				Element:a
					overLimit
				Element:li
				Element:a
					serviceUnavailable
				Element:li
				Element:a
					unauthorized
				Element:li
				Element:a
					Date and time format
				Element:li
				Element:a
					Flavors
				Element:ul
				Element:li
				Element:a
					Virtual Cloud Server Flavors
				Element:li
				Element:a
					OnMetal Cloud Server Flavors
				Element:li
				Element:a
					Supported Flavors for Cloud Servers
				Element:li
				Element:a
					Role-based access control (RBAC)
				Element:ul
				Element:li
				Element:a
					Assigning roles to account users
				Element:li
				Element:a
					Roles available for Cloud Servers
				Element:li
				Element:a
					Multiproduct global roles and permissions
				Element:li
				Element:a
					Resolving conflicts between RBAC multiproduct and product-specific roles
				Element:li
				Element:a
					RBAC permissions cross-reference to Cloud Servers API operations
				Element:li
				Element:a
					API extensions
				Element:ul
				Element:li
				Element:a
					Rackspace Extensions
				Element:li
				Element:a
					Disk Configuration Extension
				Element:ul
				Element:li
				Element:a
					Changes to Get Server/Image Details
				Element:li
				Element:a
					Changes to Rebuild Server
				Element:li
				Element:a
					Changes to Resize Server
				Element:li
				Element:a
					Changes to Create Server
				Element:li
				Element:a
					Extended Status Extension
				Element:ul
				Element:li
				Element:a
					Task states
				Element:li
				Element:a
					Rescue Mode Extension
				Element:ul
				Element:li
				Element:a
					Rescue and unrescue server action operations
				Element:li
				Element:a
					Used Limits Extension
				Element:ul
				Element:li
				Element:a
					Changes to List of rate and absolute limits to include used limits
				Element:li
				Element:a
					Scheduled Images Extension
				Element:ul
				Element:li
				Element:a
					API operations for scheduling images
				Element:li
				Element:a
					Flavors Extra Specs Extension
				Element:ul
				Element:li
				Element:a
					Changes to Get flavor details API operation
				Element:li
				Element:a
					Flavors OS Extra Specs Extension
				Element:ul
				Element:li
				Element:a
					API operations for Flavor OS extra specs extension
				Element:li
				Element:a
					Server Actions Extension
				Element:ul
				Element:li
				Element:a
					List server actions and show action details operations
				Element:li
				Element:a
					Config Drive Extension
				Element:li
				Element:a
					Volumes Extension
				Element:ul
				Element:li
				Element:a
					Volume attachment operations
				Element:li
				Element:a
					Boot from volume
				Element:ul
				Element:li
				Element:a
					Create volume from image and boot instance
				Element:li
				Element:a
					Use pre-made bootable volume to boot instance
				Element:li
				Element:a
					API operations for creating or using bootable volumes
				Element:li
				Element:a
					Block-device-mapping attribute versus block-device attribute
				Element:li
				Element:a
					Network extension
				Element:ul
				Element:li
				Element:a
					API operations for networks extension
				Element:li
				Element:a
					Virtual Interfaces extension
				Element:ul
				Element:li
				Element:a
					API operations for virtual interfaces extension
				Element:li
				Element:a
					Scheduler Hint Extension
				Element:ul
				Element:li
				Element:a
					Why use scheduler hints?
				Element:li
				Element:a
					Scheduler hint operations
				Element:li
				Element:a
					API reference
				Element:ul
				Element:li
				Element:a
					Server operations
				Element:ul
				Element:li
				Element:a
					Create server
				Element:li
				Element:a
					Create server with disk config
				Element:li
				Element:a
					Create server with scheduler hints
				Element:li
				Element:a
					Retrieve list of servers
				Element:li
				Element:a
					List servers with details
				Element:li
				Element:a
					Show server details
				Element:li
				Element:a
					Update server
				Element:li
				Element:a
					Delete server
				Element:li
				Element:a
					Create a server key pair
				Element:li
				Element:a
					Import a server key pair
				Element:li
				Element:a
					Retrieve list of key pairs
				Element:li
				Element:a
					Delete key pair
				Element:li
				Element:a
					Attach volume to server
				Element:li
				Element:a
					List server volumes
				Element:li
				Element:a
					Show volume attachment details
				Element:li
				Element:a
					Delete volume attachment from server
				Element:li
				Element:a
					Create bootable volume and server
				Element:li
				Element:a
					Retrieve list of server actions
				Element:li
				Element:a
					Retrieve log details for a specified server action
				Element:li
				Element:a
					Change password for specified server
				Element:li
				Element:a
					Reboot specified server
				Element:li
				Element:a
					Rebuild specified server
				Element:li
				Element:a
					Resize specified server
				Element:li
				Element:a
					Confirm server resize for specified server
				Element:li
				Element:a
					Revert server resize for specified server
				Element:li
				Element:a
					Create image of specified server
				Element:li
				Element:a
					Rescue specified server
				Element:li
				Element:a
					Unrescue specified server
				Element:li
				Element:a
					Lock specified server
				Element:li
				Element:a
					Unlock specified server
				Element:li
				Element:a
					Start specified server
				Element:li
				Element:a
					Stop specified server
				Element:li
				Element:a
					Retrieves list of server addresses
				Element:li
				Element:a
					Retrieve list of network addresses for server and network
				Element:li
				Element:a
					List server metadata
				Element:li
				Element:a
					Set server metadata
				Element:li
				Element:a
					Update server metadata
				Element:li
				Element:a
					Show server metadata item details
				Element:li
				Element:a
					Set server metadata item
				Element:li
				Element:a
					Delete server metadata item
				Element:li
				Element:a
					Flavor operations
				Element:ul
				Element:li
				Element:a
					Retrieve list of flavors
				Element:li
				Element:a
					Retrieve list of flavors with details
				Element:li
				Element:a
					Retrieve flavor details
				Element:li
				Element:a
					Show flavor with extra specs
				Element:li
				Element:a
					List extra specs for flavors
				Element:li
				Element:a
					Get details for specified flavor extra spec
				Element:li
				Element:a
					Image operations
				Element:ul
				Element:li
				Element:a
					Retrieve list of images
				Element:li
				Element:a
					Retrieve list of images with details
				Element:li
				Element:a
					Retrieve image details
				Element:li
				Element:a
					Delete image
				Element:li
				Element:a
					Retrieve image metadata for specified image
				Element:li
				Element:a
					Set image metadata for specified image
				Element:li
				Element:a
					Retrieve image metadata item for specified image
				Element:li
				Element:a
					Set image metadata item for specified image
				Element:li
				Element:a
					Delete image metadata item for specified image
				Element:li
				Element:a
					Enable scheduled Images
				Element:li
				Element:a
					Show scheduled Images
				Element:li
				Element:a
					Disable scheduled Images
				Element:li
				Element:a
					Networks operations
				Element:ul
				Element:li
				Element:a
					Retrieve list of networks
				Element:li
				Element:a
					Create network
				Element:li
				Element:a
					Create server with network
				Element:li
				Element:a
					Show network
				Element:li
				Element:a
					Delete network
				Element:li
				Element:a
					Retrieve list of virtual interfaces
				Element:li
				Element:a
					Create virtual interface and attach to server
				Element:li
				Element:a
					Delete virtual interface
				Element:li
				Element:a
					Miscellaneous server operations
				Element:ul
				Element:li
				Element:a
					Retrieve list of rate and absolute limits
				Element:li
				Element:a
					Retrieve list of limits including used limits
				Element:li
				Element:a
					Get console
				Element:li
				Element:a
					Retrieve quotas
				Element:li
				Element:a
					Retrieve list of extensions
				Element:li
				Element:a
					Retrieve details for the specified extension
				Element:li
				Element:a
					Release Notes
				Element:ul
				Element:li
				Element:a
					API v2.0 updates, September 15, 2016
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, August 15, 2016
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, June 2, 2015
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, October 30, 2014
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, July 24, 2014
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, August 21, 2012
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, August 15, 2012
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, July 9, 2012
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, June 13, 2012
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 release, May 1, 2012
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					Service updates
				Element:li
				Element:a
					Additional resources
				Element:li
				Element:a
					Disclaimer
			Node:
			(type) c
			(layer)1
				Element:span
			Node:
			(type) h1
			(layer)1
				Element:h1
					Server operations
				Element:a
					#
			Node:
			(type) c
			(layer)1
				Element:p
					This section covers the following basic server operations:
			Node:
			(type) c
			(layer)1
				Element:dl
				Element:dt
					Basic Operations:
				Element:dd
				Element:ul
				Element:li
				Element:a
				Element:span
					Create server
				Element:li
				Element:a
				Element:span
					Create server with disk config
				Element:li
				Element:a
				Element:span
					Create server with scheduler hints
				Element:li
				Element:a
				Element:span
					List servers
				Element:li
				Element:a
				Element:span
					List servers with details
				Element:li
				Element:a
				Element:span
					Show server with details
				Element:li
				Element:a
				Element:span
					Update server
				Element:li
				Element:a
				Element:span
					Delete server
				Element:dt
					Key Pairs Operations:
				Element:dd
				Element:ul
				Element:li
				Element:a
				Element:span
					Create key pair
				Element:li
				Element:a
				Element:span
					Import key pair
				Element:li
				Element:a
				Element:span
					List key pairs
				Element:li
				Element:a
				Element:span
					Delete key pair
				Element:dt
					Volume Operations:
				Element:dd
				Element:ul
				Element:li
				Element:a
				Element:span
					Attach volume to server
				Element:li
				Element:a
				Element:span
					List volumes
				Element:li
				Element:a
				Element:span
					Show volume details
				Element:li
				Element:a
				Element:span
					Detach volume from server
				Element:dt
					Boot from Volume Operation:
				Element:dd
				Element:ul
				Element:li
				Element:a
				Element:span
					Create server by booting from a volume
				Element:dt
					Server Action Logs:
				Element:dd
				Element:ul
				Element:li
				Element:a
				Element:span
					List recent server actions
				Element:li
				Element:a
				Element:span
					Show server action details
				Element:dt
					Server Action Operations:
				Element:dd
				Element:ul
				Element:li
				Element:a
				Element:span
					Change password
				Element:li
				Element:a
				Element:span
					Reboot server
				Element:li
				Element:a
				Element:span
					Rebuild server
				Element:li
				Element:a
				Element:span
					Resize server
				Element:li
				Element:a
				Element:span
					Confirm resize
				Element:li
				Element:a
				Element:span
					Revert resize
				Element:li
				Element:a
				Element:span
					Create image
				Element:li
				Element:a
				Element:span
					Rescue server
				Element:li
				Element:a
				Element:span
					Unrescue server
				Element:li
				Element:a
				Element:span
					Lock server
				Element:li
				Element:a
				Element:span
					Unlock server
				Element:li
				Element:a
				Element:span
					Stop server
				Element:li
				Element:a
				Element:span
					Start server
				Element:dt
					Server Address Operations:
				Element:dd
				Element:ul
				Element:li
				Element:a
				Element:span
					List server addresses
				Element:li
				Element:a
				Element:span
					List server addresses with networks
				Element:dt
					Server Metadata Operations:
				Element:dd
				Element:ul
				Element:li
				Element:a
				Element:span
					List server metadata items
				Element:li
				Element:a
				Element:span
					Set server metadata items
				Element:li
				Element:a
				Element:span
					Update server metadata items
				Element:li
				Element:a
				Element:span
					List server metadata items for a specific server
				Element:li
				Element:a
				Element:span
					Set server metadata item for a specific server
				Element:li
				Element:a
				Element:span
					Update server metadata item for a specific server
			Node:
			(type) c
			(layer)1
				Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Create server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
						Node:
						(type) c
						(layer)2
							Element:p
								This operation provisions a server asynchronously.
						Node:
						(type) c
						(layer)2
							Element:p
								The full URL to the newly created server is returned through the
							Element:code
								header and is available as a
							Element:span
								Location
							Element:code
								and
							Element:span
								self
							Element:code
								link in the server representation.
							Element:span
								bookmark
						Node:
						(type) c
						(layer)2
							Element:p
								The progress of the server build depends on factors including location of the requested image, network i/o, host load, and the selected flavor. You can check the progress of the build request by issuing a call to retrieve the details of the server. Once the build is complete, the server's
							Element:code
								is
							Element:span
								status
							Element:code
								.
							Element:span
								ACTIVE
						Node:
						(type) c
						(layer)2
							Element:p
								For OnMetal server builds, even after the
							Element:code
								is ACTIVE, wait a few additional moments for the network configuration to complete. Once the new OnMetal server pings successfully, you can begin to use it.
							Element:span
								status
						Node:
						(type) c
						(layer)2
							Element:p
								Important
						Node:
						(type) c
						(layer)2
							Element:p
								OnMetal servers must be created using an ssh key pair. Thus you should ignore the administrator password returned by a Create Server operation because it does not allow access to the OnMetal server.
						Node:
						(type) c
						(layer)2
							Element:p
								The following extensions allow you to use other options when creating a new server:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								Config drive
							Element:li
								Boot from volume
							Element:li
								Networks for nova and for neutron
							Element:li
								Key pairs
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											server.
										Element:strong
											name
										Element:td
											String
										Element:td
											The server name.
										Element:tr
										Element:td
											server.
										Element:strong
											imageRef
										Element:td
											Uuid
										Element:td
											The image reference for the desired image for your server instance.
										Element:tr
										Element:td
											server.
										Element:strong
											block_device_mapping_v2
										Element:td
											Object
										Element:em
											(Optional)
										Element:td
											The container of bootable volume details.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											boot_index
										Element:td
											Integer
										Element:em
											(Optional)
										Element:td
											The index of the bootable volume.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											uuid
										Element:td
											Integer
										Element:em
											(Optional)
										Element:td
											The id of the bootable volume.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											source_type
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The source type for the bootable volume.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											destination_type
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The destination type for the bootable volume.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											delete_on_termination
										Element:td
											Boolean
										Element:em
											(Optional)
										Element:td
											Flag to indicate whether the bootable volume should be deleted after server creation.
										Element:tr
										Element:td
											server.
										Element:strong
											flavorRef
										Element:td
											Uuid
										Element:td
											The flavor reference for the desired flavor for your server instance.
										Element:tr
										Element:td
											server.
										Element:strong
											config_drive
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											Enables metadata injection in a server through a configuration drive. To enable a configuration drive, specify
										Element:code
											. Otherwise, specify
										Element:span
											true
										Element:code
											.
										Element:span
											false
										Element:tr
										Element:td
											server.
										Element:strong
											key_name
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The name of the key pair used to authenticate by using key-based authentication instead of password- based authentication.
										Element:tr
										Element:td
											server.
										Element:strong
											OS-DCF:diskConfig
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The disk configuration value. The image auto_disk_config metadata key set will affect the value you can choose to set the server
										Element:code
											. If an image has
										Element:span
											OS-
										Element:span
											DCF:diskConfig
										Element:code
											value of
										Element:span
											auto_disk_config
										Element:code
											, you cannot create a server from that image when specifying
										Element:span
											disabled
										Element:code
											value of
										Element:span
											OS-DCF:diskConfig
										Element:code
											. Valid values are: AUTO:The server is built with a single partition which is the size of the target flavor disk. The file system is automatically adjusted to fit the entire partition. This keeps things simple and automated. AUTO is valid only for images and servers with a single partition that use the EXT3 file system. This is the default setting for applicable Rackspace base images. MANUAL:The server is built using the partition scheme and file system of the source image. If the target flavor disk is larger, the remaining disk space is left unpartitioned. This enables images to have non-EXT3 file systems, multiple partitions, and so on, and it enables you to manage the disk configuration.
										Element:span
											AUTO
										Element:tr
										Element:td
											server.
										Element:strong
											metadata
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											Metadata key and value pairs. The maximum size of each metadata key and value is 255 bytes each.
										Element:tr
										Element:td
											server.
										Element:strong
											personality
										Element:td
											Array
										Element:em
											(Optional)
										Element:td
											The array of personality files for the server.
										Element:tr
										Element:td
											server.
										Element:strong
											user_data
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											Data used with config_drive for configuring a server.
										Element:tr
										Element:td
											server.personality.
										Element:strong
											path
										Element:td
											String
										Element:td
											The path of the personality file.
										Element:tr
										Element:td
											server.personality.
										Element:strong
											contents
										Element:td
											String
										Element:td
											The contents od the personality file.
										Element:tr
										Element:td
											server.
										Element:strong
											networks
										Element:td
											Array
										Element:td
											The array of networks attached to the server. By default, the server instance is provisioned with all isolated networks for the tenant. You can specify multiple NICs on the server. Optionally, you can create one or more NICs on the server. To provision the server instance with a NIC for a
										Element:code
											network, specify the UUID in the
										Element:span
											Nova-
										Element:span
											network
										Element:code
											attribute in a
										Element:span
											uuid
										Element:code
											object. To provision the server instance with a NIC for a
										Element:span
											networks
										Element:code
											network, specify the UUID in the
										Element:span
											Neutron
										Element:code
											attribute in a
										Element:span
											port
										Element:code
											object.
										Element:span
											networks
										Element:tr
										Element:td
											server.networks.
										Element:strong
											uuid
										Element:td
											Uuid
										Element:em
											(Optional)
										Element:td
											The UUID of the
										Element:code
											network attached to the server.
										Element:span
											Nova-network
										Element:tr
										Element:td
											server.networks.
										Element:strong
											port
										Element:td
											Uuid
										Element:em
											(Optional)
										Element:td
											The UUID of the
										Element:code
											port attached to the server.
										Element:span
											Neutron
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Create server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"server"
										Element:span
											:
										Element:span
											{
										Element:span
											"name"
										Element:span
											:
										Element:span
											"api-test-server-1"
										Element:span
											,
										Element:span
											"imageRef"
										Element:span
											:
										Element:span
											"3afe97b2-26dc-49c5-a2cc-a2fc8d80c001"
										Element:span
											,
										Element:span
											"flavorRef"
										Element:span
											:
										Element:span
											"2"
										Element:span
											,
										Element:span
											"config_drive"
										Element:span
											:
										Element:span
											true
										Element:span
											,
										Element:span
											"OS-DCF:diskConfig"
										Element:span
											:
										Element:span
											"AUTO"
										Element:span
											,
										Element:span
											"metadata"
										Element:span
											:
										Element:span
											{
										Element:span
											"My Server Name"
										Element:span
											:
										Element:span
											"API Test Server 1"
										Element:span
											},
										Element:span
											"networks"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"uuid"
										Element:span
											:
										Element:span
											"00000000-0000-0000-0000-000000000000"
										Element:span
											},
										Element:span
											{
										Element:span
											"uuid"
										Element:span
											:
										Element:span
											"11111111-1111-1111-1111-111111111111"
										Element:span
											}
										Element:span
											]
										Element:span
											}
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											server
										Element:td
											Object
										Element:td
											The container for server data.
										Element:tr
										Element:td
											server.
										Element:strong
											id
										Element:td
											Uuid
										Element:td
											The ID of the server.
										Element:tr
										Element:td
											server.
										Element:strong
											links
										Element:td
											Array
										Element:td
											An array of the self and bookmark links to the server.
										Element:tr
										Element:td
											server.links.
										Element:strong
											href
										Element:td
											Uuid
										Element:td
											The URL for the server and the associated
										Element:code
											.
										Element:span
											rel
										Element:tr
										Element:td
											server.links.
										Element:strong
											rel
										Element:td
											Uuid
										Element:td
											The descriptive field for the associated
										Element:code
											, which is either
										Element:span
											href
										Element:code
											or
										Element:span
											self
										Element:code
											.
										Element:span
											bookmark
										Element:tr
										Element:td
											server.
										Element:strong
											adminPass
										Element:td
											String
										Element:td
											The password assigned to provide login access to the server.
										Element:tr
										Element:td
											server.
										Element:strong
											OS- DCF:diskConfig
										Element:td
											String
										Element:td
											The disk configuration value. Valid values are
										Element:code
											and
										Element:span
											AUTO
										Element:code
											.
										Element:span
											MANUAL
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Create server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											Accepted
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											380
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											04
										Element:span
											Dec
										Element:span
											2014
										Element:span
											18
										Element:span
											:
										Element:span
											47
										Element:span
											:
										Element:span
											30
										Element:span
											GMT
										Element:span
											Location
										Element:span
											:
										Element:span
											https
										Element:span
											:
										Element:span
											//
										Element:span
											dfw
										Element:span
											.
										Element:span
											servers
										Element:span
											.
										Element:span
											api
										Element:span
											.
										Element:span
											rackspacecloud
										Element:span
											.
										Element:span
											com
										Element:span
											/
										Element:span
											v2
										Element:span
											/
										Element:span
											820712
										Element:span
											/
										Element:span
											servers
										Element:span
											/
										Element:span
											4
										Element:span
											b963871
										Element:span
											-
										Element:span
											f591
										Element:span
											-
										Element:span
											4
										Element:span
											b7d
										Element:span
											-
										Element:span
											b05f
										Element:span
											-
										Element:span
											7
										Element:span
											c0286e3c50f
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											b8b54344
										Element:span
											-
										Element:span
											41
										Element:span
											a9
										Element:span
											-
										Element:span
											4
										Element:span
											d6a
										Element:span
											-
										Element:span
											a92f
										Element:span
											-
										Element:span
											60
										Element:span
											f3dcab4b1f
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"server"
										Element:span
											:
										Element:span
											{
										Element:span
											"OS-DCF:diskConfig"
										Element:span
											:
										Element:span
											"AUTO"
										Element:span
											,
										Element:span
											"id"
										Element:span
											:
										Element:span
											"4b963871-f591-4b7d-b05f-7c0286e3c50f"
										Element:span
											,
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/v2/820712/servers/4b963871-f591-4b7d-b05f-7c0286e3c50f"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"self"
										Element:span
											},
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/820712/servers/4b963871-f591-4b7d-b05f-7c0286e3c50f"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											],
										Element:span
											"adminPass"
										Element:span
											:
										Element:span
											"C3tfz8jQtnKC"
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Create server with disk config
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
						Node:
						(type) c
						(layer)2
							Element:p
								This operation creates a server using disk config.
						Node:
						(type) c
						(layer)2
							Element:p
								When you create a server from an image with the
							Element:code
								value set to
							Element:span
								OS-DCF:diskConfig
							Element:code
								, the server is built with a single partition that is expanded to the disk size of the flavor selected. When you set the
							Element:span
								AUTO
							Element:code
								attribute to
							Element:span
								OS-DCF:diskConfig
							Element:code
								, the server is built by using the partition scheme and file system that is in the source image. If the target flavor disk is larger, remaining disk space is left unpartitioned. A server inherits the
							Element:span
								MANUAL
							Element:code
								attribute from the image from which it is created, based on the image's
							Element:span
								OS-DCF:diskConfig
							Element:code
								value. However, you may be able to override the server's
							Element:span
								auto-disk-config
							Element:code
								value when you create the server.
							Element:span
								OS-DCF:diskConfig
						Node:
						(type) c
						(layer)2
							Element:p
								In this example, the server is created with
							Element:code
								set to
							Element:span
								OS-DCF:diskConfig
							Element:code
								.This request's success depends on the image's auto_disk_config metadata value. An image created from a server will have appropriate auto_disk_config metadata written to it. So, if the create server command succeeds, an image created from the server will have
							Element:span
								AUTO
							Element:code
								=
							Element:span
								auto_disk_config
							Element:code
								on it.
							Element:span
								True
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Success
							Element:td
								Request accepted.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											server.
										Element:strong
											name
										Element:td
											String
										Element:td
											The server name.
										Element:tr
										Element:td
											server.
										Element:strong
											imageRef
										Element:td
											Uuid
										Element:td
											The image reference for the desired image for your server instance.
										Element:tr
										Element:td
											server.
										Element:strong
											block_device_mapping_v2
										Element:td
											Object
										Element:em
											(Optional)
										Element:td
											The container of bootable volume details.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											boot_index
										Element:td
											Integer
										Element:em
											(Optional)
										Element:td
											The index of the bootable volume.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											uuid
										Element:td
											Integer
										Element:em
											(Optional)
										Element:td
											The id of the bootable volume.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											source_type
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The source type for the bootable volume.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											destination_type
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The destination type for the bootable volume.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											delete_on_termination
										Element:td
											Boolean
										Element:em
											(Optional)
										Element:td
											Flag to indicate whether the bootable volume should be deleted after server creation.
										Element:tr
										Element:td
											server.
										Element:strong
											flavorRef
										Element:td
											Uuid
										Element:em
											(Required)
										Element:td
											The flavor reference for the desired flavor for your server instance.
										Element:tr
										Element:td
											server.
										Element:strong
											config_drive
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											Enables metadata injection in a server through a configuration drive. To enable a configuration drive, specify
										Element:code
											. Otherwise, specify
										Element:span
											true
										Element:code
											.
										Element:span
											false
										Element:tr
										Element:td
											server.
										Element:strong
											key_name
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The name of the key pair used to authenticate by using key-based authentication instead of password- based authentication.
										Element:tr
										Element:td
											server.
										Element:strong
											OS-DCF:diskConfig
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The disk configuration value. The image auto_disk_config metadata key set will affect the value you can choose to set the server
										Element:code
											. If an image has
										Element:span
											OS-
										Element:span
											DCF:diskConfig
										Element:code
											value of
										Element:span
											auto_disk_config
										Element:code
											, you cannot create a server from that image when specifying
										Element:span
											disabled
										Element:code
											value of
										Element:span
											OS-DCF:diskConfig
										Element:code
											. Valid values are: AUTO:The server is built with a single partition which is the size of the target flavor disk. The file system is automatically adjusted to fit the entire partition. This keeps things simple and automated. AUTO is valid only for images and servers with a single partition that use the EXT3 file system. This is the default setting for applicable Rackspace base images. MANUAL:The server is built using the partition scheme and file system of the source image. If the target flavor disk is larger, the remaining disk space is left unpartitioned. This enables images to have non-EXT3 file systems, multiple partitions, and so on, and it enables you to manage the disk configuration.
										Element:span
											AUTO
										Element:tr
										Element:td
											server.
										Element:strong
											metadata
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											Metadata key and value pairs. The maximum size of each metadata key and value is 255 bytes each.
										Element:tr
										Element:td
											server.
										Element:strong
											personality
										Element:td
											Array
										Element:em
											(Optional)
										Element:td
											The array of personality files for the server.
										Element:tr
										Element:td
											server.
										Element:strong
											user_data
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											Data used with config_drive for configuring a server.
										Element:tr
										Element:td
											server.personality.
										Element:strong
											path
										Element:td
											String
										Element:td
											The path of the personality file.
										Element:tr
										Element:td
											server.personality.
										Element:strong
											contents
										Element:td
											String
										Element:td
											The contents od the personality file.
										Element:tr
										Element:td
											server.
										Element:strong
											networks
										Element:td
											Array
										Element:td
											The array of networks attached to the server. By default, the server instance is provisioned with all isolated networks for the tenant. You can specify multiple NICs on the server. Optionally, you can create one or more NICs on the server. To provision the server instance with a NIC for a
										Element:code
											network, specify the UUID in the
										Element:span
											Nova-
										Element:span
											network
										Element:code
											attribute in a
										Element:span
											uuid
										Element:code
											object. To provision the server instance with a NIC for a
										Element:span
											networks
										Element:code
											network, specify the UUID in the
										Element:span
											Neutron
										Element:code
											attribute in a
										Element:span
											port
										Element:code
											object.
										Element:span
											networks
										Element:tr
										Element:td
											server.networks.
										Element:strong
											uuid
										Element:td
											Uuid
										Element:em
											(Optional)
										Element:td
											The UUID of the
										Element:code
											network attached to the server.
										Element:span
											Nova-network
										Element:tr
										Element:td
											server.networks.
										Element:strong
											port
										Element:td
											Uuid
										Element:em
											(Optional)
										Element:td
											The UUID of the
										Element:code
											port attached to the server.
										Element:span
											Neutron
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Create server with disk config: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"server"
										Element:span
											:
										Element:span
											{
										Element:span
											"name"
										Element:span
											:
										Element:span
											"api-test-server-1"
										Element:span
											,
										Element:span
											"imageRef"
										Element:span
											:
										Element:span
											"3afe97b2-26dc-49c5-a2cc-a2fc8d80c001"
										Element:span
											,
										Element:span
											"flavorRef"
										Element:span
											:
										Element:span
											"2"
										Element:span
											,
										Element:span
											"config_drive"
										Element:span
											:
										Element:span
											true
										Element:span
											,
										Element:span
											"OS-DCF:diskConfig"
										Element:span
											:
										Element:span
											"AUTO"
										Element:span
											,
										Element:span
											"metadata"
										Element:span
											:
										Element:span
											{
										Element:span
											"My Server Name"
										Element:span
											:
										Element:span
											"API Test Server 1"
										Element:span
											},
										Element:span
											"personality"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"path"
										Element:span
											:
										Element:span
											"/etc/banner.txt"
										Element:span
											,
										Element:span
											"contents"
										Element:span
											:
										Element:span
											"ICAgICAgDQoiQSBjbG91ZCBkb2VzIG5vdCBrbm93IHdoeSBpdCBtb3ZlcyBpbiBqdXN0IHN1Y2ggYSBkaXJlY3Rpb24gYW5kIGF0IHN1Y2ggYSBzcGVlZC4uLkl0IGZlZWxzIGFuIGltcHVsc2lvbi4uLnRoaXMgaXMgdGhlIHBsYWNlIHRvIGdvIG5vdy4gQnV0IHRoZSBza3kga25vd3MgdGhlIHJlYXNvbnMgYW5kIHRoZSBwYXR0ZXJucyBiZWhpbmQgYWxsIGNsb3VkcywgYW5kIHlvdSB3aWxsIGtub3csIHRvbywgd2hlbiB5b3UgbGlmdCB5b3Vyc2VsZiBoaWdoIGVub3VnaCB0byBzZWUgYmV5b25kIGhvcml6b25zLiINCg0KLVJpY2hhcmQgQmFjaA=="
										Element:span
											}
										Element:span
											],
										Element:span
											"networks"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"uuid"
										Element:span
											:
										Element:span
											"4ebd35cf-bfe7-4d93-b0d8-eb468ce2245a"
										Element:span
											},
										Element:span
											{
										Element:span
											"uuid"
										Element:span
											:
										Element:span
											"00000000-0000-0000-0000-000000000000"
										Element:span
											},
										Element:span
											{
										Element:span
											"uuid"
										Element:span
											:
										Element:span
											"11111111-1111-1111-1111-111111111111"
										Element:span
											}
										Element:span
											]
										Element:span
											}
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											server
										Element:td
											Object
										Element:td
											The container for server data.
										Element:tr
										Element:td
											server.
										Element:strong
											id
										Element:td
											Uuid
										Element:td
											The ID of the server.
										Element:tr
										Element:td
											server.
										Element:strong
											links
										Element:td
											Array
										Element:td
											An array of the self and bookmark links to the server.
										Element:tr
										Element:td
											server.links.
										Element:strong
											href
										Element:td
											String
										Element:td
											The URL for the server and the associated
										Element:code
											.
										Element:span
											rel
										Element:tr
										Element:td
											server.links.
										Element:strong
											rel
										Element:td
											String
										Element:td
											The descriptive field for the associated
										Element:code
											, which is either
										Element:span
											href
										Element:code
											or
										Element:span
											self
										Element:code
											.
										Element:span
											bookmark
										Element:tr
										Element:td
											server.
										Element:strong
											adminPass
										Element:td
											String
										Element:td
											The password assigned to provide login access to the server.
										Element:tr
										Element:td
											server.
										Element:strong
											OS- DCF:diskConfig
										Element:td
											String
										Element:td
											The disk configuration value. Valid values are
										Element:code
											and
										Element:span
											AUTO
										Element:code
											.
										Element:span
											MANUAL
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Create server with disk config: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											Accepted
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											380
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Fri
										Element:span
											,
										Element:span
											30
										Element:span
											Jan
										Element:span
											2015
										Element:span
											18
										Element:span
											:
										Element:span
											38
										Element:span
											:
										Element:span
											52
										Element:span
											GMT
										Element:span
											Location
										Element:span
											:
										Element:span
											https
										Element:span
											:
										Element:span
											//
										Element:span
											dfw
										Element:span
											.
										Element:span
											servers
										Element:span
											.
										Element:span
											api
										Element:span
											.
										Element:span
											rackspacecloud
										Element:span
											.
										Element:span
											com
										Element:span
											/
										Element:span
											v2
										Element:span
											/
										Element:span
											820712
										Element:span
											/
										Element:span
											servers
										Element:span
											/
										Element:span
											b7509240
										Element:span
											-
										Element:span
											9
										Element:span
											ad2
										Element:span
											-
										Element:span
											4303
										Element:span
											-
										Element:span
											8614
										Element:span
											-
										Element:span
											a11a33aeb6f3
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											186
										Element:span
											f2212
										Element:span
											-
										Element:span
											f4b7
										Element:span
											-
										Element:span
											4
										Element:span
											d0a
										Element:span
											-
										Element:span
											bbbb
										Element:span
											-
										Element:span
											92
										Element:span
											bc19797a1d
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"server"
										Element:span
											:
										Element:span
											{
										Element:span
											"OS-DCF:diskConfig"
										Element:span
											:
										Element:span
											"AUTO"
										Element:span
											,
										Element:span
											"id"
										Element:span
											:
										Element:span
											"b7509240-9ad2-4303-8614-a11a33aeb6f3"
										Element:span
											,
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/v2/820712/servers/b7509240-9ad2-4303-8614-a11a33aeb6f3"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"self"
										Element:span
											},
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/820712/servers/b7509240-9ad2-4303-8614-a11a33aeb6f3"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											],
										Element:span
											"adminPass"
										Element:span
											:
										Element:span
											"sYr9cptCwsLx"
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Create server with scheduler hints
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
						Node:
						(type) c
						(layer)2
							Element:p
								This operation creates a server using a scheduler hint.
						Node:
						(type) c
						(layer)2
							Element:p
								A scheduler hint allows a cloud server to be built near to, or far from, an existing server within a specific zone. Use either the
							Element:code
								or the
							Element:span
								public-zone-ip:near
							Element:code
								parameter and be sure to use the server`s
							Element:span
								public-zone-ip:far
							Element:code
								and not the server's
							Element:span
								ID
							Element:code
								when making the request.
							Element:span
								zone
						Node:
						(type) c
						(layer)2
							Element:p
								If a build request with a hint can not be satisfied then the build will not succeed, and the server, which will have a status of
							Element:code
								and a task state of
							Element:span
								ERROR
							Element:code
								, must be manually deleted.
							Element:span
								scheduling
						Node:
						(type) c
						(layer)2
							Element:p
								A zone is a logical container for servers. The Public IP Zone is the zone in which a Public IP can be shared between two or more servers.
						Node:
						(type) c
						(layer)2
							Element:p
								The
							Element:code
								and
							Element:span
								public-zone-ip:near
							Element:code
								parameters allow you specify up to three server IP addresses, but we recommend you use just one IP address to reduce chance of failure.
							Element:span
								public-zone-ip:far
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Success
							Element:td
								Request accepted.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											server.
										Element:strong
											name
										Element:td
											String
										Element:td
											The server name.
										Element:tr
										Element:td
											server.
										Element:strong
											imageRef
										Element:td
											Uuid
										Element:td
											The image reference for the desired image for your server instance.
										Element:tr
										Element:td
											server.
										Element:strong
											block_device_mapping_v2
										Element:td
											Object
										Element:em
											(Optional)
										Element:td
											The container of bootable volume details.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											boot_index
										Element:td
											Integer
										Element:em
											(Optional)
										Element:td
											The index of the bootable volume.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											uuid
										Element:td
											Integer
										Element:em
											(Optional)
										Element:td
											The id of the bootable volume.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											source_type
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The source type for the bootable volume.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											destination_type
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The destination type for the bootable volume.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											delete_on_termination
										Element:td
											Boolean
										Element:em
											(Optional)
										Element:td
											Flag to indicate whether the bootable volume should be deleted after server creation.
										Element:tr
										Element:td
											server.
										Element:strong
											flavorRef
										Element:td
											Uuid
										Element:em
											(Required)
										Element:td
											The flavor reference for the desired flavor for your server instance.
										Element:tr
										Element:td
											server.
										Element:strong
											os:scheduler_hints
										Element:td
											Uuid
										Element:em
											(Optional)
										Element:td
											The container for a scheduler hint.
										Element:tr
										Element:td
											server.os:scheduler_hints
										Element:strong
											public_ip_zone:near
										Element:td
											Uuid
										Element:em
											(Optional)
										Element:td
											An array of server IDs that new server will built near. One to three server IDs may listed.
										Element:tr
										Element:td
											server.os:scheduler_hints
										Element:strong
											public_ip_zone:far
										Element:td
											Uuid
										Element:em
											(Optional)
										Element:td
											Alternative to public_ip_zone:near that specifies the new server should be built far from the specified server(s).
										Element:tr
										Element:td
											server.
										Element:strong
											config_drive
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											Enables metadata injection in a server through a configuration drive. To enable a configuration drive, specify
										Element:code
											. Otherwise, specify
										Element:span
											true
										Element:code
											.
										Element:span
											false
										Element:tr
										Element:td
											server.
										Element:strong
											key_name
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The name of the key pair used to authenticate by using key-based authentication instead of password- based authentication.
										Element:tr
										Element:td
											server.
										Element:strong
											OS-DCF:diskConfig
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The disk configuration value. The image auto_disk_config metadata key set will affect the value you can choose to set the server
										Element:code
											. If an image has
										Element:span
											OS-
										Element:span
											DCF:diskConfig
										Element:code
											value of
										Element:span
											auto_disk_config
										Element:code
											, you cannot create a server from that image when specifying
										Element:span
											disabled
										Element:code
											value of
										Element:span
											OS-DCF:diskConfig
										Element:code
											. Valid values are: AUTO:The server is built with a single partition which is the size of the target flavor disk. The file system is automatically adjusted to fit the entire partition. This keeps things simple and automated. AUTO is valid only for images and servers with a single partition that use the EXT3 file system. This is the default setting for applicable Rackspace base images. MANUAL:The server is built using the partition scheme and file system of the source image. If the target flavor disk is larger, the remaining disk space is left unpartitioned. This enables images to have non-EXT3 file systems, multiple partitions, and so on, and it enables you to manage the disk configuration.
										Element:span
											AUTO
										Element:tr
										Element:td
											server.
										Element:strong
											metadata
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											Metadata key and value pairs. The maximum size of each metadata key and value is 255 bytes each.
										Element:tr
										Element:td
											server.
										Element:strong
											personality
										Element:td
											Array
										Element:em
											(Optional)
										Element:td
											The array of personality files for the server.
										Element:tr
										Element:td
											server.
										Element:strong
											user_data
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											Data used with config_drive for configuring a server.
										Element:tr
										Element:td
											server.personality.
										Element:strong
											path
										Element:td
											String
										Element:td
											The path of the personality file.
										Element:tr
										Element:td
											server.personality.
										Element:strong
											contents
										Element:td
											String
										Element:td
											The contents od the personality file.
										Element:tr
										Element:td
											server.
										Element:strong
											networks
										Element:td
											Array
										Element:td
											The array of networks attached to the server. By default, the server instance is provisioned with all isolated networks for the tenant. You can specify multiple NICs on the server. Optionally, you can create one or more NICs on the server. To provision the server instance with a NIC for a
										Element:code
											network, specify the UUID in the
										Element:span
											Nova-
										Element:span
											network
										Element:code
											attribute in a
										Element:span
											uuid
										Element:code
											object. To provision the server instance with a NIC for a
										Element:span
											networks
										Element:code
											network, specify the UUID in the
										Element:span
											Neutron
										Element:code
											attribute in a
										Element:span
											port
										Element:code
											object.
										Element:span
											networks
										Element:tr
										Element:td
											server.networks.
										Element:strong
											uuid
										Element:td
											Uuid
										Element:em
											(Optional)
										Element:td
											The UUID of the
										Element:code
											network attached to the server.
										Element:span
											Nova-network
										Element:tr
										Element:td
											server.networks.
										Element:strong
											port
										Element:td
											Uuid
										Element:em
											(Optional)
										Element:td
											The UUID of the
										Element:code
											port attached to the server.
										Element:span
											Neutron
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Create server with scheduler hint: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"os:scheduler_hints"
										Element:span
											:{
										Element:span
											"public_ip_zone:near"
										Element:span
											:[
										Element:span
											"f841bab4-8c12-4223-a60f-76b224e053cf"
										Element:span
											,
										Element:span
											"additional uuid"
										Element:span
											,
										Element:span
											"additional uuid"
										Element:span
											]
										Element:span
											},
										Element:span
											"server"
										Element:span
											:{
										Element:span
											"name"
										Element:span
											:
										Element:span
											"TestIpZone2"
										Element:span
											,
										Element:span
											"imageRef"
										Element:span
											:
										Element:span
											"055143e8-2da9-439a-a52d-8063f845dec6"
										Element:span
											,
										Element:span
											"flavorRef"
										Element:span
											:
										Element:span
											"general1-1"
										Element:span
											,
										Element:span
											"max_count"
										Element:span
											:
										Element:span
											1
										Element:span
											,
										Element:span
											"min_count"
										Element:span
											:
										Element:span
											1
										Element:span
											,
										Element:span
											"networks"
										Element:span
											:[
										Element:span
											{
										Element:span
											"uuid"
										Element:span
											:
										Element:span
											"00000000-0000-0000-0000-000000000000"
										Element:span
											},
										Element:span
											{
										Element:span
											"uuid"
										Element:span
											:
										Element:span
											"11111111-1111-1111-1111-111111111111"
										Element:span
											}
										Element:span
											]
										Element:span
											}
										Element:span
											}
										Element:span
											'
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											server
										Element:td
											Object
										Element:td
											The container for server data.
										Element:tr
										Element:td
											server.
										Element:strong
											id
										Element:td
											Uuid
										Element:td
											The ID of the server.
										Element:tr
										Element:td
											server.
										Element:strong
											links
										Element:td
											Array
										Element:td
											An array of the self and bookmark links to the server.
										Element:tr
										Element:td
											server.links.
										Element:strong
											href
										Element:td
											String
										Element:td
											The URL for the server and the associated
										Element:code
											.
										Element:span
											rel
										Element:tr
										Element:td
											server.links.
										Element:strong
											rel
										Element:td
											String
										Element:td
											The descriptive field for the associated
										Element:code
											, which is either
										Element:span
											href
										Element:code
											or
										Element:span
											self
										Element:code
											.
										Element:span
											bookmark
										Element:tr
										Element:td
											server.
										Element:strong
											adminPass
										Element:td
											String
										Element:td
											The password assigned to provide login access to the server.
										Element:tr
										Element:td
											server.
										Element:strong
											OS- DCF:diskConfig
										Element:td
											String
										Element:td
											The disk configuration value. Valid values are
										Element:code
											and
										Element:span
											AUTO
										Element:code
											.
										Element:span
											MANUAL
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Create server with scheduler hint: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											Accepted
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											380
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Fri
										Element:span
											,
										Element:span
											30
										Element:span
											Jan
										Element:span
											2015
										Element:span
											18
										Element:span
											:
										Element:span
											38
										Element:span
											:
										Element:span
											52
										Element:span
											GMT
										Element:span
											Location
										Element:span
											:
										Element:span
											https
										Element:span
											:
										Element:span
											//
										Element:span
											dfw
										Element:span
											.
										Element:span
											servers
										Element:span
											.
										Element:span
											api
										Element:span
											.
										Element:span
											rackspacecloud
										Element:span
											.
										Element:span
											com
										Element:span
											/
										Element:span
											v2
										Element:span
											/
										Element:span
											820712
										Element:span
											/
										Element:span
											servers
										Element:span
											/
										Element:span
											b7509240
										Element:span
											-
										Element:span
											9
										Element:span
											ad2
										Element:span
											-
										Element:span
											4303
										Element:span
											-
										Element:span
											8614
										Element:span
											-
										Element:span
											a11a33aeb6f3
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											186
										Element:span
											f2212
										Element:span
											-
										Element:span
											f4b7
										Element:span
											-
										Element:span
											4
										Element:span
											d0a
										Element:span
											-
										Element:span
											bbbb
										Element:span
											-
										Element:span
											92
										Element:span
											bc19797a1d
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"server"
										Element:span
											:
										Element:span
											{
										Element:span
											"OS-DCF:diskConfig"
										Element:span
											:
										Element:span
											"AUTO"
										Element:span
											,
										Element:span
											"id"
										Element:span
											:
										Element:span
											"a4209240-5ed2-4793-8614-a11a33aed22a"
										Element:span
											,
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/v2/820712/servers/b7509240-9ad2-4303-8614-a11a33aeb6f3"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"self"
										Element:span
											},
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/820712/servers/b7509240-9ad2-4303-8614-a11a33aeb6f3"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											],
										Element:span
											"adminPass"
										Element:span
											:
										Element:span
											"sYr9cptCwsLx"
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Retrieve list of servers
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								GET
							Element:span
								/
							Element:span
								servers
						Node:
						(type) c
						(layer)2
							Element:p
								Retrieves list of all servers (only IDs, names, and links).
						Node:
						(type) c
						(layer)2
							Element:p
								Servers contain a status attribute that indicates the current server state. You can filter on the server status when you complete a list servers request. The server status is returned in the response body.
						Node:
						(type) c
						(layer)2
							Element:p
								For a full list of possible server status values including the extended status extension (
							Element:code
								,
							Element:span
								OS-EXT-STS:power_state
							Element:code
								, and
							Element:span
								OS-EXT-STS:vm_state
							Element:code
								), see
							Element:span
								OS-EXT-STS:task_state
							Element:a
								.
							Element:span
								Extended status extension
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200 203 300
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not accept a request body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Retrieves list of servers: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											servers
										Element:td
											Uuid
										Element:td
											The array of server data.
										Element:tr
										Element:td
											servers.
										Element:strong
											id
										Element:td
											Uuid
										Element:td
											The ID of the server.
										Element:tr
										Element:td
											servers.
										Element:strong
											links
										Element:td
											Array
										Element:td
											An array of the self and bookmark links to the server.
										Element:tr
										Element:td
											servers.links.
										Element:strong
											href
										Element:td
											String
										Element:td
											The URL for the server and the associated
										Element:code
											.
										Element:span
											rel
										Element:tr
										Element:td
											servers.links.
										Element:strong
											rel
										Element:td
											String
										Element:td
											The descriptive field for the associated
										Element:code
											, which is either
										Element:span
											href
										Element:code
											or
										Element:span
											self
										Element:code
											.
										Element:span
											bookmark
										Element:tr
										Element:td
											servers.
										Element:strong
											name
										Element:td
											String
										Element:td
											The server name.
										Element:tr
										Element:td
										Element:strong
											next
										Element:td
											Anyuri
										Element:td
											Moves to the next metadata item.
										Element:tr
										Element:td
										Element:strong
											previous
										Element:td
											Anyuri
										Element:td
											Moves to the previous metadata item.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Retrieves list of servers: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											200
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											1024
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Wed
										Element:span
											,
										Element:span
											03
										Element:span
											Dec
										Element:span
											2014
										Element:span
											14
										Element:span
											:
										Element:span
											40
										Element:span
											:
										Element:span
											57
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											fda78f69
										Element:span
											-
										Element:span
											d934
										Element:span
											-
										Element:span
											4
										Element:span
											ed3
										Element:span
											-
										Element:span
											a5b8
										Element:span
											-
										Element:span
											255894
										Element:span
											baa6aa
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"servers"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"id"
										Element:span
											:
										Element:span
											"8f64d643-f48a-459c-a7af-717dfc7580ee"
										Element:span
											,
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/v2/123456/servers/8f64d643-f48a-459c-a7af-717dfc7580ee"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"self"
										Element:span
											},
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/123456/servers/8f64d643-f48a-459c-a7af-717dfc7580ee"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											],
										Element:span
											"name"
										Element:span
											:
										Element:span
											"wordpress.myveryown.com"
										Element:span
											},
										Element:span
											{
										Element:span
											"id"
										Element:span
											:
										Element:span
											"5bccf43e-35fa-4d65-9390-2b2d6b23ec89"
										Element:span
											,
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/v2/123456/servers/5bccf43e-35fa-4d65-9390-2b2d6b23ec89"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"self"
										Element:span
											},
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/123456/servers/5bccf43e-35fa-4d65-9390-2b2d6b23ec89"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											],
										Element:span
											"name"
										Element:span
											:
										Element:span
											"DB2"
										Element:span
											},
										Element:span
											{
										Element:span
											"id"
										Element:span
											:
										Element:span
											"d40dcb7f-2268-4fff-a592-b1944413f983"
										Element:span
											,
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/v2/123456/servers/d40dcb7f-2268-4fff-a592-b1944413f983"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"self"
										Element:span
											},
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/123456/servers/d40dcb7f-2268-4fff-a592-b1944413f983"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											],
										Element:span
											"name"
										Element:span
											:
										Element:span
											"Branwen"
										Element:span
											}
										Element:span
											]
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								List servers with details
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								GET
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								detail
						Node:
						(type) c
						(layer)2
							Element:p
								This operation retrieves a detailed list of all servers in the tenant's account.
						Node:
						(type) c
						(layer)2
							Element:p
								Servers contain a status attribute that indicates the current server state. You can filter on the server status when you complete a list servers request. The server status is returned in the response body. For a full list of possible server status values, see
							Element:a
								.
							Element:span
								Extended Status Extension
						Node:
						(type) c
						(layer)2
							Element:p
								The following extensions provide additional information when viewing server details:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								Config Drive:
							Element:li
								Scheduled Images:
							Element:li
								Extended Status (
							Element:code
								,
							Element:span
								OS-EXT-STS:power_state
							Element:code
								, and
							Element:span
								OS-EXT-STS:vm_state
							Element:code
								):
							Element:span
								OS-EXT-STS:task_state
							Element:li
								Block Device Mapping:
						Node:
						(type) c
						(layer)2
							Element:p
								In the URI, specify the target server ID.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200 203
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the query parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											changes-since
										Element:td
											Datetime
										Element:td
											A time/date stamp for when the server last changed status.
										Element:tr
										Element:td
											image
										Element:td
											Uuid
										Element:td
											The image reference for the desired image for your server instance.
										Element:tr
										Element:td
											flavor
										Element:td
											Uuid
										Element:td
											The flavor reference for the desired flavor for your server instance.
										Element:tr
										Element:td
											name
										Element:td
											Regexp
										Element:td
											The name of the server, which can be queried with regular expressions. Notice that ?name=bob returns both "bob" and "bobbin". If you need to match only "bob", use a regular expression matching the syntax of the underlying database server implemented for Cloud Servers (such as MySQL or PostgreSQL).
										Element:tr
										Element:td
											marker
										Element:td
											Uuid
										Element:td
											The UUID of the server at which you want to set a marker.
										Element:tr
										Element:td
											limit
										Element:td
											Int
										Element:td
											The integer value used to limit the number of values which will be returned.
										Element:tr
										Element:td
											status
										Element:td
											String
										Element:td
											The status of the server. For example, you can filter on "ACTIVE". For a full list of possible status values, see
										Element:a
											.
										Element:span
											Server Status
										Element:tr
										Element:td
											host
										Element:td
											String
										Element:td
											The name of the host.
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not accept a request body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example List servers with details: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											servers
										Element:td
											Object
										Element:td
											A container of server details.
										Element:tr
										Element:td
											servers.
										Element:strong
											accessIPv4
										Element:td
											Ip
										Element:td
											The public IP version 4 access address.
										Element:tr
										Element:td
											servers.
										Element:strong
											accessIPv6
										Element:td
											Ip
										Element:td
											The public IP version 6 access address.
										Element:tr
										Element:td
											servers.
										Element:strong
											addresses
										Element:td
											Object
										Element:td
											An object containing arrays of addresses for public, private, and isolated networks attached to the server.
										Element:tr
										Element:td
											servers.addresses.
										Element:strong
											addr
										Element:td
											Uuid
										Element:td
											The IP address of the network.
										Element:tr
										Element:td
											servers.addresses.
										Element:strong
											version
										Element:td
											Integer
										Element:td
											The version of the IP address of the network.
										Element:tr
										Element:td
											servers.
										Element:strong
											id
										Element:td
											Uuid
										Element:td
											The ID of the server.
										Element:tr
										Element:td
											servers.
										Element:strong
											created
										Element:td
											Datestamp
										Element:td
											The time stamp indicating the creation date of the server.
										Element:tr
										Element:td
											servers.
										Element:strong
											flavor
										Element:td
											Object
										Element:td
											The flavor ID and links.
										Element:tr
										Element:td
											servers.
										Element:strong
											image
										Element:td
											Object
										Element:td
											The image ID and links.
										Element:tr
										Element:td
											servers.
										Element:strong
											hostId
										Element:td
											Uuid
										Element:td
											The host ID. The compute provisioning algorithm has an anti- affinity property that attempts to spread customer VMs across hosts. Under certain situations, VMs from the same customer might be placed on the same host. hostId represents the host your server runs on and can be used to determine this scenario if it is relevant to your application. HostId is unique only for an account and is not globally unique.
										Element:tr
										Element:td
											servers.
										Element:strong
											links
										Element:td
											Array
										Element:td
											An array of the self and bookmark links to the server.
										Element:tr
										Element:td
											servers.links.
										Element:strong
											href
										Element:td
											String
										Element:td
											The URL for the server and the associated
										Element:code
											.
										Element:span
											rel
										Element:tr
										Element:td
											servers.links.
										Element:strong
											rel
										Element:td
											String
										Element:td
											The descriptive field for the associated
										Element:code
											, which is either
										Element:span
											href
										Element:code
											or
										Element:span
											self
										Element:code
											.
										Element:span
											bookmark
										Element:tr
										Element:td
											servers.
										Element:strong
											metadata
										Element:td
											String
										Element:td
											Any metadata key and value pairs.
										Element:tr
										Element:td
											servers.
										Element:strong
											name
										Element:td
											String
										Element:td
											The server name.
										Element:tr
										Element:td
											servers.
										Element:strong
											progress
										Element:td
											Integer
										Element:td
											The build completion progress, as a percentage. Value ranges from 0 to 100.
										Element:tr
										Element:td
											servers.
										Element:strong
											status
										Element:td
											String
										Element:td
											The status of the server. For a full list of possible status values, see
										Element:a
											.
										Element:span
											Server Status
										Element:tr
										Element:td
											servers.
										Element:strong
											tenant_id
										Element:td
											String
										Element:td
											The tenant ID.
										Element:tr
										Element:td
											servers.
										Element:strong
											updated
										Element:td
											Datestamp
										Element:td
											The time stamp of the last update.
										Element:tr
										Element:td
											servers.
										Element:strong
											user_id
										Element:td
											String
										Element:td
											The user ID.
										Element:tr
										Element:td
											servers.
										Element:strong
											OS-DCF:diskConfig
										Element:td
											String
										Element:td
											Extended attribute: The disk configuration value.. Valid values are
										Element:code
											and
										Element:span
											AUTO
										Element:code
											.
										Element:span
											MANUAL
										Element:tr
										Element:td
											servers.
										Element:strong
											RAX- SI:image_schedule
										Element:td
											String
										Element:td
											Extended attribute: The image schedule reference is included only if scheduled images has been enabled for this server.
										Element:tr
										Element:td
											servers.
										Element:strong
											OS-EXT-STS
										Element:td
											String
										Element:td
											Extended attribute. Shows the extended statuses for the server, including the VM, task, and power states.
										Element:tr
										Element:td
											servers.
										Element:strong
											RAX-PUBLIC-IP- ZONE-ID:publicIPZoneId
										Element:td
											Uuid
										Element:td
											Extended attribute. Enables booting the server from a volume when additional parameters are given. If specified, the volume status must be
										Element:code
											, and the volume attach_status must be
										Element:span
											available
										Element:code
											.
										Element:span
											detached
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example List servers with details: JSON response
									Node:
									(type) c
									(layer)3
										Element:p
											The following example show only one server in the list for brevity.
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											200
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											4543
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Wed
										Element:span
											,
										Element:span
											03
										Element:span
											Dec
										Element:span
											2014
										Element:span
											17
										Element:span
											:
										Element:span
											13
										Element:span
											:
										Element:span
											30
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											7
										Element:span
											b7ffed2
										Element:span
											-
										Element:span
											9
										Element:span
											b1f
										Element:span
											-
										Element:span
											46
										Element:span
											a8
										Element:span
											-
										Element:span
											a478
										Element:span
											-
										Element:span
											315518
										Element:span
											d35387
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"servers"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"status"
										Element:span
											:
										Element:span
											"ACTIVE"
										Element:span
											,
										Element:span
											"updated"
										Element:span
											:
										Element:span
											"2014-05-28T18:49:33Z"
										Element:span
											,
										Element:span
											"hostId"
										Element:span
											:
										Element:span
											"621cca5902d18b025468ae8e6bdcbbd5649a1ffe577716f267be4a93"
										Element:span
											,
										Element:span
											"addresses"
										Element:span
											:
										Element:span
											{
										Element:span
											"public"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"version"
										Element:span
											:
										Element:span
											4
										Element:span
											,
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"198.61.212.87"
										Element:span
											},
										Element:span
											{
										Element:span
											"version"
										Element:span
											:
										Element:span
											6
										Element:span
											,
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"2001:4800:780e:0510:7e32:e3ee:ff04:ddc8"
										Element:span
											}
										Element:span
											],
										Element:span
											"private"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"version"
										Element:span
											:
										Element:span
											4
										Element:span
											,
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"10.180.19.16"
										Element:span
											}
										Element:span
											],
										Element:span
											"SecureNet"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"version"
										Element:span
											:
										Element:span
											4
										Element:span
											,
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"192.168.3.2"
										Element:span
											}
										Element:span
											]
										Element:span
											},
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/v2/123456/servers/5bccf43e-35fa-4d65-9390-2b2d6b23ec89"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"self"
										Element:span
											},
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/123456/servers/5bccf43e-35fa-4d65-9390-2b2d6b23ec89"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											],
										Element:span
											"key_name"
										Element:span
											:
										Element:span
											null
										Element:span
											,
										Element:span
											"image"
										Element:span
											:
										Element:span
											{
										Element:span
											"id"
										Element:span
											:
										Element:span
											"f19067a2-7233-4666-b0f2-f420a4776ff0"
										Element:span
											,
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/123456/images/f19067a2-7233-4666-b0f2-f420a4776ff0"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											]
										Element:span
											},
										Element:span
											"RAX-PUBLIC-IP-ZONE-ID:publicIPZoneId"
										Element:span
											:
										Element:span
											"d12f4c3ef88ff2ca471f6b1a57d108c15db4a3478af762da6ae022b7"
										Element:span
											,
										Element:span
											"OS-EXT-STS:task_state"
										Element:span
											:
										Element:span
											null
										Element:span
											,
										Element:span
											"OS-EXT-STS:vm_state"
										Element:span
											:
										Element:span
											"active"
										Element:span
											,
										Element:span
											"RAX-SI:image_schedule"
										Element:span
											:
										Element:span
											{
										Element:span
											"retention"
										Element:span
											:
										Element:span
											3
										Element:span
											},
										Element:span
											"flavor"
										Element:span
											:
										Element:span
											{
										Element:span
											"id"
										Element:span
											:
										Element:span
											"2"
										Element:span
											,
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/123456/flavors/2"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											]
										Element:span
											},
										Element:span
											"id"
										Element:span
											:
										Element:span
											"5bccf43e-35fa-4d65-9390-2b2d6b23ec89"
										Element:span
											,
										Element:span
											"user_id"
										Element:span
											:
										Element:span
											"346289"
										Element:span
											,
										Element:span
											"name"
										Element:span
											:
										Element:span
											"DB2"
										Element:span
											,
										Element:span
											"created"
										Element:span
											:
										Element:span
											"2013-07-23T15:44:56Z"
										Element:span
											,
										Element:span
											"tenant_id"
										Element:span
											:
										Element:span
											"123456"
										Element:span
											,
										Element:span
											"OS-DCF:diskConfig"
										Element:span
											:
										Element:span
											"AUTO"
										Element:span
											,
										Element:span
											"accessIPv4"
										Element:span
											:
										Element:span
											"198.61.212.87"
										Element:span
											,
										Element:span
											"accessIPv6"
										Element:span
											:
										Element:span
											"2001:4800:780e:510:7e32:e3ee:ff04:ddc8"
										Element:span
											,
										Element:span
											"progress"
										Element:span
											:
										Element:span
											100
										Element:span
											,
										Element:span
											"OS-EXT-STS:power_state"
										Element:span
											:
										Element:span
											1
										Element:span
											,
										Element:span
											"config_drive"
										Element:span
											:
										Element:span
											""
										Element:span
											,
										Element:span
											"metadata"
										Element:span
											:
										Element:span
											{}
										Element:span
											}
										Element:span
											]
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Show server details
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								GET
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
						Node:
						(type) c
						(layer)2
							Element:p
								Retrieves detailed information for a specified server.
						Node:
						(type) c
						(layer)2
							Element:p
								The following extensions provide additional information when viewing server details:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								Config Drive:
							Element:li
								Scheduled Images:
							Element:li
								Extended Status (
							Element:code
								,
							Element:span
								OS-EXT-STS:power_state
							Element:code
								, and
							Element:span
								OS-EXT-STS:vm_state
							Element:code
								):
							Element:span
								OS-EXT-STS:task_state
						Node:
						(type) c
						(layer)2
							Element:p
								In the URI, specify the target server ID.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200 203
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not accept a request body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Retrieve server details: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											server
										Element:td
											Object
										Element:td
											A container of server details.
										Element:tr
										Element:td
											server.
										Element:strong
											accessIPv4
										Element:td
											Ip
										Element:td
											The public IP version 4 access address.
										Element:tr
										Element:td
											server.
										Element:strong
											accessIPv6
										Element:td
											Ip
										Element:td
											The public IP version 6 access address.
										Element:tr
										Element:td
											server.
										Element:strong
											addresses
										Element:td
											Object
										Element:td
											An object containing arrays of addresses for public, private, and isolated networks attached to the server.
										Element:tr
										Element:td
											server.addresses.
										Element:strong
											addr
										Element:td
											Uuid
										Element:td
											The IP address of the network.
										Element:tr
										Element:td
											server.addresses.
										Element:strong
											version
										Element:td
											Integer
										Element:td
											The version of the IP address of the network.
										Element:tr
										Element:td
											server.
										Element:strong
											id
										Element:td
											Uuid
										Element:td
											The ID of the server.
										Element:tr
										Element:td
											server.
										Element:strong
											created
										Element:td
											Datestamp
										Element:td
											The time stamp indicating the creation date of the server.
										Element:tr
										Element:td
											server.
										Element:strong
											flavor
										Element:td
											Object
										Element:td
											The flavor ID and links.
										Element:tr
										Element:td
											server.
										Element:strong
											image
										Element:td
											Object
										Element:td
											The image ID and links.
										Element:tr
										Element:td
											server.
										Element:strong
											hostId
										Element:td
											Uuid
										Element:td
											The host ID. The compute provisioning algorithm has an anti- affinity property that attempts to spread customer VMs across hosts. Under certain situations, VMs from the same customer might be placed on the same host. hostId represents the host your server runs on and can be used to determine this scenario if it is relevant to your application. HostId is unique only for an account and is not globally unique.
										Element:tr
										Element:td
											server.
										Element:strong
											links
										Element:td
											Array
										Element:td
											An array of the self and bookmark links to the server.
										Element:tr
										Element:td
											server.links.
										Element:strong
											href
										Element:td
											String
										Element:td
											The URL for the server and the associated
										Element:code
											.
										Element:span
											rel
										Element:tr
										Element:td
											server.links.
										Element:strong
											rel
										Element:td
											String
										Element:td
											The descriptive field for the associated
										Element:code
											, which is either
										Element:span
											href
										Element:code
											or
										Element:span
											self
										Element:code
											.
										Element:span
											bookmark
										Element:tr
										Element:td
											server.
										Element:strong
											metadata
										Element:td
											String
										Element:td
											Any metadata key and value pairs.
										Element:tr
										Element:td
											server.
										Element:strong
											name
										Element:td
											String
										Element:td
											The server name.
										Element:tr
										Element:td
											server.
										Element:strong
											progress
										Element:td
											Integer
										Element:td
											The build completion progress, as a percentage. Value ranges from
										Element:code
											to
										Element:span
											0
										Element:code
											.
										Element:span
											100
										Element:tr
										Element:td
											server.
										Element:strong
											status
										Element:td
											String
										Element:td
											The status of the server. For a full list of possible status values, see
										Element:a
											.
										Element:span
											Server Status
										Element:tr
										Element:td
											server.
										Element:strong
											tenant_id
										Element:td
											String
										Element:td
											The tenant ID.
										Element:tr
										Element:td
											server.
										Element:strong
											updated
										Element:td
											Datestamp
										Element:td
											The time stamp of the last update.
										Element:tr
										Element:td
											server.
										Element:strong
											user_id
										Element:td
											String
										Element:td
											The user ID.
										Element:tr
										Element:td
											server.
										Element:strong
											OS-DCF:diskConfig
										Element:td
											String
										Element:td
											Extended attribute: The disk configuration value. Valid values are
										Element:code
											and
										Element:span
											AUTO
										Element:code
											.
										Element:span
											MANUAL
										Element:tr
										Element:td
											server.
										Element:strong
											RAX- SI:image_schedule
										Element:td
											String
										Element:td
											Extended attribute: The image schedule reference is included only if scheduled images has been enabled for this server.
										Element:tr
										Element:td
											server.
										Element:strong
											OS-EXT-STS
										Element:td
											String
										Element:td
											Extended attribute. Shows the extended statuses for the server, including the VM, task, and power states.
										Element:tr
										Element:td
											server.
										Element:strong
											RAX- PUBLIC-IP-ZONE- ID:publicIPZoneId
										Element:td
											Uuid
										Element:td
											Extended attribute. Enables booting the server from a volume when additional parameters are given. If specified, the volume status must be
										Element:code
											, and the volume attach_status must be
										Element:span
											available
										Element:code
											.
										Element:span
											detached
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Retrieve server details: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											200
										Element:span
											Accepted
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											380
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											04
										Element:span
											Dec
										Element:span
											2014
										Element:span
											18
										Element:span
											:
										Element:span
											47
										Element:span
											:
										Element:span
											30
										Element:span
											GMT
										Element:span
											Location
										Element:span
											:
										Element:span
											https
										Element:span
											:
										Element:span
											//
										Element:span
											dfw
										Element:span
											.
										Element:span
											servers
										Element:span
											.
										Element:span
											api
										Element:span
											.
										Element:span
											rackspacecloud
										Element:span
											.
										Element:span
											com
										Element:span
											/
										Element:span
											v2
										Element:span
											/
										Element:span
											123456
										Element:span
											/
										Element:span
											servers
										Element:span
											/
										Element:span
											ef08aa7a
										Element:span
											-
										Element:span
											b5e4
										Element:span
											-
										Element:span
											4
										Element:span
											bb8
										Element:span
											-
										Element:span
											86
										Element:span
											df
										Element:span
											-
										Element:span
											5
										Element:span
											ac56230f841
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											b8b54344
										Element:span
											-
										Element:span
											41
										Element:span
											a9
										Element:span
											-
										Element:span
											4
										Element:span
											d6a
										Element:span
											-
										Element:span
											c29e
										Element:span
											-
										Element:span
											60
										Element:span
											f3dcab4b1f
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"server"
										Element:span
											:
										Element:span
											{
										Element:span
											"OS-DCF:diskConfig"
										Element:span
											:
										Element:span
											"AUTO"
										Element:span
											,
										Element:span
											"OS-EXT-STS:power_state"
										Element:span
											:
										Element:span
											1
										Element:span
											,
										Element:span
											"OS-EXT-STS:task_state"
										Element:span
											:
										Element:span
											null
										Element:span
											,
										Element:span
											"OS-EXT-STS:vm_state"
										Element:span
											:
										Element:span
											"active"
										Element:span
											,
										Element:span
											"accessIPv4"
										Element:span
											:
										Element:span
											"198.101.241.238"
										Element:span
											,
										Element:span
											"accessIPv6"
										Element:span
											:
										Element:span
											"2001:4800:780e:0510:d87b:9cbc:ff04:513a"
										Element:span
											,
										Element:span
											"addresses"
										Element:span
											:
										Element:span
											{
										Element:span
											"private"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"10.180.3.171"
										Element:span
											,
										Element:span
											"version"
										Element:span
											:
										Element:span
											4
										Element:span
											}
										Element:span
											],
										Element:span
											"public"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"198.101.241.238"
										Element:span
											,
										Element:span
											"version"
										Element:span
											:
										Element:span
											4
										Element:span
											},
										Element:span
											{
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"2001:4800:780e:0510:d87b:9cbc:ff04:513a"
										Element:span
											,
										Element:span
											"version"
										Element:span
											:
										Element:span
											6
										Element:span
											}
										Element:span
											]
										Element:span
											},
										Element:span
											"created"
										Element:span
											:
										Element:span
											"2012-08-16T18:41:43Z"
										Element:span
											,
										Element:span
											"flavor"
										Element:span
											:
										Element:span
											{
										Element:span
											"id"
										Element:span
											:
										Element:span
											"2"
										Element:span
											,
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/010101/flavors/2"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											]
										Element:span
											},
										Element:span
											"hostId"
										Element:span
											:
										Element:span
											"33ccb6c82f3625748b6f2338f54d8e9df07cc583251e001355569056"
										Element:span
											,
										Element:span
											"id"
										Element:span
											:
										Element:span
											"ef08aa7a-b5e4-4bb8-86df-5ac56230f841"
										Element:span
											,
										Element:span
											"image"
										Element:span
											:
										Element:span
											{
										Element:span
											"id"
										Element:span
											:
										Element:span
											"3afe97b2-26dc-49c5-a2cc-a2fc8d80c001"
										Element:span
											,
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/010101/images/3afe97b2-26dc-49c5-a2cc-a2fc8d80c001"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											]
										Element:span
											},
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/v2/010101/servers/ef08aa7a-b5e4-4bb8-86df-5ac56230f841"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"self"
										Element:span
											},
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/010101/servers/ef08aa7a-b5e4-4bb8-86df-5ac56230f841"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											],
										Element:span
											"metadata"
										Element:span
											:
										Element:span
											{
										Element:span
											"My Server Name"
										Element:span
											:
										Element:span
											"API Test Server 2"
										Element:span
											},
										Element:span
											"name"
										Element:span
											:
										Element:span
											"api-test-server 2"
										Element:span
											,
										Element:span
											"progress"
										Element:span
											:
										Element:span
											100
										Element:span
											,
										Element:span
											"status"
										Element:span
											:
										Element:span
											"ACTIVE"
										Element:span
											,
										Element:span
											"tenant_id"
										Element:span
											:
										Element:span
											"010101"
										Element:span
											,
										Element:span
											"updated"
										Element:span
											:
										Element:span
											"2012-08-16T18:50:38Z"
										Element:span
											,
										Element:span
											"user_id"
										Element:span
											:
										Element:span
											"170454"
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Update server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								PUT
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
						Node:
						(type) c
						(layer)2
							Element:p
								This operation updates one or more editable attributes for a specified server.
						Node:
						(type) c
						(layer)2
							Element:p
								The attributes that can be edited are: name, accessIPv4, and accessIPv6. You can update any or all of the attributes in a single request.
						Node:
						(type) c
						(layer)2
							Element:p
								Note
						Node:
						(type) c
						(layer)2
							Element:p
								If you try to update a server by using the server bookmark link, the response code is
							Element:code
								, unless you use the
							Element:span
								HTTP
							Element:span
								300
							Element:code
								header with the request.
							Element:span
								Accept:
							Element:span
								application/json;version=1.1
						Node:
						(type) c
						(layer)2
							Element:p
								In the URI, specify the target server ID.
						Node:
						(type) c
						(layer)2
							Element:p
								In the request body, specify the element
							Element:code
								, followed by the attribute, for example
							Element:span
								server
							Element:code
								, with the new value for that attribute. You can include one or more attributes in the server element.
							Element:span
								name
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											server
										Element:td
											Object
										Element:td
											A container for one or more server details to be updated.
										Element:tr
										Element:td
											server.
										Element:strong
											name
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The server name.
										Element:tr
										Element:td
											server.
										Element:strong
											accessIPv4
										Element:td
											Ip
										Element:em
											(Optional)
										Element:td
											The public IP version 4 access address.
										Element:tr
										Element:td
											server.
										Element:strong
											accessIPv6
										Element:td
											Ip
										Element:em
											(Optional)
										Element:td
											The public IP version 6 access address.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Update server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"server"
										Element:span
											:{
										Element:span
											"name"
										Element:span
											:
										Element:span
											"new-test-server-1"
										Element:span
											}
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											server
										Element:td
											Object
										Element:td
											A container of server details.
										Element:tr
										Element:td
											server.
										Element:strong
											accessIPv4
										Element:td
											Ip
										Element:td
											The public IP version 4 access address.
										Element:tr
										Element:td
											server.
										Element:strong
											accessIPv6
										Element:td
											Ip
										Element:td
											The public IP version 6 access address.
										Element:tr
										Element:td
											server.
										Element:strong
											addresses
										Element:td
											Object
										Element:td
											An object containing arrays of addresses for public, private, and isolated networks attached to the server.
										Element:tr
										Element:td
											server.addresses.
										Element:strong
											addr
										Element:td
											Uuid
										Element:td
											The IP address of the network.
										Element:tr
										Element:td
											server.addresses.
										Element:strong
											version
										Element:td
											Integer
										Element:td
											The version of the IP address of the network.
										Element:tr
										Element:td
											server.
										Element:strong
											id
										Element:td
											Uuid
										Element:td
											The ID of the server.
										Element:tr
										Element:td
											server.
										Element:strong
											created
										Element:td
											Datestamp
										Element:td
											The time stamp indicating the creation date of the server.
										Element:tr
										Element:td
											server.
										Element:strong
											flavor
										Element:td
											Object
										Element:td
											The flavor ID and links.
										Element:tr
										Element:td
											server.
										Element:strong
											image
										Element:td
											Object
										Element:td
											The image ID and links.
										Element:tr
										Element:td
											server.
										Element:strong
											hostId
										Element:td
											Uuid
										Element:td
											The host ID. The compute provisioning algorithm has an anti- affinity property that attempts to spread customer VMs across hosts. Under certain situations, VMs from the same customer might be placed on the same host. hostId represents the host your server runs on and can be used to determine this scenario if it is relevant to your application. HostId is unique only for an account and is not globally unique.
										Element:tr
										Element:td
											server.
										Element:strong
											links
										Element:td
											Array
										Element:td
											An array of the self and bookmark links to the server.
										Element:tr
										Element:td
											server.links.
										Element:strong
											href
										Element:td
											String
										Element:td
											The URL for the server and the associated
										Element:code
											.
										Element:span
											rel
										Element:tr
										Element:td
											server.links.
										Element:strong
											rel
										Element:td
											String
										Element:td
											The descriptive field for the associated
										Element:code
											, which is either
										Element:span
											href
										Element:code
											or
										Element:span
											self
										Element:code
											.
										Element:span
											bookmark
										Element:tr
										Element:td
											server.
										Element:strong
											metadata
										Element:td
											String
										Element:td
											Any metadata key and value pairs.
										Element:tr
										Element:td
											server.
										Element:strong
											name
										Element:td
											String
										Element:td
											The server name.
										Element:tr
										Element:td
											server.
										Element:strong
											progress
										Element:td
											Integer
										Element:td
											The build completion progress, as a percentage. Value ranges from
										Element:code
											to
										Element:span
											0
										Element:code
											.
										Element:span
											100
										Element:tr
										Element:td
											server.
										Element:strong
											status
										Element:td
											String
										Element:td
											The status of the server. For a full list of possible status values, see
										Element:a
											.
										Element:span
											Server Status
										Element:tr
										Element:td
											server.
										Element:strong
											tenant_id
										Element:td
											String
										Element:td
											The tenant ID.
										Element:tr
										Element:td
											server.
										Element:strong
											updated
										Element:td
											Datestamp
										Element:td
											The time stamp of the last update.
										Element:tr
										Element:td
											server.
										Element:strong
											user_id
										Element:td
											String
										Element:td
											The user ID.
										Element:tr
										Element:td
											server.
										Element:strong
											OS-DCF:diskConfig
										Element:td
											String
										Element:td
											Extended attribute: The disk configuration value. Valid values are
										Element:code
											and
										Element:span
											AUTO
										Element:code
											.
										Element:span
											MANUAL
										Element:tr
										Element:td
											server.
										Element:strong
											RAX-SI:image_schedule
										Element:td
											String
										Element:td
											Extended attribute: The image schedule reference is included only if scheduled images has been enabled for this server.
										Element:tr
										Element:td
											server.
										Element:strong
											OS-EXT-STS
										Element:td
											String
										Element:td
											Extended attribute. Shows the extended statuses for the server, including the VM, task, and power states.
										Element:tr
										Element:td
											server.
										Element:strong
											RAX-PUBLIC-IP-ZONE- ID:publicIPZoneId
										Element:td
											Uuid
										Element:td
											Extended attribute. Enables booting the server from a volume when additional parameters are given. If specified, the volume status must be
										Element:code
											, and the volume attach_status must be
										Element:span
											available
										Element:code
											.
										Element:span
											detached
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Update server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											200
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											1250
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											04
										Element:span
											Dec
										Element:span
											2014
										Element:span
											19
										Element:span
											:
										Element:span
											41
										Element:span
											:
										Element:span
											58
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											8
										Element:span
											c905dfe
										Element:span
											-
										Element:span
											2
										Element:span
											c9a
										Element:span
											-
										Element:span
											42
										Element:span
											d9
										Element:span
											-
										Element:span
											8
										Element:span
											e53
										Element:span
											-
										Element:span
											4478
										Element:span
											e2813c75
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"server"
										Element:span
											:
										Element:span
											{
										Element:span
											"status"
										Element:span
											:
										Element:span
											"ACTIVE"
										Element:span
											,
										Element:span
											"updated"
										Element:span
											:
										Element:span
											"2014-12-04T19:41:58Z"
										Element:span
											,
										Element:span
											"hostId"
										Element:span
											:
										Element:span
											"d535dcad0d51c97d20910a3c2a8264f0be8b847b8982e305bee27389"
										Element:span
											,
										Element:span
											"addresses"
										Element:span
											:
										Element:span
											{
										Element:span
											"public"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"version"
										Element:span
											:
										Element:span
											6
										Element:span
											,
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"2001:4800:7812:514:be76:4eff:fe05:aaed"
										Element:span
											},
										Element:span
											{
										Element:span
											"version"
										Element:span
											:
										Element:span
											4
										Element:span
											,
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"166.78.149.149"
										Element:span
											}
										Element:span
											],
										Element:span
											"private"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"version"
										Element:span
											:
										Element:span
											4
										Element:span
											,
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"10.182.16.182"
										Element:span
											}
										Element:span
											]
										Element:span
											},
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/v2/123456/servers/4b963871-f591-4b7d-b05f-7c0286e3c50f"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"self"
										Element:span
											},
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/123456/servers/4b963871-f591-4b7d-b05f-7c0286e3c50f"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											],
										Element:span
											"image"
										Element:span
											:
										Element:span
											{
										Element:span
											"id"
										Element:span
											:
										Element:span
											"3afe97b2-26dc-49c5-a2cc-a2fc8d80c001"
										Element:span
											,
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/123456/images/3afe97b2-26dc-49c5-a2cc-a2fc8d80c001"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											]
										Element:span
											},
										Element:span
											"flavor"
										Element:span
											:
										Element:span
											{
										Element:span
											"id"
										Element:span
											:
										Element:span
											"2"
										Element:span
											,
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/123456/flavors/2"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											]
										Element:span
											},
										Element:span
											"id"
										Element:span
											:
										Element:span
											"4b963871-f591-4b7d-b05f-7c0286e3c50f"
										Element:span
											,
										Element:span
											"user_id"
										Element:span
											:
										Element:span
											"346762"
										Element:span
											,
										Element:span
											"name"
										Element:span
											:
										Element:span
											"new-testserver-1"
										Element:span
											,
										Element:span
											"created"
										Element:span
											:
										Element:span
											"2014-12-04T18:47:30Z"
										Element:span
											,
										Element:span
											"tenant_id"
										Element:span
											:
										Element:span
											"123456"
										Element:span
											,
										Element:span
											"OS-DCF:diskConfig"
										Element:span
											:
										Element:span
											"AUTO"
										Element:span
											,
										Element:span
											"accessIPv4"
										Element:span
											:
										Element:span
											"166.78.149.149"
										Element:span
											,
										Element:span
											"accessIPv6"
										Element:span
											:
										Element:span
											"2001:4800:7812:514:be76:4eff:fe05:aaed"
										Element:span
											,
										Element:span
											"progress"
										Element:span
											:
										Element:span
											100
										Element:span
											,
										Element:span
											"metadata"
										Element:span
											:
										Element:span
											{
										Element:span
											"My Server Name"
										Element:span
											:
										Element:span
											"API Test Server 1"
										Element:span
											}
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Delete server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								DELETE
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
						Node:
						(type) c
						(layer)2
							Element:p
								This operation deletes the specified server.
						Node:
						(type) c
						(layer)2
							Element:p
								If the operation succeeds, it returns an
							Element:code
								status code with no response body.
							Element:span
								HTTP
							Element:span
								202
						Node:
						(type) c
						(layer)2
							Element:p
								In the URI, specify the target server ID.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								204
							Element:td
								Delete Successful
							Element:td
								Delete request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not accept a request body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Delete server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Delete server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											204
										Element:span
											No
										Element:span
											Content
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											0
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											04
										Element:span
											Dec
										Element:span
											2014
										Element:span
											21
										Element:span
											:
										Element:span
											45
										Element:span
											:
										Element:span
											47
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Create a server key pair
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								os
							Element:span
								-
							Element:span
								keypairs
						Node:
						(type) c
						(layer)2
							Element:p
								Creates a server key pair
						Node:
						(type) c
						(layer)2
							Element:p
								Creates a key pair, with the name specified in the request body, to associate with a new server instance.
						Node:
						(type) c
						(layer)2
							Element:p
								Important
						Node:
						(type) c
						(layer)2
							Element:p
								Key Pair Naming Rules
						Node:
						(type) c
						(layer)2
							Element:p
								The key name must be unique and may not exceed 255 characters. It can contain the following characters:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								alphanumeric
							Element:li
								spaces
							Element:li
								dashes
							Element:li
								underscores
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200
							Element:td
								Success
							Element:td
								Request accepted.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											keypair
										Element:td
											Object
										Element:td
											The container for the key pair request.
										Element:tr
										Element:td
											keypair.
										Element:strong
											name
										Element:td
											String
										Element:td
											The name to associate with the key pair.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Create a server key pair: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"keypair"
										Element:span
											:{
										Element:span
											"name"
										Element:span
											:
										Element:span
											"name_of_keypair"
										Element:span
											}
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											keypair
										Element:td
											Object
										Element:td
											The container for the key pair details.
										Element:tr
										Element:td
											keypair.
										Element:strong
											fingerprint
										Element:td
											String
										Element:td
											A short sequence of bytes used to authenticate, or look up, a longer public key.
										Element:tr
										Element:td
											keypair.
										Element:strong
											name
										Element:td
											String
										Element:td
											The name of the key pair.
										Element:tr
										Element:td
											keypair.
										Element:strong
											private_key
										Element:td
											String
										Element:td
											The private ssh key value.
										Element:tr
										Element:td
											keypair.
										Element:strong
											public_key
										Element:td
											String
										Element:td
											The public ssh key value.
										Element:tr
										Element:td
											keypair.
										Element:strong
											user_id
										Element:td
											String
										Element:td
											The ID of the user.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Create a server key pair: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											200
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											2270
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											02
										Element:span
											Apr
										Element:span
											2015
										Element:span
											17
										Element:span
											:
										Element:span
											54
										Element:span
											:
										Element:span
											20
										Element:span
											GMT
										Element:span
											,
										Element:span
											Thu
										Element:span
											,
										Element:span
											02
										Element:span
											Apr
										Element:span
											2015
										Element:span
											17
										Element:span
											:
										Element:span
											54
										Element:span
											:
										Element:span
											21
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											9.2
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											6.2
										Element:span
											.
										Element:span
											1.2
										Element:span
											)
										Element:span
											X
										Element:span
											-
										Element:span
											Compute
										Element:span
											-
										Element:span
											Request
										Element:span
											-
										Element:span
											Id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											2611
										Element:span
											a666
										Element:span
											-
										Element:span
											6693
										Element:span
											-
										Element:span
											46
										Element:span
											e0
										Element:span
											-
										Element:span
											a635
										Element:span
											-
										Element:span
											54
										Element:span
											c506eb7513
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"keypair"
										Element:span
											:
										Element:span
											{
										Element:span
											"fingerprint"
										Element:span
											:
										Element:span
											"35:9d:d0:c3:4a:80:d3:d8:86:f1:ca:f7:df:c4:f9:d8"
										Element:span
											,
										Element:span
											"name"
										Element:span
											:
										Element:span
											"name_of_keypair"
										Element:span
											,
										Element:span
											"private_key"
										Element:span
											:
										Element:span
											"-----BEGIN RSA PRIVATE KEY-----
										Element:span
											\n
										Element:span
											MIICXAIBAAKBgQC9mC3WZN9UGLxgPBpP7H5jZMc6pKwOoSgre8yun6REFktn/Kz7
										Element:span
											\n
										Element:span
											DUt9jaR1UJyRzHxITfCfAIgSxPdGqB/oF1suMyWgu5i0625vavLB5z5kC8Hq3qZJ
										Element:span
											\n
										Element:span
											9zJO1poE1kyD+htiTtPWJ88e12xuH2XB/CZN9OpEiF98hAagiOE0EnOS5QIDAQAB
										Element:span
											\n
										Element:span
											AoGAE5XO1mDhORy9COvsg+kYPUhB1GsCYxh+v88wG7HeFDKBY6KUc/Kxo6yoGn5T
										Element:span
											\n
										Element:span
											TjRjekyi2KoDZHz4VlIzyZPwFS4I1bf3oCunVoAKzgLdmnTtvRNMC5jFOGc2vUgP
										Element:span
											\n
										Element:span
											9bSyRj3S1R4ClVk2g0IDeagko/jc8zzLEYuIK+fbkds79YECQQDt3vcevgegnkga
										Element:span
											\n
										Element:span
											tF4NsDmmBPRkcSHCqrANP/7vFcBQN3czxeYYWX3DK07alu6GhH1Y4sHbdm616uU0
										Element:span
											\n
										Element:span
											ll7xbDzxAkEAzAtN2IyftNygV2EGiaGgqLyo/tD9+Vui2qCQplqe4jvWh/5Sparl
										Element:span
											\n
										Element:span
											OjmKo+uAW+hLrLVMnHzRWxbWU8hirH5FNQJATO+ZxCK4etXXAnQmG41NCAqANWB2
										Element:span
											\n
										Element:span
											B+2HJbH2NcQ2QHvAHUm741JGn/KI/aBlo7KEjFRDWUVUB5ji64BbUwCsMQJBAIku
										Element:span
											\n
										Element:span
											LGcjnBf/oLk+XSPZC2eGd2Ph5G5qYmH0Q2vkTx+wtTn3DV+eNsDfgMtWAJVJ5t61
										Element:span
											\n
										Element:span
											gU1QSXyhLPVlKpnnxuUCQC+xvvWjWtsLaFtAsZywJiqLxQzHts8XLGZptYJ5tLWV
										Element:span
											\n
										Element:span
											rtmYtBcJCN48RrgQHry/xWYeA4K/AFQpXfNPgprQ96Q=
										Element:span
											\n
										Element:span
											-----END RSA PRIVATE KEY-----
										Element:span
											\n
										Element:span
											"
										Element:span
											,
										Element:span
											"public_key"
										Element:span
											:
										Element:span
											"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQC9mC3WZN9UGLxgPBpP7H5jZMc6pKwOoSgre8yun6REFktn/Kz7DUt9jaR1UJyRzHxITfCfAIgSxPdGqB/oF1suMyWgu5i0625vavLB5z5kC8Hq3qZJ9zJO1poE1kyD+htiTtPWJ88e12xuH2XB/CZN9OpEiF98hAagiOE0EnOS5Q== Generated by Nova
										Element:span
											\n
										Element:span
											"
										Element:span
											,
										Element:span
											"user_id"
										Element:span
											:
										Element:span
											"fake"
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Import a server key pair
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								os
							Element:span
								-
							Element:span
								keypairs
						Node:
						(type) c
						(layer)2
							Element:p
								This operation imports, or uploads, a key pair, with the name and public key specified in the request body, to associate with a new server instance.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200
							Element:td
								Success
							Element:td
								Request accepted.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											keypair
										Element:td
											Object
										Element:td
											The container for the key pair request.
										Element:tr
										Element:td
											keypair.
										Element:strong
											name
										Element:td
											String
										Element:td
											The name to associate with the key pair.
										Element:tr
										Element:td
											keypair.
										Element:strong
											public_key
										Element:td
											String
										Element:td
											The public ssh key value.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Import a server key pair: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"keypair"
										Element:span
											:{
										Element:span
											"name"
										Element:span
											:
										Element:span
											"name_of_keypair"
										Element:span
											,
										Element:span
											"public_key"
										Element:span
											:
										Element:span
											"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDx8nkQv/zgGgB4rMYmIf+6A4l6Rr+o/6lHBQdW5aYd44bd8JttDCE/F/pNRr0lRE+PiqSPO8nDPHw0010JeMH9gYgnnFlyY3/OcJ02RhIPyyxYpv9FhY+2YiUkpwFOcLImyrxEsYXpD/0d3ac30bNH6Sw9JD9UZHYcpSxsIbECHw"
										Element:span
											}
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											keypair
										Element:td
											Object
										Element:td
											The container for the key pair details.
										Element:tr
										Element:td
											keypair.
										Element:strong
											fingerprint
										Element:td
											String
										Element:td
											A short sequence of bytes used to authenticate, or look up, a longer public key.
										Element:tr
										Element:td
											keypair.
										Element:strong
											name
										Element:td
											String
										Element:td
											The name of the key pair.
										Element:tr
										Element:td
											keypair.
										Element:strong
											private_key
										Element:td
											String
										Element:td
											The private ssh key value.
										Element:tr
										Element:td
											keypair.
										Element:strong
											public_key
										Element:td
											String
										Element:td
											The public ssh key value.
										Element:tr
										Element:td
											keypair.
										Element:strong
											user_id
										Element:td
											String
										Element:td
											The ID of the user.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Import a server key pair: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											200
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											545
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											02
										Element:span
											Apr
										Element:span
											2015
										Element:span
											18
										Element:span
											:
										Element:span
											08
										Element:span
											:
										Element:span
											19
										Element:span
											GMT
										Element:span
											,
										Element:span
											Thu
										Element:span
											,
										Element:span
											02
										Element:span
											Apr
										Element:span
											2015
										Element:span
											18
										Element:span
											:
										Element:span
											08
										Element:span
											:
										Element:span
											19
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											9.2
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											6.2
										Element:span
											.
										Element:span
											1.2
										Element:span
											)
										Element:span
											X
										Element:span
											-
										Element:span
											Compute
										Element:span
											-
										Element:span
											Request
										Element:span
											-
										Element:span
											Id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											9
										Element:span
											efa9191
										Element:span
											-
										Element:span
											4
										Element:span
											f08
										Element:span
											-
										Element:span
											4
										Element:span
											d65
										Element:span
											-
										Element:span
											92
										Element:span
											c7
										Element:span
											-
										Element:span
											acd934e5c5b0
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"keypair"
										Element:span
											:{
										Element:span
											"fingerprint"
										Element:span
											:
										Element:span
											"1e:2c:9b:56:79:4b:45:77:f9:ca:7a:98:2c:b0:d5:3c"
										Element:span
											,
										Element:span
											"name"
										Element:span
											:
										Element:span
											"name_of_keypair-dab428fe-6186-4a14-b3de-92131f76cd39"
										Element:span
											,
										Element:span
											"public_key"
										Element:span
											:
										Element:span
											"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDx8nkQv/zgGgB4rMYmIf+6A4l6Rr+o/6lHBQdW5aYd44bd8JttDCE/F/pNRr0lRE+PiqSPO8nDPHw0010JeMH9gYgnnFlyY3/OcJ02RhIPyyxYpv9FhY+2YiUkpwFOcLImyrxEsYXpD/0d3ac30bNH6Sw9JD9UZHYcpSxsIbECHw== Generated by Nova"
										Element:span
											,
										Element:span
											"user_id"
										Element:span
											:
										Element:span
											"fake"
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Retrieve list of key pairs
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								GET
							Element:span
								/
							Element:span
								os
							Element:span
								-
							Element:span
								keypairs
						Node:
						(type) c
						(layer)2
							Element:p
								This operation retrieves a list of server key pairs.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not accept a request body.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											keypairs
										Element:td
											Array
										Element:td
											An array of key pairs.
										Element:tr
										Element:td
											keypairs.
										Element:strong
											keypair
										Element:td
											Object
										Element:td
											A container of key pair details.
										Element:tr
										Element:td
											keypairs.keypair.
										Element:strong
											fingerprint
										Element:td
											String
										Element:td
											A short sequence of bytes used to authenticate, or look up, a longer public key.
										Element:tr
										Element:td
											keypairs.keypair.
										Element:strong
											name
										Element:td
											String
										Element:td
											The name of the key pair.
										Element:tr
										Element:td
											keypairs.keypair.
										Element:strong
											public_key
										Element:td
											String
										Element:td
											The public ssh key value.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Retrieve list of key pairs: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											200
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											540
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											02
										Element:span
											Apr
										Element:span
											2015
										Element:span
											18
										Element:span
											:
										Element:span
											09
										Element:span
											:
										Element:span
											36
										Element:span
											GMT
										Element:span
											,
										Element:span
											Thu
										Element:span
											,
										Element:span
											02
										Element:span
											Apr
										Element:span
											2015
										Element:span
											18
										Element:span
											:
										Element:span
											09
										Element:span
											:
										Element:span
											36
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											9.2
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											6.2
										Element:span
											.
										Element:span
											1.2
										Element:span
											)
										Element:span
											X
										Element:span
											-
										Element:span
											Compute
										Element:span
											-
										Element:span
											Request
										Element:span
											-
										Element:span
											Id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											5
										Element:span
											a9c3b9d
										Element:span
											-
										Element:span
											67
										Element:span
											cf
										Element:span
											-
										Element:span
											4
										Element:span
											b7f
										Element:span
											-
										Element:span
											b31d
										Element:span
											-
										Element:span
											0670
										Element:span
											e1c667a0
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"keypairs"
										Element:span
											:[
										Element:span
											{
										Element:span
											"keypair"
										Element:span
											:{
										Element:span
											"fingerprint"
										Element:span
											:
										Element:span
											"15:b0:f8:b3:f9:48:63:71:cf:7b:5b:38:6d:44:2d:4a"
										Element:span
											,
										Element:span
											"name"
										Element:span
											:
										Element:span
											"name_of_keypair-601a2305-4f25-41ed-89c6-2a966fc8027a"
										Element:span
											,
										Element:span
											"public_key"
										Element:span
											:
										Element:span
											"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQC+Eo/RZRngaGTkFs7I62ZjsIlO79KklKbMXi8F+KITD4bVQHHn+kV+4gRgkgCRbdoDqoGfpaDFs877DYX9n4z6FrAIZ4PES8TNKhatifpn9NdQYWA+IkU8CuvlEKGuFpKRi/k7JLos/gHi2hy7QUwgtRvcefvD/vgQZOVw/mGR9Q== Generated by Nova
										Element:span
											\n
										Element:span
											"
										Element:span
											}
										Element:span
											}
										Element:span
											]
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Delete key pair
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								DELETE
							Element:span
								/
							Element:span
								os
							Element:span
								-
							Element:span
								keypairs
							Element:span
								/
							Element:span
								{
							Element:span
								keypair_name
							Element:span
								}
						Node:
						(type) c
						(layer)2
							Element:p
								This operation deletes the specified key pair. A return code of 202 indicates success.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Delete Successful
							Element:td
								Delete request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{keypair_name}
										Element:td
											String
										Element:td
											The name of the key pair to be deleted.
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not accept a request body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Delete key pair: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Delete key pair: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											Accepted
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											0
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											text
										Element:span
											/
										Element:span
											html
										Element:span
											;
										Element:span
											charset
										Element:span
											=
										Element:span
											UTF
										Element:span
											-
										Element:span
											8
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											02
										Element:span
											Apr
										Element:span
											2015
										Element:span
											18
										Element:span
											:
										Element:span
											06
										Element:span
											:
										Element:span
											52
										Element:span
											GMT
										Element:span
											,
										Element:span
											Thu
										Element:span
											,
										Element:span
											02
										Element:span
											Apr
										Element:span
											2015
										Element:span
											18
										Element:span
											:
										Element:span
											06
										Element:span
											:
										Element:span
											52
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											9.2
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											6.2
										Element:span
											.
										Element:span
											1.2
										Element:span
											)
										Element:span
											X
										Element:span
											-
										Element:span
											Compute
										Element:span
											-
										Element:span
											Request
										Element:span
											-
										Element:span
											Id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											6
										Element:span
											b1bbebc
										Element:span
											-
										Element:span
											5
										Element:span
											b70
										Element:span
											-
										Element:span
											4775
										Element:span
											-
										Element:span
											9
										Element:span
											b1d
										Element:span
											-
										Element:span
											0
										Element:span
											e69db552b31
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Attach volume to server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								os
							Element:span
								-
							Element:span
								volume_attachments
						Node:
						(type) c
						(layer)2
							Element:p
								This operation attaches a data volume to a specified server.
						Node:
						(type) c
						(layer)2
							Element:p
								You can attach one or more volumes in a single request.
						Node:
						(type) c
						(layer)2
							Element:p
								For information about creating volumes, see
							Element:a
								Rackspace Cloud Block Storage Developer Guide
								.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											volumeAttachment
										Element:td
											Object
										Element:td
											The container for the volume attachment specifications.
										Element:tr
										Element:td
											volumeAttachment.
										Element:strong
											device
										Element:td
											String
										Element:td
											The name of the device, such as /dev/xvdb. Specify
										Element:code
											for auto- assignment.
										Element:span
											null
										Element:tr
										Element:td
											volumeAttachment.
										Element:strong
											volumeId
										Element:td
											Object
										Element:td
											The ID of the volume that you want to attach to the server instance.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Attach volume to server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"volumeAttachment"
										Element:span
											:{
										Element:span
											"device"
										Element:span
											:
										Element:span
											null
										Element:span
											,
										Element:span
											"volumeId"
										Element:span
											:
										Element:span
											"4ab50df6-7480-45df-8604-b1ee39fe857c"
										Element:span
											}
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											volumeAttachment
										Element:td
											Object
										Element:td
											The container for the volume attachment specifications.
										Element:tr
										Element:td
											volumeAttachment.
										Element:strong
											device
										Element:td
											String
										Element:td
											The name of the device, such as /dev/xvdb. Specify
										Element:code
											for auto- assignment.
										Element:span
											null
										Element:tr
										Element:td
											volumeAttachment.
										Element:strong
											Id
										Element:td
											String
										Element:td
											The ID of the volume that you attached to the server instance.
										Element:tr
										Element:td
											volumeAttachment.
										Element:strong
											serverId
										Element:td
											String
										Element:td
											The ID of the server instance to which you attached the volume.
										Element:tr
										Element:td
											volumeAttachment.
										Element:strong
											volumeId
										Element:td
											String
										Element:td
											The ID of the volume that you attached to the server instance.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Attach volume to server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											120
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Mon
										Element:span
											,
										Element:span
											19
										Element:span
											Jan
										Element:span
											2015
										Element:span
											19
										Element:span
											:
										Element:span
											22
										Element:span
											:
										Element:span
											30
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											206
										Element:span
											e007a
										Element:span
											-
										Element:span
											9
										Element:span
											dfe
										Element:span
											-
										Element:span
											4
										Element:span
											ac4
										Element:span
											-
										Element:span
											b819
										Element:span
											-
										Element:span
											d64a74244506
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"volumeAttachment"
										Element:span
											:{
										Element:span
											"device"
										Element:span
											:
										Element:span
											"/dev/xvdb"
										Element:span
											,
										Element:span
											"serverId"
										Element:span
											:
										Element:span
											"76ddf257-2771-4097-aab8-b07b52110376"
										Element:span
											,
										Element:span
											"id"
										Element:span
											:
										Element:span
											"4ab50df6-7480-45df-8604-b1ee39fe857c"
										Element:span
											,
										Element:span
											"volumeId"
										Element:span
											:
										Element:span
											"4ab50df6-7480-45df-8604-b1ee39fe857c"
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								List server volumes
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								GET
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								os
							Element:span
								-
							Element:span
								volume_attachments
						Node:
						(type) c
						(layer)2
							Element:p
								This operation retrieves list of all attached volumes for a specified server.
						Node:
						(type) c
						(layer)2
							Element:p
								In the URI, specify the target server ID.
						Node:
						(type) c
						(layer)2
							Element:p
								For information about creating volumes, see
							Element:a
								Rackspace Cloud Block Storage Developer Guide
								.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200 203 300
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not accept a request body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example List server volumes: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											volumeAttachment
										Element:td
											Array
										Element:td
											The array of attached volumes.
										Element:tr
										Element:td
											volumeAttachments.
										Element:strong
											device
										Element:td
											String
										Element:td
											The name of the device, such as /dev/xvdb.
										Element:tr
										Element:td
											volumeAttachments.
										Element:strong
											Id
										Element:td
											String
										Element:td
											The ID of the volume attached to the server instance.
										Element:tr
										Element:td
											volumeAttachments.
										Element:strong
											serverId
										Element:td
											String
										Element:td
											The ID of the server instance to which the volume is attached.
										Element:tr
										Element:td
											volumeAttachments.
										Element:strong
											volumeId
										Element:td
											String
										Element:td
											The ID of the volume attached to the server instance.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example List server volumes: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											200
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											120
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Mon
										Element:span
											,
										Element:span
											19
										Element:span
											Jan
										Element:span
											2015
										Element:span
											19
										Element:span
											:
										Element:span
											22
										Element:span
											:
										Element:span
											30
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											206
										Element:span
											e007a
										Element:span
											-
										Element:span
											9
										Element:span
											dfe
										Element:span
											-
										Element:span
											4
										Element:span
											ac4
										Element:span
											-
										Element:span
											b819
										Element:span
											-
										Element:span
											d64a74244506
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"volumeAttachments"
										Element:span
											:[
										Element:span
											{
										Element:span
											"device"
										Element:span
											:
										Element:span
											"/dev/xvdb"
										Element:span
											,
										Element:span
											"serverId"
										Element:span
											:
										Element:span
											"76ddf257-2771-4097-aab8-b07b52110376"
										Element:span
											,
										Element:span
											"id"
										Element:span
											:
										Element:span
											"4ab50df6-7480-45df-8604-b1ee39fe857c"
										Element:span
											,
										Element:span
											"volumeId"
										Element:span
											:
										Element:span
											"4ab50df6-7480-45df-8604-b1ee39fe857c"
										Element:span
											}
										Element:span
											]
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Show volume attachment details
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								GET
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								os
							Element:span
								-
							Element:span
								volume_attachments
							Element:span
								/
							Element:span
								{
							Element:span
								attachment_id
							Element:span
								}
						Node:
						(type) c
						(layer)2
							Element:p
								This operation retrieves volume details for the specified server ID and volume attachment ID
						Node:
						(type) c
						(layer)2
							Element:p
								In the URI, specify the target server ID and the target attached volume ID to see details for that volume.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
										Element:tr
										Element:td
											{attachment_id}
										Element:td
											Uuid
										Element:td
											The volume attachment ID.
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not accept a request body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Show volume attachment details: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											volumeAttachment
										Element:td
											Object
										Element:td
											The container for the volume attachment specifications.
										Element:tr
										Element:td
											volumeAttachment.
										Element:strong
											device
										Element:td
											String
										Element:td
											The name of the device, such as /dev/xvdb. Specify
										Element:code
											for auto- assignment.
										Element:span
											null
										Element:tr
										Element:td
											volumeAttachment.
										Element:strong
											Id
										Element:td
											String
										Element:td
											The ID of the volume that you attached to the server instance.
										Element:tr
										Element:td
											volumeAttachment.
										Element:strong
											serverId
										Element:td
											String
										Element:td
											The ID of the server instance to which you attached the volume.
										Element:tr
										Element:td
											volumeAttachment.
										Element:strong
											volumeId
										Element:td
											String
										Element:td
											The ID of the volume that you attached to the server instance.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Show volume attachment details: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											200
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											32
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Tue
										Element:span
											,
										Element:span
											20
										Element:span
											Jan
										Element:span
											2015
										Element:span
											14
										Element:span
											:
										Element:span
											25
										Element:span
											:
										Element:span
											02
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											96
										Element:span
											b3fdf4
										Element:span
											-
										Element:span
											a6d9
										Element:span
											-
										Element:span
											42
										Element:span
											ce
										Element:span
											-
										Element:span
											91
										Element:span
											bb
										Element:span
											-
										Element:span
											2
										Element:span
											cea8eb5e14e
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"volumeAttachment"
										Element:span
											:{
										Element:span
											"device"
										Element:span
											:
										Element:span
											"/dev/xvdb"
										Element:span
											,
										Element:span
											"serverId"
										Element:span
											:
										Element:span
											"76ddf257-2771-4097-aab8-b07b52110376"
										Element:span
											,
										Element:span
											"id"
										Element:span
											:
										Element:span
											"4ab50df6-7480-45df-8604-b1ee39fe857c"
										Element:span
											,
										Element:span
											"volumeId"
										Element:span
											:
										Element:span
											"4ab50df6-7480-45df-8604-b1ee39fe857c"
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Delete volume attachment from server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								DELETE
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								os
							Element:span
								-
							Element:span
								volume_attachments
							Element:span
								/
							Element:span
								{
							Element:span
								attachment_id
							Element:span
								}
						Node:
						(type) c
						(layer)2
							Element:p
								This operation deletes the specified volume attachment from the specified server.
						Node:
						(type) c
						(layer)2
							Element:p
								If the operation succeeds, it returns an
							Element:code
								status code with no response body.
							Element:span
								HTTP
							Element:span
								202
						Node:
						(type) c
						(layer)2
							Element:p
								In the URI, specify the target server ID and the target attached volume ID.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Delete Successful
							Element:td
								Delete request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
										Element:tr
										Element:td
											{attachment_id}
										Element:td
											Uuid
										Element:td
											The volume attachment ID.
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not accept a request body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Delete volume attachment from server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Delete volume attachment from server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											120
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Mon
										Element:span
											,
										Element:span
											19
										Element:span
											Jan
										Element:span
											2015
										Element:span
											23
										Element:span
											:
										Element:span
											19
										Element:span
											:
										Element:span
											30
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											406
										Element:span
											a007a
										Element:span
											-
										Element:span
											9
										Element:span
											dfe
										Element:span
											-
										Element:span
											4
										Element:span
											ac4
										Element:span
											-
										Element:span
											b819
										Element:span
											-
										Element:span
											d64a74244506
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Create bootable volume and server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
						Node:
						(type) c
						(layer)2
							Element:p
								This operation creates a bootable volume and boots a server in one step.
						Node:
						(type) c
						(layer)2
							Element:p
								The full URL to the newly created server is returned through the
							Element:code
								header and is available as a
							Element:span
								Location
							Element:code
								and
							Element:span
								self
							Element:code
								link in the server representation.
							Element:span
								bookmark
						Node:
						(type) c
						(layer)2
							Element:p
								The progress of the server build depends on factors including location of the requested image, network i/o, host load, and the selected flavor. You can check the progress of the build request by issuing a call to retrieve the details of the server. Once the build is complete, the server's
							Element:code
								is
							Element:span
								status
							Element:code
								.
							Element:span
								ACTIVE
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											server.
										Element:strong
											name
										Element:td
											String
										Element:td
											The server name.
										Element:tr
										Element:td
											server.
										Element:strong
											imageRef
										Element:td
											Uuid
										Element:td
											The image reference for the desired image for your server instance.
										Element:tr
										Element:td
											server.
										Element:strong
											block_device_mapping_v2
										Element:td
											Object
										Element:em
											(Optional)
										Element:td
											The container of bootable volume details.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											boot_index
										Element:td
											Integer
										Element:em
											(Optional)
										Element:td
											The index of the bootable volume.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											uuid
										Element:td
											Integer
										Element:em
											(Optional)
										Element:td
											The id of the bootable volume.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											source_type
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The source type for the bootable volume.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											destination_type
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The destination type for the bootable volume.
										Element:tr
										Element:td
											server.block_device_mapping_v2.
										Element:strong
											delete_on_termination
										Element:td
											Boolean
										Element:em
											(Optional)
										Element:td
											Flag to indicate whether the bootable volume should be deleted after server creation.
										Element:tr
										Element:td
											server.
										Element:strong
											flavorRef
										Element:td
											Uuid
										Element:em
											(Required)
										Element:td
											The flavor reference for the desired flavor for your server instance.
										Element:tr
										Element:td
											server.
										Element:strong
											config_drive
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											Enables metadata injection in a server through a configuration drive. To enable a configuration drive, specify
										Element:code
											. Otherwise, specify
										Element:span
											true
										Element:code
											.
										Element:span
											false
										Element:tr
										Element:td
											server.
										Element:strong
											key_name
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The name of the key pair used to authenticate by using key-based authentication instead of password- based authentication.
										Element:tr
										Element:td
											server.
										Element:strong
											OS-DCF:diskConfig
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The disk configuration value. The image auto_disk_config metadata key set will affect the value you can choose to set the server
										Element:code
											. If an image has
										Element:span
											OS-
										Element:span
											DCF:diskConfig
										Element:code
											value of
										Element:span
											auto_disk_config
										Element:code
											, you cannot create a server from that image when specifying
										Element:span
											disabled
										Element:code
											value of
										Element:span
											OS-DCF:diskConfig
										Element:code
											. Valid values are: AUTO:The server is built with a single partition which is the size of the target flavor disk. The file system is automatically adjusted to fit the entire partition. This keeps things simple and automated. AUTO is valid only for images and servers with a single partition that use the EXT3 file system. This is the default setting for applicable Rackspace base images. MANUAL:The server is built using the partition scheme and file system of the source image. If the target flavor disk is larger, the remaining disk space is left unpartitioned. This enables images to have non-EXT3 file systems, multiple partitions, and so on, and it enables you to manage the disk configuration.
										Element:span
											AUTO
										Element:tr
										Element:td
											server.
										Element:strong
											metadata
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											Metadata key and value pairs. The maximum size of each metadata key and value is 255 bytes each.
										Element:tr
										Element:td
											server.
										Element:strong
											personality
										Element:td
											Array
										Element:em
											(Optional)
										Element:td
											The array of personality files for the server.
										Element:tr
										Element:td
											server.
										Element:strong
											user_data
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											Data used with config_drive for configuring a server.
										Element:tr
										Element:td
											server.personality.
										Element:strong
											path
										Element:td
											String
										Element:td
											The path of the personality file.
										Element:tr
										Element:td
											server.personality.
										Element:strong
											contents
										Element:td
											String
										Element:td
											The contents od the personality file.
										Element:tr
										Element:td
											server.
										Element:strong
											networks
										Element:td
											Array
										Element:td
											The array of networks attached to the server. By default, the server instance is provisioned with all isolated networks for the tenant. You can specify multiple NICs on the server. Optionally, you can create one or more NICs on the server. To provision the server instance with a NIC for a
										Element:code
											network, specify the UUID in the
										Element:span
											Nova-
										Element:span
											network
										Element:code
											attribute in a
										Element:span
											uuid
										Element:code
											object. To provision the server instance with a NIC for a
										Element:span
											networks
										Element:code
											network, specify the UUID in the
										Element:span
											Neutron
										Element:code
											attribute in a
										Element:span
											port
										Element:code
											object.
										Element:span
											networks
										Element:tr
										Element:td
											server.networks.
										Element:strong
											uuid
										Element:td
											Uuid
										Element:em
											(Optional)
										Element:td
											The UUID of the
										Element:code
											network attached to the server.
										Element:span
											Nova-network
										Element:tr
										Element:td
											server.networks.
										Element:strong
											port
										Element:td
											Uuid
										Element:em
											(Optional)
										Element:td
											The UUID of the
										Element:code
											port attached to the server.
										Element:span
											Neutron
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Create bootable volume and server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"server"
										Element:span
											:{
										Element:span
											"name"
										Element:span
											:
										Element:span
											"BFVServer5"
										Element:span
											,
										Element:span
											"imageRef"
										Element:span
											:
										Element:span
											""
										Element:span
											,
										Element:span
											"block_device_mapping_v2"
										Element:span
											:[
										Element:span
											{
										Element:span
											"boot_index"
										Element:span
											:
										Element:span
											"0"
										Element:span
											,
										Element:span
											"uuid"
										Element:span
											:
										Element:span
											"bb02b1a3-bc77-4d17-ab5b-421d89850fca"
										Element:span
											,
										Element:span
											"volume_size"
										Element:span
											:
										Element:span
											"100"
										Element:span
											,
										Element:span
											"source_type"
										Element:span
											:
										Element:span
											"image"
										Element:span
											,
										Element:span
											"destination_type"
										Element:span
											:
										Element:span
											"volume"
										Element:span
											,
										Element:span
											"delete_on_termination"
										Element:span
											:
										Element:span
											false
										Element:span
											}
										Element:span
											],
										Element:span
											"flavorRef"
										Element:span
											:
										Element:span
											"compute1-15"
										Element:span
											,
										Element:span
											"max_count"
										Element:span
											:
										Element:span
											1
										Element:span
											,
										Element:span
											"min_count"
										Element:span
											:
										Element:span
											1
										Element:span
											,
										Element:span
											"networks"
										Element:span
											:[
										Element:span
											{
										Element:span
											"uuid"
										Element:span
											:
										Element:span
											"00000000-0000-0000-0000-000000000000"
										Element:span
											},
										Element:span
											{
										Element:span
											"uuid"
										Element:span
											:
										Element:span
											"11111111-1111-1111-1111-111111111111"
										Element:span
											}
										Element:span
											]
										Element:span
											}
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											server
										Element:td
											Object
										Element:td
											The container for server data.
										Element:tr
										Element:td
											server.
										Element:strong
											id
										Element:td
											Uuid
										Element:td
											The ID of the server.
										Element:tr
										Element:td
											server.
										Element:strong
											links
										Element:td
											Uuid
										Element:td
											An array of the self and bookmark links to the server.
										Element:tr
										Element:td
											server.links.
										Element:strong
											href
										Element:td
											Uuid
										Element:td
											The URL for the server and the associated
										Element:code
											.
										Element:span
											rel
										Element:tr
										Element:td
											server.links.
										Element:strong
											rel
										Element:td
											Uuid
										Element:td
											The descriptive field for the associated
										Element:code
											, which is either
										Element:span
											href
										Element:code
											or
										Element:span
											self
										Element:code
											.
										Element:span
											bookmark
										Element:tr
										Element:td
											server.
										Element:strong
											adminPass
										Element:td
											String
										Element:td
											The password assigned to provide login access to the server.
										Element:tr
										Element:td
											server.
										Element:strong
											OS- DCF:diskConfig
										Element:td
											String
										Element:td
											The disk configuration value. Valid values are
										Element:code
											and
										Element:span
											AUTO
										Element:code
											.
										Element:span
											MANUAL
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Create bootable volume and server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"server"
										Element:span
											:{
										Element:span
											"OS-DCF:diskConfig"
										Element:span
											:
										Element:span
											"MANUAL"
										Element:span
											,
										Element:span
											"id"
										Element:span
											:
										Element:span
											"42f9607f-41c4-48e5-8206-2732aee9456b"
										Element:span
											,
										Element:span
											"links"
										Element:span
											:[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://iad.servers.api.rackspacecloud.com/v2/596067/servers/42f9607f-41c4-48e5-8206-2732aee9456b"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"self"
										Element:span
											},
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://iad.servers.api.rackspacecloud.com/596067/servers/42f9607f-41c4-48e5-8206-2732aee9456b"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											],
										Element:span
											"adminPass"
										Element:span
											:
										Element:span
											"pass"
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Retrieve list of server actions
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								GET
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								os
							Element:span
								-
							Element:span
								instance
							Element:span
								-
							Element:span
								actions
						Node:
						(type) c
						(layer)2
							Element:p
								This operation retrieves a list of available server actions.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200 203
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not accept a request body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Retrieve list of server actions: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											instanceActions
										Element:td
											Array
										Element:td
											An array of instance action containers of action log entries for a server.
										Element:tr
										Element:td
											instanceActions.
										Element:strong
											action
										Element:td
											String
										Element:td
											The type of action taken.
										Element:tr
										Element:td
											instanceActions.
										Element:strong
											instance_uuid
										Element:td
											Uuid
										Element:td
											The server UUID where the action took place.
										Element:tr
										Element:td
											instanceActions.
										Element:strong
											message
										Element:td
											Uuid
										Element:td
											The action log message, if any.
										Element:tr
										Element:td
											instanceActions.
										Element:strong
											project_id
										Element:td
											Uuid
										Element:td
											The project id.
										Element:tr
										Element:td
											instanceActions.
										Element:strong
											request_id
										Element:td
											Uuid
										Element:td
											The action request id.
										Element:tr
										Element:td
											instanceActions.
										Element:strong
											start_time
										Element:td
											Datetime
										Element:td
											The date and time that the actin began.
										Element:tr
										Element:td
											instanceActions.
										Element:strong
											user_id
										Element:td
											String
										Element:td
											The id of the user who requested the action.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Retrieve list of server actions: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"instanceActions"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"action"
										Element:span
											:
										Element:span
											"reboot"
										Element:span
											,
										Element:span
											"instance_uuid"
										Element:span
											:
										Element:span
											"86cf2416-aaa7-4579-a4d7-0bfe42bfa8ff"
										Element:span
											,
										Element:span
											"message"
										Element:span
											:
										Element:span
											null
										Element:span
											,
										Element:span
											"project_id"
										Element:span
											:
										Element:span
											"453265"
										Element:span
											,
										Element:span
											"request_id"
										Element:span
											:
										Element:span
											"req-7b6f6a5e-daf7-483e-aea5-a11993d1d357"
										Element:span
											,
										Element:span
											"start_time"
										Element:span
											:
										Element:span
											"2013-08-15T21:40:42.000000"
										Element:span
											,
										Element:span
											"user_id"
										Element:span
											:
										Element:span
											"35746"
										Element:span
											},
										Element:span
											{
										Element:span
											"action"
										Element:span
											:
										Element:span
											"create"
										Element:span
											,
										Element:span
											"instance_uuid"
										Element:span
											:
										Element:span
											"86cf2416-aaa7-4579-a4d7-0bfe42bfa8ff"
										Element:span
											,
										Element:span
											"message"
										Element:span
											:
										Element:span
											null
										Element:span
											,
										Element:span
											"project_id"
										Element:span
											:
										Element:span
											"453265"
										Element:span
											,
										Element:span
											"request_id"
										Element:span
											:
										Element:span
											"req-920c6627-c8c9-4d02-9d3d-81917e5586df"
										Element:span
											,
										Element:span
											"start_time"
										Element:span
											:
										Element:span
											"2013-07-12T21:35:37.000000"
										Element:span
											,
										Element:span
											"user_id"
										Element:span
											:
										Element:span
											"35746"
										Element:span
											}
										Element:span
											]
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Retrieve log details for a specified server action
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								GET
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								os
							Element:span
								-
							Element:span
								instance
							Element:span
								-
							Element:span
								actions
							Element:span
								/
							Element:span
								{
							Element:span
								request
							Element:span
								-
							Element:span
								id
							Element:span
								}
						Node:
						(type) c
						(layer)2
							Element:p
								This operation retrieves the log details for a specified server action.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200 203
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
										Element:tr
										Element:td
											{request_id}
										Element:td
											Uuid
										Element:td
											The server action request id.
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not accept a request body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Retrieve log details for a specified server action: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											instanceAction
										Element:td
											Object
										Element:td
											An container of instance action log entry data for a specific server and action.
										Element:tr
										Element:td
											instanceAction.
										Element:strong
											action
										Element:td
											String
										Element:td
											The type of action taken.
										Element:tr
										Element:td
											instanceAction.
										Element:strong
											instance_uuid
										Element:td
											Uuid
										Element:td
											The server UUID where the action took place.
										Element:tr
										Element:td
											instanceAction.
										Element:strong
											message
										Element:td
											Uuid
										Element:td
											The action log message, if any.
										Element:tr
										Element:td
											instanceAction.
										Element:strong
											project_id
										Element:td
											Uuid
										Element:td
											The project id.
										Element:tr
										Element:td
											instanceAction.
										Element:strong
											request_id
										Element:td
											Uuid
										Element:td
											The action request id.
										Element:tr
										Element:td
											instanceAction.request_id
										Element:td
											Datetime
										Element:td
											The date and time that the actin began.
										Element:tr
										Element:td
											instanceAction.
										Element:strong
											user_id
										Element:td
											String
										Element:td
											The id of the user who requested the action.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Retrieve log details for a specified server action: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"instanceAction"
										Element:span
											:
										Element:span
											{
										Element:span
											"action"
										Element:span
											:
										Element:span
											"create"
										Element:span
											,
										Element:span
											"instance_uuid"
										Element:span
											:
										Element:span
											"86cf2416-aaa7-4579-a4d7-0bfe42bfa8ff"
										Element:span
											,
										Element:span
											"message"
										Element:span
											:
										Element:span
											null
										Element:span
											,
										Element:span
											"project_id"
										Element:span
											:
										Element:span
											"453265"
										Element:span
											,
										Element:span
											"request_id"
										Element:span
											:
										Element:span
											"req-920c6627-c8c9-4d02-9d3d-81917e5586df"
										Element:span
											,
										Element:span
											"start_time"
										Element:span
											:
										Element:span
											"2013-07-12T21:35:37.000000"
										Element:span
											,
										Element:span
											"user_id"
										Element:span
											:
										Element:span
											"35746"
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Change password for specified server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								action
						Node:
						(type) c
						(layer)2
							Element:p
								This operation changes the admin password, or root password, for the specified server.
						Node:
						(type) c
						(layer)2
							Element:p
								Note
						Node:
						(type) c
						(layer)2
							Element:p
								OnMetal servers must be created using ssh key pairs. You should neither use nor modify the administrator password generated by the server build operation.
						Node:
						(type) c
						(layer)2
							Element:p
								In the URI, specify the target server ID.
						Node:
						(type) c
						(layer)2
							Element:p
								In the request body, specify the action
							Element:code
								, followed by the
							Element:span
								changePassword
							Element:code
								attribute with the new password.
							Element:span
								adminPass
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Successful
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											changePassword
										Element:td
											Object
										Element:td
											Specification of the changePassword action for the specified server
										Element:tr
										Element:td
										Element:strong
											changePassword
											.adminPass
										Element:td
											Object
										Element:td
											The new adminstrator password. Though Rackspace does not enforce complexity requirements for the password, the operating system might. If the password is not complex enough, the server might enter an ERROR state.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Change password for specified server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"changePassword"
										Element:span
											:
										Element:span
											{
										Element:span
											"adminPass"
										Element:span
											:
										Element:span
											"Test1234"
										Element:span
											}
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Change password for specified server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											No
										Element:span
											Content
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											0
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											04
										Element:span
											Dec
										Element:span
											2014
										Element:span
											21
										Element:span
											:
										Element:span
											45
										Element:span
											:
										Element:span
											47
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Reboot specified server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								action
						Node:
						(type) c
						(layer)2
							Element:p
								This operation performs a soft or hard reboot of the specified server. A soft reboot is a graceful shutdown and restart of your server's operating system. A hard reboot power cycles your server, which performs an immediate shutdown and restart.
						Node:
						(type) c
						(layer)2
							Element:p
								Specify the target server ID in the URI.
						Node:
						(type) c
						(layer)2
							Element:p
								In the request body, specify the action
							Element:code
								, optionally followed by the
							Element:span
								reboot
							Element:code
								attribute, either
							Element:span
								type
							Element:code
								or
							Element:span
								HARD
							Element:code
								.
							Element:span
								SOFT
						Node:
						(type) c
						(layer)2
							Element:p
								If you do not include the type attribute, a soft reboot is performed by default.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Successful
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											reboot
										Element:td
											Object
										Element:td
											Specification of the reboot action for the specified server.
										Element:tr
										Element:td
											reboot.
										Element:strong
											type
										Element:td
											Object
										Element:em
											(Optional)
										Element:td
											The type of reboot. Valid reboot types are: SOFTThe operating system is signaled to restart, which allows for a graceful shutdown and restart of all processes. HARDPower cycles your server, which performs an immediate shutdown and restart.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Reboot specified server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"reboot"
										Element:span
											:
										Element:span
											{
										Element:span
											"type"
										Element:span
											:
										Element:span
											"HARD"
										Element:span
											}
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Reboot specified server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											No
										Element:span
											Content
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											0
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											04
										Element:span
											Dec
										Element:span
											2014
										Element:span
											21
										Element:span
											:
										Element:span
											45
										Element:span
											:
										Element:span
											47
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Rebuild specified server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								action
						Node:
						(type) c
						(layer)2
							Element:p
								This operation rebuilds the specified server.
						Node:
						(type) c
						(layer)2
							Element:p
								The rebuild operation removes all data on the server and replaces it with the specified image. The serverID and all IP addresses remain the same. If you specify name, metadata, accessIPv4, or accessIPv6 in the rebuild request, new values replace existing values. Otherwise, these values do not change. You can inject data into the file system during the rebuild.
						Node:
						(type) c
						(layer)2
							Element:p
								Note
						Node:
						(type) c
						(layer)2
							Element:p
								This operation is not available for OnMetal servers.
						Node:
						(type) c
						(layer)2
							Element:p
								Specify the target server ID in the URI.
						Node:
						(type) c
						(layer)2
							Element:p
								In the request body, specify the rebuild action followed by various attributes, listed in the following parameters section.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											rebuild
										Element:td
											Object
										Element:td
											Specification of the rebuild action for the specified server.
										Element:tr
										Element:td
											rebuild.
										Element:strong
											name
										Element:td
											Object
										Element:em
											(Optional)
										Element:td
											The new name for the server.
										Element:tr
										Element:td
											rebuild.
										Element:strong
											imageRef
										Element:td
											Object
										Element:td
											The image ID.
										Element:tr
										Element:td
											rebuild.
										Element:strong
											accessIPv4
										Element:td
											Object
										Element:em
											(Optional)
										Element:td
											The IP version 4 address.
										Element:tr
										Element:td
											rebuild.
										Element:strong
											accessIPv6
										Element:td
											Object
										Element:em
											(Optional)
										Element:td
											The IP version 6 address.
										Element:tr
										Element:td
											rebuild.
										Element:strong
											adminPass
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The password assigned to provide login access to the server.
										Element:tr
										Element:td
											rebuild.
										Element:strong
											metadata
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											A metadata key and value pair.
										Element:tr
										Element:td
											rebuild.
										Element:strong
											personality
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The file path and file contents.
										Element:tr
										Element:td
											rebuild.
										Element:strong
											OS- DCF:diskConfig
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The disk configuration value. Valid values are: AUTO:The server is built with a single partition which is the size of the target flavor disk. The file system is automatically adjusted to fit the entire partition. This keeps things simple and automated. AUTO is valid only for images and servers with a single partition that use the EXT3 file system. This is the default setting for applicable Rackspace base images. MANUAL:The server is built using the partition scheme and file system of the source image. If the target flavor disk is larger, the remaining disk space is left unpartitioned. This enables images to have non-EXT3 file systems, multiple partitions, and so on, and it enables you to manage the disk configuration.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Rebuild specified server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"rebuild"
										Element:span
											:{
										Element:span
											"name"
										Element:span
											:
										Element:span
											"new-server-test"
										Element:span
											,
										Element:span
											"imageRef"
										Element:span
											:
										Element:span
											"d42f821e-c2d1-4796-9f07-af5ed7912d0e"
										Element:span
											,
										Element:span
											"OS-DCF:diskConfig"
										Element:span
											:
										Element:span
											"AUTO"
										Element:span
											,
										Element:span
											"adminPass"
										Element:span
											:
										Element:span
											"diane123"
										Element:span
											,
										Element:span
											"metadata"
										Element:span
											:
										Element:span
											{
										Element:span
											"My Server Name"
										Element:span
											:
										Element:span
											"Apache1"
										Element:span
											},
										Element:span
											"personality"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"path"
										Element:span
											:
										Element:span
											"/etc/banner.txt"
										Element:span
											,
										Element:span
											"contents"
										Element:span
											:
										Element:span
											"ICAgICAgDQoiQSBjbG91ZCBkb2VzIG5vdCBrbm93IHdoeSBp dCBtb3ZlcyBpbiBqdXN0IHN1Y2ggYSBkaXJlY3Rpb24gYW5k IGF0IHN1Y2ggYSBzcGVlZC4uLkl0IGZlZWxzIGFuIGltcHVs c2lvbi4uLnRoaXMgaXMgdGhlIHBsYWNlIHRvIGdvIG5vdy4g QnV0IHRoZSBza3kga25vd3MgdGhlIHJlYXNvbnMgYW5kIHRo ZSBwYXR0ZXJucyBiZWhpbmQgYWxsIGNsb3VkcywgYW5kIHlv dSB3aWxsIGtub3csIHRvbywgd2hlbiB5b3UgbGlmdCB5b3Vy c2VsZiBoaWdoIGVub3VnaCB0byBzZWUgYmV5b25kIGhvcml6 b25zLiINCg0KLVJpY2hhcmQgQmFjaA=="
										Element:span
											}
										Element:span
											]
										Element:span
											}
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											server
										Element:td
											Object
										Element:td
											The container for server data.
										Element:tr
										Element:td
											server.
										Element:strong
											id
										Element:td
											Uuid
										Element:td
											The ID of the server.
										Element:tr
										Element:td
											server.
										Element:strong
											links
										Element:td
											Uuid
										Element:td
											An array of the self and bookmark links to the server.
										Element:tr
										Element:td
											server.links.
										Element:strong
											href
										Element:td
											Uuid
										Element:td
											The URL for the server and the associated
										Element:code
											.
										Element:span
											rel
										Element:tr
										Element:td
											server.links.
										Element:strong
											rel
										Element:td
											Uuid
										Element:td
											The descriptive field for the associated
										Element:code
											, which is either
										Element:span
											href
										Element:code
											or
										Element:span
											self
										Element:code
											.
										Element:span
											bookmark
										Element:tr
										Element:td
											server.
										Element:strong
											adminPass
										Element:td
											String
										Element:td
											The password assigned to provide login access to the server.
										Element:tr
										Element:td
											server.
										Element:strong
											OS- DCF:diskConfig
										Element:td
											String
										Element:td
											The disk configuration value. Valid values are
										Element:code
											and
										Element:span
											AUTO
										Element:code
											.
										Element:span
											MANUAL
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Rebuild specified server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											1250
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											04
										Element:span
											Dec
										Element:span
											2014
										Element:span
											19
										Element:span
											:
										Element:span
											41
										Element:span
											:
										Element:span
											58
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											8
										Element:span
											c905dfe
										Element:span
											-
										Element:span
											2
										Element:span
											c9a
										Element:span
											-
										Element:span
											42
										Element:span
											d9
										Element:span
											-
										Element:span
											8
										Element:span
											e53
										Element:span
											-
										Element:span
											4478
										Element:span
											e2813c75
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"server"
										Element:span
											:
										Element:span
											{
										Element:span
											"OS-DCF:diskConfig"
										Element:span
											:
										Element:span
											"AUTO"
										Element:span
											,
										Element:span
											"accessIPv4"
										Element:span
											:
										Element:span
											"50.56.175.199"
										Element:span
											,
										Element:span
											"accessIPv6"
										Element:span
											:
										Element:span
											"2001:4800:780e:0510:d87b:9cbc:ff04:35f7"
										Element:span
											,
										Element:span
											"addresses"
										Element:span
											:
										Element:span
											{
										Element:span
											"private"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"10.180.12.68"
										Element:span
											,
										Element:span
											"version"
										Element:span
											:
										Element:span
											4
										Element:span
											}
										Element:span
											],
										Element:span
											"public"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"2001:4800:780e:0510:d87b:9cbc:ff04:35f7"
										Element:span
											,
										Element:span
											"version"
										Element:span
											:
										Element:span
											6
										Element:span
											},
										Element:span
											{
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"50.56.175.199"
										Element:span
											,
										Element:span
											"version"
										Element:span
											:
										Element:span
											4
										Element:span
											}
										Element:span
											]
										Element:span
											},
										Element:span
											"adminPass"
										Element:span
											:
										Element:span
											"diane123"
										Element:span
											,
										Element:span
											"config_drive"
										Element:span
											:
										Element:span
											""
										Element:span
											,
										Element:span
											"created"
										Element:span
											:
										Element:span
											"2012-07-23T20:20:04Z"
										Element:span
											,
										Element:span
											"flavor"
										Element:span
											:
										Element:span
											{
										Element:span
											"id"
										Element:span
											:
										Element:span
											"6"
										Element:span
											,
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/123456/flavors/6"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											]
										Element:span
											},
										Element:span
											"hostId"
										Element:span
											:
										Element:span
											"791b847459d001f02f65f23ea82ae32c4b320ad34a3f892b7593c01f"
										Element:span
											,
										Element:span
											"id"
										Element:span
											:
										Element:span
											"32406068-8539-40ab-bdd3-8140d30823ad"
										Element:span
											,
										Element:span
											"image"
										Element:span
											:
										Element:span
											{
										Element:span
											"id"
										Element:span
											:
										Element:span
											"d42f821e-c2d1-4796-9f07-af5ed7912d0e"
										Element:span
											,
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/123456/images/d42f821e-c2d1-4796-9f07-af5ed7912d0e"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											]
										Element:span
											},
										Element:span
											"links"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/v2/123456/servers/32406068-8539-40ab-bdd3-8140d30823ad"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"self"
										Element:span
											},
										Element:span
											{
										Element:span
											"href"
										Element:span
											:
										Element:span
											"https://dfw.servers.api.rackspacecloud.com/123456/servers/32406068-8539-40ab-bdd3-8140d30823ad"
										Element:span
											,
										Element:span
											"rel"
										Element:span
											:
										Element:span
											"bookmark"
										Element:span
											}
										Element:span
											],
										Element:span
											"metadata"
										Element:span
											:
										Element:span
											{
										Element:span
											"My Server Name"
										Element:span
											:
										Element:span
											"Apache1"
										Element:span
											},
										Element:span
											"name"
										Element:span
											:
										Element:span
											"new-server-test"
										Element:span
											,
										Element:span
											"progress"
										Element:span
											:
										Element:span
											0
										Element:span
											,
										Element:span
											"status"
										Element:span
											:
										Element:span
											"REBUILD"
										Element:span
											,
										Element:span
											"tenant_id"
										Element:span
											:
										Element:span
											"123456"
										Element:span
											,
										Element:span
											"updated"
										Element:span
											:
										Element:span
											"2012-07-26T16:09:16Z"
										Element:span
											,
										Element:span
											"user_id"
										Element:span
											:
										Element:span
											"170454"
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Resize specified server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								action
						Node:
						(type) c
						(layer)2
							Element:p
								This operation converts an existing Standard server to a different flavor, which scales the server up or down. The original server is saved for a period of time to allow roll back if a problem occurs. You should test and explicitly confirm all resizes. When you do so, the original server is removed. All resizes are automatically confirmed after 24 hours if you do not explicitly confirm or revert the resize.
						Node:
						(type) c
						(layer)2
							Element:p
								Note
						Node:
						(type) c
						(layer)2
							Element:p
								This operation is not available for OnMetal servers.
						Node:
						(type) c
						(layer)2
							Element:p
								Warning
						Node:
						(type) c
						(layer)2
							Element:p
								The following list shows the availability of the resize operation for the flavor classes and server types:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								Standard servers: can be resized to both smaller and larger sized servers.
							Element:li
								General Purpose (formerly Performance 1) servers: can be resized to only larger sized servers.
							Element:li
								All other flavors, OnMetal servers, and any server that boots from CBS volume â€“ cannot be resized.
						Node:
						(type) c
						(layer)2
							Element:p
								If you have a Compute, Memory, or IO flavor server, and you need to change the size of your data disk(s), you will need to:
						Node:
						(type) c
						(layer)2
							Element:ol
							Element:li
								Image your system disk.
							Element:li
								Back-up your data disk(s), using Cloud Backup or Cloud Block Storage.
							Element:li
								Create a new server with the desired size and flavor class, using your image.
							Element:li
								Add your backed-up data to the new data disk(s).
							Element:li
								Delete the old server, once you are satisfied with the new server.
						Node:
						(type) c
						(layer)2
							Element:p
								Specify the target server ID in the URI.
						Node:
						(type) c
						(layer)2
							Element:p
								In the request body, specify the
							Element:code
								action followed by attributes.
							Element:span
								resize
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Successful
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											resize
										Element:td
											Object
										Element:td
											Specification of the resize action for the specified server.
										Element:tr
										Element:td
											resize.
										Element:strong
											flavorRef
										Element:td
											Object
										Element:td
											The flavorRef for the new server.
										Element:tr
										Element:td
											resize.
										Element:strong
											OS- DCF:diskConfig
										Element:td
											String
										Element:em
											(Optional)
										Element:td
											The disk configuration value. Valid values are: AUTO:The server is built with a single partition which is the size of the target flavor disk. The file system is automatically adjusted to fit the entire partition. This keeps things simple and automated. AUTO is valid only for images and servers with a single partition that use the EXT3 file system. This is the default setting for applicable Rackspace base images. MANUAL:The server is built using the partition scheme and file system of the source image. If the target flavor disk is larger, the remaining disk space is left unpartitioned. This enables images to have non-EXT3 file systems, multiple partitions, and so on, and it enables you to manage the disk configuration.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Resize specified server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"resize"
										Element:span
											:
										Element:span
											{
										Element:span
											"flavorRef"
										Element:span
											:
										Element:span
											"3"
										Element:span
											,
										Element:span
											"OS-DCF:diskConfig"
										Element:span
											:
										Element:span
											"manual"
										Element:span
											}
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Resize specified server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											No
										Element:span
											Content
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											0
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											04
										Element:span
											Dec
										Element:span
											2014
										Element:span
											21
										Element:span
											:
										Element:span
											45
										Element:span
											:
										Element:span
											47
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Confirm server resize for specified server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								action
						Node:
						(type) c
						(layer)2
							Element:p
								This operation confirms the server resize for the specified server.
						Node:
						(type) c
						(layer)2
							Element:p
								During a resize operation, the original server is saved for a period of time to allow roll back if a problem occurs. After you verify that the newly resized server works properly, use this operation to confirm the resize. After you confirm the resize, the original server is removed, and you cannot roll back to that server. All resizes are automatically confirmed after 24 hours, if you do not explicitly confirm, or revert, the resize.
						Node:
						(type) c
						(layer)2
							Element:p
								Note
						Node:
						(type) c
						(layer)2
							Element:p
								This operation is not available for OnMetal servers.
						Node:
						(type) c
						(layer)2
							Element:p
								Specify the target server ID in the URI.
						Node:
						(type) c
						(layer)2
							Element:p
								In the request body, specify the
							Element:code
								action.
							Element:span
								confirmResize
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Successful
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											confirmResize
										Element:td
											Object
										Element:td
											Specification of the confirmResize action for the specified server.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Confirm server resize for specified server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"confirmResize"
										Element:span
											:
										Element:span
											null
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Confirm server resize for specified server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											No
										Element:span
											Content
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											0
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											04
										Element:span
											Dec
										Element:span
											2014
										Element:span
											21
										Element:span
											:
										Element:span
											45
										Element:span
											:
										Element:span
											47
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Revert server resize for specified server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								action
						Node:
						(type) c
						(layer)2
							Element:p
								This operation reverts the server resize for the specified server.
						Node:
						(type) c
						(layer)2
							Element:p
								During a resize operation, the original server is saved for a period of time to allow for roll back if a problem occurs. If you determine that a problem exists with a newly resized server, use this operation to revert the resize and roll back to the original server. All resizes are automatically confirmed after 24 hours if you do not explicitly confirm or revert the resize.
						Node:
						(type) c
						(layer)2
							Element:p
								Note
						Node:
						(type) c
						(layer)2
							Element:p
								This operation is not available for OnMetal servers.
						Node:
						(type) c
						(layer)2
							Element:p
								Specify the target server ID in the URI.
						Node:
						(type) c
						(layer)2
							Element:p
								In the request body, specify the
							Element:code
								action.
							Element:span
								revertResize
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Successful
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											revertResize
										Element:td
											Object
										Element:td
											Specification of the revertResize action for the specified server.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Revert server resize for specified server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"revertResize"
										Element:span
											:
										Element:span
											null
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Revert server resize for specified server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											No
										Element:span
											Content
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											0
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											04
										Element:span
											Dec
										Element:span
											2014
										Element:span
											21
										Element:span
											:
										Element:span
											45
										Element:span
											:
										Element:span
											47
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Create image of specified server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								action
						Node:
						(type) c
						(layer)2
							Element:p
								This operation creates a new image for a specified server. Once complete, you can use your new image to rebuild or create servers. The full URL to the newly created image is returned through the
							Element:code
								header. You can retrieve additional attributes for the image including its creation status by issuing a subsequent
							Element:span
								Location
							Element:code
								on that URL.
							Element:span
								GET
						Node:
						(type) c
						(layer)2
							Element:p
								Image creation is an asynchronous operation, so coordinating the creation with data quiescence, and so on, is currently not possible.
						Node:
						(type) c
						(layer)2
							Element:p
								Note
						Node:
						(type) c
						(layer)2
							Element:p
								This operation is not available for OnMetal servers.
						Node:
						(type) c
						(layer)2
							Element:p
								In addition to creating images manually, you may also schedule images of your server automatically.
						Node:
						(type) c
						(layer)2
							Element:p
								Specify the target server ID in the URI.
						Node:
						(type) c
						(layer)2
							Element:p
								In the request body, specify the
							Element:code
								action, followed by attributes.
							Element:span
								createImage
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Successful
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											createImage
										Element:td
											Object
										Element:td
											Specification of the createImage action for the specified server.
										Element:tr
										Element:td
											createImage.
										Element:strong
											name
										Element:td
											String
										Element:td
											The name of the new image.
										Element:tr
										Element:td
											createImage.
										Element:strong
											metadata
										Element:td
											Object
										Element:td
											The container of the metadata for the new image.
										Element:tr
										Element:td
											createImage.
										Element:strong
											meta
										Element:td
											Object
										Element:td
											A metadata keypair, specifying ImageType or ImageVersion, for example.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Create image of specified server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"createImage"
										Element:span
											:
										Element:span
											{
										Element:span
											"name"
										Element:span
											:
										Element:span
											"new-image"
										Element:span
											,
										Element:span
											"metadata"
										Element:span
											:
										Element:span
											{
										Element:span
											"ImageType"
										Element:span
											:
										Element:span
											"Gold"
										Element:span
											,
										Element:span
											"ImageVersion"
										Element:span
											:
										Element:span
											"2.0"
										Element:span
											}
										Element:span
											}
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Create image of specified server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											No
										Element:span
											Content
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											0
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											04
										Element:span
											Dec
										Element:span
											2014
										Element:span
											21
										Element:span
											:
										Element:span
											45
										Element:span
											:
										Element:span
											47
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Rescue specified server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								action
						Node:
						(type) c
						(layer)2
							Element:p
								This operation puts a server into rescue mode.
						Node:
						(type) c
						(layer)2
							Element:p
								You might enter rescue mode to reboot a virtual machine (VM) in rescue mode so that you can access the VM with a new root password and fix any file system and configuration errors.
						Node:
						(type) c
						(layer)2
							Element:p
								Or you might enter rescue mode to debug system issues that prevent you from booting a server to a usable state.
						Node:
						(type) c
						(layer)2
							Element:p
								When you place a server in rescue mode, the following events occur:
						Node:
						(type) c
						(layer)2
							Element:ol
							Element:li
							Element:p
								The VM is shut down.
							Element:li
							Element:p
								A new VM is created with the following images attached:
							Element:p
							Element:strong
								Primary image
								Cleanly running VM based on the image from which the original server was created, with a random password. This password is returned to you in a response to issuing the rescue mode API call. Use this clean image to boot the server and fix any problems.
							Element:p
							Element:strong
								Secondary disk
								Image of the VM that needs to be rescued.
						Node:
						(type) c
						(layer)2
							Element:p
								When you put a server into rescue mode, you cannot use it until its status goes from
							Element:code
								to
							Element:span
								ACTIVE
							Element:code
								. This does not happen immediately.
							Element:span
								RESCUE
						Node:
						(type) c
						(layer)2
							Element:p
								For a full list of possible server status values, see
							Element:a
								.
							Element:span
								Server Status
						Node:
						(type) c
						(layer)2
							Element:p
								Note
						Node:
						(type) c
						(layer)2
							Element:p
								The SSH server key will be different on the rescue image than on the original server.
						Node:
						(type) c
						(layer)2
							Element:p
								Specify the target server ID in the URI.
						Node:
						(type) c
						(layer)2
							Element:p
								After you resolve any problems and reboot the rescued server, you can unrescue the server. The unrescue operation restores the repaired image to running state with its original password.
						Node:
						(type) c
						(layer)2
							Element:p
								In the request body, specify the
							Element:code
								action.
							Element:span
								rescue
						Node:
						(type) c
						(layer)2
							Element:p
								Note
						Node:
						(type) c
						(layer)2
							Element:p
								If you use
							Element:code
								in the request body, the API will attempt to build the rescue mode server from whatever the image_base_image_ref field is set to in Nova DB (the original image used to build the server, normally).
							Element:span
								{"rescue":
							Element:span
								"none"}
						Node:
						(type) c
						(layer)2
							Element:p
								If, instead, you use
							Element:code
								, the API uses the specified image for the rescue mode instance. This is extremely useful if the image originally used to build the server is now either non-functional or has been deleted.
							Element:span
								{"rescue":
							Element:span
								{"rescue_image_ref":
							Element:span
								"
							Element:span
								<
							Element:span
								imageID
							Element:span
								>
							Element:span
								"}}
						Node:
						(type) c
						(layer)2
							Element:p
								The following extension provides additional rescue with image functionality.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											rescue
										Element:td
											Object
										Element:td
											Specification of the rescue action for the specified server.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Rescue specified server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"rescue"
										Element:span
											:
										Element:span
											"none"
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Rescue specified server with image: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"rescue"
										Element:span
											:
										Element:span
											{
										Element:span
											"rescue_image_ref"
										Element:span
											:
										Element:span
											"c11e2d37-bd93-44f0-b17e-bb87d1022975"
										Element:span
											}
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											adminPass
										Element:td
											Object
										Element:td
											The new adminstrator password.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Rescue specified server (same for both requests): JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											1250
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											10
										Element:span
											Dec
										Element:span
											2014
										Element:span
											19
										Element:span
											:
										Element:span
											43
										Element:span
											:
										Element:span
											18
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											8
										Element:span
											c905dfe
										Element:span
											-
										Element:span
											2
										Element:span
											c9a
										Element:span
											-
										Element:span
											17
										Element:span
											e5
										Element:span
											-
										Element:span
											8
										Element:span
											e53
										Element:span
											-
										Element:span
											4478
										Element:span
											e2813c75
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"adminPass"
										Element:span
											:
										Element:span
											"m7UKdGiKFpqM"
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Unrescue specified server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								action
						Node:
						(type) c
						(layer)2
							Element:p
								This operation takes the specified server out of rescue mode.
						Node:
						(type) c
						(layer)2
							Element:p
								After you resolve any problems and reboot a rescued server, you can unrescue the server. Specify the
							Element:code
								action in the request body. When you unrescue the server, the repaired image is restored to its running state with your original password.
							Element:span
								unrescue
						Node:
						(type) c
						(layer)2
							Element:p
								You can exit rescue mode at any time.
						Node:
						(type) c
						(layer)2
							Element:p
								Specify the target server ID in the URI.
						Node:
						(type) c
						(layer)2
							Element:p
								In the request body, specify the
							Element:code
								action.
							Element:span
								unrescue
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Successful
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											unrescue
										Element:td
											Object
										Element:td
											Specification of the unrescue action for the specified server.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Unrescue specified server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"unrescue"
										Element:span
											:
										Element:span
											null
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Unrescue specified server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											No
										Element:span
											Content
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											0
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											04
										Element:span
											Dec
										Element:span
											2014
										Element:span
											21
										Element:span
											:
										Element:span
											45
										Element:span
											:
										Element:span
											47
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Lock specified server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								action
						Node:
						(type) c
						(layer)2
							Element:p
								This operation locks a server that you own.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											lock
										Element:td
											Object
										Element:td
											Specification of the lock action for the specified server. The key pair value is always null.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Lock specified server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"lock"
										Element:span
											:
										Element:span
											"null"
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not return a response body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Lock specified server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											1250
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											10
										Element:span
											Dec
										Element:span
											2014
										Element:span
											19
										Element:span
											:
										Element:span
											43
										Element:span
											:
										Element:span
											18
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											8
										Element:span
											c905dfe
										Element:span
											-
										Element:span
											2
										Element:span
											c9a
										Element:span
											-
										Element:span
											17
										Element:span
											e5
										Element:span
											-
										Element:span
											8
										Element:span
											e53
										Element:span
											-
										Element:span
											4478
										Element:span
											e2813c75
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Unlock specified server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								action
						Node:
						(type) c
						(layer)2
							Element:p
								This operation unlocks a locked server.
						Node:
						(type) c
						(layer)2
							Element:p
								Note
						Node:
						(type) c
						(layer)2
							Element:p
								You must have administrator privileges, assigned by the cloud provider, to unlock a server that was locked by an administrator.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											unlock
										Element:td
											Object
										Element:td
											Specification of the unlock action for the specified server. The key pair value is always null.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Unlock specified server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"unlock"
										Element:span
											:
										Element:span
											"null"
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not return a response body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Unlock specified server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											1250
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											10
										Element:span
											Dec
										Element:span
											2014
										Element:span
											19
										Element:span
											:
										Element:span
											43
										Element:span
											:
										Element:span
											18
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											8
										Element:span
											c905dfe
										Element:span
											-
										Element:span
											2
										Element:span
											c9a
										Element:span
											-
										Element:span
											17
										Element:span
											e5
										Element:span
											-
										Element:span
											8
										Element:span
											e53
										Element:span
											-
										Element:span
											4478
										Element:span
											e2813c75
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Start specified server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								action
						Node:
						(type) c
						(layer)2
							Element:p
								This operation starts a stopped server, and changes its status to
							Element:code
								.
							Element:span
								ACTIVE
						Node:
						(type) c
						(layer)2
							Element:p
								Note
						Node:
						(type) c
						(layer)2
							Element:p
								Prior to running this command, the server status must be
							Element:code
								.
							Element:span
								SHUTTOFF
						Node:
						(type) c
						(layer)2
							Element:p
								If the server status is
							Element:code
								, you must have administrator privileges to start the server.
							Element:span
								LOCKED
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											os-start
										Element:td
											Object
										Element:td
											Specification of the start action for the specified server. The key pair value is always null.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Start specified server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"os-start"
										Element:span
											:
										Element:span
											"null"
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not return a response body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Start specified server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											1250
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											10
										Element:span
											Dec
										Element:span
											2014
										Element:span
											19
										Element:span
											:
										Element:span
											43
										Element:span
											:
										Element:span
											18
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											8
										Element:span
											c905dfe
										Element:span
											-
										Element:span
											2
										Element:span
											c9a
										Element:span
											-
										Element:span
											17
										Element:span
											e5
										Element:span
											-
										Element:span
											8
										Element:span
											e53
										Element:span
											-
										Element:span
											4478
										Element:span
											e2813c75
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Stop specified server
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								action
						Node:
						(type) c
						(layer)2
							Element:p
								This operation stops a running server, and changes the server status to
							Element:code
								and changes the clean_shutdown parameter to
							Element:span
								SHUTOFF
							Element:code
								.
							Element:span
								TRUE
						Node:
						(type) c
						(layer)2
							Element:p
								Note
						Node:
						(type) c
						(layer)2
							Element:p
								Prior to running this command, the server status must be either
							Element:code
								or
							Element:span
								ACTIVE
							Element:code
								.
							Element:span
								ERROR
						Node:
						(type) c
						(layer)2
							Element:p
								If the server status is
							Element:code
								, you must have administrator privileges to stop the server.
							Element:span
								LOCKED
						Node:
						(type) c
						(layer)2
							Element:p
								Warning
						Node:
						(type) c
						(layer)2
							Element:p
								The owner of the server will continue to be billed even if a server is stopped. To stop getting billed, delete the server
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								202
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											os-stop
										Element:td
											Object
										Element:td
											Specification of the stop action for the specified server. The key pair value is always null.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Stop specified server: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"os-stop"
										Element:span
											:
										Element:span
											"null"
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not return a response body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Stop specified server: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											202
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											1250
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Thu
										Element:span
											,
										Element:span
											10
										Element:span
											Dec
										Element:span
											2014
										Element:span
											19
										Element:span
											:
										Element:span
											43
										Element:span
											:
										Element:span
											18
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											8
										Element:span
											c905dfe
										Element:span
											-
										Element:span
											2
										Element:span
											c9a
										Element:span
											-
										Element:span
											17
										Element:span
											e5
										Element:span
											-
										Element:span
											8
										Element:span
											e53
										Element:span
											-
										Element:span
											4478
										Element:span
											e2813c75
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Retrieves list of server addresses
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								GET
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								ips
						Node:
						(type) c
						(layer)2
							Element:p
								This operation retrieves a list of all server and network addresses associated with the specified server.
						Node:
						(type) c
						(layer)2
							Element:p
								In the URI, specify the target server ID.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200 203
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not accept a request body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Retrieves list of server addresses: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											addresses
										Element:td
											Object
										Element:td
											A container for one or more server details to be updated.
										Element:tr
										Element:td
											addresses.
										Element:strong
											nettype
										Element:td
											Object
										Element:td
											An array of
										Element:code
											or
										Element:span
											private
										Element:code
											network address containers.
										Element:span
											public
										Element:tr
										Element:td
											addresses.nettype.
										Element:strong
											addr
										Element:td
											Object
										Element:td
											The IP address.
										Element:tr
										Element:td
											addresses.nettype.
										Element:strong
											version
										Element:td
											Object
										Element:td
											The IP address version, either
										Element:code
											or
										Element:span
											4
										Element:code
											.
										Element:span
											6
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Retrieves list of server addresses: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											200
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											191
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Fri
										Element:span
											,
										Element:span
											12
										Element:span
											Dec
										Element:span
											2014
										Element:span
											16
										Element:span
											:
										Element:span
											37
										Element:span
											:
										Element:span
											29
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											X
										Element:span
											-
										Element:span
											Compute
										Element:span
											-
										Element:span
											Request
										Element:span
											-
										Element:span
											Id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											624
										Element:span
											fa036
										Element:span
											-
										Element:span
											8
										Element:span
											f73
										Element:span
											-
										Element:span
											4
										Element:span
											ca9
										Element:span
											-
										Element:span
											aa22
										Element:span
											-
										Element:span
											428
										Element:span
											df756c578
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"addresses"
										Element:span
											:
										Element:span
											{
										Element:span
											"public"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"version"
										Element:span
											:
										Element:span
											6
										Element:span
											,
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"2001:4800:7817:0104:7e32:e3ee:ff04:930f"
										Element:span
											},
										Element:span
											{
										Element:span
											"version"
										Element:span
											:
										Element:span
											4
										Element:span
											,
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"23.253.107.140"
										Element:span
											}
										Element:span
											],
										Element:span
											"private"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"version"
										Element:span
											:
										Element:span
											4
										Element:span
											,
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"10.208.196.170"
										Element:span
											}
										Element:span
											]
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Retrieve list of network addresses for server and network
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								GET
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								ips
							Element:span
								/
							Element:span
								{
							Element:span
								network_label
							Element:span
								}
						Node:
						(type) c
						(layer)2
							Element:p
								This operation retrieves a list of all server and network addresses associated with the specified server and network.
						Node:
						(type) c
						(layer)2
							Element:p
								In the URI, specify the target server ID and target network type (
							Element:code
								or
							Element:span
								public
							Element:code
								).
							Element:span
								private
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200 203
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
										Element:tr
										Element:td
											{network_label}
										Element:td
											String
										Element:td
											The network label, such as
										Element:code
											or
										Element:span
											public
										Element:code
											.
										Element:span
											private
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not accept a request body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Retrieves list of network addresses for server and network: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											nettype
										Element:td
											Array
										Element:td
											An array of
										Element:code
											or
										Element:span
											private
										Element:code
											network address containers.
										Element:span
											public
										Element:tr
										Element:td
											nettype.
										Element:strong
											addr
										Element:td
											Object
										Element:td
											The IP address.
										Element:tr
										Element:td
											nettype.
										Element:strong
											version
										Element:td
											Object
										Element:td
											The IP address version, either
										Element:code
											or
										Element:span
											4
										Element:code
											.
										Element:span
											6
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Retrieves list of network addresses for server and network: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											200
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											121
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Fri
										Element:span
											,
										Element:span
											12
										Element:span
											Dec
										Element:span
											2014
										Element:span
											16
										Element:span
											:
										Element:span
											59
										Element:span
											:
										Element:span
											57
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											X
										Element:span
											-
										Element:span
											Compute
										Element:span
											-
										Element:span
											Request
										Element:span
											-
										Element:span
											Id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											00
										Element:span
											daae97
										Element:span
											-
										Element:span
											384
										Element:span
											b
										Element:span
											-
										Element:span
											4
										Element:span
											a57
										Element:span
											-
										Element:span
											806
										Element:span
											c
										Element:span
											-
										Element:span
											dd8d2d635287
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"public"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"version"
										Element:span
											:
										Element:span
											6
										Element:span
											,
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"2001:4800:7817:0104:7e32:e3ee:ff04:930f"
										Element:span
											},
										Element:span
											{
										Element:span
											"version"
										Element:span
											:
										Element:span
											4
										Element:span
											,
										Element:span
											"addr"
										Element:span
											:
										Element:span
											"23.253.107.140"
										Element:span
											}
										Element:span
											]
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								List server metadata
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								GET
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								metadata
						Node:
						(type) c
						(layer)2
							Element:p
								This operation retrieves a list of all metadata for a specified server.
						Node:
						(type) c
						(layer)2
							Element:p
								In the URI, specify the target server ID.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200 203
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not accept a request body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example List server metadata: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											metadata
										Element:td
											Object
										Element:td
											Container for a metadata keypair for the specified server. This container holds one or more keypairs using format of "metadata key" : "metadata value".
										Element:tr
										Element:td
											metadata.
										Element:strong
											keyname
										Element:td
											Keypair
										Element:td
											Keypairs edcribing the metadata using format of "keyname" : "keyvalue".
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example List server metadata: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											200
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											120
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Mon
										Element:span
											,
										Element:span
											19
										Element:span
											Jan
										Element:span
											2015
										Element:span
											19
										Element:span
											:
										Element:span
											22
										Element:span
											:
										Element:span
											30
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											206
										Element:span
											e007a
										Element:span
											-
										Element:span
											9
										Element:span
											dfe
										Element:span
											-
										Element:span
											4
										Element:span
											ac4
										Element:span
											-
										Element:span
											b819
										Element:span
											-
										Element:span
											d64a74244506
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"metadata"
										Element:span
											:
										Element:span
											{
										Element:span
											"Label"
										Element:span
											:
										Element:span
											"Web"
										Element:span
											,
										Element:span
											"Version"
										Element:span
											:
										Element:span
											"2.1"
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Set server metadata
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								PUT
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								metadata
						Node:
						(type) c
						(layer)2
							Element:p
								This operation creates or replaces metadata items for a specified server
						Node:
						(type) c
						(layer)2
							Element:p
								You can add or update one or more new metadata items in a single request.
						Node:
						(type) c
						(layer)2
							Element:p
								If metadata items in the request body do not exist, they are created. If they do exist, they are replaced.
						Node:
						(type) c
						(layer)2
							Element:p
								Important
						Node:
						(type) c
						(layer)2
							Element:p
								Existing metadata items are replaced with the ones provided in the request regardless of the names of the original metadata items.
						Node:
						(type) c
						(layer)2
							Element:p
								If you exceed the maximum number of metadata items in the request, the call throws an
							Element:code
								fault. To find the maximum number of key-value pairs that can be supplied for each server, use the maxServerMeta absolute limit query.
							Element:span
								overLimit
							Element:span
								(413)
						Node:
						(type) c
						(layer)2
							Element:p
								In the URI, specify the target server ID.
						Node:
						(type) c
						(layer)2
							Element:p
								In the request body, specify the
							Element:code
								element, followed by the new metadata key, for example
							Element:span
								metadata
							Element:code
								, with the value for that key.
							Element:span
								version
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											metadata
										Element:td
											Object
										Element:td
											Container for a metadata keypair for the specified server. This container holds one or more keypairs using format of "metadata key" : "metadata value".
										Element:tr
										Element:td
											metadata.
										Element:strong
											keyname
										Element:td
											Keypair
										Element:td
											Keypairs edcribing the metadata using format of "keyname" : "keyvalue".
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Set server metadata: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"metadata"
										Element:span
											:
										Element:span
											{
										Element:span
											"Label"
										Element:span
											:
										Element:span
											"Web"
										Element:span
											,
										Element:span
											"Version"
										Element:span
											:
										Element:span
											"2.1"
										Element:span
											}
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											metadata
										Element:td
											Object
										Element:td
											Container for a metadata keypair for the specified server. This container holds one or more keypairs using format of "metadata key" : "metadata value".
										Element:tr
										Element:td
											metadata.
										Element:strong
											keyname
										Element:td
											Keypair
										Element:td
											Keypairs edcribing the metadata using format of "keyname" : "keyvalue".
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Set server metadata: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											200
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											120
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Mon
										Element:span
											,
										Element:span
											19
										Element:span
											Jan
										Element:span
											2015
										Element:span
											19
										Element:span
											:
										Element:span
											22
										Element:span
											:
										Element:span
											30
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											206
										Element:span
											e007a
										Element:span
											-
										Element:span
											9
										Element:span
											dfe
										Element:span
											-
										Element:span
											4
										Element:span
											ac4
										Element:span
											-
										Element:span
											b819
										Element:span
											-
										Element:span
											d64a74244506
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"metadata"
										Element:span
											:
										Element:span
											{
										Element:span
											"Label"
										Element:span
											:
										Element:span
											"Web"
										Element:span
											,
										Element:span
											"Version"
										Element:span
											:
										Element:span
											"2.1"
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Update server metadata
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								POST
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								metadata
						Node:
						(type) c
						(layer)2
							Element:p
								This operation updates metadata items by key for a specified server.
						Node:
						(type) c
						(layer)2
							Element:p
								You can update one or more metadata items that you previously added in a single request, but you should avoid changing metadata items that you did not add. The operation replaces existing metadata items with the same key. Items that are not explicitly mentioned in the request are not modified.
						Node:
						(type) c
						(layer)2
							Element:p
								If you exceed the maximum number of metadata items in the request, the call throws an
							Element:code
								fault. To find the maximum number of key-value pairs that can be supplied for each server, use the maxServerMeta absolute limit query.
							Element:span
								overLimit
							Element:span
								(413)
						Node:
						(type) c
						(layer)2
							Element:p
								In the URI, specify the target server ID.
						Node:
						(type) c
						(layer)2
							Element:p
								In the request body, specify the
							Element:code
								element, followed by the metadata key, for example
							Element:span
								metadata
							Element:code
								, with the new value for that key.
							Element:span
								version
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											parameters.
										Element:strong
											metadata
										Element:td
											Object
										Element:td
											Container for a metadata keypair for the specified server. This container holds one or more keypairs using format of "metadata key" : "metadata value".
										Element:tr
										Element:td
											parameters.metadata.
										Element:strong
											keyname
										Element:td
											Keypair
										Element:td
											Keypairs edcribing the metadata using format of "keyname" : "keyvalue".
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Updates server metadata: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"metadata"
										Element:span
											:
										Element:span
											{
										Element:span
											"Label"
										Element:span
											:
										Element:span
											"Web2"
										Element:span
											}
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											metadata
										Element:td
											Object
										Element:td
											Container for a metadata keypair for the specified server. This container holds one or more keypairs using format of "metadata key" : "metadata value".
										Element:tr
										Element:td
											metadata.
										Element:strong
											keyname
										Element:td
											Keypair
										Element:td
											Keypairs edcribing the metadata using format of "keyname" : "keyvalue".
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Updates server metadata: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											200
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											32
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Mon
										Element:span
											,
										Element:span
											19
										Element:span
											Jan
										Element:span
											2015
										Element:span
											20
										Element:span
											:
										Element:span
											29
										Element:span
											:
										Element:span
											25
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											c342acf1
										Element:span
											-
										Element:span
											cd7e
										Element:span
											-
										Element:span
											4
										Element:span
											c88
										Element:span
											-
										Element:span
											84
										Element:span
											cc
										Element:span
											-
										Element:span
											dcbca523fc08
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"metadata"
										Element:span
											:
										Element:span
											{
										Element:span
											"Label"
										Element:span
											:
										Element:span
											"Web2"
										Element:span
											,
										Element:span
											"Version"
										Element:span
											:
										Element:span
											"2.1"
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Show server metadata item details
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								GET
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								metadata
							Element:span
								/
							Element:span
								{
							Element:span
								key
							Element:span
								}
						Node:
						(type) c
						(layer)2
							Element:p
								Retrieves a metadata item by key for a specified server.
						Node:
						(type) c
						(layer)2
							Element:p
								In the URI, specify the target server ID and the target metadata key.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200 203 300
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
										Element:tr
										Element:td
											{key}
										Element:td
											Metadatakey
										Element:td
											The name of the target key in a metadata key pair. A string with maximum length of 255 characters.
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not accept a request body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Show server metadata item details: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											meta
										Element:td
											Object
										Element:td
											Container for a metadata keypair for the specified server. This container holds a single keypair using format of "metadata key" : "metadata value".
										Element:tr
										Element:td
											meta.
										Element:strong
											keyname
										Element:td
											Keypair
										Element:td
											Keypair describing the metadata using format of "keyname" : "keyvalue".
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Show server metadata item details: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											200
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											32
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Tue
										Element:span
											,
										Element:span
											20
										Element:span
											Jan
										Element:span
											2015
										Element:span
											14
										Element:span
											:
										Element:span
											07
										Element:span
											:
										Element:span
											57
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											85
										Element:span
											a2fdf4
										Element:span
											-
										Element:span
											a6d9
										Element:span
											-
										Element:span
											42
										Element:span
											ce
										Element:span
											-
										Element:span
											91
										Element:span
											bb
										Element:span
											-
										Element:span
											2
										Element:span
											cea8eb5e14e
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"meta"
										Element:span
											:
										Element:span
											{
										Element:span
											"Label"
										Element:span
											:
										Element:span
											"Web"
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Set server metadata item
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								PUT
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								metadata
							Element:span
								/
							Element:span
								{
							Element:span
								key
							Element:span
								}
						Node:
						(type) c
						(layer)2
							Element:p
								This operation creates or replaces metadata item by key for a specified server
						Node:
						(type) c
						(layer)2
							Element:p
								In the URI, specify the target server ID and the target metadata key.
						Node:
						(type) c
						(layer)2
							Element:p
								In the request body, specify the
							Element:code
								element, followed by the metadata key, for example
							Element:span
								meta
							Element:code
								, with the new value for that key.
							Element:span
								version
						Node:
						(type) c
						(layer)2
							Element:p
								Note
						Node:
						(type) c
						(layer)2
							Element:p
								The key specified in the request body must match the key specified in the URI request.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200
							Element:td
								Success
							Element:td
								Request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
										Element:tr
										Element:td
											{key}
										Element:td
											Metadatakey
										Element:td
											The name of the target key in a metadata key pair. A string with maximum length of 255 characters.
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											meta
										Element:td
											Object
										Element:td
											Container for a metadata keypair for the specified server. This container holds a single keypair using format of "metadata key" : "metadata value".
										Element:tr
										Element:td
											meta.
										Element:strong
											keyname
										Element:td
											Keypair
										Element:td
											Keypair describing the metadata using format of "keyname" : "keyvalue".
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Set server metadata item: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"meta"
										Element:span
											:
										Element:span
											{
										Element:span
											"Label"
										Element:span
											:
										Element:span
											"Web"
										Element:span
											}
										Element:span
											}
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the body parameters for the response:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											meta
										Element:td
											Object
										Element:td
											Container for a metadata keypair for the specified server. This container holds a single keypair using format of "metadata key" : "metadata value".
										Element:tr
										Element:td
											meta.
										Element:strong
											keyname
										Element:td
											Keypair
										Element:td
											Keypair describing the metadata using format of "keyname" : "keyvalue".
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Set server metadata item: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											200
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											32
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Tue
										Element:span
											,
										Element:span
											20
										Element:span
											Jan
										Element:span
											2015
										Element:span
											14
										Element:span
											:
										Element:span
											25
										Element:span
											:
										Element:span
											02
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											96
										Element:span
											b3fdf4
										Element:span
											-
										Element:span
											a6d9
										Element:span
											-
										Element:span
											42
										Element:span
											ce
										Element:span
											-
										Element:span
											91
										Element:span
											bb
										Element:span
											-
										Element:span
											2
										Element:span
											cea8eb5e14e
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"meta"
										Element:span
											:
										Element:span
											{
										Element:span
											"Label"
										Element:span
											:
										Element:span
											"Web"
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Delete server metadata item
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								DELETE
							Element:span
								/
							Element:span
								servers
							Element:span
								/
							Element:span
								{
							Element:span
								server_id
							Element:span
								}
							Element:span
								/
							Element:span
								metadata
							Element:span
								/
							Element:span
								{
							Element:span
								key
							Element:span
								}
						Node:
						(type) c
						(layer)2
							Element:p
								This operation deletes a metadata item by key from the specified server.
						Node:
						(type) c
						(layer)2
							Element:p
								If the operation succeeds, it returns an
							Element:code
								status code with no response body.
							Element:span
								HTTP
							Element:span
								202
						Node:
						(type) c
						(layer)2
							Element:p
								In the URI, specify the target server ID and the target metadata key.
						Node:
						(type) c
						(layer)2
							Element:p
								This table shows the possible response codes for this operation:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Response Code
							Element:th
								Name
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								204
							Element:td
								Delete Successful
							Element:td
								Delete request succeeded.
							Element:tr
							Element:td
								400
							Element:td
								Error
							Element:td
								A general error has occured.
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Unauthorized.
							Element:tr
							Element:td
								403
							Element:td
								Forbidden
							Element:td
								Forbidden.
							Element:tr
							Element:td
								405
							Element:td
								Bad Method
							Element:td
								Bad method.
							Element:tr
							Element:td
								409
							Element:td
								Conflicting Reqest
							Element:td
								Conflicting request.
							Element:tr
							Element:td
								413
							Element:td
								Over Limit
							Element:td
								The number of items returned is above the allowed limit.
							Element:tr
							Element:td
								500
							Element:td
								API Fault
							Element:td
								API fault.
							Element:tr
							Element:td
								503
							Element:td
								Service Unavailable
							Element:td
								The requested service is unavailable.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											This table shows the URI parameters for the request:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											{server_id}
										Element:td
											Uuid
										Element:td
											The UUID for the server.
										Element:tr
										Element:td
											{key}
										Element:td
											Metadatakey
										Element:td
											The name of the target key in a metadata key pair. A string with maximum length of 255 characters.
									Node:
									(type) c
									(layer)3
										Element:p
											This operation does not accept a request body.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Delete server metadata item: JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											X
										Element:span
											-
										Element:span
											Auth
										Element:span
											-
										Element:span
											Token
										Element:span
											:
										Element:span
											f064c46a782c444cb4ba4b6434288f7c
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example Delete server metadata item: JSON response
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											Status
										Element:span
											Code
										Element:span
											:
										Element:span
											204
										Element:span
											OK
										Element:span
											Content
										Element:span
											-
										Element:span
											Length
										Element:span
											:
										Element:span
											120
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:span
											Date
										Element:span
											:
										Element:span
											Mon
										Element:span
											,
										Element:span
											19
										Element:span
											Jan
										Element:span
											2015
										Element:span
											23
										Element:span
											:
										Element:span
											19
										Element:span
											:
										Element:span
											30
										Element:span
											GMT
										Element:span
											Server
										Element:span
											:
										Element:span
											Jetty
										Element:span
											(
										Element:span
											8.0
										Element:span
											.
										Element:span
											y
										Element:span
											.
										Element:span
											z
										Element:span
											-
										Element:span
											SNAPSHOT
										Element:span
											)
										Element:span
											Via
										Element:span
											:
										Element:span
											1.1
										Element:span
											Repose
										Element:span
											(
										Element:span
											Repose
										Element:span
											/
										Element:span
											2.12
										Element:span
											)
										Element:span
											x
										Element:span
											-
										Element:span
											compute
										Element:span
											-
										Element:span
											request
										Element:span
											-
										Element:span
											id
										Element:span
											:
										Element:span
											req
										Element:span
											-
										Element:span
											406
										Element:span
											a007a
										Element:span
											-
										Element:span
											9
										Element:span
											dfe
										Element:span
											-
										Element:span
											4
										Element:span
											ac4
										Element:span
											-
										Element:span
											b819
										Element:span
											-
										Element:span
											d64a74244506
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:span
											Previous
										Element:a
											API reference
										Element:span
											Next
										Element:a
											Flavor operations
									Node:
									(type) c
									(layer)3
															Node:
															(type) c
															(layer)5
																Element:footer
																Element:h5
																	Docs
																Element:ul
																Element:li
																Element:a
																	Cloud Backup
																Element:li
																Element:a
																	Cloud Big Data
																Element:li
																Element:a
																	Cloud Block Storage
																Element:li
																Element:a
																	Cloud Databases
																Element:li
																Element:a
																	Cloud DNS
																Element:li
																Element:a
																	Cloud Files
																Element:li
																Element:a
																	Cloud Identity
																Element:li
																Element:a
																	Cloud Images
																Element:ul
																Element:li
																Element:a
																	Cloud Load Balancers
																Element:li
																Element:a
																	Cloud Monitoring
																Element:li
																Element:a
																	Cloud Orchestration
																Element:li
																Element:a
																	Cloud Networks
																Element:li
																Element:a
																	Cloud Queues
																Element:li
																Element:a
																	Cloud Servers
																Element:li
																Element:a
																	Rackspace Auto Scale
																Element:li
																Element:a
																	Rackspace CDN
																Element:h5
																	Sdks
																Element:ul
																Element:li
																Element:a
																	Go
																Element:li
																Element:a
																	Java
																Element:li
																Element:a
																	.Net
																Element:li
																Element:a
																	Node
																Element:li
																Element:a
																	PHP
																Element:li
																Element:a
																	Python
																Element:li
																Element:a
																	Ruby
																Element:h5
																	Partner Tools
																Element:ul
																Element:li
																Element:a
																	Airbrake
																Element:li
																Element:a
																	Mailgun
																Element:li
																Element:a
																	ObjectRocket
																Element:li
																Element:a
																	RedisToGo
																Element:h5
																	Community
																Element:ul
																Element:li
																Element:a
																	Developer Blog
																Element:li
																Element:a
																	Developer Forum
																Element:li
																Element:a
																	Events
																Element:span
																	Â©2015 Rackspace US, Inc.
															Node:
															(type) c
															(layer)5
																Element:ul
																Element:li
																Element:span
																	Â©2015 Rackspace US, Inc.
																Element:li
																Element:a
																	About Rackspace
																Element:li
																Element:a
																	Investors
																Element:li
																Element:a
																	Careers
																Element:li
																Element:a
																	Privacy Statement
																Element:li
																Element:a
																	Website Terms
																Element:li
																Element:a
																	Trademarks
