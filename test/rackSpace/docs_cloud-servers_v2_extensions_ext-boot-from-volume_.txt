Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
				Element:span
					Rackspace
					Developer Docs
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:p
					Letâ€™s Build Something Powerful Together!
			Node:
			(type) c
			(layer)1
				Element:a
				Element:span
				Element:span
					Submit an issue
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Cloud Servers 2.0
				Element:li
				Element:a
					Getting started
				Element:ul
				Element:li
				Element:a
					Get your credentials
				Element:li
				Element:a
					Send API requests to Cloud Servers
				Element:ul
				Element:li
				Element:a
					Install CLI client and Cloud Servers Virtual Interface extension
				Element:li
				Element:a
					Convert cURL examples to run on Windows
				Element:li
				Element:a
					Authenticate to the Rackspace Cloud
				Element:ul
				Element:li
				Element:a
					Authenticating by using the nova client
				Element:li
				Element:a
					Authenticating by using cURL
				Element:li
				Element:a
					Cloud Servers Concepts
				Element:ul
				Element:li
				Element:a
					How Cloud Servers work
				Element:li
				Element:a
					Create your first server
				Element:ul
				Element:li
				Element:a
					Listing images
				Element:li
				Element:a
					Listing flavors
				Element:li
				Element:a
					Booting a new server with your cloud network
				Element:li
				Element:a
					Getting server details
				Element:li
				Element:a
					Listing servers
				Element:li
				Element:a
					Deleting your cloud server
				Element:li
				Element:a
					Create your first network
				Element:ul
				Element:li
				Element:a
					Creating network
				Element:li
				Element:a
					Listing flavors
				Element:li
				Element:a
					Booting a new server with your cloud network
				Element:li
				Element:a
					Getting network details
				Element:li
				Element:a
					Deleting your cloud network
				Element:li
				Element:a
					Attach your network to an existing server
				Element:ul
				Element:li
				Element:a
					Creating a virtual interface
				Element:li
				Element:a
					Listing virtual interfaces for a server
				Element:li
				Element:a
					Deleting a virtual interface from a server
				Element:li
				Element:a
					General API information
				Element:ul
				Element:li
				Element:a
					Service access endpoints
				Element:li
				Element:a
					Request and response types
				Element:li
				Element:a
					Links and References
				Element:li
				Element:a
					Paginated collections
				Element:ul
				Element:li
				Element:a
					JSON Collection
				Element:li
				Element:a
					Efficient Polling with the Changes-Since Parameter
				Element:li
				Element:a
					Limits
				Element:ul
				Element:li
				Element:a
					Rate Limits
				Element:li
				Element:a
					Absolute Limits
				Element:li
				Element:a
					Quotas
				Element:li
				Element:a
					Faults
				Element:ul
				Element:li
				Element:a
					Synchronous Faults
				Element:li
				Element:a
					Asynchronous Faults
				Element:li
				Element:a
					badRequest
				Element:li
				Element:a
					itemNotFound
				Element:li
				Element:a
					overLimit
				Element:li
				Element:a
					serviceUnavailable
				Element:li
				Element:a
					unauthorized
				Element:li
				Element:a
					Date and time format
				Element:li
				Element:a
					Flavors
				Element:ul
				Element:li
				Element:a
					Virtual Cloud Server Flavors
				Element:li
				Element:a
					OnMetal Cloud Server Flavors
				Element:li
				Element:a
					Supported Flavors for Cloud Servers
				Element:li
				Element:a
					Role-based access control (RBAC)
				Element:ul
				Element:li
				Element:a
					Assigning roles to account users
				Element:li
				Element:a
					Roles available for Cloud Servers
				Element:li
				Element:a
					Multiproduct global roles and permissions
				Element:li
				Element:a
					Resolving conflicts between RBAC multiproduct and product-specific roles
				Element:li
				Element:a
					RBAC permissions cross-reference to Cloud Servers API operations
				Element:li
				Element:a
					API extensions
				Element:ul
				Element:li
				Element:a
					Rackspace Extensions
				Element:li
				Element:a
					Disk Configuration Extension
				Element:ul
				Element:li
				Element:a
					Changes to Get Server/Image Details
				Element:li
				Element:a
					Changes to Rebuild Server
				Element:li
				Element:a
					Changes to Resize Server
				Element:li
				Element:a
					Changes to Create Server
				Element:li
				Element:a
					Extended Status Extension
				Element:ul
				Element:li
				Element:a
					Task states
				Element:li
				Element:a
					Rescue Mode Extension
				Element:ul
				Element:li
				Element:a
					Rescue and unrescue server action operations
				Element:li
				Element:a
					Used Limits Extension
				Element:ul
				Element:li
				Element:a
					Changes to List of rate and absolute limits to include used limits
				Element:li
				Element:a
					Scheduled Images Extension
				Element:ul
				Element:li
				Element:a
					API operations for scheduling images
				Element:li
				Element:a
					Flavors Extra Specs Extension
				Element:ul
				Element:li
				Element:a
					Changes to Get flavor details API operation
				Element:li
				Element:a
					Flavors OS Extra Specs Extension
				Element:ul
				Element:li
				Element:a
					API operations for Flavor OS extra specs extension
				Element:li
				Element:a
					Server Actions Extension
				Element:ul
				Element:li
				Element:a
					List server actions and show action details operations
				Element:li
				Element:a
					Config Drive Extension
				Element:li
				Element:a
					Volumes Extension
				Element:ul
				Element:li
				Element:a
					Volume attachment operations
				Element:li
				Element:a
					Boot from volume
				Element:ul
				Element:li
				Element:a
					Create volume from image and boot instance
				Element:li
				Element:a
					Use pre-made bootable volume to boot instance
				Element:li
				Element:a
					API operations for creating or using bootable volumes
				Element:li
				Element:a
					Block-device-mapping attribute versus block-device attribute
				Element:li
				Element:a
					Network extension
				Element:ul
				Element:li
				Element:a
					API operations for networks extension
				Element:li
				Element:a
					Virtual Interfaces extension
				Element:ul
				Element:li
				Element:a
					API operations for virtual interfaces extension
				Element:li
				Element:a
					Scheduler Hint Extension
				Element:ul
				Element:li
				Element:a
					Why use scheduler hints?
				Element:li
				Element:a
					Scheduler hint operations
				Element:li
				Element:a
					API reference
				Element:ul
				Element:li
				Element:a
					Server operations
				Element:ul
				Element:li
				Element:a
					Create server
				Element:li
				Element:a
					Create server with disk config
				Element:li
				Element:a
					Create server with scheduler hints
				Element:li
				Element:a
					Retrieve list of servers
				Element:li
				Element:a
					List servers with details
				Element:li
				Element:a
					Show server details
				Element:li
				Element:a
					Update server
				Element:li
				Element:a
					Delete server
				Element:li
				Element:a
					Create a server key pair
				Element:li
				Element:a
					Import a server key pair
				Element:li
				Element:a
					Retrieve list of key pairs
				Element:li
				Element:a
					Delete key pair
				Element:li
				Element:a
					Attach volume to server
				Element:li
				Element:a
					List server volumes
				Element:li
				Element:a
					Show volume attachment details
				Element:li
				Element:a
					Delete volume attachment from server
				Element:li
				Element:a
					Create bootable volume and server
				Element:li
				Element:a
					Retrieve list of server actions
				Element:li
				Element:a
					Retrieve log details for a specified server action
				Element:li
				Element:a
					Change password for specified server
				Element:li
				Element:a
					Reboot specified server
				Element:li
				Element:a
					Rebuild specified server
				Element:li
				Element:a
					Resize specified server
				Element:li
				Element:a
					Confirm server resize for specified server
				Element:li
				Element:a
					Revert server resize for specified server
				Element:li
				Element:a
					Create image of specified server
				Element:li
				Element:a
					Rescue specified server
				Element:li
				Element:a
					Unrescue specified server
				Element:li
				Element:a
					Lock specified server
				Element:li
				Element:a
					Unlock specified server
				Element:li
				Element:a
					Start specified server
				Element:li
				Element:a
					Stop specified server
				Element:li
				Element:a
					Retrieves list of server addresses
				Element:li
				Element:a
					Retrieve list of network addresses for server and network
				Element:li
				Element:a
					List server metadata
				Element:li
				Element:a
					Set server metadata
				Element:li
				Element:a
					Update server metadata
				Element:li
				Element:a
					Show server metadata item details
				Element:li
				Element:a
					Set server metadata item
				Element:li
				Element:a
					Delete server metadata item
				Element:li
				Element:a
					Flavor operations
				Element:ul
				Element:li
				Element:a
					Retrieve list of flavors
				Element:li
				Element:a
					Retrieve list of flavors with details
				Element:li
				Element:a
					Retrieve flavor details
				Element:li
				Element:a
					Show flavor with extra specs
				Element:li
				Element:a
					List extra specs for flavors
				Element:li
				Element:a
					Get details for specified flavor extra spec
				Element:li
				Element:a
					Image operations
				Element:ul
				Element:li
				Element:a
					Retrieve list of images
				Element:li
				Element:a
					Retrieve list of images with details
				Element:li
				Element:a
					Retrieve image details
				Element:li
				Element:a
					Delete image
				Element:li
				Element:a
					Retrieve image metadata for specified image
				Element:li
				Element:a
					Set image metadata for specified image
				Element:li
				Element:a
					Retrieve image metadata item for specified image
				Element:li
				Element:a
					Set image metadata item for specified image
				Element:li
				Element:a
					Delete image metadata item for specified image
				Element:li
				Element:a
					Enable scheduled Images
				Element:li
				Element:a
					Show scheduled Images
				Element:li
				Element:a
					Disable scheduled Images
				Element:li
				Element:a
					Networks operations
				Element:ul
				Element:li
				Element:a
					Retrieve list of networks
				Element:li
				Element:a
					Create network
				Element:li
				Element:a
					Create server with network
				Element:li
				Element:a
					Show network
				Element:li
				Element:a
					Delete network
				Element:li
				Element:a
					Retrieve list of virtual interfaces
				Element:li
				Element:a
					Create virtual interface and attach to server
				Element:li
				Element:a
					Delete virtual interface
				Element:li
				Element:a
					Miscellaneous server operations
				Element:ul
				Element:li
				Element:a
					Retrieve list of rate and absolute limits
				Element:li
				Element:a
					Retrieve list of limits including used limits
				Element:li
				Element:a
					Get console
				Element:li
				Element:a
					Retrieve quotas
				Element:li
				Element:a
					Retrieve list of extensions
				Element:li
				Element:a
					Retrieve details for the specified extension
				Element:li
				Element:a
					Release Notes
				Element:ul
				Element:li
				Element:a
					API v2.0 updates, September 15, 2016
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, August 15, 2016
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, June 2, 2015
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, October 30, 2014
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, July 24, 2014
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, August 21, 2012
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, August 15, 2012
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, July 9, 2012
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, June 13, 2012
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 release, May 1, 2012
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					Service updates
				Element:li
				Element:a
					Additional resources
				Element:li
				Element:a
					Disclaimer
			Node:
			(type) c
			(layer)1
				Element:span
			Node:
			(type) h1
			(layer)1
				Element:h1
					Boot from volume
				Element:a
					#
			Node:
			(type) c
			(layer)1
				Element:p
					You can boot General Purpose and IO server instances from a volume instead of an image, using the API operation, or nova
				Element:code
					command, with the
				Element:span
					boot
				Element:code
					parameter of the server boot API operation. This moves the system disk from local to remote, providing an a la carte storage experience and separating the system disk from the server.
				Element:span
					block-device
			Node:
			(type) c
			(layer)1
				Element:p
					Boot from volume (BFV) functionality provides the following advantages: BFV enables the diskless flavors (which can't work without BFV). BFV also allows you to have a larger system disk for certain flavors, like windows flavors, because the system disk no longer has to reside on the server itself.
			Node:
			(type) c
			(layer)1
				Element:p
					Note
			Node:
			(type) c
			(layer)1
				Element:p
					General Purpose and IO servers may be booted from volume.
			Node:
			(type) c
			(layer)1
				Element:p
					Compute and Memory servers must be booted from volume, because image-based builds are not supported for these two flavor classes.
			Node:
			(type) c
			(layer)1
				Element:p
					Standard and OnMetal servers may not be booted from volume.
			Node:
			(type) c
			(layer)1
				Element:p
					The
				Element:a
					Cloud Block Storage volumes API reference
					provides useful operations for listing and working with volumes.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Create volume from image and boot instance
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:p
								You can create a volume from an existing image, volume, or snapshot. This procedure shows you how to create a bootable volume from an image, and use the volume to boot an instance, instead of using an image.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Procedure: To create a bootable image and boot a server
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:ol
										Element:li
										Element:p
											Create a bootable volume from an image.
										Element:pre
										Element:span
											$ nova volume-create 100 --volume-type=SSD --display-name=BFB-test-SSD \ --image-id=ff228647-fd57-47fe-b42d-2b7813bb9115
										Element:p
											Once the volume is online, the new volume's UUID will be passed to nova.
										Element:p
											Here is the JSON request body for the same request, if you don't use the nova client:
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"volume"
										Element:span
											:
										Element:span
											{
										Element:span
											"display_name"
										Element:span
											:
										Element:span
											"BFB-test-SSD"
										Element:span
											,
										Element:span
											"imageRef"
										Element:span
											:
										Element:span
											"ff228647-fd57-47fe-b42d-2b7813bb9115"
										Element:span
											,
										Element:span
											"availability_zone"
										Element:span
											:
										Element:span
											null
										Element:span
											,
										Element:span
											"volume_type"
										Element:span
											:
										Element:span
											"SSD"
										Element:span
											,
										Element:span
											"display_description"
										Element:span
											:
										Element:span
											null
										Element:span
											,
										Element:span
											"snapshot_id"
										Element:span
											:
										Element:span
											null
										Element:span
											,
										Element:span
											"size"
										Element:span
											:
										Element:span
											100
										Element:span
											}
										Element:span
											}
										Element:li
										Element:p
											Boot a server from the bootable volume:
										Element:pre
										Element:span
											$ nova boot --flavor compute1-15 --block-device-mapping \ vda=8dcf68f9-0321-42f3-a3dc-b861b9335a9b:::0 BFVServer
										Element:p
											Note
										Element:p
											Block device mapping is in the following format: <dev_name>=<id>:<type>:<size(GB)>:<delete_on_terminate>. Type and size can be left blank, delete on terminate can be expressed as
										Element:code
											or
										Element:span
											True
										Element:code
											and
										Element:span
											1
										Element:code
											or
										Element:span
											False
										Element:code
											.
										Element:span
											0
										Element:p
											This command creates a Compute1 15GB server named BVFServer, which persists on server termination.
										Element:p
											Here is the JSON request body for the same request, if you don't use the nova client:
										Element:pre
										Element:span
										Element:span
											{
										Element:span
											"server"
										Element:span
											:
										Element:span
											{
										Element:span
											"name"
										Element:span
											:
										Element:span
											"BFVServer"
										Element:span
											,
										Element:span
											"imageRef"
										Element:span
											:
										Element:span
											""
										Element:span
											,
										Element:span
											"block_device_mapping"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"volume_id"
										Element:span
											:
										Element:span
											"8dcf68f9-0321-42f3-a3dc-b861b9335a9b"
										Element:span
											,
										Element:span
											"delete_on_termination"
										Element:span
											:
										Element:span
											"0"
										Element:span
											,
										Element:span
											"device_name"
										Element:span
											:
										Element:span
											"vda"
										Element:span
											}
										Element:span
											],
										Element:span
											"flavorRef"
										Element:span
											:
										Element:span
											"compute1-15"
										Element:span
											,
										Element:span
											"max_count"
										Element:span
											:
										Element:span
											1
										Element:span
											,
										Element:span
											"min_count"
										Element:span
											:
										Element:span
											1
										Element:span
											,
										Element:span
											"networks"
										Element:span
											:
										Element:span
											[
										Element:span
											{
										Element:span
											"uuid"
										Element:span
											:
										Element:span
											"00000000-0000-0000-0000-000000000000"
										Element:span
											},
										Element:span
											{
										Element:span
											"uuid"
										Element:span
											:
										Element:span
											"11111111-1111-1111-1111-111111111111"
										Element:span
											}
										Element:span
											]
										Element:span
											}
										Element:span
											}
									Node:
									(type) c
									(layer)3
										Element:p
											You can also create a bootable volume and boot a server in a single step.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Procedure: To create a bootable image and boot a server in a single step
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											Boot server from bootable volume, without first creating the volume:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
											$ nova boot --flavor compute1-15 --block-device \ source=image,id=e0b7734d-2331-42a3-b19e-067adc0da17d,dest=volume,size=100,shutdown=preserve,bootindex=0 BFVServer
									Node:
									(type) c
									(layer)3
										Element:p
											This command creates a Compute1 15GB server from a volume that is prepped with the image set by the id.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Use pre-made bootable volume to boot instance
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:p
								You can use a pre-made bootable volume use it to boot an instance, instead of using an image. Pre-made bootable volumes are just Cloud Block Storage volumes that include the "imageRef" key in the JSON object. The key needs to have the value of an image's UUID in order to be bootable. If it is not bootable, it will show an empty string.
						Node:
						(type) c
						(layer)2
							Element:p
								The following example shows the nova command for booting a server from an existing volume and creates a Compute1 15GB server named BVFServer:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
								$ nova boot --flavor compute1-15 --block-device-mapping vda=8dcf68f9-0321-42f3-a3dc-b861b9335a9b:::0 BFVServer
						Node:
						(type) c
						(layer)2
							Element:p
								Note
						Node:
						(type) c
						(layer)2
							Element:p
								Block device mapping is in the following format:
							Element:code
								. Type and size can be left blank, delete on terminate can be expressed as
							Element:span
								vda=<dev_id>:<type>:<size(GB)>:<delete_on_terminate>
							Element:code
								(or
							Element:span
								True
							Element:code
								) and
							Element:span
								1
							Element:code
								(or
							Element:span
								False
							Element:code
								).
							Element:span
								0
						Node:
						(type) c
						(layer)2
							Element:p
								The following example shows a cURL command for booting a server from an existing volume and creates a General Purpose v1 1GB server named BVFServer5:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
								$ curl -i 'https://preprod.ord.servers.api.rackspacecloud.com/v2/5892688/os-volumes_boot' \ -X POST -H "Content-Type: application/json" -H "X-Auth-Token: $token" \ -d '{"server":{"name":"BFVServer5","imageRef":"", \ "block_device_mapping_v2":[{"boot_index":"0","uuid":"bb02b1a3-bc77-4d17-ab5b-421d89850fca","volume_size":"100", \ "source_type":"image","destination_type":"volume","delete_on_termination":false}], \ "flavorRef":"general1-1","max_count":1,"min_count":1, \ "networks":[{"uuid":"00000000-0000-0000-0000-000000000000"},{"uuid":"11111111-1111-1111-1111-111111111111"}]}}' \ | python -m json.tool
						Node:
						(type) c
						(layer)2
							Element:p
								Here is the JSON request body for the same request, if you don't use the nova client:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
							Element:span
								{
							Element:span
								"server"
							Element:span
								:
							Element:span
								{
							Element:span
								"name"
							Element:span
								:
							Element:span
								"BFVServer5"
							Element:span
								,
							Element:span
								"imageRef"
							Element:span
								:
							Element:span
								""
							Element:span
								,
							Element:span
								"block_device_mapping"
							Element:span
								:
							Element:span
								[
							Element:span
								{
							Element:span
								"boot_index"
							Element:span
								:
							Element:span
								"0"
							Element:span
								"uuid"
							Element:span
								:
							Element:span
								"bb02b1a3-bc77-4d17-ab5b-421d89850fca"
							Element:span
								,
							Element:span
								"volume_size"
							Element:span
								:
							Element:span
								"100"
							Element:span
								,
							Element:span
								"source_type"
							Element:span
								:
							Element:span
								"image"
							Element:span
								,
							Element:span
								"destination_type"
							Element:span
								:
							Element:span
								"volume"
							Element:span
								,
							Element:span
								"delete_on_termination"
							Element:span
								:
							Element:span
								false
							Element:span
								}
							Element:span
								],
							Element:span
								"flavorRef"
							Element:span
								:
							Element:span
								"general1-1"
							Element:span
								,
							Element:span
								"max_count"
							Element:span
								:
							Element:span
								1
							Element:span
								,
							Element:span
								"min_count"
							Element:span
								:
							Element:span
								1
							Element:span
								,
							Element:span
								"networks"
							Element:span
								:
							Element:span
								[
							Element:span
								{
							Element:span
								"uuid"
							Element:span
								:
							Element:span
								"00000000-0000-0000-0000-000000000000"
							Element:span
								},
							Element:span
								{
							Element:span
								"uuid"
							Element:span
								:
							Element:span
								"11111111-1111-1111-1111-111111111111"
							Element:span
								}
							Element:span
								]
							Element:span
								}
							Element:span
								}
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								API operations for creating or using bootable volumes
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:p
								The
							Element:code
								operation creates a bootable volume and boots a server in one step when you send the correct request body.
							Element:span
								POST
							Element:span
								/servers
						Node:
						(type) c
						(layer)2
							Element:p
								For an example of this operation, see
							Element:a
								.
							Element:span
								Boot from volume operation
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Block-device-mapping attribute versus block-device attribute
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:p
								How do you know when to use the
							Element:code
								(or
							Element:span
								block_device_mapping
							Element:code
								, in nova) attribute rather than the
							Element:span
								--block-device-mapping
							Element:code
								(or
							Element:span
								block_device_mapping_v2
							Element:code
								, in nova) attribute?
							Element:span
								--block-device
						Node:
						(type) c
						(layer)2
							Element:p
								Use
							Element:code
								attribute, if you already have a bootable volume or plan to create one in a separate step, prior to attempting the boot from volume.
							Element:span
								block-device-mapping
						Node:
						(type) c
						(layer)2
							Element:p
								The
							Element:code
								attribute allows for more flexibility allowing for various source types (image, volume, snapshot, or blank) and destination types (local or volume). This attribute also supports more hypervisors and doesn't require a volume to be set up first.
							Element:span
								block_device_mapping_v2
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:span
								Previous
							Element:a
								Volumes Extension
							Element:span
								Next
							Element:a
								Network extension
						Node:
						(type) c
						(layer)2
															Node:
															(type) c
															(layer)5
																Element:footer
																Element:h5
																	Docs
																Element:ul
																Element:li
																Element:a
																	Cloud Backup
																Element:li
																Element:a
																	Cloud Big Data
																Element:li
																Element:a
																	Cloud Block Storage
																Element:li
																Element:a
																	Cloud Databases
																Element:li
																Element:a
																	Cloud DNS
																Element:li
																Element:a
																	Cloud Files
																Element:li
																Element:a
																	Cloud Identity
																Element:li
																Element:a
																	Cloud Images
																Element:ul
																Element:li
																Element:a
																	Cloud Load Balancers
																Element:li
																Element:a
																	Cloud Monitoring
																Element:li
																Element:a
																	Cloud Orchestration
																Element:li
																Element:a
																	Cloud Networks
																Element:li
																Element:a
																	Cloud Queues
																Element:li
																Element:a
																	Cloud Servers
																Element:li
																Element:a
																	Rackspace Auto Scale
																Element:li
																Element:a
																	Rackspace CDN
																Element:h5
																	Sdks
																Element:ul
																Element:li
																Element:a
																	Go
																Element:li
																Element:a
																	Java
																Element:li
																Element:a
																	.Net
																Element:li
																Element:a
																	Node
																Element:li
																Element:a
																	PHP
																Element:li
																Element:a
																	Python
																Element:li
																Element:a
																	Ruby
																Element:h5
																	Partner Tools
																Element:ul
																Element:li
																Element:a
																	Airbrake
																Element:li
																Element:a
																	Mailgun
																Element:li
																Element:a
																	ObjectRocket
																Element:li
																Element:a
																	RedisToGo
																Element:h5
																	Community
																Element:ul
																Element:li
																Element:a
																	Developer Blog
																Element:li
																Element:a
																	Developer Forum
																Element:li
																Element:a
																	Events
																Element:span
																	Â©2015 Rackspace US, Inc.
															Node:
															(type) c
															(layer)5
																Element:ul
																Element:li
																Element:span
																	Â©2015 Rackspace US, Inc.
																Element:li
																Element:a
																	About Rackspace
																Element:li
																Element:a
																	Investors
																Element:li
																Element:a
																	Careers
																Element:li
																Element:a
																	Privacy Statement
																Element:li
																Element:a
																	Website Terms
																Element:li
																Element:a
																	Trademarks
