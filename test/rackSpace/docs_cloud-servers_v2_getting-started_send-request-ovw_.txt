Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
				Element:span
					Rackspace
					Developer Docs
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:p
					Letâ€™s Build Something Powerful Together!
			Node:
			(type) c
			(layer)1
				Element:a
				Element:span
				Element:span
					Submit an issue
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Cloud Servers 2.0
				Element:li
				Element:a
					Getting started
				Element:ul
				Element:li
				Element:a
					Get your credentials
				Element:li
				Element:a
					Send API requests to Cloud Servers
				Element:ul
				Element:li
				Element:a
					Install CLI client and Cloud Servers Virtual Interface extension
				Element:li
				Element:a
					Convert cURL examples to run on Windows
				Element:li
				Element:a
					Authenticate to the Rackspace Cloud
				Element:ul
				Element:li
				Element:a
					Authenticating by using the nova client
				Element:li
				Element:a
					Authenticating by using cURL
				Element:li
				Element:a
					Cloud Servers Concepts
				Element:ul
				Element:li
				Element:a
					How Cloud Servers work
				Element:li
				Element:a
					Create your first server
				Element:ul
				Element:li
				Element:a
					Listing images
				Element:li
				Element:a
					Listing flavors
				Element:li
				Element:a
					Booting a new server with your cloud network
				Element:li
				Element:a
					Getting server details
				Element:li
				Element:a
					Listing servers
				Element:li
				Element:a
					Deleting your cloud server
				Element:li
				Element:a
					Create your first network
				Element:ul
				Element:li
				Element:a
					Creating network
				Element:li
				Element:a
					Listing flavors
				Element:li
				Element:a
					Booting a new server with your cloud network
				Element:li
				Element:a
					Getting network details
				Element:li
				Element:a
					Deleting your cloud network
				Element:li
				Element:a
					Attach your network to an existing server
				Element:ul
				Element:li
				Element:a
					Creating a virtual interface
				Element:li
				Element:a
					Listing virtual interfaces for a server
				Element:li
				Element:a
					Deleting a virtual interface from a server
				Element:li
				Element:a
					General API information
				Element:ul
				Element:li
				Element:a
					Service access endpoints
				Element:li
				Element:a
					Request and response types
				Element:li
				Element:a
					Links and References
				Element:li
				Element:a
					Paginated collections
				Element:ul
				Element:li
				Element:a
					JSON Collection
				Element:li
				Element:a
					Efficient Polling with the Changes-Since Parameter
				Element:li
				Element:a
					Limits
				Element:ul
				Element:li
				Element:a
					Rate Limits
				Element:li
				Element:a
					Absolute Limits
				Element:li
				Element:a
					Quotas
				Element:li
				Element:a
					Faults
				Element:ul
				Element:li
				Element:a
					Synchronous Faults
				Element:li
				Element:a
					Asynchronous Faults
				Element:li
				Element:a
					badRequest
				Element:li
				Element:a
					itemNotFound
				Element:li
				Element:a
					overLimit
				Element:li
				Element:a
					serviceUnavailable
				Element:li
				Element:a
					unauthorized
				Element:li
				Element:a
					Date and time format
				Element:li
				Element:a
					Flavors
				Element:ul
				Element:li
				Element:a
					Virtual Cloud Server Flavors
				Element:li
				Element:a
					OnMetal Cloud Server Flavors
				Element:li
				Element:a
					Supported Flavors for Cloud Servers
				Element:li
				Element:a
					Role-based access control (RBAC)
				Element:ul
				Element:li
				Element:a
					Assigning roles to account users
				Element:li
				Element:a
					Roles available for Cloud Servers
				Element:li
				Element:a
					Multiproduct global roles and permissions
				Element:li
				Element:a
					Resolving conflicts between RBAC multiproduct and product-specific roles
				Element:li
				Element:a
					RBAC permissions cross-reference to Cloud Servers API operations
				Element:li
				Element:a
					API extensions
				Element:ul
				Element:li
				Element:a
					Rackspace Extensions
				Element:li
				Element:a
					Disk Configuration Extension
				Element:ul
				Element:li
				Element:a
					Changes to Get Server/Image Details
				Element:li
				Element:a
					Changes to Rebuild Server
				Element:li
				Element:a
					Changes to Resize Server
				Element:li
				Element:a
					Changes to Create Server
				Element:li
				Element:a
					Extended Status Extension
				Element:ul
				Element:li
				Element:a
					Task states
				Element:li
				Element:a
					Rescue Mode Extension
				Element:ul
				Element:li
				Element:a
					Rescue and unrescue server action operations
				Element:li
				Element:a
					Used Limits Extension
				Element:ul
				Element:li
				Element:a
					Changes to List of rate and absolute limits to include used limits
				Element:li
				Element:a
					Scheduled Images Extension
				Element:ul
				Element:li
				Element:a
					API operations for scheduling images
				Element:li
				Element:a
					Flavors Extra Specs Extension
				Element:ul
				Element:li
				Element:a
					Changes to Get flavor details API operation
				Element:li
				Element:a
					Flavors OS Extra Specs Extension
				Element:ul
				Element:li
				Element:a
					API operations for Flavor OS extra specs extension
				Element:li
				Element:a
					Server Actions Extension
				Element:ul
				Element:li
				Element:a
					List server actions and show action details operations
				Element:li
				Element:a
					Config Drive Extension
				Element:li
				Element:a
					Volumes Extension
				Element:ul
				Element:li
				Element:a
					Volume attachment operations
				Element:li
				Element:a
					Boot from volume
				Element:ul
				Element:li
				Element:a
					Create volume from image and boot instance
				Element:li
				Element:a
					Use pre-made bootable volume to boot instance
				Element:li
				Element:a
					API operations for creating or using bootable volumes
				Element:li
				Element:a
					Block-device-mapping attribute versus block-device attribute
				Element:li
				Element:a
					Network extension
				Element:ul
				Element:li
				Element:a
					API operations for networks extension
				Element:li
				Element:a
					Virtual Interfaces extension
				Element:ul
				Element:li
				Element:a
					API operations for virtual interfaces extension
				Element:li
				Element:a
					Scheduler Hint Extension
				Element:ul
				Element:li
				Element:a
					Why use scheduler hints?
				Element:li
				Element:a
					Scheduler hint operations
				Element:li
				Element:a
					API reference
				Element:ul
				Element:li
				Element:a
					Server operations
				Element:ul
				Element:li
				Element:a
					Create server
				Element:li
				Element:a
					Create server with disk config
				Element:li
				Element:a
					Create server with scheduler hints
				Element:li
				Element:a
					Retrieve list of servers
				Element:li
				Element:a
					List servers with details
				Element:li
				Element:a
					Show server details
				Element:li
				Element:a
					Update server
				Element:li
				Element:a
					Delete server
				Element:li
				Element:a
					Create a server key pair
				Element:li
				Element:a
					Import a server key pair
				Element:li
				Element:a
					Retrieve list of key pairs
				Element:li
				Element:a
					Delete key pair
				Element:li
				Element:a
					Attach volume to server
				Element:li
				Element:a
					List server volumes
				Element:li
				Element:a
					Show volume attachment details
				Element:li
				Element:a
					Delete volume attachment from server
				Element:li
				Element:a
					Create bootable volume and server
				Element:li
				Element:a
					Retrieve list of server actions
				Element:li
				Element:a
					Retrieve log details for a specified server action
				Element:li
				Element:a
					Change password for specified server
				Element:li
				Element:a
					Reboot specified server
				Element:li
				Element:a
					Rebuild specified server
				Element:li
				Element:a
					Resize specified server
				Element:li
				Element:a
					Confirm server resize for specified server
				Element:li
				Element:a
					Revert server resize for specified server
				Element:li
				Element:a
					Create image of specified server
				Element:li
				Element:a
					Rescue specified server
				Element:li
				Element:a
					Unrescue specified server
				Element:li
				Element:a
					Lock specified server
				Element:li
				Element:a
					Unlock specified server
				Element:li
				Element:a
					Start specified server
				Element:li
				Element:a
					Stop specified server
				Element:li
				Element:a
					Retrieves list of server addresses
				Element:li
				Element:a
					Retrieve list of network addresses for server and network
				Element:li
				Element:a
					List server metadata
				Element:li
				Element:a
					Set server metadata
				Element:li
				Element:a
					Update server metadata
				Element:li
				Element:a
					Show server metadata item details
				Element:li
				Element:a
					Set server metadata item
				Element:li
				Element:a
					Delete server metadata item
				Element:li
				Element:a
					Flavor operations
				Element:ul
				Element:li
				Element:a
					Retrieve list of flavors
				Element:li
				Element:a
					Retrieve list of flavors with details
				Element:li
				Element:a
					Retrieve flavor details
				Element:li
				Element:a
					Show flavor with extra specs
				Element:li
				Element:a
					List extra specs for flavors
				Element:li
				Element:a
					Get details for specified flavor extra spec
				Element:li
				Element:a
					Image operations
				Element:ul
				Element:li
				Element:a
					Retrieve list of images
				Element:li
				Element:a
					Retrieve list of images with details
				Element:li
				Element:a
					Retrieve image details
				Element:li
				Element:a
					Delete image
				Element:li
				Element:a
					Retrieve image metadata for specified image
				Element:li
				Element:a
					Set image metadata for specified image
				Element:li
				Element:a
					Retrieve image metadata item for specified image
				Element:li
				Element:a
					Set image metadata item for specified image
				Element:li
				Element:a
					Delete image metadata item for specified image
				Element:li
				Element:a
					Enable scheduled Images
				Element:li
				Element:a
					Show scheduled Images
				Element:li
				Element:a
					Disable scheduled Images
				Element:li
				Element:a
					Networks operations
				Element:ul
				Element:li
				Element:a
					Retrieve list of networks
				Element:li
				Element:a
					Create network
				Element:li
				Element:a
					Create server with network
				Element:li
				Element:a
					Show network
				Element:li
				Element:a
					Delete network
				Element:li
				Element:a
					Retrieve list of virtual interfaces
				Element:li
				Element:a
					Create virtual interface and attach to server
				Element:li
				Element:a
					Delete virtual interface
				Element:li
				Element:a
					Miscellaneous server operations
				Element:ul
				Element:li
				Element:a
					Retrieve list of rate and absolute limits
				Element:li
				Element:a
					Retrieve list of limits including used limits
				Element:li
				Element:a
					Get console
				Element:li
				Element:a
					Retrieve quotas
				Element:li
				Element:a
					Retrieve list of extensions
				Element:li
				Element:a
					Retrieve details for the specified extension
				Element:li
				Element:a
					Release Notes
				Element:ul
				Element:li
				Element:a
					API v2.0 updates, September 15, 2016
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, August 15, 2016
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, June 2, 2015
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, October 30, 2014
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, July 24, 2014
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, August 21, 2012
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, August 15, 2012
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, July 9, 2012
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 updates, June 13, 2012
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					API v2.0 release, May 1, 2012
				Element:ul
				Element:li
				Element:a
					What's new
				Element:li
				Element:a
					Resolved issues
				Element:li
				Element:a
					Known issues
				Element:li
				Element:a
					Service updates
				Element:li
				Element:a
					Additional resources
				Element:li
				Element:a
					Disclaimer
			Node:
			(type) c
			(layer)1
				Element:span
			Node:
			(type) h1
			(layer)1
				Element:h1
					Send API requests to Cloud Servers
				Element:a
					#
			Node:
			(type) c
			(layer)1
				Element:p
					This Getting Started Guide shows how to send requests by using either of the following methods:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Install CLI client and Cloud Servers Virtual Interface extension
				Element:li
				Element:a
					Convert cURL examples to run on Windows
			Node:
			(type) c
			(layer)1
				Element:p
					To learn about other ways to use Rackspace Cloud API services, see the following resources:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					If you are developing applications or automation, try using
				Element:a
					Rackspace SDKs
					, the
				Element:a
					Rackspace CLI
					, or
				Element:a
					OpenStack client applications
					.
				Element:li
					For API development, testing and workflow management in a graphical environment, try interacting with the API by using an application such as
				Element:a
					Postman
					or
				Element:a
					RESTClient for Firefox
					.
			Node:
			(type) c
			(layer)1
				Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Install CLI client and Cloud Servers Virtual Interface extension
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:p
								The nova client is an open-source Python client provides access to all public Cloud Servers API methods.
						Node:
						(type) c
						(layer)2
							Element:p
								To send requests using the client, you have to install the client and set environment variables.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Prerequisites for nova clients
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								Linux or Mac OS X
							Element:li
								Python 2.6 or later
							Element:li
							Element:strong
								setuptools
								package, installed by default on Mac OS X
							Element:li
							Element:strong
								pip
								package
							Element:li
								Rackspace Cloud account and access to Cloud Servers
						Node:
						(type) c
						(layer)2
							Element:table
							Element:colgroup
							Element:col
							Element:col
							Element:thead
							Element:tr
							Element:th
								Prerequisite
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								Python 2.6 or later
							Element:td
								Currently, the nova client does not support Python 3.
							Element:tr
							Element:td
							Element:strong
								setuptools
								package
							Element:td
							Element:p
								Installed by default on Mac OS X.
							Element:p
								Many Linux distributions provide packages to make
							Element:strong
								setuptools
								easy to install.
							Element:p
								Search your package manager for
							Element:strong
								setuptools
								to find an installation package. If you cannot find one, download the
							Element:strong
								setuptools
								package directly from
							Element:a
								http://pypi.python.org/pypi/setuptools
								.
							Element:tr
							Element:td
							Element:strong
								pip
								package
							Element:td
							Element:p
								To install the nova client on a Mac OS X or Linux system, use
							Element:strong
								pip
								because it is easy and ensures that you get the latest version of the nova client from the Python Package Index at
							Element:a
								http://pypi.python.org/pypi/python-novaclient/
								>. Also, it lets you update the package later on.
							Element:p
								Install
							Element:strong
								pip
								through the package manager for your system:
							Element:ul
							Element:li
							Element:p
								Mac OS X
							Element:pre
							Element:span
								$ sudo easy_install pip
							Element:li
							Element:p
								Ubuntu
							Element:pre
							Element:span
								$ aptitude install python-pip
							Element:li
							Element:p
								Debian
							Element:pre
							Element:span
								$ aptitude install python-pip
							Element:li
							Element:p
								Fedora
							Element:pre
							Element:span
								$ yum install python-pip
							Element:li
							Element:p
								CentOS, or RHEL (from EPEL or another 3rd party repository)
							Element:pre
							Element:span
								$ yum install python-pip
						Node:
						(type) c
						(layer)2
							Element:span
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Install the nova client
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											To install the nova client, perform the following steps.
									Node:
									(type) c
									(layer)3
										Element:ol
										Element:li
										Element:p
											Run the following commands on a Mac OS X or Linux distribution to install the OpenStack and designate clients:
										Element:pre
										Element:span
											$ sudo pip install rackspace-novaclient
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:p
											Note
										Element:p
											If you previously installed the rackspace-novaclient package, run the following command to upgrade it:
										Element:pre
										Element:span
											$ sudo pip install --upgrade rackspace-novaclient
									Node:
									(type) c
									(layer)3
										Element:ol
										Element:li
											Export the following environment variables manually, or update your
										Element:code
											or
										Element:span
											.bash_profile
										Element:code
											files with these variables:
										Element:span
											.bashrc
									Node:
									(type) c
									(layer)3
										Element:blockquote
										Element:pre
										Element:span
										Element:span
											export
										Element:span
											OS_AUTH_URL
										Element:span
											=
										Element:span
											https
										Element:span
											:
										Element:span
											//
										Element:span
											identity
										Element:span
											.
										Element:span
											api
										Element:span
											.
										Element:span
											rackspacecloud
										Element:span
											.
										Element:span
											com
										Element:span
											/
										Element:span
											v2
										Element:span
											.
										Element:span
											0
										Element:span
											/
										Element:span
											export
										Element:span
											OS_AUTH_SYSTEM
										Element:span
											=
										Element:span
											rackspace
										Element:span
											export
										Element:span
											OS_USERNAME
										Element:span
											=
										Element:span
											yourUserName
										Element:span
											export
										Element:span
											OS_TENANT_ID
										Element:span
											=
										Element:span
											yourTenantId
										Element:span
											export
										Element:span
											OS_REGION_NAME
										Element:span
											=
										Element:span
											yourRegionName
										Element:span
											export
										Element:span
											OS_PASSWORD
										Element:span
											=
										Element:span
											yourAPIKey
										Element:p
											The following table describes the environment variables:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:caption
										Element:span
										Element:strong
											Environment variables
										Element:a
											#
										Element:colgroup
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Environment variable
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
											OS_AUTH_URL
										Element:td
											The endpoint for the Rackspace Cloud Identity service, which the nova client uses for authentication.
										Element:tr
										Element:td
											OS_AUTH_SYSTEM
										Element:td
											The authentication system required to get your credentials.
										Element:tr
										Element:td
											OS_USERNAME
										Element:td
											Your Rackspace Cloud user name.
										Element:tr
										Element:td
											OS_TENANT_ID
										Element:td
											Your Rackspace Cloud tenant ID (account number)
										Element:tr
										Element:td
											OS_REGION_NAME
										Element:td
											The regional endpoint (for example, DFW) where you want to deploy the Cloud Servers resources. For details, see
										Element:a
											.
										Element:span
											Service access endpoints
										Element:tr
										Element:td
											OS_PASSWORD
										Element:td
											Your Rackspace API key.
									Node:
									(type) c
									(layer)3
										Element:p
											If you upgrade the operating system of the desktop or remote machine where you installed nova, you may need to reinstall nova to ensure correct operation.
									Node:
									(type) c
									(layer)3
										Element:p
											If you have trouble using pip to install the nova client, you can download a nova client installation package from the python package repository at
										Element:a
											http://pypi.python.org/pypi/rackspace-novaclient/
											, use
										Element:code
											or
										Element:span
											python-pip
										Element:code
											commands instead of
										Element:span
											yum
										Element:code
											.
										Element:span
											pip
									Node:
									(type) c
									(layer)3
										Element:p
											Run the help command to ensure that the client has installed correctly and to review information about using the client.
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
											$ nova help
									Node:
									(type) c
									(layer)3
										Element:p
											To get help for a specific command, type the command name after the
										Element:code
											parameter, as follows:
										Element:span
											help
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
											$ nova help <command_name>
									Node:
									(type) c
									(layer)3
										Element:p
											You cannot use every command that is listed. The nova client was written for use with recent development versions of OpenStack, so it includes support for some features that are not available in the Rackspace Cloud. For a complete list of Openstack commands, see the
										Element:a
											OpenStack Compute command-line client reference
											.
									Node:
									(type) c
									(layer)3
										Element:span
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Install the Cloud Networks Virtual Interface extension
										Element:a
											#
									Node:
									(type) c
									(layer)3
										Element:p
											To attach networks to existing servers, rather than just at boot time, you need to install the Virtual Interface extension by using the following command:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
											$ sudo pip install os_virtual_interfacesv2_python_novaclient_ext
									Node:
									(type) c
									(layer)3
										Element:p
											Note
									Node:
									(type) c
									(layer)3
										Element:p
											If you previously installed this package, run the following command to upgrade it:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
											$ sudo pip install os_virtual_interfacesv2_python_novaclient_ext --upgrade
									Node:
									(type) c
									(layer)3
										Element:p
											cURL is a command-line tool that you can use to interact with REST interfaces. cURL lets you transmit and receive HTTP requests and responses from the command line or a shell script, which enables you to work with the API directly. cURL is available for Linux distributions, Mac OSÂ® X, and Microsoft WindowsÂ®. For information about cURL, see
										Element:a
											http://curl.haxx.se/
											.
									Node:
									(type) c
									(layer)3
										Element:p
											To run the cURL request examples shown in this guide on Mac OSÂ® X or another Linux-based operating system, copy each example directly to the command line or a script.
									Node:
									(type) c
									(layer)3
										Element:p
											Note
									Node:
									(type) c
									(layer)3
										Element:p
											If you are using Microsoft Windows, you need to adjust the cURL examples to run them. See
										Element:a
											.
										Element:span
											Convert cURL examples to run on Windows
									Node:
									(type) c
									(layer)3
										Element:p
											Important
									Node:
									(type) c
									(layer)3
										Element:p
											The cURL examples in this guide are provided for reference only. Because the use of cURL has environmental dependencies, copying and pasting the examples might not work in your environment.
									Node:
									(type) c
									(layer)3
										Element:p
											The following example shows a cURL command for sending an authentication request to the Rackspace Cloud Identity service.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Example: cURL command for sending a JSON request
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
											$ curl https://identity.api.rackspacecloud.com/v2.0/tokens \ -X POST \ -d '{"auth":{"RAX-KSKEY:apiKeyCredentials":{"username":"yourUserName","apiKey":"$apiKey"}}}' \ -H "Content-type: application/json" | python -m json.tool
									Node:
									(type) c
									(layer)3
										Element:p
											In this example,
										Element:code
											is an environment variable that stores your API key value. Environment variables make it easier to reference account information in API requests, to reuse the same cURL commands with different credentials, and to keep sensitive information like your API key from being exposed when you send requests to Rackspace Cloud API services. For details about creating environment variables, see
										Element:span
											$apiKey
										Element:a
											.
										Element:span
											Configure environment variables
									Node:
									(type) c
									(layer)3
										Element:p
											Note
									Node:
									(type) c
									(layer)3
										Element:p
											The cURL request examples use a backslash (
										Element:code
											) as a line-continuation symbol, which allows the command to continue across multiple lines.
										Element:span
											\
									Node:
									(type) c
									(layer)3
										Element:p
											The cURL examples in this guide use the following command-line options.
									Node:
									(type) c
									(layer)3
										Element:table
										Element:colgroup
										Element:col
										Element:col
										Element:thead
										Element:tr
										Element:th
											Option
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											-d
										Element:td
											Sends the specified data in a
										Element:strong
											POST
											request to the HTTP server. Use this option to send a JSON request body to the server.
										Element:tr
										Element:td
										Element:strong
											-H
										Element:td
										Element:p
											Specifies an extra HTTP header in the request. You can specify any number of extra headers. Precede each header with the
										Element:code
											option.
										Element:span
											-H
										Element:p
											Common headers in Rackspace API requests are as follows:
										Element:ul
										Element:li
										Element:p
										Element:code
											: Required for operations with a request body.
										Element:span
											Content-Type
										Element:p
											Specifies the format of the request body. Following is the syntax for the header where format is
										Element:code
											:
										Element:span
											json
										Element:pre
										Element:span
										Element:span
											Content
										Element:span
											-
										Element:span
											Type
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:li
										Element:p
										Element:code
											: Required. Specifies the authentication token.
										Element:span
											X-Auth-Token
										Element:li
										Element:p
										Element:code
											: Optional. Specifies the project ID, which can be your account number or another value.
										Element:span
											X-Auth-Project-Id
										Element:li
										Element:p
										Element:code
											: Optional. Specifies the format of the response body.
										Element:span
											Accept
										Element:p
											Following is the syntax for the header where the format is
										Element:code
											, which is the default:
										Element:span
											json
										Element:pre
										Element:span
										Element:span
											Accept
										Element:span
											:
										Element:span
											application
										Element:span
											/
										Element:span
											json
										Element:tr
										Element:td
										Element:strong
											-i
										Element:td
											Includes the HTTP header in the output.
										Element:tr
										Element:td
										Element:strong
											-s
										Element:td
										Element:p
											Specifies silent or quiet mode, which makes cURL mute. No progress or error messages are shown.
										Element:p
											If your cURL command is not generating any output, try replacing the
										Element:code
											option with
										Element:span
											-s
										Element:code
											.
										Element:span
											-i
										Element:tr
										Element:td
										Element:strong
											-T
										Element:td
											Transfers the specified local file to the remote URL.
										Element:tr
										Element:td
										Element:strong
											-X
										Element:td
											Specifies the request method to use when communicating with the HTTP server. The specified method is used instead of the default method, which is
										Element:strong
											GET
											.
									Node:
									(type) c
									(layer)3
										Element:p
											For commands that return a response, you can use json.tool to pretty-print the output. Append the following command to the cURL call:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:span
										Element:span
											|
										Element:span
											python
										Element:span
											-
										Element:span
											m
										Element:span
											json
										Element:span
											.
										Element:span
											tool
									Node:
									(type) c
									(layer)3
										Element:p
											To use json.tool, import the JSON module. For information about json.tool, see
										Element:a
											JSON encoder and decoder
											.
									Node:
									(type) c
									(layer)3
										Element:p
											If you run a Python version earlier than 2.6, import the simplejson module and use simplejson.tool. For information about simplejson.tool, see
										Element:a
											simplejson encoder and decoder
											.
									Node:
									(type) c
									(layer)3
										Element:p
											If you do not want to pretty-print JSON output, omit this code.
									Node:
									(type) c
									(layer)3
										Element:p
											Note
									Node:
									(type) c
									(layer)3
										Element:p
											If your request includes the
										Element:code
											option to show header output, do not try to pretty-print the output. Header information is not in JSON format, and the API service returns an error if you specify json.tool.
										Element:span
											-i
									Node:
									(type) c
									(layer)3
										Element:span
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								Convert cURL examples to run on Windows
							Element:a
								#
						Node:
						(type) c
						(layer)2
							Element:p
								The cURL examples in the Rackspace API documentation use syntax supported on Mac OSÂ® X, Linux, and UNIX systems. Microsoft Windows does not support the same format. However, you can run the examples on Windows after making the following changes:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								Replace all the line-continuation backslash characters (
							Element:code
								) with a caret (
							Element:span
								\
							Element:code
								), and remove any trailing spaces after the
							Element:span
								^
							Element:code
								.
							Element:span
								^
							Element:li
								If an example includes JSON data, export the data to a text file. When you run the cURL command, use the
							Element:code
								syntax to import the JSON data. Save the JSON data files in a directory, and run cURL commands from that directory.
							Element:span
								@filename
						Node:
						(type) c
						(layer)2
							Element:p
								The following example shows the cURL format for Linux and UNIX systems:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
								$ curl https://identity.api.rackspacecloud.com/v2.0/tokens \ -X POST \ -d '{"auth":{"RAX-KSKEY:apiKeyCredentials":{"username":"yourUserName","apiKey":"$apiKey"}}}' \ -H "Content-type: application/json"
						Node:
						(type) c
						(layer)2
							Element:p
								The following example shows the same request with the changes made for Windows systems:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:span
								$ curl https://identity.api.rackspacecloud.com/v2.0/tokens ^ -X POST ^ -d @credentials.txt ^ -H "Content-type: application/json"
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:span
								Previous
							Element:a
								Get your credentials
							Element:span
								Next
							Element:a
								Authenticate to the Rackspace Cloud
						Node:
						(type) c
						(layer)2
															Node:
															(type) c
															(layer)5
																Element:footer
																Element:h5
																	Docs
																Element:ul
																Element:li
																Element:a
																	Cloud Backup
																Element:li
																Element:a
																	Cloud Big Data
																Element:li
																Element:a
																	Cloud Block Storage
																Element:li
																Element:a
																	Cloud Databases
																Element:li
																Element:a
																	Cloud DNS
																Element:li
																Element:a
																	Cloud Files
																Element:li
																Element:a
																	Cloud Identity
																Element:li
																Element:a
																	Cloud Images
																Element:ul
																Element:li
																Element:a
																	Cloud Load Balancers
																Element:li
																Element:a
																	Cloud Monitoring
																Element:li
																Element:a
																	Cloud Orchestration
																Element:li
																Element:a
																	Cloud Networks
																Element:li
																Element:a
																	Cloud Queues
																Element:li
																Element:a
																	Cloud Servers
																Element:li
																Element:a
																	Rackspace Auto Scale
																Element:li
																Element:a
																	Rackspace CDN
																Element:h5
																	Sdks
																Element:ul
																Element:li
																Element:a
																	Go
																Element:li
																Element:a
																	Java
																Element:li
																Element:a
																	.Net
																Element:li
																Element:a
																	Node
																Element:li
																Element:a
																	PHP
																Element:li
																Element:a
																	Python
																Element:li
																Element:a
																	Ruby
																Element:h5
																	Partner Tools
																Element:ul
																Element:li
																Element:a
																	Airbrake
																Element:li
																Element:a
																	Mailgun
																Element:li
																Element:a
																	ObjectRocket
																Element:li
																Element:a
																	RedisToGo
																Element:h5
																	Community
																Element:ul
																Element:li
																Element:a
																	Developer Blog
																Element:li
																Element:a
																	Developer Forum
																Element:li
																Element:a
																	Events
																Element:span
																	Â©2015 Rackspace US, Inc.
															Node:
															(type) c
															(layer)5
																Element:ul
																Element:li
																Element:span
																	Â©2015 Rackspace US, Inc.
																Element:li
																Element:a
																	About Rackspace
																Element:li
																Element:a
																	Investors
																Element:li
																Element:a
																	Careers
																Element:li
																Element:a
																	Privacy Statement
																Element:li
																Element:a
																	Website Terms
																Element:li
																Element:a
																	Trademarks
