Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Introduction
			Node:
			(type) c
			(layer)1
				Element:p
					Welcome to the Nuapay REST API. Processing Direct Debits (DDs) or Credit Transfers (CTs) via API is a simple way to integrate these payment methods into your systems. This API reference provides information on available endpoints and how to interact with them.
			Node:
			(type) c
			(layer)1
				Element:p
					For Direct Debits simply add the mandate, add the Direct Debit or Direct Debit Schedule and watch your payments come in. If you’re new to Direct Debits refer to this
				Element:a
					SEPA DDs Guide
					for an overview of the Direct Debit process.
			Node:
			(type) c
			(layer)1
				Element:p
					For Credit Transfers simply add the Beneficiary, add the Credit Transfer and your payment is sent out. If you’re new to Credit Transfers refer to this
				Element:a
					SEPA CTs Guide
					for an overview of the Credit Transfer process.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Getting Started
			Node:
			(type) c
			(layer)1
				Element:p
					To register for the service and get your API key, visit
				Element:a
					www.nuapay.com
					or e-mail:
				Element:a
					support@nuapay.com
			Node:
			(type) c
			(layer)1
				Element:p
					If you prefer to talk to someone, call 00353 (0)1 901 2398.
			Node:
			(type) c
			(layer)1
				Element:p
					We'll have you up and running in no time.
			Node:
			(type) h1
			(layer)1
				Element:h1
					API Endpoints
			Node:
			(type) c
			(layer)1
				Element:p
					Once you have your API key, you can send requests to the following endpoints:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					Live: https://api.nuapay.com
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					UAT: https://api.sentenialtest.com/
			Node:
			(type) c
			(layer)1
				Element:p
					Our APIs are RESTful and we use JSON format for submitting and retrieving data.
			Node:
			(type) c
			(layer)1
				Element:p
					A note on IDs: All IDs used in URIs are encoded. IDs used in request bodies are unencoded.
			Node:
			(type) c
			(layer)1
				Element:p
					To view all available Nuapay REST endpoints, see the
				Element:a
					Resources
					sections below.
			Node:
			(type) c
			(layer)1
				Element:aside
					If you choose to use Java to integrate with our API, then you can make use of the
				Element:a
					Nuapay Java Rest Client
					library.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Authentication
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					To authorize, use this code:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					# With curl, you can just pass BASIC auth header
				Element:span
					# (-u option) with each request
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/46pkx7o9n5/mandates'
					-u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					// With java client library use following code to set up your ApiKey
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					); RetrieveMandateResponse retrieveMandateResponse =
				Element:span
					new
					MandateServiceDefault(serviceConfig) .retrieveMandate(
				Element:span
					"46pkx7o9n5"
					,
				Element:span
					"46pkx7o9n5"
					);
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Make sure to replace
				Element:code
					bb09c2b6a...
					with your API key.
			Node:
			(type) c
			(layer)1
				Element:p
					Access to the API is controlled by HTTP Basic authentication.
			Node:
			(type) c
			(layer)1
				Element:p
					Provide your API key as the basic authentication username, encoded in Base64. No password needs to be provided, however the request must be made from an allowed IP address configured in Nuapay.
			Node:
			(type) c
			(layer)1
				Element:p
					API authentication header format:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					Authorization: Basic Base64(<API_Key>:)
			Node:
			(type) c
			(layer)1
				Element:p
					All API requests must be made over HTTPS, calls made over plain HTTP will fail. All API requests must be authenticated.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Security
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Output Encoding Rules
						Node:
						(type) c
						(layer)2
							Element:p
								The code converts untrusted input into a safe form where the input is displayed as data to the user without executing as code in the browser.
						Node:
						(type) c
						(layer)2
							Element:p
								The implementation is based off the
							Element:a
								OWASP recommendations
								.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Resources
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response with single entity
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					{
				Element:span
					"uri"
					:
				Element:span
					"/files/23qzxn1f7m"
					,
				Element:span
					"data"
					: {
				Element:span
					"id"
					:
				Element:span
					"23qzxn1f7m"
					,
				Element:span
					"uri"
					:
				Element:span
					"/files/23qzxn1f7m"
					} }
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response with collection
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes/46pkx7o9n5/mandates"
					,
				Element:span
					"data"
					: [ {
				Element:span
					"id"
					:
				Element:span
					"46pkxn8e9n"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/8g3o2yyk2w/mandates/46pkxn8e9n"
					,
				Element:span
					"mandateId"
					:
				Element:span
					"b8b7ee91-b403-4ecb-9d98-059746dd8149"
					,
				Element:span
					"debtorName"
					:
				Element:span
					"Debtor Name"
					,
				Element:span
					"debtorIBAN"
					:
				Element:span
					"GB94SELN00999976543215"
					,
				Element:span
					"debtorMobileNumber"
					:
				Element:span
					"0360321312312"
					,
				Element:span
					"mandateStatus"
					:
				Element:span
					"ACTIVE"
					,
				Element:span
					"creationDate"
					:
				Element:span
					"2015-07-21"
					} ],
				Element:span
					"page"
					: {
				Element:span
					"pageNumber"
					:
				Element:span
					1
					,
				Element:span
					"pageSize"
					:
				Element:span
					1
					,
				Element:span
					"totalElements"
					:
				Element:span
					1
					,
				Element:span
					"totalPages"
					:
				Element:span
					1
					},
				Element:span
					"sort"
					: [ ] }
			Node:
			(type) c
			(layer)1
				Element:p
					All resources returned by endpoints are contained within a resource envelope.
			Node:
			(type) c
			(layer)1
				Element:p
					For single entities, the JSON envelope has the following structure:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					uri
				Element:td
					String
				Element:td
					Resource URI
				Element:tr
				Element:td
					data.id
				Element:td
					String
				Element:td
					Resource ID
				Element:tr
				Element:td
					data.uri
				Element:td
					String
				Element:td
					Resource URI
				Element:tr
				Element:td
					data.*
				Element:td
				Element:td
					Resource content
			Node:
			(type) c
			(layer)1
				Element:p
					For collections, the JSON envelope contains the following structure:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					uri
				Element:td
					String
				Element:td
					Collection resource URI
				Element:tr
				Element:td
					data
				Element:td
					Collection
				Element:td
					Collection of resources
				Element:tr
				Element:td
					data[].id
				Element:td
					String
				Element:td
					Resource ID
				Element:tr
				Element:td
					data[].uri
				Element:td
					String
				Element:td
					Resource URI
				Element:tr
				Element:td
					data[].*
				Element:td
				Element:td
					Resource content
				Element:tr
				Element:td
					data.page
				Element:td
					Pagination object
				Element:td
					Meta-data related to pagination
				Element:tr
				Element:td
					data.sort
				Element:td
					Sort object
				Element:td
					Meta-data related to sorting (currently empty)
			Node:
			(type) h1
			(layer)1
				Element:h1
					Direct Debits APIs
			Node:
			(type) c
			(layer)1
				Element:p
					This section contains descriptions of APIs to allow for management of Direct Debits.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Creditor Schemes
			Node:
			(type) c
			(layer)1
				Element:p
					The Creditor Schemes associated to the Merchant. Each scheme will have a unique Creditor Scheme ID and a Scheme Type, CORE, B2B etc.
			Node:
			(type) c
			(layer)1
				Element:h2
					Creditor Scheme Object
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example JSON structure describing the Creditor Scheme
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					{
				Element:span
					"creditorSchemeId"
					:
				Element:span
					"1"
					,
				Element:span
					"schemeType"
					:
				Element:span
					"CORE"
					}
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Parameter
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					creditorSchemeId
				Element:td
					String
				Element:td
					Creditor Scheme ID
				Element:tr
				Element:td
					schemeType
				Element:td
					String
				Element:td
					Scheme Type
			Node:
			(type) c
			(layer)1
				Element:h2
					List Creditor Schemes
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes'
					-u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					); List<CreditorSchemeResource> creditorSchemes =
				Element:span
					new
					CreditorSchemeServiceDefault(serviceConfig) .listCreditorSchemes().getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes"
					,
				Element:span
					"data"
					: [ {
				Element:span
					"id"
					:
				Element:span
					"abxq9kq52l"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l"
					,
				Element:span
					"creditorSchemeId"
					:
				Element:span
					"BE31ZZZ12345"
					,
				Element:span
					"schemeType"
					:
				Element:span
					"CORE"
					} ] }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					GET
					request is used to retrieve a collection of Creditor Schemes.
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Definition
									Node:
									(type) c
									(layer)3
										Element:p
										Element:code
											GET /schemes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Returns
									Node:
									(type) c
									(layer)3
										Element:p
											Returns
										Element:code
											200 OK
											response code and JSON structure representing a collection of Creditor Scheme objects.
									Node:
									(type) c
									(layer)3
										Element:p
											In case of failure, an
										Element:a
											error
											is returned within the error structure (see
										Element:a
											Errors
											section).
			Node:
			(type) h1
			(layer)1
				Element:h1
					Mandates
			Node:
			(type) c
			(layer)1
				Element:p
					Mandates are associated to a Creditor Scheme (CORE or B2B) and enable the collection of funds from a debtor’s account to a creditor’s account via Direct Debits.
			Node:
			(type) c
			(layer)1
				Element:p
					To access a mandate use the following URL:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					https://api.nuapay.com/schemes/{CS_ID}/mandates/{MANDATE_ID}
			Node:
			(type) c
			(layer)1
				Element:p
					where
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:code
					CS_ID
					, is the Creditor Scheme resource ID returned by
				Element:a
					List Creditor Schemes
				Element:li
				Element:code
					MANDATE_ID
					, is the mandate resource ID returned by a variety of mandate services including:
				Element:a
					Create Mandate
					,
				Element:a
					List Mandates
					,
				Element:a
					Retrieve Mandate
			Node:
			(type) c
			(layer)1
				Element:h2
					Mandate Object
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example JSON structure describing a mandate
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					{
				Element:span
					"debtor"
					: {
				Element:span
					"name"
					:
				Element:span
					"Debtor Name"
					,
				Element:span
					"address"
					: {
				Element:span
					"line1"
					:
				Element:span
					"Debtor Address Line1"
					,
				Element:span
					"line2"
					:
				Element:span
					"Debtor Address Line2"
					,
				Element:span
					"town"
					:
				Element:span
					" Debtor Town"
					,
				Element:span
					"postCode"
					:
				Element:span
					"123123"
					,
				Element:span
					"state"
					:
				Element:span
					"Debtor State"
					,
				Element:span
					"country"
					:
				Element:span
					"IE"
					},
				Element:span
					"language"
					:
				Element:span
					"fr_BE"
					,
				Element:span
					"email"
					:
				Element:span
					"debtor@email.com"
					,
				Element:span
					"phoneNumber"
					:
				Element:span
					"0360123123123"
					,
				Element:span
					"mobileNumber"
					:
				Element:span
					"0360321312312"
					},
				Element:span
					"mandateInfo"
					: {
				Element:span
					"mandateId"
					:
				Element:span
					"1234567899"
					,
				Element:span
					"contractReference"
					:
				Element:span
					"Contract Reference"
					,
				Element:span
					"signatureLocation"
					:
				Element:span
					"Signature Location"
					,
				Element:span
					"signatureDate"
					:
				Element:span
					"2015-07-21"
					,
				Element:span
					"mandateType"
					:
				Element:span
					"RCUR"
					,
				Element:span
					"status"
					:
				Element:span
					"PENDING"
					,
				Element:span
					"creationDate"
					:
				Element:span
					"2015-07-21"
					},
				Element:span
					"debtorAccount"
					: {
				Element:span
					"iban"
					:
				Element:span
					"GB94SELN00999976543215"
					,
				Element:span
					"bic"
					:
				Element:span
					"SELNGB21"
					},
				Element:span
					"creditorAccount"
					: {
				Element:span
					"iban"
					:
				Element:span
					"GB47SELN00999912345678"
					,
				Element:span
					"bic"
					:
				Element:span
					"SELNGB21"
					} }
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					debtor.name
				Element:em
					required
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Debtor Name
				Element:tr
				Element:td
					debtor.address.line1
				Element:em
					optional
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Debtor Address Line 1
				Element:tr
				Element:td
					debtor.address.line2
				Element:em
					optional
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Debtor Address Line 2
				Element:tr
				Element:td
					debtor.address.town
				Element:em
					optional
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Debtor Address City/Town
				Element:tr
				Element:td
					debtor.address.postCode
				Element:em
					optional
				Element:td
					String
				Element:em
					max 16 chars
				Element:td
					Debtor Address Post Code
				Element:tr
				Element:td
					debtor.address.state
				Element:em
					optional
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Debtor Address State/Province/County
				Element:tr
				Element:td
					debtor.address.country
				Element:em
					optional
				Element:td
					String
				Element:em
					enum
				Element:td
					ISO 3166-1 alpha-2 code
				Element:tr
				Element:td
					debtor.language
				Element:em
					optional
				Element:td
					String
				Element:em
					enum
				Element:td
					Communication language. One of (
				Element:code
					en
					,
				Element:code
					pt
					,
				Element:code
					nl
					,
				Element:code
					fr
					,
				Element:code
					it
					,
				Element:code
					es
					,
				Element:code
					de
					,
				Element:code
					sk
					,
				Element:code
					fr_BE
					,
				Element:code
					nl_BE
					)
				Element:tr
				Element:td
					debtor.email
				Element:em
					optional
				Element:td
					String
				Element:em
					max 254 chars
				Element:td
					Debtor Email Address
				Element:tr
				Element:td
					debtor.phoneNumber
				Element:em
					optional
				Element:td
					String
				Element:em
					max 30 chars
				Element:td
					Debtor Phone Number
				Element:tr
				Element:td
					debtor.mobileNumber
				Element:em
					optional
				Element:td
					String
				Element:em
					max 30 chars
				Element:td
					Debtor Mobile Phone
				Element:tr
				Element:td
					mandateInfo.mandateId
				Element:em
					optional
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Mandate Reference (UMR)
				Element:tr
				Element:td
					mandateInfo.contractReference
				Element:em
					optional
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Contract Reference
				Element:tr
				Element:td
					mandateInfo.signatureLocation
				Element:em
					optional
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Signature Location
				Element:tr
				Element:td
					mandateInfo.signatureDate
				Element:em
					optional
				Element:td
					Date
				Element:em
					yyyy-mm-dd
				Element:td
					Signature Date
				Element:tr
				Element:td
					mandateInfo.mandateType
				Element:em
					optional
				Element:td
					String
				Element:em
					enum
				Element:td
					Either
				Element:code
					OOFF
					or
				Element:code
					RCUR
				Element:tr
				Element:td
					mandateInfo.status
				Element:td
					String
				Element:em
					enum
				Element:td
					Response parameter only. One of possible mandate statuses (
				Element:code
					ACTIVE
					,
				Element:code
					CANCELLED
					,
				Element:code
					COMPLETE
					,
				Element:code
					PENDING
					,
				Element:code
					UNREADABLE
					,
				Element:code
					UNSIGNED
					,
				Element:code
					SCREENING
					,
				Element:code
					SUSPENDED
					,
				Element:code
					READY_FOR_EXPORT
					,
				Element:code
					EXPORTED
					)
				Element:tr
				Element:td
					mandateInfo.creationDate
				Element:td
					Date
				Element:em
					yyyy-mm-dd
				Element:td
					Response parameter only. Date when the mandate was created
				Element:tr
				Element:td
					debtorAccount.iban
				Element:em
					required
				Element:td
					String
				Element:em
					max 34 chars
				Element:td
					Debtor Account IBAN
				Element:tr
				Element:td
					debtorAccount.bic
				Element:em
					optional
				Element:td
					String
				Element:em
					max 11 chars
				Element:td
					Debtor Account BIC
				Element:tr
				Element:td
					creditorAccount.iban
				Element:em
					required
				Element:td
					String
				Element:em
					max 34 chars
				Element:td
					Creditor Account IBAN
				Element:tr
				Element:td
					creditorAccount.bic
				Element:em
					optional
				Element:td
					String
				Element:em
					max 11 chars
				Element:td
					Creditor Account BIC
			Node:
			(type) c
			(layer)1
				Element:h2
					Mandate List Object
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example JSON structure describing a list mandate object
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					{
				Element:span
					"mandateId"
					:
				Element:span
					"BEL000049995012C"
					,
				Element:span
					"debtorName"
					:
				Element:span
					"Debtor Name"
					,
				Element:span
					"debtorIBAN"
					:
				Element:span
					"GB94SELN00999976543215"
					,
				Element:span
					"debtorMobileNumber"
					:
				Element:span
					"0360321312312"
					,
				Element:span
					"mandateStatus"
					:
				Element:span
					"ACTIVE"
					,
				Element:span
					"creationDate"
					:
				Element:span
					"2015-07-21"
					}
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					mandateId
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Mandate Reference (UMR)
				Element:tr
				Element:td
					debtorName
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Debtor Name
				Element:tr
				Element:td
					debtorIBAN
				Element:td
					String
				Element:em
					max 34 chars
				Element:td
					Debtor Account IBAN
				Element:tr
				Element:td
					debtorMobileNumber
				Element:td
					String
				Element:em
					max 30 chars
				Element:td
					Debtor Mobile Phone
				Element:tr
				Element:td
					mandateStatus
				Element:td
					String
				Element:em
					enum
				Element:td
					One of possible mandate statuses (
				Element:code
					ACTIVE
					,
				Element:code
					CANCELLED
					,
				Element:code
					COMPLETE
					,
				Element:code
					PENDING
					,
				Element:code
					UNREADABLE
					,
				Element:code
					UNSIGNED
					,
				Element:code
					SCREENING
					,
				Element:code
					SUSPENDED
					,
				Element:code
					READY_FOR_EXPORT
					,
				Element:code
					EXPORTED
					)
				Element:tr
				Element:td
					creationDate
				Element:td
					Date
				Element:em
					yyyy-mm-dd
				Element:td
					Date when the mandate was created
			Node:
			(type) c
			(layer)1
				Element:h2
					Create Mandate
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/46pkx7o9n5/mandates'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \ -X POST -H
				Element:span
					'Content-Type: application/json'
				Element:span
					-d
					\
				Element:span
					'{ "debtor" : { "name" : "Debtor Name", "address" : { "line1" : "Debtor Address Line1", "line2" : "Debtor Address Line2", "town" : " Debtor Town", "postCode" : "123123", "state" : "Debtor State", "country" : "IE" }, "language" : "fr_BE", "email" : "debtor@email.com", "phoneNumber" : "0360123123123", "mobileNumber" : "0360321312312" }, "mandateInfo" : { "mandateId" : "1234567899", "contractReference" : "Contract Reference", "signatureLocation" : "Signature Location", "signatureDate" : "2015-07-21", "mandateType" : "RCUR" }, "debtorAccount" : { "iban" : "GB94SELN00999976543215", "bic" : "SELNGB21" }, "creditorAccount" : { "iban" : "GB47SELN00999912345678", "bic" : "SELNGB21" } }'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					); CreateMandateRequest createMandateRequest =
				Element:span
					new
					CreateMandateRequest() .withMandate(
				Element:span
					new
					Mandate() .withDebtor(
				Element:span
					new
					Debtor() .withName(
				Element:span
					"Debtor Name"
					) .withAddress(
				Element:span
					new
					Address() .withLine1(
				Element:span
					"Debtor Address Line1"
					) .withLine2(
				Element:span
					"Debtor Address Line2"
					) .withTown(
				Element:span
					"Debtor Town"
					) .withPostCode(
				Element:span
					"123123"
					) .withState(
				Element:span
					"Debtor State"
					) .withCountry(
				Element:span
					"IE"
					) ) .withLanguage(
				Element:span
					"fr_BE"
					) .withEmail(
				Element:span
					"debtor@email.com"
					) .withPhoneNumber(
				Element:span
					"0360123123123"
					) .withMobileNumber(
				Element:span
					"0360321312312"
					) ) .withMandateInfo(
				Element:span
					new
					MandateInfo() .withMandateId(
				Element:span
					"1234567899"
					) .withContractReference(
				Element:span
					"Contract Reference"
					) .withSignatureLocation(
				Element:span
					"Signature Location"
					) .withSignatureDate(DateUtils.toDate(
				Element:span
					"2015-07-21"
					)) .withMandateType(MandateType.RCUR) ) .withDebtorAccount(
				Element:span
					new
					BasicAccount() .withIban(
				Element:span
					"GB94SELN00999976543215"
					) ) .withCreditorAccount(
				Element:span
					new
					BasicAccount() .withIban(
				Element:span
					"GB47SELN00999912345678"
					) ) ); MandateResource mandateResource =
				Element:span
					new
					MandateServiceDefault(serviceConfig) .createMandate(
				Element:span
					"46pkx7o9n5"
					, createMandateRequest) .getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					201
					Created
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes/46pkx7o9n5/mandates/ne8y69wwpo"
					,
				Element:span
					"data"
					: {
				Element:span
					"id"
					:
				Element:span
					"ne8y69wwpo"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/46pkx7o9n5/mandates/ne8y69wwpo"
					,
				Element:span
					"debtor"
					: {
				Element:span
					"name"
					:
				Element:span
					"Debtor Name"
					,
				Element:span
					"address"
					: {
				Element:span
					"line1"
					:
				Element:span
					"Debtor Address Line1"
					,
				Element:span
					"line2"
					:
				Element:span
					"Debtor Address Line2"
					,
				Element:span
					"town"
					:
				Element:span
					" Debtor Town"
					,
				Element:span
					"postCode"
					:
				Element:span
					"123123"
					,
				Element:span
					"state"
					:
				Element:span
					"Debtor State"
					,
				Element:span
					"country"
					:
				Element:span
					"IE"
					},
				Element:span
					"language"
					:
				Element:span
					"fr_BE"
					,
				Element:span
					"email"
					:
				Element:span
					"debtor@email.com"
					,
				Element:span
					"phoneNumber"
					:
				Element:span
					"0360123123123"
					,
				Element:span
					"mobileNumber"
					:
				Element:span
					"0360321312312"
					},
				Element:span
					"mandateInfo"
					: {
				Element:span
					"mandateId"
					:
				Element:span
					"1234567899"
					,
				Element:span
					"contractReference"
					:
				Element:span
					"Contract Reference"
					,
				Element:span
					"signatureLocation"
					:
				Element:span
					"Signature Location"
					,
				Element:span
					"signatureDate"
					:
				Element:span
					"2015-07-21"
					,
				Element:span
					"mandateType"
					:
				Element:span
					"RCUR"
					,
				Element:span
					"status"
					:
				Element:span
					"PENDING"
					,
				Element:span
					"creationDate"
					:
				Element:span
					"2015-07-21"
					},
				Element:span
					"debtorAccount"
					: {
				Element:span
					"iban"
					:
				Element:span
					"GB94SELN00999976543215"
					,
				Element:span
					"bic"
					:
				Element:span
					"SELNGB21"
					},
				Element:span
					"creditorAccount"
					: {
				Element:span
					"iban"
					:
				Element:span
					"GB47SELN00999912345678"
					,
				Element:span
					"bic"
					:
				Element:span
					"SELNGB21"
					} } }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					POST
					request is used to create mandates. The request must contain the
				Element:code
					application/json
					content type. In the request body you provide a JSON structure describing the Mandate.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					POST /schemes/{CS_ID}/mandates
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					root
				Element:em
					required
				Element:td
					Mandate
				Element:td
					JSON structure describing a mandate (See
				Element:a
					Mandate Object
					section)
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					201 Created
					response code, a URI to the created resource and a JSON structure representing the created resource.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					Retrieve Mandate
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/46pkx7o9n5/mandates/46pkx7o9n5'
					-u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					); MandateResource mandateResource =
				Element:span
					new
					MandateServiceDefault(serviceConfig) .retrieveMandate(
				Element:span
					"46pkx7o9n5"
					,
				Element:span
					"46pkx7o9n5"
					) .getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes/46pkx7o9n5/mandates/46pkx7o9n5"
					,
				Element:span
					"data"
					: {
				Element:span
					"id"
					:
				Element:span
					"46pkx7o9n5"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/46pkx7o9n5/mandates/46pkx7o9n5"
					,
				Element:span
					"debtor"
					: {
				Element:span
					"name"
					:
				Element:span
					"Debtor Name"
					,
				Element:span
					"address"
					: {
				Element:span
					"line1"
					:
				Element:span
					"Debtor Address Line1"
					,
				Element:span
					"line2"
					:
				Element:span
					"Debtor Address Line2"
					,
				Element:span
					"town"
					:
				Element:span
					" Debtor Town"
					,
				Element:span
					"postCode"
					:
				Element:span
					"123123"
					,
				Element:span
					"state"
					:
				Element:span
					"Debtor State"
					,
				Element:span
					"country"
					:
				Element:span
					"IE"
					},
				Element:span
					"language"
					:
				Element:span
					"fr_BE"
					,
				Element:span
					"email"
					:
				Element:span
					"debtor@email.com"
					,
				Element:span
					"phoneNumber"
					:
				Element:span
					"0360123123123"
					,
				Element:span
					"mobileNumber"
					:
				Element:span
					"0360321312312"
					},
				Element:span
					"mandateInfo"
					: {
				Element:span
					"mandateId"
					:
				Element:span
					"1234567899"
					,
				Element:span
					"contractReference"
					:
				Element:span
					"Contract Reference"
					,
				Element:span
					"signatureLocation"
					:
				Element:span
					"Signature Location"
					,
				Element:span
					"signatureDate"
					:
				Element:span
					"2015-07-21"
					,
				Element:span
					"mandateType"
					:
				Element:span
					"RCUR"
					,
				Element:span
					"status"
					:
				Element:span
					"PENDING"
					,
				Element:span
					"creationDate"
					:
				Element:span
					"2015-07-21"
					},
				Element:span
					"debtorAccount"
					: {
				Element:span
					"iban"
					:
				Element:span
					"GB94SELN00999976543215"
					,
				Element:span
					"bic"
					:
				Element:span
					"SELNGB21"
					},
				Element:span
					"creditorAccount"
					: {
				Element:span
					"iban"
					:
				Element:span
					"GB47SELN00999912345678"
					,
				Element:span
					"bic"
					:
				Element:span
					"SELNGB21"
					} } }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					GET
					request is used to retrieve mandate.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET /schemes/{CS_ID}/mandates/{MANDATE_ID}
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a JSON structure representing the queried mandate resource.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					Retrieve Mandate Document
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/46pkx7o9n5/mandates/46pkx7o9n5/document'
					-u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					);
				Element:span
					byte
					[] image =
				Element:span
					new
					MandateServiceDefault(serviceConfig) .retrieveMandateDocument(
				Element:span
					"46pkx7o9n5"
					,
				Element:span
					"46pkx7o9n5"
					);
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1 200 OK Content-Type: application/pdf <<<<pdf-content>>>>
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					GET
					request is used to retrieve a mandate PDF, JPEG or GIF file.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET /schemes/{CS_ID}/mandates/{MANDATE_ID}/document
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a PDF, JPEG or GIF file as response content.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					Upload Mandate Document
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/w24y3dya2p/mandates/abxq9kq52l/document'
					-X POST \ -u e8fe452a46e8ccb2fa72d8c91e2228d6ce41e652bce32dc63dd29f184cbca82e: \ -H
				Element:span
					'Content-Type: multipart/form-data'
					\ -F
				Element:span
					'file=@Mandate-file.pdf;type=application/pdf'
					-F \
				Element:span
					'json={ "fileName":"Mandate.pdf" };type=application/json'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"7394645c6830a2732f9c90500841e18023e08c52ac9f879b62520564ccd29807"
					);
				Element:span
					byte
					[] fileContent = ... MandateResource mandateResource =
				Element:span
					new
					MandateServiceDefault(serviceConfig) .updateMandateDocument(
				Element:span
					"w24y3dya2p"
					,
				Element:span
					"abxq9kq52l"
					,
				Element:span
					new
					UpdateMandateDocumentRequest().withFileName(
				Element:span
					"mandate123.pdf"
					), fileContent) .getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/w24y3dya2p"
					,
				Element:span
					"data"
					: {
				Element:span
					"id"
					:
				Element:span
					"w24y3dya2p"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/w24y3dya2p"
					} }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					POST
					request used to upload a mandate image in PDF, GIF or JPEG format. A request must contain the
				Element:code
					multipart/form-data
					content type with a
				Element:code
					json
					part containing input parameters in a JSON structure, a
				Element:code
					file
					part with file content and a 'file content type'.
			Node:
			(type) c
			(layer)1
				Element:p
					Accepted file content types:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:code
					application/pdf
				Element:li
				Element:code
					image/jpeg
				Element:li
				Element:code
					image/gif
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					POST /schemes/{CS_ID}/mandates/{MANDATE_ID}/document
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					fileName
				Element:em
					optional
				Element:td
					String
				Element:em
					max 39 chars
				Element:td
					Specifies the image file name, if not provided uses the name of the uploaded file
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					List Mandates
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/46pkx7o9n5/mandates/?debtoriban=GB94SELN00999976543215&debtorname=Debtor&createdatefrom=2015-07-01&createdateto=2015-07-06&mandateid=BEL000049995012C&mandatestatus=ACTIVE'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					); ListMandatesRequestParameters listMandatesRequestParameters =
				Element:span
					new
					ListMandatesRequestParameters() .withDebtorIban(
				Element:span
					"GB94SELN00999976543215"
					) .withDebtorName(
				Element:span
					"Debtor"
					) .withCreateDateFrom(DateUtils.toDate(
				Element:span
					"2015-07-29"
					)) .withCreateDateTo(DateUtils.toDate(
				Element:span
					"2015-07-29"
					)) .withMandateId(
				Element:span
					"BEL000049995012C"
					) .withMandateStatus(MandateStatus.ACTIVE); List<MandateSummaryResource> mandateSummaryList =
				Element:span
					new
					MandateServiceDefault(serviceConfig) .listMandates(
				Element:span
					"46pkx7o9n5"
					, listMandatesRequestParameters) .getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes/46pkx7o9n5/mandates"
					,
				Element:span
					"data"
					: [ {
				Element:span
					"id"
					:
				Element:span
					"46pkxn8e9n"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/8g3o2yyk2w/mandates/46pkxn8e9n"
					,
				Element:span
					"mandateId"
					:
				Element:span
					"BEL000049995012C"
					,
				Element:span
					"debtorName"
					:
				Element:span
					"Debtor Name"
					,
				Element:span
					"debtorIBAN"
					:
				Element:span
					"GB94SELN00999976543215"
					,
				Element:span
					"debtorMobileNumber"
					:
				Element:span
					"0360321312312"
					,
				Element:span
					"mandateStatus"
					:
				Element:span
					"ACTIVE"
					,
				Element:span
					"creationDate"
					:
				Element:span
					"2015-07-21"
					}, {
				Element:span
					"id"
					:
				Element:span
					"nx9kndaejm"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/8g3o2yyk2w/mandates/nx9kndaejm"
					,
				Element:span
					"mandateId"
					:
				Element:span
					"BEL000049995012S"
					,
				Element:span
					"debtorName"
					:
				Element:span
					"Debtor Name"
					,
				Element:span
					"debtorIBAN"
					:
				Element:span
					"GB94SELN00999976543215"
					,
				Element:span
					"debtorMobileNumber"
					:
				Element:span
					"0360321312312"
					,
				Element:span
					"mandateStatus"
					:
				Element:span
					"ACTIVE"
					,
				Element:span
					"creationDate"
					:
				Element:span
					"2015-07-21"
					}, {
				Element:span
					"id"
					:
				Element:span
					"vw7kj9gey5"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/8g3o2yyk2w/mandates/vw7kj9gey5"
					,
				Element:span
					"mandateId"
					:
				Element:span
					"BEL000049995012X"
					,
				Element:span
					"debtorName"
					:
				Element:span
					"Debtor Name"
					,
				Element:span
					"debtorIBAN"
					:
				Element:span
					"GB94SELN00999976543215"
					,
				Element:span
					"debtorMobileNumber"
					:
				Element:span
					"0360321312312"
					,
				Element:span
					"mandateStatus"
					:
				Element:span
					"ACTIVE"
					,
				Element:span
					"creationDate"
					:
				Element:span
					"2015-07-21"
					} ],
				Element:span
					"page"
					: {
				Element:span
					"pageNumber"
					:
				Element:span
					1
					,
				Element:span
					"pageSize"
					:
				Element:span
					20
					,
				Element:span
					"totalElements"
					:
				Element:span
					3
					,
				Element:span
					"totalPages"
					:
				Element:span
					1
					},
				Element:span
					"sort"
					: [ ] }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					GET
					request is used to retrieve a collection of mandates. Can return mandates associated to the Creditor Scheme and organization.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
					To return mandates for a particular Creditor Scheme, use
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET /schemes/{CS_ID}/mandates
			Node:
			(type) c
			(layer)1
				Element:p
					To return all mandates for an organization, use
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET /mandates
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Request parameter
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					debtoriban
				Element:em
					optional
				Element:td
					Debtor IBAN
				Element:tr
				Element:td
					debtorname
				Element:em
					optional
				Element:td
					Debtor Name
				Element:tr
				Element:td
					createdatefrom
				Element:em
					optional
				Element:td
					Format
				Element:code
					yyyy-mm-dd
					. Default to Current Date - 365 calendar days
				Element:tr
				Element:td
					createdateto
				Element:em
					optional
				Element:td
					Format
				Element:code
					yyyy-mm-dd
					. Default Current Date
				Element:tr
				Element:td
					mandateid
				Element:em
					optional
				Element:td
					Mandate UMR
				Element:tr
				Element:td
					mandatestatus
				Element:em
					optional
				Element:td
					One of possible mandate statuses (
				Element:code
					ACTIVE
					,
				Element:code
					CANCELLED
					,
				Element:code
					COMPLETE
					,
				Element:code
					PENDING
					,
				Element:code
					UNREADABLE
					,
				Element:code
					UNSIGNED
					,
				Element:code
					SCREENING
					,
				Element:code
					SUSPENDED
					,
				Element:code
					READY_FOR_EXPORT
					,
				Element:code
					EXPORTED
					)
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a JSON structure representing a collection of
				Element:a
					List mandate objects
					.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					Update Mandate
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/46pkx7o9n5/mandates/ne8y69wwpo'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \ -X PUT -H
				Element:span
					'Content-Type: application/json'
				Element:span
					-d
					\
				Element:span
					'{ "debtor" : { "name" : "Debtor Name", "address" : { "line1" : "Debtor Address Line1", "line2" : "Debtor Address Line2", "town" : " Debtor Town", "postCode" : "123123", "state" : "Debtor State", "country" : "IE" }, "language" : "fr_BE", "email" : "debtor@email.com", "phoneNumber" : "0360123123123", "mobileNumber" : "0360321312312" }, "mandateInfo" : { "mandateId" : "1234567899", "contractReference" : "Contract Reference", "signatureLocation" : "Signature Location", "signatureDate" : "2015-07-21", "mandateType" : "RCUR" }, "debtorAccount" : { "iban" : "GB94SELN00999976543215", "bic" : "SELNGB21" }, "creditorAccount" : { "iban" : "GB47SELN00999912345678", "bic" : "SELNGB21" } }'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					); UpdateMandateRequest updateMandateRequest =
				Element:span
					new
					UpdateMandateRequest() .withMandate(
				Element:span
					new
					Mandate() .withDebtor(
				Element:span
					new
					Debtor() .withName(
				Element:span
					"Debtor Name"
					) .withAddress(
				Element:span
					new
					Address() .withLine1(
				Element:span
					"Debtor Address Line1"
					) .withLine2(
				Element:span
					"Debtor Address Line2"
					) .withTown(
				Element:span
					"Debtor Town"
					) .withPostCode(
				Element:span
					"123123"
					) .withState(
				Element:span
					"Debtor State"
					) .withCountry(
				Element:span
					"IE"
					) ) .withLanguage(
				Element:span
					"fr_BE"
					) .withEmail(
				Element:span
					"debtor@email.com"
					) .withPhoneNumber(
				Element:span
					"0360123123123"
					) .withMobileNumber(
				Element:span
					"0360321312312"
					) ) .withMandateInfo(
				Element:span
					new
					MandateInfo() .withMandateId(
				Element:span
					"1234567899"
					) .withContractReference(
				Element:span
					"Contract Reference"
					) .withSignatureLocation(
				Element:span
					"Signature Location"
					) .withSignatureDate(DateUtils.toDate(
				Element:span
					"2015-07-21"
					)) .withMandateType(MandateType.RCUR) ) .withDebtorAccount(
				Element:span
					new
					BasicAccount() .withIban(
				Element:span
					"GB94SELN00999976543215"
					) .withBic(
				Element:span
					"SELNGB21"
					) ) .withCreditorAccount(
				Element:span
					new
					BasicAccount() .withIban(
				Element:span
					"GB47SELN00999912345678"
					) .withBic(
				Element:span
					"SELNGB21"
					) ) ) .withResendMandateForSignature(ResendMandateForSignature.DEFAULT); MandateResource mandateResource =
				Element:span
					new
					MandateServiceDefault(serviceConfig) .updateMandate(
				Element:span
					"46pkx7o9n5"
					,
				Element:span
					"ne8y69wwpo"
					, updateMandateRequest) .getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/abxq9kq52l"
					,
				Element:span
					"data"
					: {
				Element:span
					"id"
					:
				Element:span
					"abxq9kq52l"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/abxq9kq52l"
					,
				Element:span
					"debtor"
					: {
				Element:span
					"name"
					:
				Element:span
					"Debtor Name"
					,
				Element:span
					"address"
					: {
				Element:span
					"line1"
					:
				Element:span
					"Debtor Address Line1"
					,
				Element:span
					"line2"
					:
				Element:span
					"Debtor Address Line2"
					,
				Element:span
					"town"
					:
				Element:span
					" Debtor Town"
					,
				Element:span
					"postCode"
					:
				Element:span
					"123123"
					,
				Element:span
					"state"
					:
				Element:span
					"Debtor State"
					,
				Element:span
					"country"
					:
				Element:span
					"IE"
					},
				Element:span
					"language"
					:
				Element:span
					"fr_BE"
					,
				Element:span
					"email"
					:
				Element:span
					"debtor@email.com"
					,
				Element:span
					"phoneNumber"
					:
				Element:span
					"0360123123123"
					,
				Element:span
					"mobileNumber"
					:
				Element:span
					"0360321312312"
					},
				Element:span
					"mandateInfo"
					: {
				Element:span
					"mandateId"
					:
				Element:span
					"1234567899"
					,
				Element:span
					"contractReference"
					:
				Element:span
					"Contract Reference"
					,
				Element:span
					"signatureLocation"
					:
				Element:span
					"Signature Location"
					,
				Element:span
					"signatureDate"
					:
				Element:span
					"2015-07-21"
					,
				Element:span
					"mandateType"
					:
				Element:span
					"RCUR"
					,
				Element:span
					"status"
					:
				Element:span
					"PENDING"
					,
				Element:span
					"creationDate"
					:
				Element:span
					"2015-07-21"
					},
				Element:span
					"debtorAccount"
					: {
				Element:span
					"iban"
					:
				Element:span
					"GB94SELN00999976543215"
					,
				Element:span
					"bic"
					:
				Element:span
					"SELNGB21"
					},
				Element:span
					"creditorAccount"
					: {
				Element:span
					"iban"
					:
				Element:span
					"GB47SELN00999912345678"
					,
				Element:span
					"bic"
					:
				Element:span
					"SELNGB21"
					} } }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					PUT
					request is used to update mandates. The request must contain the
				Element:code
					application/json
					content type. In the request body you provide a JSON structure describing the Mandate.
			Node:
			(type) c
			(layer)1
				Element:p
					NOTE: Where optional JSON object property is not provided it is treated as null. In case existing resource representation contains value under that property it will get overwritten.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					PUT /schemes/{CS_ID}/mandates/{MANDATE_ID}
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					root
				Element:em
					required
				Element:td
					Mandate
				Element:td
					JSON structure describing mandate (See
				Element:a
					Mandate Object
					section)
				Element:tr
				Element:td
					mandateInfo.resendMandateForSignature
				Element:em
					optional
				Element:td
					String
				Element:em
					enum
				Element:td
				Element:code
					DEFAULT
					: Only alter Mandate Status if
				Element:code
					ACTIVE
					back to
				Element:code
					PENDING
					if Key Field is altered in the Request
				Element:br
				Element:code
					SEND
					: Always alter Mandate status if
				Element:code
					ACTIVE
					back to
				Element:code
					PENDING
					regardless of update
				Element:br
				Element:code
					DO_NOT_SEND
					: Never alter Mandate status if
				Element:code
					ACTIVE
					back to
				Element:code
					PENDING
					regardless of update
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and JSON structure representing the updated mandate resource.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					Activate Mandate
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/46pkx7o9n5/mandates/ne8y69wwpo/activate'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \ -X POST -H
				Element:span
					'Content-Type: application/json'
				Element:span
					-d
					\
				Element:span
					'{ "signatureDate": "2015-07-21", "signatureLocation": "Signature Location", "electronicSignatureDetails": { "authorizationMethod": "SMS_PASSWORD", "authorizationToken": "1234", "authorizationEmail": "debtor@email.com", "authorizationMobileNumber": "0360321312312", "ipAddress": "192.168.8.1", "geographicLocation": "Geo Location" } }'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					); ActivateMandateRequest activateMandateRequest =
				Element:span
					new
					ActivateMandateRequest() .withSignatureDate(DateUtils.toDate(
				Element:span
					"2015-07-21"
					)) .withSignatureLocation(
				Element:span
					"Signature Location"
					) .withElectronicSignatureDetails(
				Element:span
					new
					ElectronicSignatureDetails() .withAuthorizationMethod(
				Element:span
					"SMS_PASSWORD"
					) .withAuthorizationToken(
				Element:span
					"1234"
					) .withAuthorizationEmail(
				Element:span
					"debtor@email.com"
					) .withAuthorizationMobileNumber(
				Element:span
					"0360321312312"
					) .withIpAddress(
				Element:span
					"192.168.8.1"
					) .withGeographicLocation(
				Element:span
					"Geo Location"
					) ); MandateResource mandateResource =
				Element:span
					new
					MandateServiceDefault(serviceConfig) .activateMandate(
				Element:span
					"46pkx7o9n5"
					,
				Element:span
					"ne8y69wwpo"
					, activateMandateRequest) .getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/w24y3dya2p/activate"
					,
				Element:span
					"data"
					: {
				Element:span
					"id"
					:
				Element:span
					"w24y3dya2p"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/w24y3dya2p"
					,
				Element:span
					"debtor"
					: {
				Element:span
					"name"
					:
				Element:span
					"Debtor Name"
					,
				Element:span
					"address"
					: {
				Element:span
					"line1"
					:
				Element:span
					"Debtor Address Line1"
					,
				Element:span
					"line2"
					:
				Element:span
					"Debtor Address Line2"
					,
				Element:span
					"town"
					:
				Element:span
					" Debtor Town"
					,
				Element:span
					"postCode"
					:
				Element:span
					"123123"
					,
				Element:span
					"state"
					:
				Element:span
					"Debtor State"
					,
				Element:span
					"country"
					:
				Element:span
					"IE"
					},
				Element:span
					"language"
					:
				Element:span
					"fr_BE"
					,
				Element:span
					"email"
					:
				Element:span
					"debtor@email.com"
					,
				Element:span
					"phoneNumber"
					:
				Element:span
					"0360123123123"
					,
				Element:span
					"mobileNumber"
					:
				Element:span
					"0360321312312"
					},
				Element:span
					"mandateInfo"
					: {
				Element:span
					"mandateId"
					:
				Element:span
					"1234567899"
					,
				Element:span
					"contractReference"
					:
				Element:span
					"Contract Reference"
					,
				Element:span
					"signatureLocation"
					:
				Element:span
					"Signature Location"
					,
				Element:span
					"signatureDate"
					:
				Element:span
					"2015-07-21"
					,
				Element:span
					"mandateType"
					:
				Element:span
					"RCUR"
					,
				Element:span
					"status"
					:
				Element:span
					"ACTIVE"
					,
				Element:span
					"creationDate"
					:
				Element:span
					"2015-07-21"
					},
				Element:span
					"debtorAccount"
					: {
				Element:span
					"iban"
					:
				Element:span
					"GB94SELN00999976543215"
					,
				Element:span
					"bic"
					:
				Element:span
					"SELNGB21"
					},
				Element:span
					"creditorAccount"
					: {
				Element:span
					"iban"
					:
				Element:span
					"GB47SELN00999912345678"
					,
				Element:span
					"bic"
					:
				Element:span
					"SELNGB21"
					} } }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					POST
					request is used to activate mandates. A request must contain the
				Element:code
					application/json
					content type. In the request body you provide a JSON structure describing the Mandate.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					POST /schemes/{CS_ID}/mandates/{MANDATE_ID}/activate
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					signatureDate
				Element:em
					optional
				Element:td
					Date
				Element:em
					yyyy-mm-dd
				Element:td
					Signature Date
				Element:tr
				Element:td
					signatureLocation
				Element:em
					optional
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Signature Location
				Element:tr
				Element:td
					electronicSignatureDetails.authorizationMethod
				Element:em
					optional
				Element:td
					String
				Element:em
					enum
				Element:td
					Possible values:
				Element:code
					CHECK_BOX
					,
				Element:code
					SMS_PASSWORD
					,
				Element:code
					EMAIL_PASSWORD
				Element:tr
				Element:td
					electronicSignatureDetails.authorizationToken
				Element:em
					optional
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Authentication Token (OTP)
				Element:tr
				Element:td
					electronicSignatureDetails.authorizationEmail
				Element:em
					optional
				Element:td
					String
				Element:em
					max 254 chars
				Element:td
					Authentication Email Address
				Element:tr
				Element:td
					electronicSignatureDetails .authorizationMobileNumber
				Element:em
					optional
				Element:td
					String
				Element:em
					max 30 chars
				Element:td
					Authentication Phone Number
				Element:tr
				Element:td
					electronicSignatureDetails.ipAddress
				Element:em
					optional
				Element:td
					String
				Element:em
					max 39 chars
				Element:td
					Authentication IP Address
				Element:tr
				Element:td
					electronicSignatureDetails.geographicLocation
				Element:em
					optional
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Authentication Geographic Location
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a JSON structure representing the altered mandate resource.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					Cancel Mandate
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/46pkx7o9n5/mandates/ne8y69wwpo/cancel'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \ -X POST -H
				Element:span
					'Content-Type: application/json'
					\
				Element:span
					-d
				Element:span
					'{"operationReason":"Reason for cancellation"}'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					); CancelMandateRequest cancelMandateRequest =
				Element:span
					new
					CancelMandateRequest() .withOperationReason(
				Element:span
					"Reason for cancellation"
					); MandateResource mandateResource =
				Element:span
					new
					MandateServiceDefault(serviceConfig) .cancelMandate(
				Element:span
					"46pkx7o9n5"
					,
				Element:span
					"ne8y69wwpo"
					, cancelMandateRequest) .getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/w24y3dya2p"
					,
				Element:span
					"data"
					: {
				Element:span
					"id"
					:
				Element:span
					"w24y3dya2p"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/w24y3dya2p"
					,
				Element:span
					"debtor"
					: {
				Element:span
					"name"
					:
				Element:span
					"Debtor Name"
					,
				Element:span
					"address"
					: {
				Element:span
					"line1"
					:
				Element:span
					"Debtor Address Line1"
					,
				Element:span
					"line2"
					:
				Element:span
					"Debtor Address Line2"
					,
				Element:span
					"town"
					:
				Element:span
					" Debtor Town"
					,
				Element:span
					"postCode"
					:
				Element:span
					"123123"
					,
				Element:span
					"state"
					:
				Element:span
					"Debtor State"
					,
				Element:span
					"country"
					:
				Element:span
					"IE"
					},
				Element:span
					"language"
					:
				Element:span
					"fr_BE"
					,
				Element:span
					"email"
					:
				Element:span
					"debtor@email.com"
					,
				Element:span
					"phoneNumber"
					:
				Element:span
					"0360123123123"
					,
				Element:span
					"mobileNumber"
					:
				Element:span
					"0360321312312"
					},
				Element:span
					"mandateInfo"
					: {
				Element:span
					"mandateId"
					:
				Element:span
					"1234567899"
					,
				Element:span
					"contractReference"
					:
				Element:span
					"Contract Reference"
					,
				Element:span
					"signatureLocation"
					:
				Element:span
					"Signature Location"
					,
				Element:span
					"signatureDate"
					:
				Element:span
					"2015-07-21"
					,
				Element:span
					"mandateType"
					:
				Element:span
					"RCUR"
					,
				Element:span
					"status"
					:
				Element:span
					"CANCELLED"
					,
				Element:span
					"creationDate"
					:
				Element:span
					"2015-07-21"
					},
				Element:span
					"debtorAccount"
					: {
				Element:span
					"iban"
					:
				Element:span
					"GB94SELN00999976543215"
					,
				Element:span
					"bic"
					:
				Element:span
					"SELNGB21"
					},
				Element:span
					"creditorAccount"
					: {
				Element:span
					"iban"
					:
				Element:span
					"GB47SELN00999912345678"
					,
				Element:span
					"bic"
					:
				Element:span
					"SELNGB21"
					} } }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					POST
					request is used to cancel mandate.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					POST /schemes/{CS_ID}/mandates/{MANDATE_ID}/cancel
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					operationReason
				Element:em
					required
				Element:td
					String
				Element:em
					max 140 chars
				Element:td
					Reason for cancellation
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and JSON structure representing the altered mandate resource.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) h1
			(layer)1
				Element:h1
					E-Mandates
			Node:
			(type) c
			(layer)1
				Element:p
					Electronic Mandates, or E-Mandates, are digitally created and signed mandates associated to Creditor Schemes (CORE or B2B) and enable the collection of funds from a debtor's account to a creditor's account via Direct Debits.
			Node:
			(type) c
			(layer)1
				Element:p
					Once created the E-Mandate can be accessed using the Mandate rest services. See (
				Element:a
					Mandate Object
					) section in this document.
			Node:
			(type) c
			(layer)1
				Element:h2
					E-Mandate Signature URLs
			Node:
			(type) c
			(layer)1
				Element:p
					A signature URL is required to allow the signing of prepared E-Mandates. Below you can find the production and UAT environment URLs.
			Node:
			(type) c
			(layer)1
				Element:h3
					Production:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:a
					https://api.nuapay.com/emandate/web/show?token=XXXX
			Node:
			(type) c
			(layer)1
				Element:p
					Where XXXX is the token generated by the (
				Element:a
					Prepare E-Mandate
					) service.
			Node:
			(type) c
			(layer)1
				Element:h3
					UAT:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:a
					https://api.sentenialtest.com/emandate/web/show?token=XXXX
			Node:
			(type) c
			(layer)1
				Element:p
					Where XXXX is the token generated by the (
				Element:a
					Prepare E-Mandate
					) service.
			Node:
			(type) c
			(layer)1
				Element:p
					Depending on successful signing the user will be directed to either the e-mandate success URL or the e-mandate failure URL specified in the Nuapay application.
			Node:
			(type) c
			(layer)1
				Element:h2
					E-Mandate Object
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example JSON structure describing an E-Mandate
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					{
				Element:span
					"merchantDetails"
					: {
				Element:span
					"mandateId"
					:
				Element:span
					"1234567899"
					,
				Element:span
					"creditorSchemeId"
					:
				Element:span
					"BE31ZZZ12345"
					,
				Element:span
					"schemeType"
					:
				Element:span
					"CORE"
					,
				Element:span
					"mandateType"
					:
				Element:span
					"RCUR"
					,
				Element:span
					"contractReference"
					:
				Element:span
					"Contract Reference"
					,
				Element:span
					"iban"
					:
				Element:span
					"GB47SELN00999912345678"
					},
				Element:span
					"debtorDetails"
					:{
				Element:span
					"name"
					:
				Element:span
					"Debtor Name"
					,
				Element:span
					"address"
					: {
				Element:span
					"line1"
					:
				Element:span
					"Address Line 1"
					,
				Element:span
					"line2"
					:
				Element:span
					"Address Line 2"
					,
				Element:span
					"town"
					:
				Element:span
					"Address Town"
					,
				Element:span
					"postCode"
					:
				Element:span
					"123123"
					,
				Element:span
					"country"
					:
				Element:span
					"IE"
					},
				Element:span
					"mobileNumber"
					:
				Element:span
					"0360321312312"
					,
				Element:span
					"email"
					:
				Element:span
					"debtor@email.com"
					,
				Element:span
					"iban"
					:
				Element:span
					"GB94SELN00999976543215"
					} }
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					data.createDate
				Element:em
					optional
				Element:td
					Date
				Element:em
					yyyy-mm-dd
				Element:td
					Returned by Retreive E-Mandate request only, Creation Date of E-Mandate
				Element:td
				Element:tr
				Element:td
					data.authenticationDate
				Element:em
					optional
				Element:td
					Date
				Element:em
					yyyy-mm-dd
				Element:td
					Returned by Retreive E-Mandate request only, date E-Mandate token was used by the debtor
				Element:td
				Element:tr
				Element:td
					merchantDetails.mandateId
				Element:em
					optional
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Mandate SEPA Reference (UMR)
				Element:tr
				Element:td
					merchantDetails.iban
				Element:em
					required
				Element:td
					String
				Element:em
					max 34 chars
				Element:td
					Creditor Account IBAN
				Element:tr
				Element:td
					merchantDetails.creditorSchemeId
				Element:em
					required
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Creditor SEPA Scheme Reference
				Element:tr
				Element:td
					merchantDetails.schemeType
				Element:em
					required
				Element:td
					String
				Element:em
					enum
				Element:td
					Scheme Type, either
				Element:code
					CORE
					or
				Element:code
					B2B
				Element:tr
				Element:td
					merchantDetails.contractReference
				Element:em
					optional
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Contract Reference
				Element:tr
				Element:td
					merchantDetails.mandateType
				Element:em
					required
				Element:td
					String
				Element:em
					enum
				Element:td
					Either
				Element:code
					OOFF
					or
				Element:code
					RCUR
				Element:tr
				Element:td
					merchantDetails.domain
				Element:em
					optional
				Element:td
					String
				Element:em
					max 255 chars
				Element:td
					Security mechanism to restrict domains the overlay can be rendered on Must be domain name, eg: example.com
				Element:tr
				Element:td
					debtorDetails.name
				Element:em
					optional
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Debtor Name
				Element:tr
				Element:td
					address.line1
				Element:em
					optional
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Debtor Address Line 1
				Element:tr
				Element:td
					address.line2
				Element:em
					optional
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Debtor Address Line 2
				Element:tr
				Element:td
					address.town
				Element:em
					optional
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Debtor Address Town
				Element:tr
				Element:td
					address.postCode
				Element:em
					optional
				Element:td
					String
				Element:em
					max 16 chars
				Element:td
					Debtor Address Postal Code
				Element:tr
				Element:td
					address.country
				Element:em
					optional
				Element:td
					String
				Element:em
					enum
				Element:td
					Must be a valid ISO country code
				Element:tr
				Element:td
					debtorDetails.email
				Element:em
					optional
				Element:td
					String
				Element:em
					max 254 chars
				Element:td
					Debtor E-mail
				Element:tr
				Element:td
					debtorDetails.mobileNumber
				Element:em
					optional
				Element:td
					String
				Element:em
					max 30 chars
				Element:td
					Debtor Mobile Number
				Element:tr
				Element:td
					debtorDetails.iban
				Element:em
					optional
				Element:td
					String
				Element:em
					max 34 chars
				Element:td
					Debtor IBAN
			Node:
			(type) c
			(layer)1
				Element:h2
					Prepare E-Mandate
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/emandates'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \ -X POST -H
				Element:span
					'Content-Type: application/json'
				Element:span
					-d
					\
				Element:span
					'{ "merchantDetails" : { "mandateId" : "1234567899", "creditorSchemeId" : "BE31ZZZ12345", "schemeType" : "CORE", "mandateType" : "RCUR", "contractReference" : "Contract Reference", "iban" : "GB47SELN00999912345678" }, "debtorDetails" : { "name" : "Debtor Name", "address" : { "line1" : "Address Line 1", "line2" : "Address Line 2", "town" : "Address Town", "postCode" : "123123", "country" : "IE" }, "mobileNumber" : "0360321312312", "email" : "debtor@email.com", "iban" : "GB94SELN00999976543215" } }'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					Address address =
				Element:span
					new
					Address(); address.setTown(
				Element:span
					"Address Town"
					); address.setCountry(
				Element:span
					"IE"
					); DebtorDetails debtorDetails =
				Element:span
					new
					DebtorDetails(); debtorDetails.setName(
				Element:span
					"Debtor Name"
					); debtorDetails.setEmail(
				Element:span
					"debtor@email.com"
					); debtorDetails.setIban(
				Element:span
					"GB94SELN00999976543215"
					); debtorDetails.setAddress(address); MerchantDetails merchantDetails =
				Element:span
					new
					MerchantDetails(); merchantDetails.setCreditorSchemeId(
				Element:span
					"BE31ZZZ12345"
					); merchantDetails.setSchemeType(
				Element:span
					"CORE"
					); merchantDetails.setIban(
				Element:span
					"GB47SELN00999912345678"
					); merchantDetails.setMandateType(
				Element:span
					"RCUR"
					); ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					); CreateEmandateRequest createEmandateRequest =
				Element:span
					new
					CreateEmandateRequest() .withDebtorDetails(debtorDetails) .withMerchantDetails(merchantDetails); String token =
				Element:span
					new
					EmandateServiceDefault(serviceConfig) .createEmandate(createEmandateRequest) .getData().getWrapped().getToken();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"uri/96a371e1-b546-4c99-8ca7-e88581d74c0d"
					,
				Element:span
					"data"
					:{
				Element:span
					"token"
					:
				Element:span
					"96a371e1-b546-4c99-8ca7-e88581d74c0d"
					,
				Element:span
					"uri"
					:
				Element:span
					"uri/96a371e1-b546-4c99-8ca7-e88581d74c0d"
					} }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					POST
					request used to generate the E-mandate session ID (token) and pre-populate merchant and debtor details for the E-mandate.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					POST /emandates
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					root
				Element:em
					required
				Element:td
					emandate
				Element:td
					JSON structure describing an E-mandate (See
				Element:a
					E-Mandate Object
					section)
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code, a URI to the generated token and the generated token. In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					Retrieve E-Mandate
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/emandates/96a371e1-b546-4c99-8ca7-e88581d74c0d'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					); EmandateDetailsResource emandateDetailsResource =
				Element:span
					new
					EmandateServiceDefault(serviceConfig) .retrieveEmandate(
				Element:span
					"96a371e1-b546-4c99-8ca7-e88581d74c0d"
					) .getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/emandates/54dd53a2-7a45-4c25-8e44-4485b8d24fef"
					,
				Element:span
					"data"
					: {
				Element:span
					"uri"
					:
				Element:span
					"/emandates/54dd53a2-7a45-4c25-8e44-4485b8d24fef"
					,
				Element:span
					"token"
					:
				Element:span
					"54dd53a2-7a45-4c25-8e44-4485b8d24fef"
					,
				Element:span
					"createDate"
					:
				Element:span
					"2015-11-13"
					,
				Element:span
					"authenticationDate"
					:
				Element:span
					null
					,
				Element:span
					"merchantDetails"
					: {
				Element:span
					"mandateId"
					:
				Element:span
					"1234567899"
					,
				Element:span
					"creditorSchemeId"
					:
				Element:span
					"BE31ZZZ12345"
					,
				Element:span
					"schemeType"
					:
				Element:span
					"CORE"
					,
				Element:span
					"mandateType"
					:
				Element:span
					"RCUR"
					,
				Element:span
					"contractReference"
					:
				Element:span
					"Contract Reference"
					,
				Element:span
					"iban"
					:
				Element:span
					"GB47SELN00999912345678"
					,
				Element:span
					"domain"
					:
				Element:span
					"example.com"
					},
				Element:span
					"debtorDetails"
					: {
				Element:span
					"name"
					:
				Element:span
					"Debtor Name"
					,
				Element:span
					"address"
					: {
				Element:span
					"line1"
					:
				Element:span
					"Address Line 1"
					,
				Element:span
					"line2"
					:
				Element:span
					"Address Line 2"
					,
				Element:span
					"town"
					:
				Element:span
					"Address Town"
					,
				Element:span
					"postCode"
					:
				Element:span
					"123123"
					,
				Element:span
					"country"
					:
				Element:span
					"IE"
					},
				Element:span
					"mobileNumber"
					:
				Element:span
					"0360321312312"
					,
				Element:span
					"email"
					:
				Element:span
					"debtor@email.com"
					,
				Element:span
					"iban"
					:
				Element:span
					"GB94SELN00999976543215"
					} } }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					GET
					request used to fetch the prepared E-Mandate based on the generated token.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET /emandates/{token}
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a JSON structure representing the queried resource. In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) h1
			(layer)1
				Element:h1
					Direct Debits
			Node:
			(type) c
			(layer)1
				Element:p
					Direct debits are the financial transactions associated to the mandate.
			Node:
			(type) c
			(layer)1
				Element:p
					To access direct debits use the following URL:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					https://api.nuapay.com/schemes/{CS_ID}/mandates/{MANDATE_ID}/directdebits/{DD_ID}
			Node:
			(type) c
			(layer)1
				Element:p
					where
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:code
					CS_ID
					, is the Creditor Scheme resource ID returned by
				Element:a
					List Creditor Schemes
				Element:li
				Element:code
					MANDATE_ID
					, is the mandate resource ID returned by a variety of mandate services including:
				Element:a
					Create Mandate
					,
				Element:a
					List Mandates
					,
				Element:a
					Retrieve Mandate
				Element:li
				Element:code
					DD_ID
					, is the direct debit resource ID returned by a variety of direct debit services including:
				Element:a
					Create Direct Debit
					,
				Element:a
					List Direct Debits
					,
				Element:a
					Retrieve Direct Debit
			Node:
			(type) c
			(layer)1
				Element:h2
					Direct Debit Object
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example JSON structure describing direct debit
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					{
				Element:span
					"endToEndId"
					:
				Element:span
					"1234567876543234567"
					,
				Element:span
					"paymentAmount"
					:
				Element:span
					5000.01
					,
				Element:span
					"requestedCollectionDate"
					:
				Element:span
					"2015-08-12"
					,
				Element:span
					"actualCollectionDate"
					:
				Element:span
					"2015-08-12"
					,
				Element:span
					"exportDate"
					:
				Element:span
					"2015-08-05"
					,
				Element:span
					"remittanceInformation"
					:
				Element:span
					"Remittance Information"
					,
				Element:span
					"representationAttemptNumber"
					:
				Element:span
					0
					,
				Element:span
					"paymentStatus"
					:
				Element:span
					"READY_FOR_EXPORT"
					}
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					scheduleId
				Element:td
					String
				Element:em
					max 19 chars
				Element:td
					This is the customer payment schedule reference that is further used to identify the schedule when filtering direct debits.
				Element:tr
				Element:td
					endToEndId
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Payment Reference
				Element:tr
				Element:td
					paymentAmount
				Element:td
					Number
				Element:em
					max 15 digits
				Element:td
					Payment Amount. Max length without decimals is 12 digits. Decimal separator is
				Element:code
					.
					. Max two decimal places allowed.
				Element:tr
				Element:td
					requestedCollectionDate
				Element:td
					Date
				Element:em
					yyyy-mm-dd
				Element:td
					Requested Settlement Date
				Element:tr
				Element:td
					actualCollectionDate
				Element:td
					Date
				Element:em
					yyyy-mm-dd
				Element:td
					Actual Settlement Date
				Element:tr
				Element:td
					exportDate
				Element:td
					Date
				Element:em
					yyyy-mm-dd
				Element:td
					Export Date
				Element:tr
				Element:td
					remittanceInformation
				Element:td
					String
				Element:em
					max 140 chars
				Element:td
					Remittance Information
				Element:tr
				Element:td
					originalEndToEndId
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Return parameter only, returned only if direct debit is representation of different direct debit
				Element:tr
				Element:td
					representationAttemptNumber
				Element:td
					Number
				Element:td
					Return parameter only
				Element:tr
				Element:td
					paymentStatus
				Element:td
					String
				Element:em
					enum
				Element:td
					Return parameter only. One of,
				Element:code
					READY_FOR_EXPORT
					,
				Element:code
					EXPORTING
					,
				Element:code
					REVOKED
					,
				Element:code
					EXPORTED
					,
				Element:code
					ACCEPTED
					,
				Element:code
					REVERSED
					,
				Element:code
					REFUSED
					,
				Element:code
					REJECTED
					,
				Element:code
					RETURNED
					,
				Element:code
					REFUNDED
					,
				Element:code
					CANCELLED
					,
				Element:code
					PENDING
					,
				Element:code
					INVALID
					,
				Element:code
					REPRESENTED
			Node:
			(type) c
			(layer)1
				Element:h2
					Failed Direct Debit Object
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example JSON structure describing failed direct debit
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					{
				Element:span
					"creditorScheme"
					: {
				Element:span
					"schemeType"
					:
				Element:span
					"CORE"
					,
				Element:span
					"creditorSchemeId"
					:
				Element:span
					"1"
					},
				Element:span
					"mandateInfo"
					: {
				Element:span
					"mandateId"
					:
				Element:span
					"MandateUMR"
					},
				Element:span
					"directDebitInfo"
					: {
				Element:span
					"endToEndId"
					:
				Element:span
					"11111"
					,
				Element:span
					"paymentAmount"
					:
				Element:span
					10.0
					,
				Element:span
					"requestedCollectionDate"
					:
				Element:span
					"2015-07-29"
					,
				Element:span
					"actualCollectionDate"
					:
				Element:span
					"2015-07-29"
					,
				Element:span
					"exportDate"
					:
				Element:span
					"2015-07-29"
					,
				Element:span
					"representationAttemptNumber"
					:
				Element:span
					0
					,
				Element:span
					"paymentStatus"
					:
				Element:span
					"CANCELLED"
					},
				Element:span
					"rejectDetails"
					: {
				Element:span
					"rejectReason"
					:
				Element:span
					"AC01"
					,
				Element:span
					"rejectDescription"
					:
				Element:span
					"Account Identifier Incorrect."
					,
				Element:span
					"rejectType"
					:
				Element:span
					"Cancellation"
					,
				Element:span
					"rejectDate"
					:
				Element:span
					"2015-07-29"
					} }
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					creditorScheme.schemeType
				Element:td
					String
				Element:em
					enum
				Element:td
					One of
				Element:code
					CORE
					,
				Element:code
					B2B
				Element:tr
				Element:td
					creditorScheme.creditorSchemeId
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Creditor Scheme ID
				Element:tr
				Element:td
					mandateInfo.mandateId
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Mandate Reference
				Element:tr
				Element:td
					mandateInfo.domesticMandateId
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Domestic Mandate Reference
				Element:tr
				Element:td
					directDebitInfo.endToEndId
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Payment Reference
				Element:tr
				Element:td
					directDebitInfo.scheduleId
				Element:td
					String
				Element:em
					max 19 chars
				Element:td
					This is the customer payment schedule reference. Retruned if the direct debit belongs to payment schedule
				Element:tr
				Element:td
					directDebitInfo.paymentAmount
				Element:td
					Number
				Element:em
					max 15 digits
				Element:td
					Payment Amount. Max length without decimals is 12 digits. Decimal separator is
				Element:code
					.
					. Max two decimal places allowed.
				Element:tr
				Element:td
					directDebitInfo .requestedCollectionDate
				Element:td
					Date
				Element:em
					yyyy-mm-dd
				Element:td
					Requested Settlement Date
				Element:tr
				Element:td
					directDebitInfo.actualCollectionDate
				Element:td
					Date
				Element:em
					yyyy-mm-dd
				Element:td
					Actual Settlement Date
				Element:tr
				Element:td
					directDebitInfo.exportDate
				Element:td
					Date
				Element:em
					yyyy-mm-dd
				Element:td
					Export Date
				Element:tr
				Element:td
					directDebitInfo.remittanceInfo
				Element:td
					String
				Element:em
					max 140 chars
				Element:td
					Remittance Information
				Element:tr
				Element:td
					directDebitInfo.originalEndToEndId
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Return parameter only, returned only if direct debit is representation of different direct debit
				Element:tr
				Element:td
					directDebitInfo .representationAttemptNumber
				Element:td
					Number
				Element:td
					Representation Attempt
				Element:tr
				Element:td
					directDebitInfo.paymentStatus
				Element:td
					String
				Element:em
					enum
				Element:td
					One of
				Element:code
					REFUSED
					,
				Element:code
					REFUNDED
					,
				Element:code
					REVERSED
					,
				Element:code
					REVOKED
					,
				Element:code
					CANCELLED
					,
				Element:code
					RETURNED
					,
				Element:code
					REJECTED
					,
				Element:code
					REPRESENTED
				Element:tr
				Element:td
					rejectDetails.rejectReason
				Element:td
					String
				Element:em
					enum
				Element:td
					Reason code
				Element:tr
				Element:td
					rejectDetails.rejectDescription
				Element:td
					String
				Element:em
					max 140 chars
				Element:td
				Element:tr
				Element:td
					rejectDetails.rejectType
				Element:td
					String
				Element:em
					enum
				Element:td
					One of
				Element:code
					Cancel
					,
				Element:code
					Reject
					,
				Element:code
					Reverse
					,
				Element:code
					Return
					,
				Element:code
					Refuse
					,
				Element:code
					Authorised_Refund
					,
				Element:code
					Unauthorised_Refund
					,
				Element:code
					Reject_Reversal
					,
				Element:code
					Reject_Cancel
					,
				Element:code
					Revoke
					,
				Element:code
					Return_Reject
					,
				Element:code
					Refund_Reject
					,
				Element:code
					Import_Reject
					.
				Element:tr
				Element:td
					rejectDetails.rejectDate
				Element:td
					Date
				Element:em
					yyyy-mm-dd
				Element:td
					The date direct debit was rejected
			Node:
			(type) c
			(layer)1
				Element:h2
					Create Direct Debit
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/46pkx7o9n5/mandates/46pkx7o9n5/directdebits'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \ -X POST -H
				Element:span
					'Content-Type: application/json'
				Element:span
					-d
					\
				Element:span
					'{ "requestedCollectionDate": "2015-08-12", "paymentAmount": 5000.01, "endToEndId": "1234567876543234567", "remittanceInformation": "Remittance Information" }'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					CreateDirectDebitRequest createDirectDebitRequest =
				Element:span
					new
					CreateDirectDebitRequest() .withRequestedCollectionDate(DateUtils.toDate(
				Element:span
					"2015-08-12"
					)) .withPaymentAmount(
				Element:span
					new
					BigDecimal(
				Element:span
					"5000.01"
					)) .withEndToEndId(
				Element:span
					"5234567876543234567"
					) .withRemittanceInformation(
				Element:span
					"Remittance Information"
					); DirectDebitResource directDebitResource =
				Element:span
					new
					DirectDebitServiceDefault(serviceConfig) .createDirectDebit(
				Element:span
					"46pkx7o9n5"
					,
				Element:span
					"46pkx7o9n5"
					, createDirectDebitRequest).getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					201
					Created
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/abxq9kq52l/directdebits/abxq9kq52l"
					,
				Element:span
					"data"
					: {
				Element:span
					"id"
					:
				Element:span
					"abxq9kq52l"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/abxq9kq52l/directdebits/abxq9kq52l"
					,
				Element:span
					"endToEndId"
					:
				Element:span
					"1234567876543234567"
					,
				Element:span
					"paymentAmount"
					:
				Element:span
					5000.01
					,
				Element:span
					"requestedCollectionDate"
					:
				Element:span
					"2015-08-12"
					,
				Element:span
					"actualCollectionDate"
					:
				Element:span
					"2015-08-12"
					,
				Element:span
					"exportDate"
					:
				Element:span
					"2015-08-05"
					,
				Element:span
					"remittanceInformation"
					:
				Element:span
					"Remittance Information"
					,
				Element:span
					"representationAttemptNumber"
					:
				Element:span
					0
					,
				Element:span
					"paymentStatus"
					:
				Element:span
					"READY_FOR_EXPORT"
					} }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					POST
					request is used to create direct debits. A request must contain the
				Element:code
					application/json
					content type. In request body you provide a JSON structure describing the Direct Debit.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					POST /schemes/{CS_ID}/mandates/{MANDATE_ID}/directdebits
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					requestedCollectionDate
				Element:em
					required
				Element:td
					Date
				Element:em
					yyyy-mm-dd
				Element:td
					Requested collection date
				Element:tr
				Element:td
					paymentAmount
				Element:em
					required
				Element:td
					Number
				Element:em
					max 15 digits
				Element:td
					Payment Amount. Max length without decimals is 12 digits. Decimal separator is
				Element:code
					.
					. Max two decimal places allowed.
				Element:tr
				Element:td
					endToEndId
				Element:em
					optional
				Element:td
					String
				Element:em
					max 35 alphanum
				Element:td
					Payment Reference
				Element:tr
				Element:td
					remittanceInformation
				Element:em
					optional
				Element:td
					String
				Element:em
					max 140 chars
				Element:td
					Remittance Information
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					201 Created
					response code and a JSON structure representing the created resource.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					Retrieve Direct Debit
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/abxq9kq52l/mandates/abxq9kq52l/directdebits/abxq9kq52l'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					DirectDebitResource directDebitResource =
				Element:span
					new
					DirectDebitServiceDefault(serviceConfig) .retrieveDirectDebit(
				Element:span
					"abxq9kq52l"
					,
				Element:span
					"abxq9kq52l"
					,
				Element:span
					"abxq9kq52l"
					).getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/abxq9kq52l/directdebits/abxq9kq52l"
					,
				Element:span
					"data"
					: {
				Element:span
					"id"
					:
				Element:span
					"abxq9kq52l"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/abxq9kq52l/directdebits/abxq9kq52l"
					,
				Element:span
					"endToEndId"
					:
				Element:span
					"1234567876543234567"
					,
				Element:span
					"paymentAmount"
					:
				Element:span
					5000.01
					,
				Element:span
					"requestedCollectionDate"
					:
				Element:span
					"2015-08-12"
					,
				Element:span
					"actualCollectionDate"
					:
				Element:span
					"2015-08-12"
					,
				Element:span
					"exportDate"
					:
				Element:span
					"2015-08-05"
					,
				Element:span
					"remittanceInformation"
					:
				Element:span
					"Remittance Information"
					,
				Element:span
					"representationAttemptNumber"
					:
				Element:span
					0
					,
				Element:span
					"paymentStatus"
					:
				Element:span
					"READY_FOR_EXPORT"
					} }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					GET
					request is used to retrieve direct debits.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET /schemes/{CS_ID}/mandates/{MANDATE_ID}/directdebits/{DD_ID}
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a JSON structure representing the queried direct debit resource.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					List Direct Debits
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/46pkx7o9n5/mandates/46pkx7o9n5/directdebits/?actualcollectiondatefrom=2015-07-29&actualcollectiondateto=2015-08-28'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ListDirectDebitRequestParameters listDDRequestParameters =
				Element:span
					new
					ListDirectDebitRequestParameters() .withActualCollectionDateFrom(DateUtils.toDate(
				Element:span
					"2015-07-29"
					)) .withActualCollectionDateTo(DateUtils.toDate(
				Element:span
					"2015-08-28"
					)); List<DirectDebitResource> directDebitResourcesList =
				Element:span
					new
					DirectDebitServiceDefault(serviceConfig) .listDirectDebits(
				Element:span
					"46pkx7o9n5"
					,
				Element:span
					"46pkx7o9n5"
					, listDDRequestParameters) .getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/abxq9kq52l/directdebits"
					,
				Element:span
					"data"
					: [ {
				Element:span
					"id"
					:
				Element:span
					"abxq9kq52l"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/abxq9kq52l/directdebits/abxq9kq52l"
					,
				Element:span
					"endToEndId"
					:
				Element:span
					"1234567876543234567"
					,
				Element:span
					"paymentAmount"
					:
				Element:span
					5000.01
					,
				Element:span
					"requestedCollectionDate"
					:
				Element:span
					"2015-08-12"
					,
				Element:span
					"actualCollectionDate"
					:
				Element:span
					"2015-08-12"
					,
				Element:span
					"exportDate"
					:
				Element:span
					"2015-08-05"
					,
				Element:span
					"remittanceInformation"
					:
				Element:span
					"Remittance Information"
					,
				Element:span
					"representationAttemptNumber"
					:
				Element:span
					0
					,
				Element:span
					"paymentStatus"
					:
				Element:span
					"READY_FOR_EXPORT"
					} ],
				Element:span
					"page"
					: {
				Element:span
					"pageNumber"
					:
				Element:span
					1
					,
				Element:span
					"pageSize"
					:
				Element:span
					20
					,
				Element:span
					"totalElements"
					:
				Element:span
					1
					,
				Element:span
					"totalPages"
					:
				Element:span
					1
					},
				Element:span
					"sort"
					: [ ] }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					GET
					request is used to retrieve collection of direct debits. Can be used to list all direct debits associated to a mandate, scheme or originator.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
					List all direct debits under a mandate:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET /schemes/{CS_ID}/mandates/{MANDATE_ID}/directdebits
			Node:
			(type) c
			(layer)1
				Element:p
					List all direct debits under a scheme:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET /schemes/{CS_ID}/directdebits
			Node:
			(type) c
			(layer)1
				Element:p
					List all direct debits under an originator:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET /directdebits
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Request param
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					actualcollectiondatefrom
				Element:em
					optional
				Element:td
					Format
				Element:code
					yyyy-mm-dd
					. Defaults to Current Date - 365 calendar days.
				Element:tr
				Element:td
					actualcollectiondateto
				Element:em
					optional
				Element:td
					Format
				Element:code
					yyyy-mm-dd
					. Default Current Date. Note that if this parameter is provided
				Element:code
					actualcollectiondatefrom
					parameter should be provided as well as there is limitation in date range to 365 days.
				Element:tr
				Element:td
					scheduleid
				Element:em
					optional
				Element:td
					The Payment Schedule ID of a specific DD. Used to filter direct debits under particular Payment Schedule (See
				Element:a
					Payment Schedule Object
					section).
				Element:tr
				Element:td
					paymentstatus
				Element:em
					optional
				Element:td
					One of,
				Element:code
					ALL
					,
				Element:code
					READY_FOR_EXPORT
					,
				Element:code
					EXPORTING
					,
				Element:code
					REVOKED
					,
				Element:code
					EXPORTED
					,
				Element:code
					ACCEPTED
					,
				Element:code
					REVERSED
					,
				Element:code
					REFUSED
					,
				Element:code
					REJECTED
					,
				Element:code
					RETURNED
					,
				Element:code
					REFUNDED
					,
				Element:code
					CANCELLED
					,
				Element:code
					PENDING
					,
				Element:code
					INVALID
					,
				Element:code
					REPRESENTED
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a JSON structure representing a collection of direct debit objects.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					List Failed Direct Debits
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/faileddirectdebits/?rejectcreatefrom=2015-07-29&rejectcreateto=2015-07-29&technicalrejects=false'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ListFailedDirectDebitRequestParameters listFailedDDRequestParameters =
				Element:span
					new
					ListFailedDirectDebitRequestParameters() .withRejectCreateFrom(DateUtils.toDate(
				Element:span
					"2015-07-29"
					)) .withRejectCreateTo(DateUtils.toDate(
				Element:span
					"2015-07-29"
					)) .withTechnicalRejects(
				Element:span
					false
					); List<FailedDirectDebitResource> directDebitResourcesList =
				Element:span
					new
					DirectDebitServiceDefault(serviceConfig) .listFailedDirectDebits(listFailedDDRequestParameters) .getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/faileddirectdebits"
					,
				Element:span
					"data"
					: [ {
				Element:span
					"id"
					:
				Element:span
					"46pkx7o9n5"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/46pkx7o9n5/mandates/46pkx7o9n5/directdebits/46pkx7o9n5"
					,
				Element:span
					"creditorScheme"
					: {
				Element:span
					"schemeType"
					:
				Element:span
					"CORE"
					,
				Element:span
					"creditorSchemeId"
					:
				Element:span
					"1"
					},
				Element:span
					"mandateInfo"
					: {
				Element:span
					"mandateId"
					:
				Element:span
					"MandateUMR"
					},
				Element:span
					"directDebitInfo"
					: {
				Element:span
					"endToEndId"
					:
				Element:span
					"11111"
					,
				Element:span
					"paymentAmount"
					:
				Element:span
					10.0
					,
				Element:span
					"requestedCollectionDate"
					:
				Element:span
					"2015-07-29"
					,
				Element:span
					"actualCollectionDate"
					:
				Element:span
					"2015-07-29"
					,
				Element:span
					"exportDate"
					:
				Element:span
					"2015-07-29"
					,
				Element:span
					"representationAttemptNumber"
					:
				Element:span
					0
					,
				Element:span
					"paymentStatus"
					:
				Element:span
					"CANCELLED"
					},
				Element:span
					"rejectDetails"
					: {
				Element:span
					"rejectReason"
					:
				Element:span
					"AC01"
					,
				Element:span
					"rejectDescription"
					:
				Element:span
					"Account Identifier Incorrect."
					,
				Element:span
					"rejectType"
					:
				Element:span
					"Cancellation"
					,
				Element:span
					"rejectDate"
					:
				Element:span
					"2015-07-29"
					} } ] }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					GET
					request is used to list failed direct debits.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET /faileddirectdebits
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Request parameter
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					rejectcreatefrom
				Element:em
					required
				Element:td
					Create date from in
				Element:code
					yyyy-mm-dd
					format.
				Element:tr
				Element:td
					rejectcreateto
				Element:em
					required
				Element:td
					Create date to in
				Element:code
					yyyy-mm-dd
					format.
				Element:tr
				Element:td
					technicalrejects
				Element:em
					optional
				Element:td
					Boolean value, where
				Element:code
					false
					returns only bank rejections and
				Element:code
					true
					returns all rejections including OCX rejections and file import rejections.
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a JSON structure representing a collection of failed direct debits.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					Revoke Direct Debit
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/abxq9kq52l/mandates/abxq9kq52l/directdebits/abxq9kq52l/revoke'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \ -X POST -H
				Element:span
					'Content-Type: application/json'
					\
				Element:span
					-d
				Element:span
					'{"operationReason":"Reason for revoke"}'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					RevokeDirectDebitRequest revokeDirectDebitRequest =
				Element:span
					new
					RevokeDirectDebitRequest() .withOperationReason(
				Element:span
					"Reason for revoke"
					); DirectDebitResource directDebitResource =
				Element:span
					new
					DirectDebitServiceDefault(serviceConfig) .revokeDirectDebit(
				Element:span
					"abxq9kq52l"
					,
				Element:span
					"abxq9kq52l"
					,
				Element:span
					"abxq9kq52l"
					, revokeDirectDebitRequest).getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/abxq9kq52l/directdebits/abxq9kq52l"
					,
				Element:span
					"data"
					: {
				Element:span
					"id"
					:
				Element:span
					"abxq9kq52l"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/abxq9kq52l/directdebits/abxq9kq52l"
					,
				Element:span
					"endToEndId"
					:
				Element:span
					"1234567876543234567"
					,
				Element:span
					"paymentAmount"
					:
				Element:span
					5000.01
					,
				Element:span
					"requestedCollectionDate"
					:
				Element:span
					"2015-08-12"
					,
				Element:span
					"actualCollectionDate"
					:
				Element:span
					"2015-08-12"
					,
				Element:span
					"exportDate"
					:
				Element:span
					"2015-08-05"
					,
				Element:span
					"remittanceInformation"
					:
				Element:span
					"Remittance Information"
					,
				Element:span
					"representationAttemptNumber"
					:
				Element:span
					0
					,
				Element:span
					"paymentStatus"
					:
				Element:span
					"REVOKED"
					} }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					POST
					request is used to revoke direct debits. A request must contain the
				Element:code
					application/json
					content type. In the request body you provide a JSON structure describing the revocation reason.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					POST /schemes/{CS_ID}/mandates/{MANDATE_ID}/directdebits/{DD_ID}/revoke
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					operationReason
				Element:em
					optional
				Element:td
					String
				Element:em
					max 140 chars
				Element:td
					Reason for revoke
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a JSON structure representing the altered direct debit resource.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					Revoke All Direct Debits
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/abxq9kq52l/mandates/abxq9kq52l/revokealldirectdebits'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \ -X POST -H
				Element:span
					'Content-Type: application/json'
					\
				Element:span
					-d
				Element:span
					'{"operationReason":"Reason for revoke"}'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					RevokeAllDirectDebitsRequest revokeDirectDebitRequest =
				Element:span
					new
					RevokeAllDirectDebitsRequest() .withOperationReason(
				Element:span
					"Reason for revoke all"
					); RevokeAllDirectDebitsSummary revokeAllDirectDebitsSummary =
				Element:span
					new
					DirectDebitServiceDefault(serviceConfig) .revokeAllDirectDebits(
				Element:span
					"abxq9kq52l"
					,
				Element:span
					"abxq9kq52l"
					, revokeDirectDebitRequest) .getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/abxq9kq52l/revokealldirectdebits"
					,
				Element:span
					"data"
					: {
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/abxq9kq52l/revokealldirectdebits"
					,
				Element:span
					"totalTransactionsRevoked"
					:
				Element:span
					1
					,
				Element:span
					"totalAmountRevoked"
					:
				Element:span
					5000.01
					} }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					POST
					request is used to revoke all direct debits. A request must contain the
				Element:code
					application/json
					content type. In the request body you provide a JSON structure with the required parameters.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					POST /schemes/{CS_ID}/mandates/{MANDATE_ID}/revokealldirectdebits
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					operationReason
				Element:em
					optional
				Element:td
					String
				Element:em
					max 140 chars
				Element:td
					Reason for revoke
				Element:tr
				Element:td
					scheduleId
				Element:em
					optional
				Element:td
					String
				Element:em
					max 19 chars
				Element:td
					Payment Schedule Reference
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a JSON structure representing the revocation action.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					Represent Failed Direct Debit
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/abxq9kq52l/mandates/abxq9kq52l/directdebits/w24y3dya2p/represent'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \ -X POST -H
				Element:span
					'Content-Type: application/json'
				Element:span
					-d
				Element:span
					'{}'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					RepresentDirectDebitRequest representDirectDebitRequest =
				Element:span
					new
					RepresentDirectDebitRequest(); DirectDebitResource directDebitResource =
				Element:span
					new
					DirectDebitServiceDefault(serviceConfig) .representDirectDebit(
				Element:span
					"abxq9kq52l"
					,
				Element:span
					"abxq9kq52l"
					,
				Element:span
					"abxq9kq52l"
					, representDirectDebitRequest).getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/abxq9kq52l/directdebits/j29p3kpabx"
					,
				Element:span
					"data"
					: {
				Element:span
					"id"
					:
				Element:span
					"w24y3dya2p"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/abxq9kq52l/mandates/abxq9kq52l/directdebits/j29p3kpabx"
					,
				Element:span
					"endToEndId"
					:
				Element:span
					"103EA22B-D737-4886-B"
					,
				Element:span
					"paymentAmount"
					:
				Element:span
					5000.01
					,
				Element:span
					"requestedCollectionDate"
					:
				Element:span
					"2015-08-04"
					,
				Element:span
					"actualCollectionDate"
					:
				Element:span
					"2022-02-03"
					,
				Element:span
					"exportDate"
					:
				Element:span
					"2022-02-01"
					,
				Element:span
					"originalEndToEndId"
					:
				Element:span
					"1234567890123456789"
					,
				Element:span
					"representationAttemptNumber"
					:
				Element:span
					1
					,
				Element:span
					"paymentStatus"
					:
				Element:span
					"READY_FOR_EXPORT"
					} }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					POST
					request is used to represent direct debits. A request must contain the
				Element:code
					application/json
					content type. In the request body you provide a JSON structure with the required parameters.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					POST /schemes/{CS_ID}/mandates/{MANDATE_ID}/directdebits/{DD_ID}/represent
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					representationDate
				Element:em
					optional
				Element:td
					Date
				Element:em
					yyyy-mm-dd
				Element:td
					Representation Date
				Element:tr
				Element:td
					representationFee
				Element:em
					optional
				Element:td
					Number
				Element:em
					max 15 digits
				Element:td
					Representation Fee
				Element:tr
				Element:td
					endToEndId
				Element:em
					optional
				Element:td
					String
				Element:em
					max 35 alphanum
				Element:td
					Payment Reference. Must be a unique value and different to the Payment Reference supplied for the failed direct debit being represented
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a JSON structure representing the altered direct debit resource. NOTE: The values of id, uri in the response will be different to those supplied in the request. NOTE: The value of endToEndid (if not supplied) in the response will be different to the value of endToEndid that applied to the original failed direct debit
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) h1
			(layer)1
				Element:h1
					Payment Schedules
			Node:
			(type) c
			(layer)1
				Element:p
					Payment schedules are a method to schedule direct debits over a desired period of time, within Nuapay.
			Node:
			(type) c
			(layer)1
				Element:h2
					Payment schedule Object
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					scheduleId
				Element:em
					optional
				Element:td
					String
				Element:em
					max 19 chars
				Element:td
					This is the customer payment schedule reference that is further used to identify the schedule when filtering direct debits.
				Element:tr
				Element:td
					paymentFrequency
				Element:em
					required
				Element:td
					String
				Element:em
					enum
				Element:td
					Possible values:
				Element:code
					DAILY
					,
				Element:code
					WEEKLY
					,
				Element:code
					BIWEEKLY
					,
				Element:code
					MONTHLY
					,
				Element:code
					YEARLY
					,
				Element:code
					CUSTOM
				Element:tr
				Element:td
					paymentType
				Element:em
					required
				Element:td
					String
				Element:em
					enum
				Element:td
					Possible values:
				Element:code
					FIXED_LENGTH
					,
				Element:code
					OPEN_ENDED
				Element:tr
				Element:td
					startDate
				Element:em
					required
				Element:td
					Date
				Element:em
					yyyy-mm-dd
				Element:td
					Actual Collection Date (ACD) of first payment for the schedule
				Element:tr
				Element:td
					numberOfPayments
				Element:em
					optional
				Element:td
					Number
				Element:em
					max 3 digits
				Element:td
					Required for
				Element:code
					FIXED_LENGTH
					schedule type. Not allowed for
				Element:code
					OPEN_ENDED
					schedule
				Element:tr
				Element:td
					paymentAmount
				Element:em
					required
				Element:td
					Number
				Element:em
					max 15 chars
				Element:td
					Amount of regular payment to be sent. Max length without decimals is 12 digits. Decimal separator is
				Element:code
					.
					. Max two decimal places allowed. Amounts with no decimals can be sent without decimal point.
				Element:tr
				Element:td
					firstPaymentAmount
				Element:em
					optional
				Element:td
					Number
				Element:em
					max 15 chars
				Element:td
					Amount of first payment to be sent. Max length without decimals is 12 digits. Decimal separator is
				Element:code
					.
					. Max two decimal places allowed. Amounts with no decimals can be sent without decimal point.
				Element:tr
				Element:td
					lastPaymentAmount
				Element:em
					optional
				Element:td
					Number
				Element:em
					max 15 chars
				Element:td
					Amount of last payment to be sent. Max length without decimals is 12 digits. Decimal separator is
				Element:code
					.
					. Max two decimal places allowed. Amounts with no decimals can be sent without decimal point.
				Element:tr
				Element:td
					remittanceInformation
				Element:em
					optional
				Element:td
					String
				Element:em
					max 140 chars
				Element:td
					Remittance information that will be sent with every payment generated as part of the schedule
				Element:tr
				Element:td
					paymentDayOfWeek
				Element:em
					optional
				Element:td
					String
				Element:em
					enum
				Element:td
					Possible values:
				Element:code
					MONDAY
					,
				Element:code
					TUESDAY
					,
				Element:code
					WEDNESDAY
					,
				Element:code
					THURSDAY
					,
				Element:code
					FRIDAY
				Element:tr
				Element:td
					paymentWeekOfMonth
				Element:em
					optional
				Element:td
					String
				Element:em
					enum
				Element:td
					Possible values:
				Element:code
					FIRST
					,
				Element:code
					SECOND
					,
				Element:code
					THIRD
					,
				Element:code
					FOURTH
					,
				Element:code
					LAST
				Element:tr
				Element:td
					paymentDateInMonth
				Element:em
					optional
				Element:td
					String
				Element:em
					max 2 digits
				Element:td
					Between 1 and 31
				Element:tr
				Element:td
					paymentCustomFrequency
				Element:em
					optional
				Element:td
					String
				Element:em
					enum
				Element:td
					Determines if a payment schedule is quarterly (payment every 3 months) or bi-annually (payment every 6 months). Must be present for
				Element:code
					CUSTOM
				Element:code
					paymentFrequency
					. Otherwise not present. Possible value:
				Element:code
					3
					,
				Element:code
					6
					.
				Element:tr
				Element:td
					twoPaymentsSamePeriod
				Element:em
					optional
				Element:td
					Boolean
				Element:em
					true/false
				Element:td
					Boolean that determines if two direct debits should be generated, in case select subsequent payment date (
				Element:code
					paymentDayOfWeek
					,
				Element:code
					paymentWeekOfMonth
					,
				Element:code
					paymentDateInMonth
					) is later than the
				Element:code
					startDate
					. Used only in
				Element:a
					Create Payment Schedule
				Element:tr
				Element:td
					paymentScheduleStatus
				Element:em
					optional
				Element:td
					String
				Element:em
					enum
				Element:td
					Possible values:
				Element:code
					ACTIVE
					,
				Element:code
					INACTIVE
					,
				Element:code
					CANCELLED
					. This is response parameter and returned only by
				Element:a
					List Payment Schedules
					,
				Element:a
					Cancel Payment Schedule
					endpoints.
			Node:
			(type) c
			(layer)1
				Element:h2
					Create Payment Schedule
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/8ow24y2pdx/mandates/8ow24y2pdx/paymentschedules'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \ -X POST -H
				Element:span
					'Content-Type: application/json'
				Element:span
					-d
					\
				Element:span
					'{ "paymentFrequency":"DAILY", "paymentType":"FIXED_LENGTH", "startDate":"2015-07-21", "numberOfPayments":2, "paymentAmount":9.90, "firstPaymentAmount":1.10, "lastPaymentAmount":9.90, "remittanceInformation":"remittanceInformation", "twoPaymentsSamePeriod":true }'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					CreatePaymentScheduleRequest createPaymentSchedRequest =
				Element:span
					new
					CreatePaymentScheduleRequest() .withPaymentSchedule(
				Element:span
					new
					PaymentSchedule() .withPaymentFrequency(PaymentFrequency.DAILY) .withPaymentType(PaymentType.FIXED_LENGTH) .withStartDate(DateUtils.toDate(
				Element:span
					"2015-07-21"
					)) .withNumberOfPayments(
				Element:span
					2
					) .withPaymentAmount(
				Element:span
					new
					BigDecimal(
				Element:span
					"9.90"
					)) .withFirstPaymentAmount(
				Element:span
					new
					BigDecimal(
				Element:span
					"1.10"
					)) .withLastPaymentAmount(
				Element:span
					new
					BigDecimal(
				Element:span
					"9.90"
					)) .withRemittanceInformation(
				Element:span
					"remittanceInformation"
					) .withTwoPaymentsSamePeriod(
				Element:span
					true
					)); PaymentScheduleResource paymentScheduleResponse =
				Element:span
					new
					PaymentScheduleServiceDefault(serviceConfig) .createPaymentSchedule(
				Element:span
					"8ow24y2pdx"
					,
				Element:span
					"8ow24y2pdx"
					, createPaymentSchedRequest) .getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					201
					Created
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes/8ow24y2pdx/mandates/8ow24y2pdx/paymentschedules/8ow24y2pdx"
					,
				Element:span
					"data"
					: {
				Element:span
					"id"
					:
				Element:span
					"8ow24y2pdx"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/8ow24y2pdx/mandates/8ow24y2pdx/paymentschedules/8ow24y2pdx"
					,
				Element:span
					"scheduleId"
					:
				Element:span
					"11111111"
					,
				Element:span
					"paymentFrequency"
					:
				Element:span
					"DAILY"
					,
				Element:span
					"paymentType"
					:
				Element:span
					"FIXED_LENGTH"
					,
				Element:span
					"startDate"
					:
				Element:span
					"2015-07-21"
					,
				Element:span
					"numberOfPayments"
					:
				Element:span
					2
					,
				Element:span
					"paymentAmount"
					:
				Element:span
					10.1
					,
				Element:span
					"firstPaymentAmount"
					:
				Element:span
					1.1
					,
				Element:span
					"lastPaymentAmount"
					:
				Element:span
					9.9
					,
				Element:span
					"remittanceInformation"
					:
				Element:span
					"remittanceInformation"
					,
				Element:span
					"twoPaymentsSamePeriod"
					:
				Element:span
					true
					} }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					POST
					request is used to create payment schedules. A request must contain the
				Element:code
					application/json
					content type. In the request body you provide a JSON structure describing the Payment Schedule.
			Node:
			(type) c
			(layer)1
				Element:p
					NOTE: Creation of payment schedule results in creation of one (
				Element:code
					OPEN_ENDED
					) or more (
				Element:code
					FIXED_LENGTH
					) direct debits associated to the schedule. Please use
				Element:a
					List Direct Debits
					service, filtering by
				Element:code
					scheduleId
					to get the list of created direct debits.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					POST /schemes/{CS_ID}/mandates/{MANDATE_ID}/paymentschedules
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					root
				Element:em
					required
				Element:td
					Payment Schedule
				Element:td
					JSON structure describing payment schedule (See
				Element:a
					Payment Schedule Object
					section)
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					201 Created
					response code and a JSON structure representing the created resource.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					List Payment Schedules
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/46pkx7o9n5/mandates/46pkx7o9n5/paymentschedules/?paymentschedulestatus=ACTIVE'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					); ListPaymentScheduleRequestParameters listPaymentScheduleRequestParameters =
				Element:span
					new
					ListPaymentScheduleRequestParameters() .withPaymentStatus(PaymentScheduleStatus.ACTIVE); List<PaymentScheduleResource> paymentScheduleResourcesList =
				Element:span
					new
					PaymentScheduleServiceDefault(serviceConfiguration) .listPaymentSchedules(
				Element:span
					"46pkx7o9n5"
					,
				Element:span
					"46pkx7o9n5"
					, listPaymentScheduleRequestParameters) .getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes/46pkx7o9n5/mandates/46pkx7o9n5/paymentschedules"
					,
				Element:span
					"data"
					:[ {
				Element:span
					"id"
					:
				Element:span
					"abxq9kq52l"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/46pkx7o9n5/mandates/46pkx7o9n5/paymentschedules/abxq9kq52l"
					,
				Element:span
					"scheduleId"
					:
				Element:span
					"11111111"
					,
				Element:span
					"paymentFrequency"
					:
				Element:span
					"DAILY"
					,
				Element:span
					"paymentType"
					:
				Element:span
					"FIXED_LENGTH"
					,
				Element:span
					"startDate"
					:
				Element:span
					"2015-07-21"
					,
				Element:span
					"numberOfPayments"
					:
				Element:span
					2
					,
				Element:span
					"paymentAmount"
					:
				Element:span
					9.90
					,
				Element:span
					"firstPaymentAmount"
					:
				Element:span
					1.10
					,
				Element:span
					"lastPaymentAmount"
					:
				Element:span
					9.90
					,
				Element:span
					"remittanceInformation"
					:
				Element:span
					"remittanceInformation"
					,
				Element:span
					"paymentScheduleStatus"
					:
				Element:span
					"ACTIVE"
					} ],
				Element:span
					"page"
					:{
				Element:span
					"pageNumber"
					:
				Element:span
					1
					,
				Element:span
					"pageSize"
					:
				Element:span
					20
					,
				Element:span
					"totalElements"
					:
				Element:span
					1
					,
				Element:span
					"totalPages"
					:
				Element:span
					1
					},
				Element:span
					"sort"
					:[ ] }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					GET
					request is used to retrieve collection of payment schedules. Can be used to list all payment schedules associated to a mandate, scheme or originator.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
					List all payment schedules under a mandate:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET /schemes/{CS_ID}/mandates/{MANDATE_ID}/paymentschedules
			Node:
			(type) c
			(layer)1
				Element:p
					List all payment schedules under a scheme:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET /schemes/{CS_ID}/paymentschedules
			Node:
			(type) c
			(layer)1
				Element:p
					List all payment schedules under an originator:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET /paymentschedules
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Request param
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					paymentschedulestatus
				Element:em
					optional
				Element:td
					One of
				Element:code
					ACTIVE
					,
				Element:code
					INACTIVE
					,
				Element:code
					CANCELLED
					. In case the parameters is not provided all payment schedules are listed.
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a JSON structure representing a collection of payment schedule objects.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					Cancel Payment Schedule
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/abxq9kq52l/mandates/abxq9kq52l/paymentschedules/abxq9kq52l/cancel'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \ -X POST -H
				Element:span
					'Content-Type: application/json'
					\
				Element:span
					-d
				Element:span
					'{"operationReason":"Reason for cancellation"}'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					); CancelPaymentScheduleRequest cancelPaymentScheduleRequest =
				Element:span
					new
					CancelPaymentScheduleRequest() .withOperationReason(
				Element:span
					"Reason for cancellation"
					); PaymentScheduleResource paymentScheduleResponse =
				Element:span
					new
					PaymentScheduleServiceDefault(serviceConfiguration) .cancelPaymentSchedule(
				Element:span
					"abxq9kq52l"
					,
				Element:span
					"abxq9kq52l"
					,
				Element:span
					"abxq9kq52l"
					, cancelPaymentScheduleRequest).getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
				Element:span
					'{ "
					uri
				Element:span
					":"
					/schemes/abxq9kq52l/mandates/abxq9kq52l/paymentschedules/abxq9kq52l
				Element:span
					", "
					data
				Element:span
					":{ "
					id
				Element:span
					":"
					abxq9kq52l
				Element:span
					", "
					uri
				Element:span
					":"
					/schemes/abxq9kq52l/mandates/abxq9kq52l/paymentschedules/abxq9kq52l
				Element:span
					", "
					scheduleId
				Element:span
					":"
				Element:span
					11111111
				Element:span
					", "
					paymentFrequency
				Element:span
					":"
					DAILY
				Element:span
					", "
					paymentType
				Element:span
					":"
					FIXED_LENGTH
				Element:span
					", "
					startDate
				Element:span
					":"
				Element:span
					2017
				Element:span
					-12
				Element:span
					-21
				Element:span
					", "
					numberOfPayments
				Element:span
					":2, "
					paymentAmount
				Element:span
					":9.90, "
					firstPaymentAmount
				Element:span
					":1.10, "
					lastPaymentAmount
				Element:span
					":9.90, "
					remittanceInformation
				Element:span
					":"
					remittanceInformation
				Element:span
					", "
					paymentScheduleStatus
				Element:span
					":"
					CANCELLED
				Element:span
					" } }'
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					POST
					request is used to cancel payment schedules. A request must contain the
				Element:code
					application/json
					content type. In the request body you provide a JSON structure describing the cancellation reason.
			Node:
			(type) c
			(layer)1
				Element:p
					NOTE: Cancellation of payment schedule can result in cancellation of
				Element:code
					READY_FOR_EXPORT
					direct debits associated to this schedule. Please use
				Element:a
					List Direct Debits
					service, filtering by
				Element:code
					scheduleId
					and
				Element:code
					paymentStatus=CANCELLED
					to get the list of
				Element:code
					CANCELLED
					direct debits under the payment schedule.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					POST /schemes/{CS_ID}/mandates/{MANDATE_ID}/paymentschedules/{SCHEDULE_ID}/cancel
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					operationReason
				Element:em
					optional
				Element:td
					String
				Element:em
					max 255 chars
				Element:td
					Reason for cancellation
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a JSON structure representing the altered payment schedule resource.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) h1
			(layer)1
				Element:h1
					Credit Transfers APIs
			Node:
			(type) c
			(layer)1
				Element:p
					This section contains descriptions of APIs to allow for management of Credit Transfers.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Beneficiaries
			Node:
			(type) c
			(layer)1
				Element:p
					Beneficiaries are regular Credit Transfer receivers also known as creditors. They enable the funds transfer from debtor’s (Originator) account to a creditor’s account via Credit Transfer.
			Node:
			(type) c
			(layer)1
				Element:p
					To access a beneficiary use the following URL:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					https://api.nuapay.com/beneficiaries/{BENEFICIARY_ID}
			Node:
			(type) c
			(layer)1
				Element:p
					where
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:code
					BENEFICIARY_ID
					, is the resource ID returned by
				Element:a
					List Beneficiaries
			Node:
			(type) c
			(layer)1
				Element:h2
					Beneficiary Object
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example JSON structure describing a beneficiary
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					{
				Element:span
					"beneficiary"
					: {
				Element:span
					"name"
					:
				Element:span
					"Beneficiary Name"
					,
				Element:span
					"address"
					: {
				Element:span
					"line1"
					:
				Element:span
					"Beneficiary Address Line1"
					,
				Element:span
					"line2"
					:
				Element:span
					"Beneficiary Address Line2"
					,
				Element:span
					"town"
					:
				Element:span
					"Beneficiary Town"
					,
				Element:span
					"postCode"
					:
				Element:span
					"123123"
					,
				Element:span
					"state"
					:
				Element:span
					"Beneficiary State"
					,
				Element:span
					"country"
					:
				Element:span
					"IE"
					},
				Element:span
					"language"
					:
				Element:span
					"en"
					,
				Element:span
					"email"
					:
				Element:span
					"beneficiary@mail.com"
					,
				Element:span
					"phoneNumber"
					:
				Element:span
					"0360123123123"
					,
				Element:span
					"mobileNumber"
					:
				Element:span
					"0360321321321"
					,
				Element:span
					"descriptionOfPurpose"
					:
				Element:span
					"Description of Purpose"
					},
				Element:span
					"beneficiaryAccount"
					: {
				Element:span
					"iban"
					:
				Element:span
					"GB47SELN00999912345678"
					,
				Element:span
					"bic"
					:
				Element:span
					"SELNGB21"
					} }
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					beneficiary.name
				Element:em
					required
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Beneficiary Name
				Element:tr
				Element:td
					beneficiary.address.line1
				Element:em
					optional
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Beneficiary Address Line 1
				Element:tr
				Element:td
					beneficiary.address.line2
				Element:em
					optional
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Beneficiary Address Line 2
				Element:tr
				Element:td
					beneficiary.address.town
				Element:em
					optional
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Beneficiary Address City/Town
				Element:tr
				Element:td
					beneficiary.address.postCode
				Element:em
					optional
				Element:td
					String
				Element:em
					max 16 chars
				Element:td
					Beneficiary Address Post Code
				Element:tr
				Element:td
					beneficiary.address.state
				Element:em
					optional
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Beneficiary Address State/Province/County
				Element:tr
				Element:td
					beneficiary.address.country
				Element:em
					optional
				Element:td
					String
				Element:em
					enum
				Element:td
					ISO 3166-1 alpha-2 code
				Element:tr
				Element:td
					beneficiary.language
				Element:em
					optional
				Element:td
					String
				Element:em
					enum
				Element:td
					Communication language. One of (
				Element:code
					en
					,
				Element:code
					pt
					,
				Element:code
					nl
					,
				Element:code
					fr
					,
				Element:code
					it
					,
				Element:code
					es
					,
				Element:code
					de
					,
				Element:code
					sk
					,
				Element:code
					fr_BE
					,
				Element:code
					nl_BE
					)
				Element:tr
				Element:td
					beneficiary.email
				Element:em
					optional
				Element:td
					String
				Element:em
					max 254 chars
				Element:td
					Beneficiary Email Address
				Element:tr
				Element:td
					beneficiary.phoneNumber
				Element:em
					optional
				Element:td
					String
				Element:em
					max 30 chars
				Element:td
					Beneficiary Phone Number
				Element:tr
				Element:td
					beneficiary.mobileNumber
				Element:em
					optional
				Element:td
					String
				Element:em
					max 30 chars
				Element:td
					Beneficiary Mobile Phone
				Element:tr
				Element:td
					beneficiary.descriptionOfPurpose
				Element:em
					optional
				Element:td
					String
				Element:em
					max 140 chars
				Element:td
					Purpose for the Beneficiary creation
				Element:tr
				Element:td
					beneficiaryAccount.iban
				Element:em
					required
				Element:td
					String
				Element:em
					max 34 chars
				Element:td
					Beneficiary Account IBAN
				Element:tr
				Element:td
					beneficiaryAccount.bic
				Element:em
					optional
				Element:td
					String
				Element:em
					max 11 chars
				Element:td
					Beneficiary Account BIC
			Node:
			(type) c
			(layer)1
				Element:h2
					Beneficiary List Object
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example JSON structure describing a beneficiary list object
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					{
				Element:span
					"beneficiaryName"
					:
				Element:span
					"Beneficiary Name"
					,
				Element:span
					"beneficiaryIban"
					:
				Element:span
					"GB47SELN00999912345678"
					,
				Element:span
					"beneficiaryMobileNumber"
					:
				Element:span
					"0360321321321"
					}
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					beneficiaryName
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Beneficiary Name
				Element:tr
				Element:td
					beneficiaryIban
				Element:td
					String
				Element:em
					max 34 chars
				Element:td
					Beneficiary Account IBAN
				Element:tr
				Element:td
					beneficiaryMobileNumber
				Element:td
					String
				Element:em
					max 30 chars
				Element:td
					Beneficiary Mobile Phone
			Node:
			(type) c
			(layer)1
				Element:h2
					Create Beneficiary
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/beneficiaries'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \ -X POST -H
				Element:span
					'Content-Type: application/json'
				Element:span
					-d
					\
				Element:span
					'{ "beneficiary": { "name": "Beneficiary Name", "address": { "line1": "Beneficiary Address Line1", "line2": "Beneficiary Address Line2", "town": "Beneficiary Town", "postCode": "123123", "state": "Beneficiary State", "country": "IE" }, "language": "en", "email": "beneficiary@mail.com", "phoneNumber": "0360123123123", "mobileNumber": "0360321321321", "descriptionOfPurpose": "Description of Purpose" }, "beneficiaryAccount": { "iban": "GB47SELN00999912345678", "bic": "SELNGB21" } }'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					); CreateBeneficiaryRequest createBeneficiaryRequest =
				Element:span
					new
					CreateBeneficiaryRequest() .withBeneficiary(
				Element:span
					new
					Beneficiary() .withBeneficiary(
				Element:span
					new
					BeneficiaryDetails() .withName(
				Element:span
					"Beneficiary Name"
					) .withAddress(
				Element:span
					new
					Address() .withLine1(
				Element:span
					"Beneficiary Address Line1"
					) .withLine2(
				Element:span
					"Beneficiary Address Line2"
					) .withTown(
				Element:span
					"Beneficiary Town"
					) .withPostCode(
				Element:span
					"123123"
					) .withState(
				Element:span
					"Beneficiary State"
					) .withCountry(
				Element:span
					"IE"
					)) .withLanguage(
				Element:span
					"en"
					) .withEmail(
				Element:span
					"beneficiary@mail.com"
					) .withPhoneNumber(
				Element:span
					"0360123123123"
					) .withMobileNumber(
				Element:span
					"0360321321321"
					) .withDescriptionOfPurpose(
				Element:span
					"Description of Purpose"
					)) .withBeneficiaryAccount(
				Element:span
					new
					BasicAccount() .withIban(
				Element:span
					"BE03123123456784"
					) .withBic(
				Element:span
					"SELNGB21"
					)) ); BeneficiaryResource beneficiaryResource =
				Element:span
					new
					BeneficiariesServiceDefault(serviceConfig) .createBeneficiary(createBeneficiaryRequest) .getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					201
					Created
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/beneficiaries/46pkx7o9n5"
					,
				Element:span
					"data"
					:{
				Element:span
					"id"
					:
				Element:span
					"46pkx7o9n5"
					,
				Element:span
					"uri"
					:
				Element:span
					"/beneficiaries/46pkx7o9n5"
					,
				Element:span
					"beneficiary"
					:{
				Element:span
					"name"
					:
				Element:span
					"Beneficiary Name"
					,
				Element:span
					"address"
					:{
				Element:span
					"line1"
					:
				Element:span
					"Beneficiary Address Line1"
					,
				Element:span
					"line2"
					:
				Element:span
					"Beneficiary Address Line2"
					,
				Element:span
					"town"
					:
				Element:span
					"Beneficiary Town"
					,
				Element:span
					"postCode"
					:
				Element:span
					"123123"
					,
				Element:span
					"state"
					:
				Element:span
					"Beneficiary State"
					,
				Element:span
					"country"
					:
				Element:span
					"IE"
					},
				Element:span
					"language"
					:
				Element:span
					"en"
					,
				Element:span
					"email"
					:
				Element:span
					"beneficiary@mail.com"
					,
				Element:span
					"phoneNumber"
					:
				Element:span
					"0360123123123"
					,
				Element:span
					"mobileNumber"
					:
				Element:span
					"0360321321321"
					,
				Element:span
					"descriptionOfPurpose"
					:
				Element:span
					"Description of Purpose"
					},
				Element:span
					"beneficiaryAccount"
					:{
				Element:span
					"iban"
					:
				Element:span
					"GB47SELN00999912345678"
					,
				Element:span
					"bic"
					:
				Element:span
					"SELNGB21"
					} } }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					POST
					request is used to create beneficiaries. The request must contain the
				Element:code
					application/json
					content type. In the request body you provide a JSON structure describing the Beneficiary.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					POST /beneficiaries
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					root
				Element:em
					required
				Element:td
					Beneficiary
				Element:td
					JSON structure describing a beneficiary (See
				Element:a
					Beneficiary Object
					section)
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					201 Created
					response code, a URI to the created resource and a JSON structure representing the created resource.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					Retrieve Beneficiary
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/beneficiaries'
					-u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					); BeneficiaryResource beneficiaryResource =
				Element:span
					new
					BeneficiariesServiceDefault(serviceConfig) .retrieveBeneficiary(beneficiaryId).getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/beneficiaries/46pkx7o9n5"
					,
				Element:span
					"data"
					:{
				Element:span
					"id"
					:
				Element:span
					"46pkx7o9n5"
					,
				Element:span
					"uri"
					:
				Element:span
					"/beneficiaries/46pkx7o9n5"
					,
				Element:span
					"beneficiary"
					:{
				Element:span
					"name"
					:
				Element:span
					"Beneficiary Name"
					,
				Element:span
					"address"
					:{
				Element:span
					"line1"
					:
				Element:span
					"Beneficiary Address Line1"
					,
				Element:span
					"line2"
					:
				Element:span
					"Beneficiary Address Line2"
					,
				Element:span
					"town"
					:
				Element:span
					"Beneficiary Town"
					,
				Element:span
					"postCode"
					:
				Element:span
					"123123"
					,
				Element:span
					"state"
					:
				Element:span
					"Beneficiary State"
					,
				Element:span
					"country"
					:
				Element:span
					"IE"
					},
				Element:span
					"language"
					:
				Element:span
					"en"
					,
				Element:span
					"email"
					:
				Element:span
					"beneficiary@mail.com"
					,
				Element:span
					"phoneNumber"
					:
				Element:span
					"0360123123123"
					,
				Element:span
					"mobileNumber"
					:
				Element:span
					"0360321321321"
					,
				Element:span
					"descriptionOfPurpose"
					:
				Element:span
					"Description of Purpose"
					},
				Element:span
					"beneficiaryAccount"
					:{
				Element:span
					"iban"
					:
				Element:span
					"GB47SELN00999912345678"
					,
				Element:span
					"bic"
					:
				Element:span
					"SELNGB21"
					} } }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					GET
					request is used to retrieve beneficiary.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET /beneficiaries/{BENEFICIARY_ID}
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a JSON structure representing the queried beneficiary resource.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					List Beneficiaries
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/beneficiaries/?beneficiaryiban=GB47SELN00999912345678&beneficiaryname=Beneficiary'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					); List<BeneficiarySummaryResource> beneficiaryList =
				Element:span
					new
					BeneficiariesServiceDefault(serviceConfig) .listBeneficiaries().getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/beneficiaries"
					,
				Element:span
					"data"
					: [ {
				Element:span
					"id"
					:
				Element:span
					"46pkxn8e9n"
					,
				Element:span
					"uri"
					:
				Element:span
					"/beneficiaries/46pkxn8e9n"
					,
				Element:span
					"beneficiaryName"
					:
				Element:span
					"Beneficiary Name"
					,
				Element:span
					"beneficiaryIban"
					:
				Element:span
					"GB47SELN00999912345678"
					,
				Element:span
					"beneficiaryMobileNumber"
					:
				Element:span
					"0360321321321"
					}, {
				Element:span
					"id"
					:
				Element:span
					"nx9kndaejm"
					,
				Element:span
					"uri"
					:
				Element:span
					"/beneficiaries/nx9kndaejm"
					,
				Element:span
					"beneficiaryName"
					:
				Element:span
					"Beneficiary Name"
					,
				Element:span
					"beneficiaryIban"
					:
				Element:span
					"GB47SELN00999912345678"
					,
				Element:span
					"beneficiaryMobileNumber"
					:
				Element:span
					"0360321321321"
					}, {
				Element:span
					"id"
					:
				Element:span
					"vw7kj9gey5"
					,
				Element:span
					"uri"
					:
				Element:span
					"/beneficiaries/vw7kj9gey5"
					,
				Element:span
					"beneficiaryName"
					:
				Element:span
					"Beneficiary Name"
					,
				Element:span
					"beneficiaryIban"
					:
				Element:span
					"GB47SELN00999912345678"
					,
				Element:span
					"beneficiaryMobileNumber"
					:
				Element:span
					"0360321321321"
					} ],
				Element:span
					"page"
					: {
				Element:span
					"pageNumber"
					:
				Element:span
					1
					,
				Element:span
					"pageSize"
					:
				Element:span
					20
					,
				Element:span
					"totalElements"
					:
				Element:span
					3
					,
				Element:span
					"totalPages"
					:
				Element:span
					1
					},
				Element:span
					"sort"
					: [ ] }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					GET
					request is used to retrieve a collection of beneficiaries. Can return beneficiaries associated organization.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
					To return all beneficiaries for an organization, use
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET /beneficiaries
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Request parameter
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					beneficiaryiban
				Element:em
					optional
				Element:td
					Beneficiary IBAN
				Element:tr
				Element:td
					beneficiaryname
				Element:em
					optional
				Element:td
					Beneficiary Name
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a JSON structure representing a collection of beneficiaries list objects.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) h1
			(layer)1
				Element:h1
					Credit Transfers
			Node:
			(type) c
			(layer)1
				Element:p
					Credit tranfers are the financial transactions associated to the beneficiary.
			Node:
			(type) c
			(layer)1
				Element:p
					To access credit transfers use the following URL:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					https://api.nuapay.com/beneficiaries/{BENEFICIARY_ID}/credittransfers/{CT_ID}
			Node:
			(type) c
			(layer)1
				Element:p
					where
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:code
					BENEFICIARY_ID
					, is the beneficiary resource ID returned by a variety of beneficiary services including:
				Element:a
					Create Beneficiary
					,
				Element:a
					List Beneficiaries
					,
				Element:a
					Retrieve Beneficiary
				Element:li
				Element:code
					CT_ID
					, is the credit transfer resource ID returned by a variety of credit transfers services including:
				Element:a
					Create Credit Transfer
					,
				Element:a
					Retrieve Credit Transfer
			Node:
			(type) c
			(layer)1
				Element:h2
					Credit Transfer object
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example JSON structure describing credit transfer
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					{
				Element:span
					"originatorIban"
					:
				Element:span
					"GB94SELN00999976543215"
					,
				Element:span
					"requestedExecutionDate"
					:
				Element:span
					"2016-10-14"
					,
				Element:span
					"paymentAmount"
					:
				Element:span
					5000.01
					,
				Element:span
					"paymentCurrency"
					:
				Element:span
					"EUR"
					,
				Element:span
					"endToEndId"
					:
				Element:span
					"12345678901330w4"
					,
				Element:span
					"remittanceInformation"
					:
				Element:span
					"Remittance info"
					}
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					originatorIban
				Element:em
					required
				Element:td
					String
				Element:em
					max 34 chars
				Element:td
					Originator IBAN from which credit transfer is originated
				Element:tr
				Element:td
					requestedExecutionDate
				Element:em
					optional
				Element:td
					Date
				Element:em
					yyyy-mm-dd
				Element:td
					Requested Execution Date for the credit transfer. If not provided will be set to current processing date.
				Element:tr
				Element:td
					paymentAmount
				Element:em
					required
				Element:td
					Number
				Element:em
					max 12 chars
				Element:td
					Payment Amount. Max length without decimals is 9 digits. Decimal separator is
				Element:code
					.
					. Max two decimal places allowed.
				Element:tr
				Element:td
					paymentCurrrency
				Element:em
					required
				Element:td
					String
				Element:em
					enum
				Element:td
					Credit Transfer Currency. Only
				Element:code
					EUR
					is supported at the moment.
				Element:tr
				Element:td
					endToEndId
				Element:em
					optional
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Payment Reference
				Element:tr
				Element:td
					remittanceInformation
				Element:em
					optional
				Element:td
					String
				Element:em
					max 140 chars
				Element:td
					Remittance Information
				Element:tr
				Element:td
					paymentStatus
				Element:em
					optional
				Element:td
					String
				Element:em
					enum
				Element:td
					Return parameter only. One of,
				Element:code
					READY_FOR_EXPORT
					,
				Element:code
					REJECTED
					,
				Element:code
					RECALLED
					,
				Element:code
					EXPORTED
					,
				Element:code
					ACCEPTED
				Element:tr
				Element:td
					beneficiaryName
				Element:em
					optional
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Beneficiary Name. Return only parameters send in
				Element:a
					Retrieve Credit Transfer
					response only.
				Element:tr
				Element:td
					beneficiaryIban
				Element:em
					optional
				Element:td
					String
				Element:em
					max 34 chars
				Element:td
					Beneficiary Account IBAN. Return only parameters send in
				Element:a
					Retrieve Credit Transfer
					response only.
			Node:
			(type) c
			(layer)1
				Element:h2
					Create credit transfer
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/beneficiaries/abxq9ox92l/credittransfers'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \ -X POST -H
				Element:span
					'Content-Type: application/json'
				Element:span
					-d
					\
				Element:span
					'{ "originatorIban":"GB94SELN00999976543215", "requestedExecutionDate":"2016-10-14", "paymentAmount":5000.01, "paymentCurrency":"EUR", "endToEndId":"12345678901330w4", "remittanceInformation":"Remittance info" }'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					); CreateCreditTransferRequest createCreditTransferRequest =
				Element:span
					new
					CreateCreditTransferRequest() .withOriginatorIban(
				Element:span
					"GB94SELN00999976543215"
					) .withRequestedExecutionDate(DateUtils.toDate(
				Element:span
					"2016-10-14"
					)) .withPaymentAmount(
				Element:span
					new
					BigDecimal(
				Element:span
					"5000.01"
					)) .withPaymentCurrency(
				Element:span
					"EUR"
					) .withEndToEndId(
				Element:span
					"12345678901330w4"
					) .withRemittanceInformation(
				Element:span
					"Remittance info"
					); CreditTransferResource creditTransferResource =
				Element:span
					new
					CreditTransferServiceDefault(serviceConfiguration) .createCreditTransfer(
				Element:span
					"abxq9ox92l"
					, createCreditTransferRequest).getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					{
				Element:span
					"uri"
					:
				Element:span
					"/beneficiaries/abxq9ox92l/credittransfers/a2av38kz2w"
					,
				Element:span
					"data"
					:{
				Element:span
					"id"
					:
				Element:span
					"a2av38kz2w"
					,
				Element:span
					"uri"
					:
				Element:span
					"/beneficiaries/abxq9ox92l/credittransfers/a2av38kz2w"
					,
				Element:span
					"originatorIban"
					:
				Element:span
					"GB94SELN00999976543215"
					,
				Element:span
					"requestedExecutionDate"
					:
				Element:span
					"2016-10-14"
					,
				Element:span
					"paymentAmount"
					:
				Element:span
					5000.01
					,
				Element:span
					"endToEndId"
					:
				Element:span
					"12345678901330w4"
					,
				Element:span
					"remittanceInformation"
					:
				Element:span
					"Remittance info"
					,
				Element:span
					"paymentStatus"
					:
				Element:span
					"READY_FOR_EXPORT"
					} }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					POST
					request is used to create credit transfers. A request must contain the
				Element:code
					application/json
					content type. In request body you provide a JSON structure describing the Credit Transfer.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					POST /beneficiaries/{BENEFICIARY_ID}/credittransfers
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					root
				Element:em
					required
				Element:td
					Mandate
				Element:td
					JSON structure describing a credit transfer (See
				Element:a
					Credit Transfer Object
					section)
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					201 Created
					response code and a JSON structure representing the created resource.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					Retrieve credit transfer
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/beneficiaries/abxq9ox92l/credittransfers/a2av38kz2w'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ServiceConfiguration serviceConfig =
				Element:span
					new
					ServiceConfiguration(); serviceConfig.setApiKey(
				Element:span
					"bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686"
					); CreditTransferResource creditTransferResource =
				Element:span
					new
					CreditTransferServiceDefault(serviceConfiguration) .retrieveCreditTransfer(
				Element:span
					"abxq9ox92l"
					,
				Element:span
					"a2av38kz2w"
					).getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/beneficiaries/abxq9ox92l/credittransfers/a2av38kz2w"
					,
				Element:span
					"data"
					: {
				Element:span
					"id"
					:
				Element:span
					"j29p3kxabx"
					,
				Element:span
					"uri"
					:
				Element:span
					"/beneficiaries/abxq9ox92l/credittransfers/a2av38kz2w"
					,
				Element:span
					"originatorIban"
					:
				Element:span
					"GB94SELN00999976543215"
					,
				Element:span
					"requestedExecutionDate"
					:
				Element:span
					"2016-12-14"
					,
				Element:span
					"paymentAmount"
					:
				Element:span
					5000.01
					,
				Element:span
					"paymentCurrency"
					:
				Element:span
					"EUR"
					,
				Element:span
					"endToEndId"
					:
				Element:span
					"12345678901330w4"
					,
				Element:span
					"remittanceInformation"
					:
				Element:span
					"Remittance info"
					,
				Element:span
					"paymentStatus"
					:
				Element:span
					"READY_FOR_EXPORT"
					,
				Element:span
					"beneficiaryName"
					:
				Element:span
					"Beneficiary Name"
					,
				Element:span
					"beneficiaryIban"
					:
				Element:span
					"GB47SELN00999912345678"
					} }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					GET
					request is used to retrieve credit transfers.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET /beneficiaries/{BENEFICIARY_ID}/credittransfers/{CT_ID}
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a JSON structure representing the queried credit transfer resource.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) h1
			(layer)1
				Element:h1
					Other APIs
			Node:
			(type) c
			(layer)1
				Element:p
					This section contains descriptions of addition APIs which can be used in conjunction with the Direct Debit and Credit Transfer APIs.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Accounts
			Node:
			(type) c
			(layer)1
				Element:h2
					Account object
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example JSON structure describing an account
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					{
				Element:span
					"iban"
					:
				Element:span
					"BE87723540479194"
					,
				Element:span
					"domesticAccountNumber"
					:
				Element:span
					"5404791"
					,
				Element:span
					"accountCountry"
					:
				Element:span
					"BE"
					,
				Element:span
					"domesticBankCode"
					:
				Element:span
					"723"
					,
				Element:span
					"domesticBranchCode"
					:
				Element:span
					"XX"
					,
				Element:span
					"domesticCheckSum"
					:
				Element:span
					"94"
					,
				Element:span
					"bic"
					:
				Element:span
					"ABNABEBRXXX"
					}
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					iban
				Element:em
					optional
				Element:td
					String
				Element:em
					max 34 chars
				Element:td
					Valid IBAN structure
				Element:tr
				Element:td
					domesticAccountNumber
				Element:em
					required
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Domestic account number
				Element:tr
				Element:td
					accountCountry
				Element:em
					required
				Element:td
					String
				Element:em
					enum
				Element:td
					2 letter ISO country code
				Element:tr
				Element:td
					domesticBankCode
				Element:em
					optional
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Domestic bank code
				Element:tr
				Element:td
					domesticBranchCode
				Element:em
					optional
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Domestic branch code
				Element:tr
				Element:td
					domesticCheckSum
				Element:em
					optional
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Domestic checksum
				Element:tr
				Element:td
					bic
				Element:em
					optional
				Element:td
					String
				Element:em
					max 11 chars
				Element:td
					BIC Code
			Node:
			(type) c
			(layer)1
				Element:h2
					Validate Domestic Account
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/iban/validate'
					-i -X POST \ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \
				Element:span
					-d
				Element:span
					'{"domesticAccountNumber":"5404791", "accountCountry":"BE", "domesticBankCode":"723", "domesticCheckSum":"94" }'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ValidateAccountRequest validateAccountRequest =
				Element:span
					new
					ValidateAccountRequest() .withAccount(
				Element:span
					new
					Account() .withDomesticAccountNumber(
				Element:span
					"5404791"
					) .withAccountCountry(
				Element:span
					"BE"
					) .withDomesticBankCode(
				Element:span
					"723"
					) .withDomesticCheckSum(
				Element:span
					"94"
					)); AccountResource accountResource = accountsService.validateAccount(validateAccountRequest) .getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/iban/validate"
					,
				Element:span
					"data"
					: {
				Element:span
					"uri"
					:
				Element:span
					"/iban/validate"
					,
				Element:span
					"iban"
					:
				Element:span
					"BE87723540479194"
					,
				Element:span
					"domesticAccountNumber"
					:
				Element:span
					"5404791"
					,
				Element:span
					"accountCountry"
					:
				Element:span
					"BE"
					,
				Element:span
					"domesticBankCode"
					:
				Element:span
					"723"
					,
				Element:span
					"domesticBranchCode"
					:
				Element:span
					"XX"
					,
				Element:span
					"domesticCheckSum"
					:
				Element:span
					"94"
					,
				Element:span
					"bic"
					:
				Element:span
					"ABNABEBRXXX"
					} }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					POST
					request is used to validate accounts. A request must contain the
				Element:code
					application/json
					content type. In the request body you provide a JSON structure containing domestic account information.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					POST https://api.nuapay.com/iban/validate
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					domesticAccountNumber
				Element:em
					required
				Element:td
					String
				Element:em
					max 70 chars
				Element:td
					Domestic account number
				Element:tr
				Element:td
					accountCountry
				Element:em
					required
				Element:td
					String
				Element:em
					enum
				Element:td
					2 letter ISO country code
				Element:tr
				Element:td
					domesticBankCode
				Element:em
					optional
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Domestic bank code
				Element:tr
				Element:td
					domesticBranchCode
				Element:em
					optional
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Domestic branch code
				Element:tr
				Element:td
					domesticCheckSum
				Element:em
					optional
				Element:td
					String
				Element:em
					max 35 chars
				Element:td
					Domestic checksum
			Node:
			(type) c
			(layer)1
				Element:p
					Must not be mixed with Validate IBAN
				Element:code
					iban
					property of 'account' object
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a JSON structure with URI and 'account' object.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h2
					Validate IBAN
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/iban/validate'
					-i -X POST \ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \
				Element:span
					-d
				Element:span
					'{"iban":"BE87723540479194" }'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ValidateAccountRequest validateAccountRequest =
				Element:span
					new
					ValidateAccountRequest() .withAccount(
				Element:span
					new
					Account().withIban(
				Element:span
					"BE87723540479194"
					)); AccountResource accountResource = accountsService.validateAccount(validateAccountRequest) .getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/iban/validate"
					,
				Element:span
					"data"
					: {
				Element:span
					"uri"
					:
				Element:span
					"/iban/validate"
					,
				Element:span
					"iban"
					:
				Element:span
					"BE87723540479194"
					,
				Element:span
					"domesticAccountNumber"
					:
				Element:span
					"5404791"
					,
				Element:span
					"accountCountry"
					:
				Element:span
					"BE"
					,
				Element:span
					"domesticBankCode"
					:
				Element:span
					"723"
					,
				Element:span
					"domesticBranchCode"
					:
				Element:span
					"XX"
					,
				Element:span
					"domesticCheckSum"
					:
				Element:span
					"94"
					,
				Element:span
					"bic"
					:
				Element:span
					"ABNABEBRXXX"
					} }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					POST
					request is used to validate accounts. A request must contain the
				Element:code
					application/json
					content type. In the request body you provide a JSON structure containing iban.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					POST https://api.nuapay.com/iban/validate
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					iban
				Element:em
					required
				Element:td
					String
				Element:em
					max 34 chars
				Element:td
					Valid IBAN structure
			Node:
			(type) c
			(layer)1
				Element:p
					Must not be mixed with Validate Domestic Account properties of 'account' object
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code and a JSON structure with URI and 'account' object.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) h1
			(layer)1
				Element:h1
					Files
			Node:
			(type) c
			(layer)1
				Element:h2
					Upload file
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example request
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/files'
					-i -X POST \ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \ -H
				Element:span
					'Content-Type: multipart/form-data'
					\ -F
				Element:span
					'file=@12345.xml'
					-F \
				Element:span
					'json={ "fileType":"DD", "fileName":"12345.xml", "fileFormat":"BE_SCHEME", "schemeType":"CORE", "creditorSchemeId":"CreditorSchemeName" };type=application/json'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					byte
					[] fileContent = ... UploadFileRequest uploadFileRequest =
				Element:span
					new
					UploadFileRequest() .withFileType(FileType.DD) .withFileName(
				Element:span
					"12345.xml"
					) .withFileFormat(
				Element:span
					"BE_SCHEME"
					) .withSchemeType(SchemeType.CORE) .withCreditorSchemeId(
				Element:span
					"CreditorSchemeName"
					); FileResource fileResource =
				Element:span
					new
					FilesServiceDefault(serviceConfig) .uploadFile(uploadFileRequest, fileContent) .getData();
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example response
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					201
					Created
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/files/23qzxn1f7m"
					,
				Element:span
					"data"
					: {
				Element:span
					"id"
					:
				Element:span
					"23qzxn1f7m"
					,
				Element:span
					"uri"
					:
				Element:span
					"/files/23qzxn1f7m"
					} }
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:code
					POST
					request is used to upload a file. A request must contain the
				Element:code
					multipart/form-data
					content type with a
				Element:code
					json
					part containing input parameters in a JSON structure and a
				Element:code
					file
					part with file content.
			Node:
			(type) c
			(layer)1
				Element:h3
					Definition
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					POST /files
			Node:
			(type) c
			(layer)1
				Element:h3
					Arguments for
				Element:code
					json
					part
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					JSON Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					fileType
				Element:em
					required
				Element:td
					String
				Element:em
					enum
				Element:td
					Uploaded file type: currently only
				Element:code
					DD
					(Direct Debit) supported
				Element:tr
				Element:td
					fileFormat
				Element:em
					required
				Element:td
					String
				Element:em
					enum
				Element:td
					Import format type matching file type provided. For full list of allowed format types contact Customer Support. NOTE: The list is limited to allowed file formats agreed with Nuapay during on boarding process.
				Element:tr
				Element:td
					schemeType
				Element:em
					required
				Element:td
					String
				Element:em
					enum
				Element:td
					Possible values:
				Element:code
					CORE
					,
				Element:code
					B2B
					,
				Element:code
					DSH
					,
				Element:code
					HYB
				Element:tr
				Element:td
					creditorSchemeId
				Element:em
					required
				Element:td
					String
				Element:em
				Element:td
					Returned by
				Element:a
					List Creditor Schemes
					. Mandatory for DD files
				Element:tr
				Element:td
					fileName
				Element:em
					required
				Element:td
					String
				Element:em
					max 250 chars
				Element:td
					Uploaded file name. No white spaces allowed, Allowed characters: letters, digits, special chars: underscore ( _ ), dash ( - ), dot ( . )
			Node:
			(type) c
			(layer)1
				Element:h3
					Returns
			Node:
			(type) c
			(layer)1
				Element:p
					Returns
				Element:code
					200 OK
					response code with a JSON structure describing the created resource, containing an
				Element:code
					id
					representing the uploaded file.
			Node:
			(type) c
			(layer)1
				Element:p
					In case of failure, an
				Element:a
					error
					is returned within the error structure (see
				Element:a
					Errors
					section).
			Node:
			(type) c
			(layer)1
				Element:h3
					Allowed File Formats
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					DD File Type
				Element:th
					File Format
				Element:tbody
				Element:tr
				Element:td
					Austrian
				Element:td
					AcePropACEPROP
				Element:tr
				Element:td
					Belgian Dom80
				Element:td
					BE_SCHEME
				Element:tr
				Element:td
					Cyprus
				Element:td
					Cyprus-DD
				Element:tr
				Element:td
					Dutch CLIEOP03
				Element:td
					CT_CLIEOP03
				Element:tr
				Element:td
					EDIFACT
				Element:td
					EDIFACT
				Element:tr
				Element:td
					French CFONB160
				Element:td
					FR_SCHEME
				Element:tr
				Element:td
					French CFONB160 UMR
				Element:td
					CFONB160UMR
				Element:tr
				Element:td
					French CFONB214
				Element:td
					CFONB214
				Element:tr
				Element:td
					Generic BAFF_BAML
				Element:td
					BAFF
				Element:tr
				Element:td
					Generic CSV
				Element:td
					CSV
				Element:tr
				Element:td
					Generic GFF_JPM
				Element:td
					DD_GFF
				Element:tr
				Element:td
					Generic IDOC
				Element:td
					IDOC
				Element:tr
				Element:td
					Generic TSYS_Barclaycard
				Element:td
					TSYS
				Element:tr
				Element:td
					Generic XML Format
				Element:td
					GX_SCHEME
				Element:tr
				Element:td
					German DTA
				Element:td
					DE_SCHEME
				Element:tr
				Element:td
					German DTUS
				Element:td
					DTA_ZEN
				Element:tr
				Element:td
					Greece
				Element:td
					Greece-DD
				Element:tr
				Element:td
					idoc-SAP-JPM
				Element:td
					idoc-SAP-JPM
				Element:tr
				Element:td
					idoc-SAP-XML
				Element:td
					idoc-SAP-XML
				Element:tr
				Element:td
					Irish STD18
				Element:td
					STD18_Ireland
				Element:tr
				Element:td
					Irish STD18-ACC
				Element:td
					STD18_Ireland_ACC
				Element:tr
				Element:td
					Irish STD18 (Multi day)
				Element:td
					STD18_Ireland_Multi
				Element:tr
				Element:td
					Irish STD18-UniqueMsgId
				Element:td
					STD18_UniqueMsgId
				Element:tr
				Element:td
					Italian CBI
				Element:td
					CBI_RID
				Element:tr
				Element:td
					Norm19_Marsh
				Element:td
					Norm19M
				Element:tr
				Element:td
					PAIN.008.001.02
				Element:td
					P812
				Element:tr
				Element:td
					PAIN.008.001.02.ISO
				Element:td
					P812ISO
				Element:tr
				Element:td
					Portuguese EDR
				Element:td
					EDR
				Element:tr
				Element:td
					Portuguese PS2
				Element:td
					PS2
				Element:tr
				Element:td
					SAP IDOC
				Element:td
					idoc-SAP
				Element:tr
				Element:td
					Spanish Norm19
				Element:td
					Norm19
				Element:tr
				Element:td
					Spanish Norm58
				Element:td
					Norm58
			Node:
			(type) h1
			(layer)1
				Element:h1
					Responses
			Node:
			(type) c
			(layer)1
				Element:p
					Every API Request will generate a HTTP Response. This will contain a HTTP Response Code to indicate the status of the Request. In addition certain HTTP Responses (400, 422) may generate an Error Response with an Error Code.
			Node:
			(type) h1
			(layer)1
				Element:h1
					HTTP Response Codes
			Node:
			(type) c
			(layer)1
				Element:p
					You may encounter the following response codes. Selected response codes will contain more information to help identify problems.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Status Code
				Element:th
					Usage
				Element:tbody
				Element:tr
				Element:td
					200
				Element:td
					OK -- The request completed successfully.
				Element:tr
				Element:td
					201
				Element:td
					Created -- A new resource has been created successfully. The resource is appended to the response.
				Element:tr
				Element:td
					400
				Element:td
					Bad Request -- The request was malformed. The response body will include an error providing further information.
				Element:tr
				Element:td
					401
				Element:td
					Unauthorized -- Your API key is wrong.
				Element:tr
				Element:td
					403
				Element:td
					Forbidden -- The client has provided a valid Authentication header, but it does not have permission to access this resource.
				Element:tr
				Element:td
					404
				Element:td
					Not Found -- The requested resource did not exist.
				Element:tr
				Element:td
					405
				Element:td
					Method Not Allowed -- When a HTTP method is being requested that isn’t allowed.
				Element:tr
				Element:td
					410
				Element:td
					Gone -- The API requested has been removed from our servers.
				Element:tr
				Element:td
					412
				Element:td
					Precondition Failed -- Certain unmet conditions must be fulfilled before the request to be processed e.g. timestamp is too old.
				Element:tr
				Element:td
					415
				Element:td
					Unsupported Media Type -- If incorrect content type was provided as part of the request (e.g. other than "application/json").
				Element:tr
				Element:td
					422
				Element:td
					Unprocessable Entity -- Used for validation errors. More details will be provided in response body.
				Element:tr
				Element:td
					500
				Element:td
					Internal Server Error -- We had a problem with our server. Try again later and if the problem persists contact the Nuapay application support team.
				Element:tr
				Element:td
					501
				Element:td
					Not Implemented -- When the endpoint is not implemented yet.
				Element:tr
				Element:td
					503
				Element:td
					Service Unavailable -- We're temporarially offline for maintanance. Please try again later.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Errors
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					For example, a request that attempts to create a payment schedule with invalid start date will produce a
				Element:code
					400 Bad Request
					response:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					400
					Bad Request
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"returnCode"
					:
				Element:span
					"7043"
					,
				Element:span
					"returnDescription"
					:
				Element:span
					"Start date is invalid"
					}
			Node:
			(type) c
			(layer)1
				Element:p
					Whenever an error response with status
				Element:code
					400
					or
				Element:code
					422
					is returned, the body will contain a JSON object that describes the problem. The error object has the following structure:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Path
				Element:th
					Type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					returnCode
				Element:td
					String
				Element:td
					Error Code
				Element:tr
				Element:td
					returnDescription
				Element:td
					String
				Element:td
					Error description
			Node:
			(type) c
			(layer)1
				Element:p
					See
				Element:a
					Error Codes
					section for details.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Error Codes
			Node:
			(type) c
			(layer)1
				Element:p
					Following is the list of error codes with description as a possible return when request failed:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Code
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					2005
				Element:td
					Debtor Account Validation Error
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					2006
				Element:td
					The Creditor Account referenced within the file does not exist within the system
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					3001
				Element:td
					The debtor language must be provided
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					3002
				Element:td
					The language parameter is incorrect
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					3003
				Element:td
					The debtor address line 1 must be provided
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					3004
				Element:td
					The debtor country must be provided
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					3006
				Element:td
					The address parameter is mandatory when paper handling is set to true
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					3007
				Element:td
					The country is invalid
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					3008
				Element:td
					The debtor town must be provided
				Element:em
				Element:a
					Create mandate
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					3009
				Element:td
					The Mandate cannot be edited from its current state
				Element:em
				Element:a
					Update mandate
				Element:tr
				Element:td
					3010
				Element:td
					Mandate cannot be cancelled from its current state
				Element:em
				Element:a
					Cancel Mandate
				Element:tr
				Element:td
					3021
				Element:td
					A Payment already exists against a ONCE_OFF mandate
				Element:em
				Element:a
					Create direct debit
				Element:tr
				Element:td
					3022
				Element:td
					The Mandate cannot be Activated from its current state
				Element:em
				Element:a
					Activate mandate
				Element:tr
				Element:td
					3023
				Element:td
					Mandate could not be added due to missing PDF template
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					3024
				Element:td
					The debtor e-mail must be provided
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					3025
				Element:td
					The debtor mobile number must be provided
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					3026
				Element:td
					Mandate Type not supported in current configuration
				Element:em
				Element:a
					Update mandate
				Element:tr
				Element:td
					3027
				Element:td
					A Mandate exists in the system with the specified SEPA mandate ID. This ID must be unique for an Originator
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					3028
				Element:td
					In Respect of Contract ID not provided
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					3029
				Element:td
					No SEPA Mandate ID Provided
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					3030
				Element:td
					Language is not supported by originator
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					4003
				Element:td
					Payment Date is not a working day
				Element:em
				Element:a
					Create direct debit
					,
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					4004
				Element:td
					Date format invalid
				Element:em
				Element:a
					Create direct debit
				Element:tr
				Element:td
					4005
				Element:td
					Payment Date is not far enough in the future
				Element:em
				Element:a
					Create direct debit
					,
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					4006
				Element:td
					Invalid Number of Payments
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					4007
				Element:td
					Invalid Schedule Reference
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					4008
				Element:td
					Payment Date is too far in the future
				Element:em
				Element:a
					Create direct debit
					,
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					4009
				Element:td
					Payment Amount is invalid
				Element:em
				Element:a
					Create direct debit
					,
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					4011
				Element:td
					First Payment Amount Invalid
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					4013
				Element:td
					Last Payment Amount Invalid
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					4016
				Element:td
					Representation is not enabled for the creditor scheme
				Element:em
				Element:a
					Represent failed direct debit
				Element:tr
				Element:td
					4019
				Element:td
					End To End Id is invalid
				Element:em
				Element:a
					Create direct debit
				Element:tr
				Element:td
					4021
				Element:td
					Direct Debit cannot be revoked as it is not in a valid status
				Element:em
				Element:a
					Revoke direct debit
				Element:tr
				Element:td
					4022
				Element:td
					No Direct Debit exists matching information provided
				Element:em
				Element:a
					Revoke all direct debits
				Element:tr
				Element:td
					4023
				Element:td
					Direct Debit is not in a valid condition for Representation
				Element:em
				Element:a
					Represent failed direct debit
				Element:tr
				Element:td
					4024
				Element:td
					Invalid Representation Fee amount
				Element:em
				Element:a
					Represent failed direct debit
				Element:tr
				Element:td
					4025
				Element:td
					Invalid Representation Date
				Element:em
				Element:a
					Represent failed direct debit
				Element:tr
				Element:td
					4029
				Element:td
					Number of Payments not provided
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					4031
				Element:td
					Final Payment amount should not be provided for an Open Ended Schedule
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					4032
				Element:td
					Number of Payments should not be provided for an Open Ended Schedule
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					4033
				Element:td
					Only a Start date should be provided for a Daily/Yearly Schedule
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					4034
				Element:td
					Only Day of Week should be provided for a Weekly/Bi-Weekly Schedule
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					4035
				Element:td
					Only Date in Month or Week in Month and Day of week should be provided for a Monthly schedule
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					4036
				Element:td
					An Active schedule already exists on this mandate
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					4039
				Element:td
					Payment Type must be Fixed Length on a Once off Mandate
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					4040
				Element:td
					Number of Payments on a Once Off Mandate must be set to 1
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					4041
				Element:td
					End To End Id is not unique
				Element:em
				Element:a
					Create direct debit
				Element:tr
				Element:td
					4042
				Element:td
					Mandate is not in a Valid Status
				Element:em
				Element:a
					Create direct debit
					,
				Element:a
					Create payment schedule
					,
				Element:a
					Represent DD
				Element:tr
				Element:td
					4043
				Element:td
					No Direct Debit exists in a valid status
				Element:em
				Element:a
					Revoke all direct debits
				Element:tr
				Element:td
					5001
				Element:td
					Invalid Beneficiary Account Details
				Element:em
				Element:a
					Create beneficiary
				Element:tr
				Element:td
					5002
				Element:td
					Duplicate Beneficiary Account Details Provided
				Element:em
				Element:a
					Create beneficiary
				Element:tr
				Element:td
					5004
				Element:td
					Beneficiary Country Required if any other Address element is provided
				Element:em
				Element:a
					Create beneficiary
				Element:tr
				Element:td
					5005
				Element:td
					Invalid Beneficiary e-mail address provided
				Element:em
				Element:a
					Create beneficiary
				Element:tr
				Element:td
					7001
				Element:td
					Date format invalid
				Element:em
				Element:a
					List mandates
					,
				Element:a
					List direct debits
					,
				Element:a
					List Failed Direct Debits
				Element:tr
				Element:td
					7002
				Element:td
					‘From Date ’ must be earlier or equal to 'To Date’
				Element:em
				Element:a
					List mandates
					,
				Element:a
					List direct debits
					,
				Element:a
					List Failed Direct Debits
				Element:tr
				Element:td
					7003
				Element:td
					Max date range is exceeded
				Element:em
				Element:a
					List mandates
					,
				Element:a
					List direct debits
					,
				Element:a
					List Failed Direct Debits
				Element:tr
				Element:td
					7004
				Element:td
					Boolean parameter value must be either 'true’ or 'false’
				Element:em
				Element:a
					List Failed Direct Debits
				Element:tr
				Element:td
					7005
				Element:td
					Max file size exceeded
				Element:em
				Element:a
					Upload file
				Element:tr
				Element:td
					7006
				Element:td
					Invalid file supplied. File extension does not match file format
				Element:em
				Element:a
					Upload file
				Element:tr
				Element:td
					7007
				Element:td
					Not allowed file format
				Element:em
				Element:a
					Upload file
				Element:tr
				Element:td
					7008
				Element:td
					Invalid file name
				Element:em
				Element:a
					Upload file
				Element:tr
				Element:td
					7009
				Element:td
					The Creditor Scheme ID/Type referenced does not exist within the system
				Element:em
				Element:a
					Upload file
				Element:tr
				Element:td
					7010
				Element:td
					Debtor Name is invalid or max length is exceeded
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					List mandates
					,
				Element:a
					Prepare E-Mandate
				Element:tr
				Element:td
					7011
				Element:td
					Address Line1 is invalid or max length is exceeded
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Create beneficiary
					,
				Element:a
					Prepare E-Mandate
				Element:tr
				Element:td
					7012
				Element:td
					Address Line2 is invalid or max length is exceeded
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Create beneficiary
					,
				Element:a
					Prepare E-Mandate
				Element:tr
				Element:td
					7013
				Element:td
					Address Town is invalid or max length is exceeded
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Create beneficiary
					,
				Element:a
					Prepare E-Mandate
				Element:tr
				Element:td
					7014
				Element:td
					Address Postal Code is invalid or max length is exceeded
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Create beneficiary
					,
				Element:a
					Prepare E-Mandate
				Element:tr
				Element:td
					7015
				Element:td
					Address State is invalid or max length is exceeded
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Create beneficiary
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					7016
				Element:td
					Address ISO Country Code is invalid
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Create beneficiary
					,
				Element:a
					Prepare E-Mandate
				Element:tr
				Element:td
					7017
				Element:td
					Debtor Language is invalid
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					7018
				Element:td
					Debtor Email is invalid or max length is exceeded
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
				Element:tr
				Element:td
					7019
				Element:td
					Phone Number is invalid or max length is exceeded
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Create beneficiary
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					7020
				Element:td
					Mobile Number is invalid or max length is exceeded
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Create beneficiary
					,
				Element:a
					Prepare E-Mandate
				Element:tr
				Element:td
					7021
				Element:td
					Mandate Id is invalid or max length is exceeded
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					List mandates
					,
				Element:a
					Prepare E-Mandate
				Element:tr
				Element:td
					7022
				Element:td
					Contract Reference is invalid or max length is exceeded
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
				Element:tr
				Element:td
					7023
				Element:td
					Signature Location is invalid or max length is exceeded
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Activate mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					7024
				Element:td
					Signature Date is invalid or max length is exceeded
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Activate mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					7025
				Element:td
					Mandate Type is invalid
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
				Element:tr
				Element:td
					7026
				Element:td
					Debtor IBAN is invalid
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					List mandates
					,
				Element:a
					Prepare E-Mandate
				Element:tr
				Element:td
					7027
				Element:td
					Debtor Bank BIC is invalid
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					7028
				Element:td
					Creditor IBAN is invalid
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
				Element:tr
				Element:td
					7029
				Element:td
					Creditor Bank BIC is invalid
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					7030
				Element:td
					Mandate Source is invalid
				Element:em
				Element:a
					Update mandate
				Element:tr
				Element:td
					7031
				Element:td
					Debtor Account IBAN is required
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					7032
				Element:td
					Debtor object is required
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					7033
				Element:td
					Debtor Account object is required
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					7034
				Element:td
					Debtor name is required
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					7035
				Element:td
					Remittance Information is invalid or max length is exceeded
				Element:em
				Element:a
					Create direct debit
					,
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					7036
				Element:td
					Requested Collection Date is required
				Element:em
				Element:a
					Create direct debit
				Element:tr
				Element:td
					7037
				Element:td
					Payment Amount is required
				Element:em
				Element:a
					Create direct debit
					,
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					7038
				Element:td
					Payment Frequency is required
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					7039
				Element:td
					Payment Type is required
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					7040
				Element:td
					Start Date is required
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					7041
				Element:td
					Payment Frequency is invalid
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					7042
				Element:td
					Payment Type is invalid
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					7043
				Element:td
					Start date is invalid
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					7044
				Element:td
					Schedule Id is invalid or max length is exceeded
				Element:em
				Element:a
					Create payment schedule
					,
				Element:a
					List direct debits
					,
				Element:a
					Revoke all direct debits
				Element:tr
				Element:td
					7045
				Element:td
					Number of Payments is invalid
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					7046
				Element:td
					Payment Day of Week is invalid
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					7047
				Element:td
					Payment Week of Month is invalid
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					7048
				Element:td
					Payment Day in Month is invalid
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					7049
				Element:td
					ResendMandateForSignature is invalid
				Element:em
				Element:a
					Update mandate
				Element:tr
				Element:td
					7050
				Element:td
					Page Number is invalid
				Element:em
				Element:a
					List mandates
					,
				Element:a
					List direct debits
					,
				Element:a
					List beneficiaries
				Element:tr
				Element:td
					7051
				Element:td
					Max page size is exceeded
				Element:em
				Element:a
					List mandates
					,
				Element:a
					List direct debits
					,
				Element:a
					List beneficiaries
				Element:tr
				Element:td
					7052
				Element:td
					Page size is invalid
				Element:em
				Element:a
					List mandates
					,
				Element:a
					List direct debits
					,
				Element:a
					List beneficiaries
				Element:tr
				Element:td
					7053
				Element:td
					Authorization Method is invalid
				Element:em
				Element:a
					Activate mandate
				Element:tr
				Element:td
					7054
				Element:td
					Authorization Token is invalid or max length is exceeded
				Element:em
				Element:a
					Activate mandate
				Element:tr
				Element:td
					7055
				Element:td
					Authorization email is invalid or max length is exceeded
				Element:em
				Element:a
					Activate mandate
				Element:tr
				Element:td
					7056
				Element:td
					Authorization Mobile Number is invalid or max length is exceeded
				Element:em
				Element:a
					Activate mandate
				Element:tr
				Element:td
					7057
				Element:td
					Ip Address is invalid or max length is exceeded
				Element:em
				Element:a
					Activate mandate
				Element:tr
				Element:td
					7058
				Element:td
					Geographic Location is invalid or max length is exceeded
				Element:em
				Element:a
					Activate mandate
				Element:tr
				Element:td
					7059
				Element:td
					Mandate Status is invalid
				Element:em
				Element:a
					List mandates
				Element:tr
				Element:td
					7063
				Element:td
					Payment Status is invalid
				Element:em
				Element:a
					List direct debits
				Element:tr
				Element:td
					7064
				Element:td
					Operation Reason exceeds maximum length
				Element:em
				Element:a
					Cancel Mandate
					,
				Element:a
					Revoke all direct debits
					,
				Element:a
					Revoke direct debit
				Element:tr
				Element:td
					7065
				Element:td
					Invalid Domestic Bank Code
				Element:em
				Element:a
					Validate Domestic Account
				Element:tr
				Element:td
					7066
				Element:td
					Invalid Domestic Branch Code
				Element:em
				Element:a
					Validate Domestic Account
				Element:tr
				Element:td
					7067
				Element:td
					Invalid Account Country
				Element:em
				Element:a
					Validate Domestic Account
				Element:tr
				Element:td
					7068
				Element:td
					Invalid Domestic Checksum
				Element:em
				Element:a
					Validate Domestic Account
				Element:tr
				Element:td
					7072
				Element:td
					PDF could not be generated / retrieved
				Element:em
				Element:a
					Retrieve mandate document
				Element:tr
				Element:td
					7074
				Element:td
					Mandate Operation Reason not provided
				Element:em
				Element:a
					Cancel Mandate
					,
				Element:tr
				Element:td
					7075
				Element:td
					Domestic Account Number is required if IBAN is not provided
				Element:em
				Element:a
					Validate Domestic Account
				Element:tr
				Element:td
					7076
				Element:td
					Invalid Domestic Account Number
				Element:em
				Element:a
					Validate Domestic Account
				Element:tr
				Element:td
					7077
				Element:td
					Account Country is required if IBAN is not provided
				Element:em
				Element:a
					Validate Domestic Account
				Element:tr
				Element:td
					7078
				Element:td
					‘Reject From Date’ is required
				Element:em
				Element:a
					List Failed Direct Debits
				Element:tr
				Element:td
					7079
				Element:td
					‘Reject To Date’ is required
				Element:em
				Element:a
					List Failed Direct Debits
				Element:tr
				Element:td
					7080
				Element:td
					Payment Custom Frequency is invalid
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					7081
				Element:td
					Beneficiary IBAN is invalid
				Element:em
				Element:a
					List beneficiaries
					,
				Element:a
					Create beneficiary
				Element:tr
				Element:td
					7082
				Element:td
					Beneficiary Bank BIC is invalid
				Element:em
				Element:a
					Create beneficiary
				Element:tr
				Element:td
					7083
				Element:td
					Beneficiary Account IBAN is required
				Element:em
				Element:a
					Create beneficiary
				Element:tr
				Element:td
					7084
				Element:td
					Beneficiary object is required
				Element:em
				Element:a
					Create beneficiary
				Element:tr
				Element:td
					7085
				Element:td
					Beneficiary Account object is required
				Element:em
				Element:a
					Create beneficiary
				Element:tr
				Element:td
					7086
				Element:td
					Beneficiary Name is required
				Element:em
				Element:a
					Create beneficiary
				Element:tr
				Element:td
					7087
				Element:td
					Beneficiary Bank BIC is required if External Account Validation is OFF
				Element:em
				Element:a
					Create beneficiary
				Element:tr
				Element:td
					7088
				Element:td
					Beneficiary Language is invalid
				Element:em
				Element:a
					Create beneficiary
				Element:tr
				Element:td
					7089
				Element:td
					Beneficiary Email is invalid or max length is exceeded
				Element:em
				Element:a
					Create beneficiary
				Element:tr
				Element:td
					7096
				Element:td
					Description of Purpose is invalid or max length is exceeded
				Element:em
				Element:a
					Create beneficiary
				Element:tr
				Element:td
					7097
				Element:td
					Scheme Type is invalid or max length is exceeded
				Element:em
				Element:a
					Prepare E-Mandate
				Element:tr
				Element:td
					7098
				Element:td
					Invalid IBAN
				Element:em
				Element:a
					Validate IBAN
				Element:tr
				Element:td
					7099
				Element:td
					Domestic Account details are not allowed if IBAN is provided
				Element:em
				Element:a
					Validate Domestic Account
					,
				Element:a
					Validate IBAN
				Element:tr
				Element:td
					7100
				Element:td
					Beneficiary Name is invalid or max length is exceeded
				Element:em
				Element:a
					List beneficiaries
					,
				Element:a
					Create beneficiary
				Element:tr
				Element:td
					7101
				Element:td
					Provided schedule details would create two payments for first collecting period. Please change schedule details or twoPaymentsSamePeriod flag
				Element:em
				Element:a
					Create payment schedule
				Element:tr
				Element:td
					7102
				Element:td
					Creditor Scheme Id is invalid or max length is exceeded
				Element:em
				Element:a
					Prepare E-Mandate
				Element:tr
				Element:td
					7103
				Element:td
					The IBAN check sum is incorrect. Please check your entry correctness
				Element:em
				Element:a
					Prepare E-Mandate
				Element:tr
				Element:td
					7104
				Element:td
					Debtor Account Country does not match Scheme Country
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					7105
				Element:td
					Creditor Account Country does not match Scheme Country
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Prepare E-Mandate
					*
				Element:tr
				Element:td
					7106
				Element:td
					Exported Mandates cannot be amnded when Edit Doc Handling / Regulatory Screening is enabled
				Element:em
				Element:a
					Update mandate
				Element:tr
				Element:td
					7107
				Element:td
					Mandate Id and Debtor Account details cannot be amended when Debtor Mandate Flow is used
				Element:em
				Element:a
					Update mandate
				Element:tr
				Element:td
					7108
				Element:td
					The file extension does not match that of the content-type header
				Element:em
				Element:a
					Upload Mandate Document
				Element:tr
				Element:td
					7109
				Element:td
					The file size exceeds 2MB
				Element:em
				Element:a
					Upload Mandate Document
				Element:tr
				Element:td
					7110
				Element:td
					The file name is invalid or exceeds the max length
				Element:em
				Element:a
					Upload Mandate Document
				Element:tr
				Element:td
					7111
				Element:td
					Originator IBAN is invalid
				Element:em
				Element:a
					Create credit transfer
				Element:tr
				Element:td
					7112
				Element:td
					Insufficient Funds
				Element:em
				Element:a
					Create credit transfer
				Element:tr
				Element:td
					7113
				Element:td
					Transfer Failed. Please try again later
				Element:em
				Element:a
					Create credit transfer
				Element:tr
				Element:td
					7114
				Element:td
					Transfer Failed. Please contact support
				Element:em
				Element:a
					Create credit transfer
				Element:tr
				Element:td
					7116
				Element:td
					A Once Off Mandate cannot have Migrating Mandate value true
				Element:em
				Element:a
					Update mandate
				Element:tr
				Element:td
					7117
				Element:td
					BBAN specific fields not allowed
				Element:em
				Element:a
					Create mandate
					,
				Element:a
					Update mandate
				Element:tr
				Element:td
					7118
				Element:td
					Payment schedule status is invalid
				Element:em
				Element:a
					List payment schedules
				Element:tr
				Element:td
					7119
				Element:td
					Domain is invalid or max length is exceeded
				Element:em
				Element:a
					Prepare E-Mandate
				Element:tr
				Element:td
					7120
				Element:td
					Payment schedule cannot be cancelled as it is not in ACTIVE status
				Element:a
					Cancel Payment Schedule
				Element:tr
				Element:td
					9001
				Element:td
					Invalid Domestic Account Number
				Element:em
				Element:a
					Validate Domestic Account
				Element:tr
				Element:td
					10002
				Element:td
					Request parameters not valid
				Element:em
				Element:a
					Upload file
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Depends on setting of 'Addon Prepare', if this is enabled additional debtor details can be provided via the 'Prepare E-Mandate' service, for further details please refer to your account manager.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Pagination
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					e.g. show the 1st page with a maximum of 10 entries per page from all of the available mandates:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl
				Element:span
					'https://api.nuapay.com/schemes/46pkx7o9n5/mandates/?pagesize=10&pagenumber=1'
					\ -u bb09c2b6a9478720765c757a8bcadf1aa1fb31554566a21118c9c75e26c29686: \
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					ListMandatesRequestParameters listMandatesRequestParameters =
				Element:span
					new
					ListMandatesRequestParameters(); listMandatesRequestParameters.setPageSize(
				Element:span
					10
					); listMandatesRequestParameters.setPageNumber(
				Element:span
					1
					); ListMandatesResponse listMandatesResponse = mandateService.listMandates(
				Element:span
					"46pkx7o9n5"
					, listMandatesRequestParameters);
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					the response will be:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1
				Element:span
					200
					OK
				Element:span
					Content-Type
					: application/json
				Element:span
					{
				Element:span
					"uri"
					:
				Element:span
					"/schemes/46pkx7o9n5/mandates"
					,
				Element:span
					"data"
					: [ {
				Element:span
					"id"
					:
				Element:span
					"46pkxn8e9n"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/8g3o2yyk2w/mandates/46pkxn8e9n"
					,
				Element:span
					"mandateId"
					:
				Element:span
					"b8b7ee91-b403-4ecb-9d98-059746dd8149"
					,
				Element:span
					"debtorName"
					:
				Element:span
					"Debtor Name"
					,
				Element:span
					"debtorIBAN"
					:
				Element:span
					"GB94SELN00999976543215"
					,
				Element:span
					"debtorMobileNumber"
					:
				Element:span
					"0360321312312"
					,
				Element:span
					"mandateStatus"
					:
				Element:span
					"ACTIVE"
					,
				Element:span
					"creationDate"
					:
				Element:span
					"2015-07-21"
					}, {
				Element:span
					"id"
					:
				Element:span
					"nx9kndaejm"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/8g3o2yyk2w/mandates/nx9kndaejm"
					,
				Element:span
					"mandateId"
					:
				Element:span
					"a04ee152-505d-4125-b671-5c5318b53842"
					,
				Element:span
					"debtorName"
					:
				Element:span
					"Debtor Name"
					,
				Element:span
					"debtorIBAN"
					:
				Element:span
					"GB94SELN00999976543215"
					,
				Element:span
					"debtorMobileNumber"
					:
				Element:span
					"0360321312312"
					,
				Element:span
					"mandateStatus"
					:
				Element:span
					"ACTIVE"
					,
				Element:span
					"creationDate"
					:
				Element:span
					"2015-07-21"
					}, {
				Element:span
					"id"
					:
				Element:span
					"vw7kj9gey5"
					,
				Element:span
					"uri"
					:
				Element:span
					"/schemes/8g3o2yyk2w/mandates/vw7kj9gey5"
					,
				Element:span
					"mandateId"
					:
				Element:span
					"79839287-54d8-4fab-99cc-cf1808b7a766"
					,
				Element:span
					"debtorName"
					:
				Element:span
					"Debtor Name"
					,
				Element:span
					"debtorIBAN"
					:
				Element:span
					"GB94SELN00999976543215"
					,
				Element:span
					"debtorMobileNumber"
					:
				Element:span
					"0360321312312"
					,
				Element:span
					"mandateStatus"
					:
				Element:span
					"ACTIVE"
					,
				Element:span
					"creationDate"
					:
				Element:span
					"2015-07-21"
					} ],
				Element:span
					"page"
					: {
				Element:span
					"pageNumber"
					:
				Element:span
					1
					,
				Element:span
					"pageSize"
					:
				Element:span
					3
					,
				Element:span
					"totalElements"
					:
				Element:span
					3
					,
				Element:span
					"totalPages"
					:
				Element:span
					1
					},
				Element:span
					"sort"
					: [ ] }
			Node:
			(type) c
			(layer)1
				Element:p
					Nuapay API utilizes offset-based pagination for endpoints returning a collection of resources.
			Node:
			(type) c
			(layer)1
				Element:p
					There are two parameters that control pagination:
				Element:code
					pagenumber
					, which specifies the page number to retrieve, and
				Element:code
					pagesize
					, which indicates how many records each page should contain.
			Node:
			(type) c
			(layer)1
				Element:p
					To control pagination, simply include either of these query string parameters in a request. In supported responses there will always be a page section added, describing the pagination settings used.
			Node:
			(type) c
			(layer)1
				Element:aside
					NOTE: the default value for pagesize is 20 and the maximum value you can set is 100.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Versioning
			Node:
			(type) c
			(layer)1
				Element:p
					The current version of the Nuapay API is version 1.0. Changes may occur to this version of the API without a change in version number if such a change follows our backwards compatibility guidelines. Different versions will be managed via a HTTP header indicating the version of the API which the client is using.
			Node:
			(type) c
			(layer)1
				Element:p
					Requests with no version number or an unmatched version number will be treated as version 1.0 requests.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Backward Compatibility
			Node:
			(type) c
			(layer)1
				Element:p
					The following changes are considered backwards compatible:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Adding new API endpoints, new endpoints are independent,
				Element:li
					Adding new optional request parameters to existing API calls,
				Element:li
					Adding new response properties to existing API calls. You should pay particular attention to this point if you are mapping your JSON responses to another programming language construct,
				Element:li
					Changing of the property order in existing API responses,
				Element:li
					Changing the length of object IDs (object IDs will never exceed 255 characters),
				Element:li
					Changing the messages returned by validation or other error messages,
				Element:li
					Output Encoding Rules are applied to some services and will be applied to all services in the future.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Useful Links
			Node:
			(type) c
			(layer)1
				Element:p
					Below you can find some useful links for further reading and help around RESTful integration and E-Mandates.
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Nuapay Integration & Docs
			Node:
			(type) h1
			(layer)1
				Element:h1
					Changelog
			Node:
			(type) c
			(layer)1
				Element:h2
					2017-01-10
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Updated
				Element:code
					List Mandates
					section. Additional details added to description of
				Element:code
					createdatefrom
					parameter.
				Element:li
					Updated
				Element:code
					paymentAmount
					property description across different sections. Added details of decimal separator and decimal places.
				Element:li
					Added
				Element:code
					Credit Transfers
					section.
				Element:li
					Updated
				Element:code
					Payment Schedule
					section with
				Element:code
					List Payment Schedules
					and
				Element:code
					Cancel Payment Schedule
					. Additional details added to
				Element:code
					Payment Schedule Object
					including new response only property and description of amount fields.
				Element:li
					Updated
				Element:code
					Error Codes
					section. Added codes 7111-7120. Fixed description for code 7103.
				Element:li
					Updated
				Element:code
					Direct Debits
					section. Additional details added to description of
				Element:code
					actualcollectiondatefrom
					and
				Element:code
					actualcollectiondateto
					parameters.
				Element:li
					Added description of
				Element:code
					List Mandate Object
					.
				Element:li
					Updated
				Element:code
					Update Mandate
					section with more details on service behaviour.
				Element:li
					Removed reference to
				Element:code
					COR1
					Scheme Type as it is not supported anymore.
				Element:li
					Update to
				Element:code
					Definition
					sections across different enpoints. More consistent method and resource URI presentation.
			Node:
			(type) c
			(layer)1
				Element:h2
					2016-07-20
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Fixed an error in the e-mandate signature URL, corrected URL should read,
				Element:a
					https://api.nuapay.com/emandate/web/show?token=XXXX
			Node:
			(type) c
			(layer)1
				Element:h2
					2016-06-29
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Some additional existing error codes can now affect the 'Prepare E-Mandate' service depending on configuration, see 'Error Codes' section for details.
			Node:
			(type) c
			(layer)1
				Element:h2
					2016-05-06
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Updated a number of examples using the -curl command, moving parameters using '-d' into the URL.
				Element:li
					Added a 'Useful Links' section with links to other relevant Nuapay integration documents.
			Node:
			(type) c
			(layer)1
				Element:h2
					2016-04-12
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Updated Mandate Object 'mandateInfo.status' and List Mandate 'mandatestatus' with READY_FOR_EXPORT and EXPORTED status.
			Node:
			(type) c
			(layer)1
				Element:h2
					2016-04-11
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Removed 'v1' from endpoints
			Node:
			(type) c
			(layer)1
				Element:h2
					2016-04-03
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Added 'Versioning' section.
				Element:li
					Updated request URI's based on versioning.
			Node:
			(type) c
			(layer)1
				Element:h2
					2016-01-21
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Added 'Security' section,
				Element:li
					Added 'Upload mandate document' service under 'Mandates' section.
				Element:li
					Added 'E-Mandate Signature URLs' under 'E-Mandates' section.
				Element:li
					Updated 'Error Codes' section. Added codes 7102 - 7110.
			Node:
			(type) c
			(layer)1
				Element:h2
					2015-11-19
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Added
				Element:code
					E-Mandates
					section.
				Element:li
					Fix for
				Element:code
					List Direct Debits
					request parameters.
				Element:li
					Updated
				Element:code
					scheduleId
					property to
				Element:code
					String
					.
				Element:li
					Added
				Element:code
					Beneficiary list
					object.
				Element:li
					Added
				Element:code
					mandateInfo.status
					and
				Element:code
					mandateInfo.creationDate
					to
				Element:code
					Mandate
					object.
				Element:li
					Added
				Element:code
					Failed Direct Debit
					object.
				Element:li
					Added
				Element:a
					NuaPay Java Rest Client
					lib examples.
			Node:
			(type) c
			(layer)1
				Element:h2
					2015-09-30
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Added
				Element:code
					Beneficiaries
					section.
				Element:li
					Updated
				Element:code
					Add Payment Schedule
					object. The payment schedule supports now
				Element:code
					CUSTOM
					frequency. New
				Element:code
					paymentCustomFrequency
					and
				Element:code
					twoPaymentsSamePeriod
					properties added.
				Element:li
					Updated
				Element:code
					Mandate
					object. Added supported
				Element:code
					language
					property values.
				Element:li
					Updated
				Element:code
					Error Codes
					section. Added codes 7078-7089, 7098-7101.
				Element:li
					Updated
				Element:code
					Accounts
					section. New
				Element:code
					Validate IBAN
					service added. Defined
				Element:code
					Account
					object.
				Element:li
					Added
				Element:code
					Backwards Compatibility
					section.
			Node:
			(type) c
			(layer)1
				Element:h2
					2015-09-01
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					API public release.
			Node:
			(type) c
			(layer)1
				Element:a
					bash
			Node:
			(type) c
			(layer)1
				Element:a
					java
