Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Comment
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:strong
					comment
					is a reader's response to an article in a blog. They appear on the article page in chronological order, typically after the article body.
			Node:
			(type) c
			(layer)1
				Element:img
			Node:
			(type) c
			(layer)1
				Element:p
					Just as a blog can have any number of articles, an article can have any number of comments. Blog comments are a target for spammers, so Shopify's blogs make use of a spam detection system to identify comments that are likely to be spam. Shop owners can mark comments as spam and not spam, which not only hides or unhides them from the readers' view, but also trains the Shopify spam detection system.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								What you can do with Comment
						Node:
						(type) c
						(layer)2
							Element:p
								The Shopify API lets you do the following with the Comment resource. More detailed versions of these general actions may be available:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
							Element:span
							Element:span
								GET /admin/comments.json?since_id=118373535
							Element:span
								Receive a list of all Comments
							Element:li
							Element:a
							Element:span
							Element:span
								GET /admin/comments/count.json
							Element:span
								Receive a count of all Comments
							Element:li
							Element:a
							Element:span
							Element:span
								GET /admin/comments/#{id}.json
							Element:span
								Receive a single Comment
							Element:li
							Element:a
							Element:span
							Element:span
								POST /admin/comments.json
							Element:span
								Create a new Comment
							Element:li
							Element:a
							Element:span
							Element:span
								PUT /admin/comments/#{id}.json
							Element:span
								Modify an existing Comment
							Element:li
							Element:a
							Element:span
							Element:span
								POST /admin/comments/#{id}/spam.json
							Element:span
								Mark a Comment as spam
							Element:li
							Element:a
							Element:span
							Element:span
								POST /admin/comments/#{id}/not_spam.json
							Element:span
								Mark a Comment as not spam
							Element:li
							Element:a
							Element:span
							Element:span
								POST /admin/comments/#{id}/approve.json
							Element:span
								Approve a Comment
							Element:li
							Element:a
							Element:span
							Element:span
								POST /admin/comments/#{id}/remove.json
							Element:span
								Remove a Comment
							Element:li
							Element:a
							Element:span
							Element:span
								POST /admin/comments/#{id}/restore.json
							Element:span
								Restore a Comment
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Comment properties
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tbody
							Element:tr
							Element:td
								article_id
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"article_id"
							Element:span
								:
							Element:span
								134645308
							Element:span
							Element:p
								A unique numeric identifier for the article to which the comment belongs.
							Element:tr
							Element:td
								author
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"author"
							Element:span
								:
							Element:span
								"Soleone"
							Element:span
							Element:p
								The name of the author of the comment.
							Element:tr
							Element:td
								blog_id
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"blog_id"
							Element:span
								:
							Element:span
								241253187
							Element:span
							Element:p
								A unique numeric identifier for the blog containing the article that the comment belongs to.
							Element:tr
							Element:td
								body
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"body"
							Element:span
								:
							Element:span
								"I really _like_ this."
							Element:span
							Element:p
								The basic textile markup of a comment.
							Element:tr
							Element:td
								body_html
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"body_html"
							Element:span
								:
							Element:span
								"&lt;p&gt; I really &lt;em&gt;like&lt;/em&gt; this.&lt;/p&gt;"
							Element:span
							Element:p
								The text of the comment, complete with HTML markup.
							Element:tr
							Element:td
								created_at
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"created_at"
							Element:span
								:
							Element:span
								"2012-08-24T14:01:46-04:00"
							Element:span
							Element:p
								The date and time when the comment was created. The API returns this value in
							Element:a
								ISO 8601 format
								.
							Element:tr
							Element:td
								email
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"email"
							Element:span
								:
							Element:span
								"sole@one.de"
							Element:span
							Element:p
								The email address of the author of the comment.
							Element:tr
							Element:td
								id
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"id"
							Element:span
								:
							Element:span
								653537639
							Element:span
							Element:p
								A unique numeric identifier for the comment.
							Element:tr
							Element:td
								ip
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"ip"
							Element:span
								:
							Element:span
								"127.0.0.1"
							Element:span
							Element:p
								The IP address from which the comment was posted.
							Element:tr
							Element:td
								published_at
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"published_at"
							Element:span
								:
							Element:span
								"2012-08-24T14:02:00-04:00"
							Element:span
							Element:p
								The date and time when the comment was published. In the case of comments, this is the date and time when the comment was created, meaning that it has the same value as created_at. The API returns this value in
							Element:a
								ISO 8601 format
								.
							Element:tr
							Element:td
								status
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"status"
							Element:span
								:
							Element:span
								"removed"
							Element:span
							Element:p
							Element:p
								The status of the comment. The possible values are:
							Element:ul
							Element:li
							Element:strong
								unapproved (default)
								: The comment is awaiting moderation by the shop owner and is not visible to the readers of the blog.
							Element:li
							Element:strong
								published
								: The comment has been approved (if the blog requires comments to be moderated) and is visible to readers of the blog.
							Element:li
							Element:strong
								spam
								: The comment has been marked as spam by the shop owner and is not visible to readers of the blog.
							Element:li
							Element:strong
								removed
								: The comment has been removed from the article.
							Element:tr
							Element:td
								updated_at
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"updated_at"
							Element:span
								:
							Element:span
								null
							Element:span
							Element:p
								The date and time when the comment was last modified. When the comment is first created, this is the date and time when the comment was created, meaning that it has the same value as created_at. If the blog requires comments to be approved, this value is updated to the date and time the comment was approved upon approval. The API returns this value in
							Element:a
								ISO 8601 format
								.
							Element:tr
							Element:td
								user_agent
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"user_agent"
							Element:span
								:
							Element:span
								"Mozilla/5.0"
							Element:span
							Element:p
								The user agent string provided by the software (usually a browser) used to create the comment.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Endpoints
						Node:
						(type) c
						(layer)2
							Element:span
								Get a list of all comments for an article
							Element:span
								GET
								/admin/comments.json
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tbody
							Element:tr
							Element:td
								limit
							Element:td
							Element:p
								Amount of results
								(default: 50) (maximum: 250)
							Element:tr
							Element:td
								page
							Element:td
							Element:p
								Page to show
								(default: 1)
							Element:tr
							Element:td
								since_id
							Element:td
							Element:p
								Restrict results to after the specified ID
							Element:tr
							Element:td
								created_at_min
							Element:td
							Element:p
								Show comments created after date (format: 2014-04-25T16:15:47-04:00)
							Element:tr
							Element:td
								created_at_max
							Element:td
							Element:p
								Show comments created before date (format: 2014-04-25T16:15:47-04:00)
							Element:tr
							Element:td
								updated_at_min
							Element:td
							Element:p
								Show comments last updated after date (format: 2014-04-25T16:15:47-04:00)
							Element:tr
							Element:td
								updated_at_max
							Element:td
							Element:p
								Show comments last updated before date (format: 2014-04-25T16:15:47-04:00)
							Element:tr
							Element:td
								published_at_min
							Element:td
							Element:p
								Show comments published after date (format: 2014-04-25T16:15:47-04:00)
							Element:tr
							Element:td
								published_at_max
							Element:td
							Element:p
								Show comments published before date (format: 2014-04-25T16:15:47-04:00)
							Element:tr
							Element:td
								fields
							Element:td
							Element:p
								comma-separated list of fields to include in the response
							Element:tr
							Element:td
								published_status
							Element:td
							Element:ul
							Element:li
								published - Show only published comments
							Element:li
								unpublished - Show only unpublished comments
							Element:li
								any - Show all comments (default)
							Element:tr
							Element:td
								status
							Element:td
							Element:ul
							Element:li
								pending - All pending comments
							Element:li
								published - Show only published comments
							Element:li
								unapproved - Show only unapproved comments
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Get all comments after the specified ID
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/comments.json?since_id=118373535
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "comments": [ { "id": 653537639, "body": "Hi author, I really _like_ what you're doing there.", "body_html": "<p>Hi author, I really <em>like<\/em> what you're doing there.<\/p>", "author": "Soleone", "email": "sole@one.de", "status": "unapproved", "article_id": 134645308, "blog_id": 241253187, "created_at": "2017-01-05T15:36:16-05:00", "updated_at": "2017-01-05T15:36:16-05:00", "ip": "127.0.0.1", "user_agent": "Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_5_4; en-us) AppleWebKit\/525.18 (KHTML, like Gecko) Version\/3.1.2 Safari\/525.20.1", "published_at": null } ] }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Get all the comments for a certain article of a blog
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/comments.json?article_id=134645308&blog_id=241253187
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "comments": [ { "id": 653537639, "body": "Hi author, I really _like_ what you're doing there.", "body_html": "<p>Hi author, I really <em>like<\/em> what you're doing there.<\/p>", "author": "Soleone", "email": "sole@one.de", "status": "unapproved", "article_id": 134645308, "blog_id": 241253187, "created_at": "2017-01-05T15:36:16-05:00", "updated_at": "2017-01-05T15:36:16-05:00", "ip": "127.0.0.1", "user_agent": "Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_5_4; en-us) AppleWebKit\/525.18 (KHTML, like Gecko) Version\/3.1.2 Safari\/525.20.1", "published_at": null }, { "id": 118373535, "body": "Hi author, I really _like_ what you're doing there.", "body_html": "<p>Hi author, I really <em>like<\/em> what you're doing there.<\/p>", "author": "Soleone", "email": "sole@one.de", "status": "published", "article_id": 134645308, "blog_id": 241253187, "created_at": "2017-01-05T15:36:16-05:00", "updated_at": "2017-01-05T15:36:16-05:00", "ip": "127.0.0.1", "user_agent": "Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_5_4; en-us) AppleWebKit\/525.18 (KHTML, like Gecko) Version\/3.1.2 Safari\/525.20.1", "published_at": null } ] }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Get all the comments for this shop
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/comments.json
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "comments": [ { "id": 653537639, "body": "Hi author, I really _like_ what you're doing there.", "body_html": "<p>Hi author, I really <em>like<\/em> what you're doing there.<\/p>", "author": "Soleone", "email": "sole@one.de", "status": "unapproved", "article_id": 134645308, "blog_id": 241253187, "created_at": "2017-01-05T15:36:16-05:00", "updated_at": "2017-01-05T15:36:16-05:00", "ip": "127.0.0.1", "user_agent": "Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_5_4; en-us) AppleWebKit\/525.18 (KHTML, like Gecko) Version\/3.1.2 Safari\/525.20.1", "published_at": null }, { "id": 118373535, "body": "Hi author, I really _like_ what you're doing there.", "body_html": "<p>Hi author, I really <em>like<\/em> what you're doing there.<\/p>", "author": "Soleone", "email": "sole@one.de", "status": "published", "article_id": 134645308, "blog_id": 241253187, "created_at": "2017-01-05T15:36:16-05:00", "updated_at": "2017-01-05T15:36:16-05:00", "ip": "127.0.0.1", "user_agent": "Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_5_4; en-us) AppleWebKit\/525.18 (KHTML, like Gecko) Version\/3.1.2 Safari\/525.20.1", "published_at": null } ] }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Get all the comments for all the articles of a certain blog
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/comments.json?blog_id=241253187
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "comments": [ { "id": 653537639, "body": "Hi author, I really _like_ what you're doing there.", "body_html": "<p>Hi author, I really <em>like<\/em> what you're doing there.<\/p>", "author": "Soleone", "email": "sole@one.de", "status": "unapproved", "article_id": 134645308, "blog_id": 241253187, "created_at": "2017-01-05T15:36:16-05:00", "updated_at": "2017-01-05T15:36:16-05:00", "ip": "127.0.0.1", "user_agent": "Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_5_4; en-us) AppleWebKit\/525.18 (KHTML, like Gecko) Version\/3.1.2 Safari\/525.20.1", "published_at": null }, { "id": 118373535, "body": "Hi author, I really _like_ what you're doing there.", "body_html": "<p>Hi author, I really <em>like<\/em> what you're doing there.<\/p>", "author": "Soleone", "email": "sole@one.de", "status": "published", "article_id": 134645308, "blog_id": 241253187, "created_at": "2017-01-05T15:36:16-05:00", "updated_at": "2017-01-05T15:36:16-05:00", "ip": "127.0.0.1", "user_agent": "Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_5_4; en-us) AppleWebKit\/525.18 (KHTML, like Gecko) Version\/3.1.2 Safari\/525.20.1", "published_at": null } ] }
									Node:
									(type) c
									(layer)3
										Element:span
											Get a count of all comments for an article
										Element:span
											GET
											/admin/comments/count.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
										Element:tr
										Element:td
											created_at_min
										Element:td
										Element:p
											Count comments created after date (format: 2014-04-25T16:15:47-04:00)
										Element:tr
										Element:td
											created_at_max
										Element:td
										Element:p
											Count comments created before date (format: 2014-04-25T16:15:47-04:00)
										Element:tr
										Element:td
											updated_at_min
										Element:td
										Element:p
											Count comments last updated after date (format: 2014-04-25T16:15:47-04:00)
										Element:tr
										Element:td
											updated_at_max
										Element:td
										Element:p
											Count comments last updated before date (format: 2014-04-25T16:15:47-04:00)
										Element:tr
										Element:td
											published_at_min
										Element:td
										Element:p
											Count comments published after date (format: 2014-04-25T16:15:47-04:00)
										Element:tr
										Element:td
											published_at_max
										Element:td
										Element:p
											Count comments published before date (format: 2014-04-25T16:15:47-04:00)
										Element:tr
										Element:td
											published_status
										Element:td
										Element:ul
										Element:li
											published - Count only published comments
										Element:li
											unpublished - Count only unpublished comments
										Element:li
											any - Count all comments (default)
										Element:tr
										Element:td
											status
										Element:td
										Element:ul
										Element:li
											pending - All pending comments
										Element:li
											published - Count only published comments
										Element:li
											unapproved - Count only unapproved comments
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Get a count of all the comments for this shop
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/comments/count.json
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "count": 2 }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Get a count of all the comments for all the articles of a certain blog
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/comments/count.json?blog_id=241253187
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "count": 2 }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Count all comments for a certain article of a blog
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/comments/count.json?article_id=134645308&blog_id=241253187
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "count": 2 }
									Node:
									(type) c
									(layer)3
										Element:span
											Get a single comment by its ID
										Element:span
											GET
											/admin/comments/118373535.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
										Element:tr
										Element:td
											fields
										Element:td
										Element:p
											comma-separated list of fields to include in the response
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Get a single comment
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/comments/#{id}.json
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "comment": { "id": 118373535, "body": "Hi author, I really _like_ what you're doing there.", "body_html": "<p>Hi author, I really <em>like<\/em> what you're doing there.<\/p>", "author": "Soleone", "email": "sole@one.de", "status": "published", "article_id": 134645308, "blog_id": 241253187, "created_at": "2017-01-05T15:36:16-05:00", "updated_at": "2017-01-05T15:36:16-05:00", "ip": "127.0.0.1", "user_agent": "Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_5_4; en-us) AppleWebKit\/525.18 (KHTML, like Gecko) Version\/3.1.2 Safari\/525.20.1", "published_at": null } }
									Node:
									(type) c
									(layer)3
										Element:span
											Create a new comment for an article
										Element:span
											POST
											/admin/comments.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Create a new comment with basic textile markup for a certain article of a blog
									Node:
									(type) c
									(layer)3
										Element:pre
											POST /admin/comments.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "comment": { "body": "I like comments\nAnd I like posting them *RESTfully*.", "author": "Your name", "email": "your@email.com", "ip": "107.20.160.121", "blog_id": 241253187, "article_id": 134645308 } }
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 201 Created { "comment": { "id": 757536353, "body": "I like comments\nAnd I like posting them *RESTfully*.", "body_html": "<p>I like comments<br \/>\nAnd I like posting them <strong>RESTfully<\/strong>.<\/p>", "author": "Your name", "email": "your@email.com", "status": "pending", "article_id": 134645308, "blog_id": 241253187, "created_at": "2017-01-05T15:37:17-05:00", "updated_at": "2017-01-05T15:37:17-05:00", "ip": "107.20.160.121", "user_agent": null, "published_at": "2017-01-05T15:37:17-05:00" } }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Trying to create a comment without a body, author, and email will return an error
									Node:
									(type) c
									(layer)3
										Element:pre
											POST /admin/comments.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "comment": { "article_id": 134645308 } }
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 422 Unprocessable Entity { "errors": { "author": [ "can't be blank" ], "body": [ "can't be blank" ], "email": [ "is invalid" ] } }
									Node:
									(type) c
									(layer)3
										Element:span
											Update a comment of an article within a blog
										Element:span
											PUT
											/admin/comments/118373535.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Update an existing comment body
									Node:
									(type) c
									(layer)3
										Element:pre
											PUT /admin/comments/#{id}.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "comment": { "id": 118373535, "body": "You can even update through a web service.", "author": "Your new name", "email": "your@updated-email.com", "published_at": "2017-01-05T20:37:21.046Z" } }
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "comment": { "id": 118373535, "body": "You can even update through a web service.", "body_html": "<p>You can even update through a web service.<\/p>", "author": "Your new name", "email": "your@updated-email.com", "status": "published", "article_id": 134645308, "blog_id": 241253187, "created_at": "2017-01-05T15:36:16-05:00", "updated_at": "2017-01-05T15:37:21-05:00", "ip": "127.0.0.1", "user_agent": "Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_5_4; en-us) AppleWebKit\/525.18 (KHTML, like Gecko) Version\/3.1.2 Safari\/525.20.1", "published_at": "2017-01-05T15:37:21-05:00" } }
									Node:
									(type) c
									(layer)3
										Element:span
										Element:span
											POST
											/admin/comments/653537639/spam.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Mark a comment as spam, helping to train our spam detection as well as remove the comment sometime soon
									Node:
									(type) c
									(layer)3
										Element:pre
											POST /admin/comments/#{id}/spam.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{}
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "status": "spam", "id": 653537639, "body": "Hi author, I really _like_ what you're doing there.", "body_html": "<p>Hi author, I really <em>like<\/em> what you're doing there.<\/p>", "author": "Soleone", "email": "sole@one.de", "article_id": 134645308, "blog_id": 241253187, "created_at": "2017-01-05T15:36:16-05:00", "updated_at": "2017-01-05T15:37:17-05:00", "ip": "127.0.0.1", "user_agent": "Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_5_4; en-us) AppleWebKit\/525.18 (KHTML, like Gecko) Version\/3.1.2 Safari\/525.20.1", "published_at": "2017-01-05T15:37:17-05:00" }
									Node:
									(type) c
									(layer)3
										Element:span
										Element:span
											POST
											/admin/comments/653537639/not_spam.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Mark a comment as not spam, restoring a comment marked as spam back to published
									Node:
									(type) c
									(layer)3
										Element:pre
											POST /admin/comments/#{id}/not_spam.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{}
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "status": "published", "id": 653537639, "body": "Hi author, I really _like_ what you're doing there.", "body_html": "<p>Hi author, I really <em>like<\/em> what you're doing there.<\/p>", "author": "Soleone", "email": "sole@one.de", "article_id": 134645308, "blog_id": 241253187, "created_at": "2017-01-05T15:36:16-05:00", "updated_at": "2017-01-05T15:37:21-05:00", "ip": "127.0.0.1", "user_agent": "Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_5_4; en-us) AppleWebKit\/525.18 (KHTML, like Gecko) Version\/3.1.2 Safari\/525.20.1", "published_at": "2017-01-05T15:37:21-05:00" }
									Node:
									(type) c
									(layer)3
										Element:span
										Element:span
											POST
											/admin/comments/653537639/approve.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Approve a comment that is currently pending unapproved so that it will be published on the site
									Node:
									(type) c
									(layer)3
										Element:pre
											POST /admin/comments/#{id}/approve.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{}
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "status": "published", "blog_id": 241253187, "id": 653537639, "body": "Hi author, I really _like_ what you're doing there.", "body_html": "<p>Hi author, I really <em>like<\/em> what you're doing there.<\/p>", "author": "Soleone", "email": "sole@one.de", "article_id": 134645308, "created_at": "2017-01-05T15:36:16-05:00", "updated_at": "2017-01-05T15:37:18-05:00", "ip": "127.0.0.1", "user_agent": "Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_5_4; en-us) AppleWebKit\/525.18 (KHTML, like Gecko) Version\/3.1.2 Safari\/525.20.1", "published_at": "2017-01-05T15:37:18-05:00" }
									Node:
									(type) c
									(layer)3
										Element:span
										Element:span
											POST
											/admin/comments/653537639/remove.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Remove a comment
									Node:
									(type) c
									(layer)3
										Element:pre
											POST /admin/comments/#{id}/remove.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{}
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "status": "removed", "id": 653537639, "body": "Hi author, I really _like_ what you're doing there.", "body_html": "<p>Hi author, I really <em>like<\/em> what you're doing there.<\/p>", "author": "Soleone", "email": "sole@one.de", "article_id": 134645308, "blog_id": 241253187, "created_at": "2017-01-05T15:36:16-05:00", "updated_at": "2017-01-05T15:37:22-05:00", "ip": "127.0.0.1", "user_agent": "Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_5_4; en-us) AppleWebKit\/525.18 (KHTML, like Gecko) Version\/3.1.2 Safari\/525.20.1", "published_at": "2017-01-05T15:37:22-05:00" }
									Node:
									(type) c
									(layer)3
										Element:span
										Element:span
											POST
											/admin/comments/653537639/restore.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Restore a Comment
									Node:
									(type) c
									(layer)3
										Element:pre
											POST /admin/comments/#{id}/restore.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{}
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "status": "published", "id": 653537639, "body": "Hi author, I really _like_ what you're doing there.", "body_html": "<p>Hi author, I really <em>like<\/em> what you're doing there.<\/p>", "author": "Soleone", "email": "sole@one.de", "article_id": 134645308, "blog_id": 241253187, "created_at": "2017-01-05T15:36:16-05:00", "updated_at": "2017-01-05T15:37:19-05:00", "ip": "127.0.0.1", "user_agent": "Mozilla\/5.0 (Macintosh; U; Intel Mac OS X 10_5_4; en-us) AppleWebKit\/525.18 (KHTML, like Gecko) Version\/3.1.2 Safari\/525.20.1", "published_at": "2017-01-05T15:37:19-05:00" }
									Node:
									(type) c
									(layer)3
										Element:p
											How helpful was this page?
									Node:
									(type) c
									(layer)3
										Element:label
											1
									Node:
									(type) c
									(layer)3
										Element:label
											2
									Node:
									(type) c
									(layer)3
										Element:label
											3
									Node:
									(type) c
									(layer)3
										Element:label
											4
									Node:
									(type) c
									(layer)3
										Element:label
											5
									Node:
									(type) c
									(layer)3
										Element:label
										Element:span
											Select an option
										Element:span
									Node:
									(type) c
									(layer)3
										Element:label
										Element:span
											What was good or bad about this page?
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											This page was printed on 20 Mar 2017
											. For the latest version, please go to
										Element:a
											https://help.shopify.com/api/reference/comment/
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:a
											About
										Element:a
											Careers
										Element:a
											Blog
										Element:a
											Press and Media
										Element:a
											Enterprise
										Element:a
											Sitemap
										Element:h3
											Online store
										Element:a
											Sell online
										Element:a
											Features
										Element:a
											Examples
										Element:a
											Website editor
										Element:a
											Online retail
										Element:a
											Ecommerce website
										Element:a
											Themes
										Element:a
											Shopping cart
										Element:a
											Ecommerce hosting
										Element:a
											Mobile commerce
										Element:a
											Ecommerce software
										Element:h3
											Point of sale
										Element:a
											Point of sale
										Element:a
											Features
										Element:a
											Hardware
										Element:a
											POS software
										Element:h3
											Support
										Element:a
											24/7 support
										Element:a
											Shopify Help Center
										Element:a
											Forums
										Element:a
											API documentation
										Element:a
											Free tools
										Element:h3
											Shopify
										Element:a
											Contact
										Element:a
											Partner program
										Element:a
											Affiliate program
										Element:a
											App developers
										Element:a
											Investors
										Element:a
											Accessibility
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
											Terms of Service
										Element:a
											Privacy Policy
