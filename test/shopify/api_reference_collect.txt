Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Collect
			Node:
			(type) c
			(layer)1
				Element:p
					A
				Element:strong
					collect
					is an object that connects a product to a custom collection.
			Node:
			(type) c
			(layer)1
				Element:img
			Node:
			(type) c
			(layer)1
				Element:p
					For every product in a custom collection there exists a collect that tracks the ids of both the product and the custom collection it's a member of. A product can be a member of more than one collection, and will have more than one collect connecting the product to each collection. Unlike many Shopify resources, collects aren't apparent to shop owners; they're objects for managing the relationship between products and custom collections.
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Reminder
												Node:
												(type) c
												(layer)4
													Element:p
														Collects are for specifying the membership of products in custom collections only;
													Element:a
														smart collections
														use rules to determine which products are their members. Creating a collect that links a product to a smart collection results in a
													Element:strong
														403 Forbidden
														error.
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								What you can do with Collect
						Node:
						(type) c
						(layer)2
							Element:p
								The Shopify API lets you do the following with the Collect resource. More detailed versions of these general actions may be available:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
							Element:span
							Element:span
								POST /admin/collects.json
							Element:span
								Create a new Collect
							Element:li
							Element:a
							Element:span
							Element:span
								DELETE /admin/collects/#{id}.json
							Element:span
								Remove a Collect from the database
							Element:li
							Element:a
							Element:span
							Element:span
								GET /admin/collects.json
							Element:span
								Receive a list of all Collects
							Element:li
							Element:a
							Element:span
							Element:span
								GET /admin/collects/count.json?product_id=632910392
							Element:span
								Receive a count of all Collects
							Element:li
							Element:a
							Element:span
							Element:span
								GET /admin/collects/#{id}.json
							Element:span
								Receive a single Collect
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								Collect properties
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tbody
							Element:tr
							Element:td
								collection_id
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"collection_id"
							Element:span
								:
							Element:span
								841564295
							Element:span
							Element:p
								The id of the custom collection containing the product.
							Element:tr
							Element:td
								created_at
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"created_at"
							Element:span
								:
							Element:span
								null
							Element:span
							Element:p
								The date and time when the collect was created. The API returns this value in
							Element:a
								ISO 8601 format
								.
							Element:tr
							Element:td
								featured
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"featured"
							Element:span
								:
							Element:span
								false
							Element:span
							Element:p
								States whether or not the collect is featured. Valid values are "true" or "false".
							Element:tr
							Element:td
								id
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"id"
							Element:span
								:
							Element:span
								841564295
							Element:span
							Element:p
								A unique numeric identifier for the collect.
							Element:tr
							Element:td
								position
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"position"
							Element:span
								:
							Element:span
								2
							Element:span
							Element:p
								A number specifying the
							Element:em
								manually sorted
								position of this product in a custom collection. The first position is 1. This value only applies when the custom collection is viewed using the
							Element:em
								Manual
								sort order.
							Element:tr
							Element:td
								product_id
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"product_id"
							Element:span
								:
							Element:span
								632910392
							Element:span
							Element:p
								The unique numeric identifier for the product in the custom collection.
							Element:tr
							Element:td
								sort_value
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"sort_value"
							Element:span
								:
							Element:span
								"0000000002"
							Element:span
							Element:p
								This is the same value as
							Element:code
								position
								but padded with leading zeroes to make it alphanumeric-sortable.
							Element:tr
							Element:td
								updated_at
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"updated_at"
							Element:span
								:
							Element:span
								null
							Element:span
							Element:p
								The date and time when the collect was last updated. The API returns this value in
							Element:a
								ISO 8601 format
								.
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								Endpoints
						Node:
						(type) c
						(layer)2
							Element:span
								Add a product to a collection
							Element:span
								POST
								/admin/collects.json
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tbody
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Trying to create a collect without a product or collection ID will return an error
									Node:
									(type) c
									(layer)3
										Element:pre
											POST /admin/collects.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "collect": { "body": "foobar" } }
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 422 Unprocessable Entity { "errors": { "shop_id": [ "can't be blank" ], "product": [ "can't be blank" ], "collection": [ "can't be blank" ] } }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Create a new link between an existing product and an existing collection
									Node:
									(type) c
									(layer)3
										Element:pre
											POST /admin/collects.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "collect": { "product_id": 921728736, "collection_id": 841564295 } }
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 201 Created { "collect": { "id": 1071559576, "collection_id": 841564295, "product_id": 921728736, "featured": false, "created_at": "2017-01-05T15:32:06-05:00", "updated_at": "2017-01-05T15:32:06-05:00", "position": 2, "sort_value": "0000000002" } }
									Node:
									(type) c
									(layer)3
										Element:span
											Remove a product from a collection
										Element:span
											DELETE
											/admin/collects/841564295.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Destroy the link between a product an a collection
									Node:
									(type) c
									(layer)3
										Element:pre
											DELETE /admin/collects/#{id}.json
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK {}
									Node:
									(type) c
									(layer)3
										Element:span
											List all collects or only those for specific products or collections
										Element:span
											GET
											/admin/collects.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
										Element:tr
										Element:td
											page
										Element:td
										Element:p
											Page to show
											(default: 1)
										Element:tr
										Element:td
											limit
										Element:td
										Element:p
											Collects per page
											(default: 50) (maximum: 250)
										Element:tr
										Element:td
											fields
										Element:td
										Element:p
											comma-separated list of fields to include in the response
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											List all collects for your shop
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/collects.json
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "collects": [ { "id": 395646240, "collection_id": 395646240, "product_id": 632910392, "featured": false, "created_at": null, "updated_at": null, "position": 1, "sort_value": "0000000001" }, { "id": 841564295, "collection_id": 841564295, "product_id": 632910392, "featured": false, "created_at": null, "updated_at": null, "position": 1, "sort_value": "0000000001" } ] }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											List only collects for a certain collection
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/collects.json?collection_id=841564295
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "collects": [ { "id": 1071559575, "collection_id": 841564295, "product_id": 921728736, "featured": false, "created_at": "2017-01-05T15:32:00-05:00", "updated_at": "2017-01-05T15:32:00-05:00", "position": 1, "sort_value": "0000000001" }, { "id": 841564295, "collection_id": 841564295, "product_id": 632910392, "featured": false, "created_at": null, "updated_at": null, "position": 2, "sort_value": "0000000002" } ] }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											List only collects for a certain product
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/collects.json?product_id=632910392
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "collects": [ { "id": 395646240, "collection_id": 395646240, "product_id": 632910392, "featured": false, "created_at": null, "updated_at": null, "position": 1, "sort_value": "0000000001" }, { "id": 841564295, "collection_id": 841564295, "product_id": 632910392, "featured": false, "created_at": null, "updated_at": null, "position": 1, "sort_value": "0000000001" } ] }
									Node:
									(type) c
									(layer)3
										Element:span
											Get a count of all collects or only those for specific products or collections
										Element:span
											GET
											/admin/collects/count.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Count only collects for a certain product
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/collects/count.json?product_id=632910392
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "count": 2 }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Count all collects for your shop
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/collects/count.json
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "count": 2 }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Count only collects for a certain collection
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/collects/count.json?collection_id=841564295
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "count": 1 }
									Node:
									(type) c
									(layer)3
										Element:span
											Get the collect with a certain id, or for a given product AND collection
										Element:span
											GET
											/admin/collects/841564295.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
										Element:tr
										Element:td
											fields
										Element:td
										Element:p
											comma-separated list of fields to include in the response
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Return a collect with a certain id
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/collects/#{id}.json
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "collect": { "id": 841564295, "collection_id": 841564295, "product_id": 632910392, "featured": false, "created_at": null, "updated_at": null, "position": 1, "sort_value": "0000000001" } }
									Node:
									(type) c
									(layer)3
										Element:p
											How helpful was this page?
									Node:
									(type) c
									(layer)3
										Element:label
											1
									Node:
									(type) c
									(layer)3
										Element:label
											2
									Node:
									(type) c
									(layer)3
										Element:label
											3
									Node:
									(type) c
									(layer)3
										Element:label
											4
									Node:
									(type) c
									(layer)3
										Element:label
											5
									Node:
									(type) c
									(layer)3
										Element:label
										Element:span
											Select an option
										Element:span
									Node:
									(type) c
									(layer)3
										Element:label
										Element:span
											What was good or bad about this page?
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											This page was printed on 20 Mar 2017
											. For the latest version, please go to
										Element:a
											https://help.shopify.com/api/reference/collect/
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:a
											About
										Element:a
											Careers
										Element:a
											Blog
										Element:a
											Press and Media
										Element:a
											Enterprise
										Element:a
											Sitemap
										Element:h3
											Online store
										Element:a
											Sell online
										Element:a
											Features
										Element:a
											Examples
										Element:a
											Website editor
										Element:a
											Online retail
										Element:a
											Ecommerce website
										Element:a
											Themes
										Element:a
											Shopping cart
										Element:a
											Ecommerce hosting
										Element:a
											Mobile commerce
										Element:a
											Ecommerce software
										Element:h3
											Point of sale
										Element:a
											Point of sale
										Element:a
											Features
										Element:a
											Hardware
										Element:a
											POS software
										Element:h3
											Support
										Element:a
											24/7 support
										Element:a
											Shopify Help Center
										Element:a
											Forums
										Element:a
											API documentation
										Element:a
											Free tools
										Element:h3
											Shopify
										Element:a
											Contact
										Element:a
											Partner program
										Element:a
											Affiliate program
										Element:a
											App developers
										Element:a
											Investors
										Element:a
											Accessibility
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
											Terms of Service
										Element:a
											Privacy Policy
