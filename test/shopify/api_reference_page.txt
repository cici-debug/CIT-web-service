Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Page
			Node:
			(type) c
			(layer)1
				Element:p
					In addition to an online storefront, Shopify shops come with a web
				Element:strong
					page
					creation tool, allowing a shop to have one or more pages. Shop owners are encouraged to use pages for information that customers will use often, such as an 'About Us' page, a 'Contact Us' page, a page with customer testimonials etc.
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Reminder
												Node:
												(type) c
												(layer)4
													Element:p
														Pages are meant to be used for static content. If the shop needs a page for content that is created on a regular basis, we recommend that you use the
													Element:a
														blog
														feature instead.
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								What you can do with Page
						Node:
						(type) c
						(layer)2
							Element:p
								The Shopify API lets you do the following with the Page resource. More detailed versions of these general actions may be available:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
							Element:span
							Element:span
								GET /admin/pages.json
							Element:span
								Receive a list of all Pages
							Element:li
							Element:a
							Element:span
							Element:span
								GET /admin/pages/count.json
							Element:span
								Receive a count of all Pages
							Element:li
							Element:a
							Element:span
							Element:span
								GET /admin/pages/#{id}.json
							Element:span
								Receive a single Page
							Element:li
							Element:a
							Element:span
							Element:span
								POST /admin/pages.json
							Element:span
								Create a new Page
							Element:li
							Element:a
							Element:span
							Element:span
								PUT /admin/pages/#{id}.json
							Element:span
								Modify an existing Page
							Element:li
							Element:a
							Element:span
							Element:span
								DELETE /admin/pages/#{id}.json
							Element:span
								Remove a Page from the database
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								Page properties
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tbody
							Element:tr
							Element:td
								author
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"author"
							Element:span
								:
							Element:span
								"Lydia"
							Element:span
							Element:p
								The name of the person who created the page.
							Element:tr
							Element:td
								body_html
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"body_html"
							Element:span
								:
							Element:span
								"We don't need a warranty"
							Element:span
							Element:p
								Text content of the page, complete with HTML markup.
							Element:tr
							Element:td
								created_at
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"created_at"
							Element:span
								:
							Element:span
								"2008-07-15T20:00:00-04:00"
							Element:span
							Element:p
								The date and time when the page was created. The API returns this value in
							Element:a
								ISO 8601 format
								.
							Element:tr
							Element:td
								handle
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"handle"
							Element:span
								:
							Element:span
								"tos"
							Element:span
							Element:p
								A human-friendly unique string for the page automatically generated from its title. This is used in shop themes by the Liquid templating language to refer to the page.
							Element:tr
							Element:td
								id
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"id"
							Element:span
								:
							Element:span
								131092082
							Element:span
							Element:p
								The unique numeric identifier for the page.
							Element:tr
							Element:td
								metafield
							Element:td
							Element:pre
							Element:code
								"metafield": [ {
							Element:span
							Element:span
								"key"
							Element:span
								:
							Element:span
								"new"
							Element:span
								,
							Element:pre
							Element:code
							Element:span
							Element:span
								"value"
							Element:span
								:
							Element:span
								"newvalue"
							Element:span
								,
							Element:pre
							Element:code
							Element:span
							Element:span
								"value_type"
							Element:span
								:
							Element:span
								"string"
							Element:span
								,
							Element:pre
							Element:code
							Element:span
							Element:span
								"namespace"
							Element:span
								:
							Element:span
								"global"
							Element:span
								} ]
							Element:p
								Attaches additional information to a shop's resources:
							Element:ul
							Element:li
							Element:strong
								key (required)
								: Identifier for the metafield (maximum of 30 characters).
							Element:li
							Element:strong
								namespace (required)
								: Container for a set of metadata. Namespaces help distinguish between metadata you created and metadata created by another individual with a similar namespace (maximum of 20 characters).
							Element:li
							Element:strong
								value (required)
								: Information to be stored as metadata.
							Element:li
							Element:strong
								value_type (required)
								: States whether the information in the value is stored as a 'string' or 'integer.'
							Element:li
							Element:strong
								description (optional)
								: Additional information about the metafield.
							Element:tr
							Element:td
								published_at
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"published_at"
							Element:span
								:
							Element:span
								"2014-07-16T20:00:00-04:00"
							Element:span
							Element:p
								This can have two different types of values, depending on whether the page has been published (i.e., made visible to the blog's readers).
							Element:ul
							Element:li
								If the page is
							Element:strong
								published
								, this value is the date and time when it was published. The API returns this value in
							Element:a
								ISO 8601 format
								.
							Element:li
								If the page is a
							Element:strong
								hidden
								, this value is null. Changing an page's status from published to hidden changes its published_at property to null.
							Element:tr
							Element:td
								shop_id
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"shop_id"
							Element:span
								:
							Element:span
								690933842
							Element:span
							Element:p
								The id of the shop to which the page belongs.
							Element:tr
							Element:td
								template_suffix
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"template_suffix"
							Element:span
								:
							Element:span
								null
							Element:span
							Element:p
								The suffix of the liquid template being used. By default, the original template is called page.liquid, without any suffix. Any additional templates will be: page.suffix.liquid.
							Element:tr
							Element:td
								title
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"title"
							Element:span
								:
							Element:span
								"Terms of Services"
							Element:span
							Element:p
								The title of the page.
							Element:tr
							Element:td
								updated_at
							Element:td
							Element:pre
							Element:code
							Element:span
							Element:span
								"updated_at"
							Element:span
								:
							Element:span
								"2008-07-16T20:00:00-04:00"
							Element:span
							Element:p
								The date and time when the page was last updated. The API returns this value in
							Element:a
								ISO 8601 format
								.
												Node:
												(type) c
												(layer)4
						Node:
						(type) c
						(layer)2
							Element:h2
								Endpoints
						Node:
						(type) c
						(layer)2
							Element:span
								Get a list of all pages
							Element:span
								GET
								/admin/pages.json
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tbody
							Element:tr
							Element:td
								limit
							Element:td
							Element:p
								Amount of results
								(default: 50) (maximum: 250)
							Element:tr
							Element:td
								page
							Element:td
							Element:p
								Page to show
								(default: 1)
							Element:tr
							Element:td
								since_id
							Element:td
							Element:p
								Restrict results to after the specified ID
							Element:tr
							Element:td
								title
							Element:td
							Element:p
								Show pages by Title
							Element:tr
							Element:td
								handle
							Element:td
							Element:p
								Filter by Page handle
							Element:tr
							Element:td
								created_at_min
							Element:td
							Element:p
								Show pages created after date (format: 2008-12-31)
							Element:tr
							Element:td
								created_at_max
							Element:td
							Element:p
								Show pages created before date (format: 2008-12-31)
							Element:tr
							Element:td
								updated_at_min
							Element:td
							Element:p
								Show pages last updated after date (format: 2008-12-31)
							Element:tr
							Element:td
								updated_at_max
							Element:td
							Element:p
								Show pages last updated before date (format: 2008-12-31)
							Element:tr
							Element:td
								published_at_min
							Element:td
							Element:p
								Show pages published after date (format: 2014-04-25T16:15:47-04:00)
							Element:tr
							Element:td
								published_at_max
							Element:td
							Element:p
								Show pages published before date (format: 2014-04-25T16:15:47-04:00)
							Element:tr
							Element:td
								fields
							Element:td
							Element:p
								comma-separated list of fields to include in the response
							Element:tr
							Element:td
								published_status
							Element:td
							Element:ul
							Element:li
								published - Show only published pages
							Element:li
								unpublished - Show only unpublished pages
							Element:li
								any - Show all pages (default)
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Get all pages for a shop
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/pages.json
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "pages": [ { "id": 322471, "title": "Support", "shop_id": 690933842, "handle": "support", "body_html": "<p>Come in store for support.<\/p>", "author": "Dennis", "created_at": "2009-07-15T20:00:00-04:00", "updated_at": "2009-07-16T20:00:00-04:00", "published_at": null, "template_suffix": null }, { "id": 108828309, "title": "Sample Page", "shop_id": 690933842, "handle": "sample", "body_html": "<p>this is a <strong>sample<\/strong> page.<\/p>", "author": "Dennis", "created_at": "2008-07-15T20:00:00-04:00", "updated_at": "2008-07-16T20:00:00-04:00", "published_at": null, "template_suffix": null }, { "id": 131092082, "title": "Terms of Services", "shop_id": 690933842, "handle": "tos", "body_html": "<p>We make <strong>perfect<\/strong> stuff, we don't need a warranty.<\/p>", "author": "Dennis", "created_at": "2008-07-15T20:00:00-04:00", "updated_at": "2008-07-16T20:00:00-04:00", "published_at": "2008-07-15T20:00:00-04:00", "template_suffix": null }, { "id": 169524623, "title": "Store hours", "shop_id": 690933842, "handle": "store-hours", "body_html": "<p>We never close.<\/p>", "author": "Jobs", "created_at": "2013-12-31T19:00:00-05:00", "updated_at": "2013-12-31T19:00:00-05:00", "published_at": "2014-02-01T19:00:00-05:00", "template_suffix": null } ] }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Get a list of all pages after the specified ID
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/pages.json?since_id=108828309
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "pages": [ { "id": 131092082, "title": "Terms of Services", "shop_id": 690933842, "handle": "tos", "body_html": "<p>We make <strong>perfect<\/strong> stuff, we don't need a warranty.<\/p>", "author": "Dennis", "created_at": "2008-07-15T20:00:00-04:00", "updated_at": "2008-07-16T20:00:00-04:00", "published_at": "2008-07-15T20:00:00-04:00", "template_suffix": null }, { "id": 169524623, "title": "Store hours", "shop_id": 690933842, "handle": "store-hours", "body_html": "<p>We never close.<\/p>", "author": "Jobs", "created_at": "2013-12-31T19:00:00-05:00", "updated_at": "2013-12-31T19:00:00-05:00", "published_at": "2014-02-01T19:00:00-05:00", "template_suffix": null } ] }
									Node:
									(type) c
									(layer)3
										Element:span
											Get a count of all pages
										Element:span
											GET
											/admin/pages/count.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
										Element:tr
										Element:td
											title
										Element:td
										Element:p
											Pages with a given title
										Element:tr
										Element:td
											created_at_min
										Element:td
										Element:p
											Pages created after date (format: 2008-12-31)
										Element:tr
										Element:td
											created_at_max
										Element:td
										Element:p
											Pages created before date (format: 2008-12-31)
										Element:tr
										Element:td
											updated_at_min
										Element:td
										Element:p
											Pages last updated after date (format: 2008-12-31)
										Element:tr
										Element:td
											updated_at_max
										Element:td
										Element:p
											Pages last updated before date (format: 2008-12-31)
										Element:tr
										Element:td
											published_at_min
										Element:td
										Element:p
											Show pages published after date (format: 2014-04-25T16:15:47-04:00)
										Element:tr
										Element:td
											published_at_max
										Element:td
										Element:p
											Show pages published before date (format: 2014-04-25T16:15:47-04:00)
										Element:tr
										Element:td
											published_status
										Element:td
										Element:ul
										Element:li
											published - Only published pages
										Element:li
											unpublished - Only unpublished pages
										Element:li
											any - All pages (default)
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Count all pages for a shop
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/pages/count.json
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "count": 4 }
									Node:
									(type) c
									(layer)3
										Element:span
											Get a single page by its ID
										Element:span
											GET
											/admin/pages/131092082.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
										Element:tr
										Element:td
											fields
										Element:td
										Element:p
											comma-separated list of fields to include in the response
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Get a single page
									Node:
									(type) c
									(layer)3
										Element:pre
											GET /admin/pages/#{id}.json
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "page": { "id": 131092082, "title": "Terms of Services", "shop_id": 690933842, "handle": "tos", "body_html": "<p>We make <strong>perfect<\/strong> stuff, we don't need a warranty.<\/p>", "author": "Dennis", "created_at": "2008-07-15T20:00:00-04:00", "updated_at": "2008-07-16T20:00:00-04:00", "published_at": "2008-07-15T20:00:00-04:00", "template_suffix": null } }
									Node:
									(type) c
									(layer)3
										Element:span
											Create a new page
										Element:span
											POST
											/admin/pages.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Create a new, but unpublished page
									Node:
									(type) c
									(layer)3
										Element:pre
											POST /admin/pages.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "page": { "title": "Warranty information", "body_html": "<h1>Warranty<\/h1>\n<p><strong>Forget it<\/strong>, we aint giving you nothing<\/p>", "published": false } }
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 201 Created { "page": { "id": 905192171, "title": "Warranty information", "shop_id": 690933842, "handle": "warranty-information", "body_html": "<h1>Warranty<\/h1>\n<p><strong>Forget it<\/strong>, we aint giving you nothing<\/p>", "author": "Shopify API", "created_at": "2017-01-05T15:42:18-05:00", "updated_at": "2017-01-05T15:42:18-05:00", "published_at": null, "template_suffix": null } }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Trying to create a page without a title will return an error
									Node:
									(type) c
									(layer)3
										Element:pre
											POST /admin/pages.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "page": { "body": "foobar" } }
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 422 Unprocessable Entity { "errors": { "title": [ "can't be blank" ] } }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Create a page with a metafield
									Node:
									(type) c
									(layer)3
										Element:pre
											POST /admin/pages.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "page": { "title": "Warranty information", "body_html": "<h1>Warranty<\/h1>\n<p><strong>Forget it<\/strong>, we aint giving you nothing<\/p>", "metafields": [ { "key": "new", "value": "newvalue", "value_type": "string", "namespace": "global" } ] } }
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 201 Created { "page": { "id": 905192172, "title": "Warranty information", "shop_id": 690933842, "handle": "warranty-information", "body_html": "<h1>Warranty<\/h1>\n<p><strong>Forget it<\/strong>, we aint giving you nothing<\/p>", "author": "Shopify API", "created_at": "2017-01-05T15:42:20-05:00", "updated_at": "2017-01-05T15:42:20-05:00", "published_at": "2017-01-05T15:42:20-05:00", "template_suffix": null } }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Create a new page with html markup and upload it to the shop
									Node:
									(type) c
									(layer)3
										Element:pre
											POST /admin/pages.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "page": { "title": "Warranty information", "body_html": "<h1>Warranty<\/h1>\n<p><strong>Forget it<\/strong>, we aint giving you nothing<\/p>" } }
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 201 Created { "page": { "id": 905192173, "title": "Warranty information", "shop_id": 690933842, "handle": "warranty-information", "body_html": "<h1>Warranty<\/h1>\n<p><strong>Forget it<\/strong>, we aint giving you nothing<\/p>", "author": "Shopify API", "created_at": "2017-01-05T15:42:20-05:00", "updated_at": "2017-01-05T15:42:20-05:00", "published_at": "2017-01-05T15:42:20-05:00", "template_suffix": null } }
									Node:
									(type) c
									(layer)3
										Element:span
											Update a page
										Element:span
											PUT
											/admin/pages/131092082.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Show a hidden page by changing the published attribute to true
									Node:
									(type) c
									(layer)3
										Element:pre
											PUT /admin/pages/#{id}.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "page": { "id": 131092082, "published": true } }
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "page": { "shop_id": 690933842, "id": 131092082, "published_at": "2017-01-05T15:42:15-05:00", "title": "Terms of Services", "handle": "tos", "body_html": "<p>We make <strong>perfect<\/strong> stuff, we don't need a warranty.<\/p>", "author": "Dennis", "created_at": "2008-07-15T20:00:00-04:00", "updated_at": "2017-01-05T15:42:15-05:00", "template_suffix": null } }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Update an existing page body_html
									Node:
									(type) c
									(layer)3
										Element:pre
											PUT /admin/pages/#{id}.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "page": { "id": 131092082, "body_html": "<p>Okay, maybe we will give you a warranty.<\/p>" } }
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "page": { "shop_id": 690933842, "id": 131092082, "title": "Terms of Services", "handle": "tos", "body_html": "<p>Okay, maybe we will give you a warranty.<\/p>", "author": "Dennis", "created_at": "2008-07-15T20:00:00-04:00", "updated_at": "2017-01-05T15:42:16-05:00", "published_at": "2008-07-15T20:00:00-04:00", "template_suffix": null } }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Hide a published page by changing the published attribute to false
									Node:
									(type) c
									(layer)3
										Element:pre
											PUT /admin/pages/#{id}.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "page": { "id": 131092082, "published": false } }
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "page": { "shop_id": 690933842, "id": 131092082, "title": "Terms of Services", "handle": "tos", "body_html": "<p>We make <strong>perfect<\/strong> stuff, we don't need a warranty.<\/p>", "author": "Dennis", "created_at": "2008-07-15T20:00:00-04:00", "updated_at": "2017-01-05T15:42:17-05:00", "published_at": null, "template_suffix": null } }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Add a metafield to an existing page
									Node:
									(type) c
									(layer)3
										Element:pre
											PUT /admin/pages/#{id}.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "page": { "id": 131092082, "metafields": [ { "key": "new", "value": "newvalue", "value_type": "string", "namespace": "global" } ] } }
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "page": { "shop_id": 690933842, "id": 131092082, "title": "Terms of Services", "handle": "tos", "body_html": "<p>We make <strong>perfect<\/strong> stuff, we don't need a warranty.<\/p>", "author": "Dennis", "created_at": "2008-07-15T20:00:00-04:00", "updated_at": "2017-01-05T15:42:20-05:00", "published_at": "2008-07-15T20:00:00-04:00", "template_suffix": null } }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Update an existing page completely
									Node:
									(type) c
									(layer)3
										Element:pre
											PUT /admin/pages/#{id}.json
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "page": { "id": 131092082, "body_html": "<p>Okay, maybe we will give you a warranty.<\/p>", "author": "Your name", "title": "My new Title", "handle": "new-title" } }
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "page": { "shop_id": 690933842, "id": 131092082, "title": "My new Title", "handle": "new-title", "body_html": "<p>Okay, maybe we will give you a warranty.<\/p>", "author": "Your name", "created_at": "2008-07-15T20:00:00-04:00", "updated_at": "2017-01-05T15:42:20-05:00", "published_at": "2008-07-15T20:00:00-04:00", "template_suffix": null } }
									Node:
									(type) c
									(layer)3
										Element:span
											Delete a page
										Element:span
											DELETE
											/admin/pages/131092082.json
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Remove an existing page from a shop
									Node:
									(type) c
									(layer)3
										Element:pre
											DELETE /admin/pages/#{id}.json
									Node:
									(type) c
									(layer)3
										Element:a
											View Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK {}
									Node:
									(type) c
									(layer)3
										Element:p
											How helpful was this page?
									Node:
									(type) c
									(layer)3
										Element:label
											1
									Node:
									(type) c
									(layer)3
										Element:label
											2
									Node:
									(type) c
									(layer)3
										Element:label
											3
									Node:
									(type) c
									(layer)3
										Element:label
											4
									Node:
									(type) c
									(layer)3
										Element:label
											5
									Node:
									(type) c
									(layer)3
										Element:label
										Element:span
											Select an option
										Element:span
									Node:
									(type) c
									(layer)3
										Element:label
										Element:span
											What was good or bad about this page?
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											This page was printed on 20 Mar 2017
											. For the latest version, please go to
										Element:a
											https://help.shopify.com/api/reference/page/
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:a
											About
										Element:a
											Careers
										Element:a
											Blog
										Element:a
											Press and Media
										Element:a
											Enterprise
										Element:a
											Sitemap
										Element:h3
											Online store
										Element:a
											Sell online
										Element:a
											Features
										Element:a
											Examples
										Element:a
											Website editor
										Element:a
											Online retail
										Element:a
											Ecommerce website
										Element:a
											Themes
										Element:a
											Shopping cart
										Element:a
											Ecommerce hosting
										Element:a
											Mobile commerce
										Element:a
											Ecommerce software
										Element:h3
											Point of sale
										Element:a
											Point of sale
										Element:a
											Features
										Element:a
											Hardware
										Element:a
											POS software
										Element:h3
											Support
										Element:a
											24/7 support
										Element:a
											Shopify Help Center
										Element:a
											Forums
										Element:a
											API documentation
										Element:a
											Free tools
										Element:h3
											Shopify
										Element:a
											Contact
										Element:a
											Partner program
										Element:a
											Affiliate program
										Element:a
											App developers
										Element:a
											Investors
										Element:a
											Accessibility
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
										Element:svg
										Element:svg
										Element:a
											Terms of Service
										Element:a
											Privacy Policy
