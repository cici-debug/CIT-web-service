Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Introduction
			Node:
			(type) c
			(layer)1
				Element:p
					The Producteev API is organized around REST. Our API is designed to have resource-oriented endpoints (URLs) and make an extensive use of the HTTP technology. We use HTTP verbs to define actions, HTTP response codes to indicate the status of an API call and also HTTP Headers for Authentication.
			Node:
			(type) c
			(layer)1
				Element:p
					JSON is the only format we support for both Request and Response, even when something goes wrong and we need to send you an error message.
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								1. Request an API Key
						Node:
						(type) c
						(layer)2
							Element:p
								To get an API key, please go to the
							Element:a
								Apps tab
								in Producteev settings and create a new client. After providing the name, description and the OAuth redirects URL of your app, you'll receive a client id and a client secret.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								2. Authentication: OAuth 2.0 Flows
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Flow for 3rd Party Apps
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Using the Authorization Code Grant Flow
												Node:
												(type) c
												(layer)4
													Element:p
														For this, you will need your client id & secret. Connect to
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														https://www.producteev.com/oauth/v2/auth?client_id=YOURCLIENTID&response_type=code&redirect_uri=http%3A%2F%2Fwww.yoururlencoded.com
												Node:
												(type) c
												(layer)4
													Element:p
														Note that the redirect_uri must be url encoded.
													Element:br
														The user will be redirected automatically to
													Element:code
														https://www.producteev.com/oauth/v2/auth_login
														for authentication.
												Node:
												(type) c
												(layer)4
													Element:p
														Then will be automatically redirected to
													Element:code
														https://www.producteev.com/oauth/v2/auth?client_id=YOURCLIENTID&redirect_uri=http%3A%2F%2Fwww.yoururlencoded.com&response_type=code
														for Authorizing your 3rd-Party app to access his data.
												Node:
												(type) c
												(layer)4
													Element:p
														If he accepts, he's redirected to
													Element:code
														http://www.yoururlencoded.com/?code=ARANDOMCODE
												Node:
												(type) c
												(layer)4
													Element:p
														Your app must handle the code and then call
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														https://www.producteev.com/oauth/v2/token?client_id=YOURCLIENTID&client_secret=YOURCLIENTSECRET&grant_type=authorization_code&redirect_uri=http%3A%2F%2Fwww.yoururlencoded.com&code=ARANDOMCODE
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														The authorization code is only valid for 30sec!
												Node:
												(type) c
												(layer)4
													Element:p
														And finally the app receives the token:
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														{"access_token":"dy0PNO8RavMQfL4yIu6nDxj64uDlg8uFlvzh866Cp5g", "expires_in":3600, "token_type":"bearer", "scope":null, "refresh_token":"xo3WhNbrpI6CusPvvoaGegEqSRUhqmETeZ05VloYWsA"}
												Node:
												(type) c
												(layer)4
													Element:p
														Note: As today, the access_token are actually valid for 30 days, refresh token are valid for 90 days.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Using the Implicit Grant Flow
												Node:
												(type) c
												(layer)4
													Element:p
														This flow is a little bit different, and do not need to handle the auth code. First connect to (response_type is now token)
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														https://www.producteev.com/oauth/v2/auth?client_id=YOURCLIENTID&response_type=token&redirect_uri=http%3A%2F%2Fwww.yoururlencoded.com
												Node:
												(type) c
												(layer)4
													Element:p
														Like the previous flow, the user must authenticate then authorize the app to access his data
												Node:
												(type) c
												(layer)4
													Element:p
														The user is automatically redirected to
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														http://www.yoururlencoded.com/#access_token=Y6ORsURnaSY2ZP9j69Hp_3nXuwdXrLJSf57l8k5A4h0&expires_in=3600&token_type=bearer&refresh_token=39V4-CVWX5cbuqiOagDyGyvbNJ5zPMs-PIV2SUUnh2s
												Node:
												(type) c
												(layer)4
													Element:p
														And your app must handle the user token.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											How to request a new access token using the refresh token
									Node:
									(type) c
									(layer)3
										Element:p
											If you get a 400 Bad Request return, it may be because the token has expired (check the error message). In that case, you can request a new access_token using the refresh token you got when you received the access token. Refresh tokens are valid for 90 days and can be used only once.
									Node:
									(type) c
									(layer)3
										Element:p
											To get a new access token call the token endpoint, with your client id, client secret, grant type=refresh token and the refresh_token.
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											https://www.producteev.com/oauth/v2/token?client_id=YOURCLIENTID&client_secret=YOURCLIENTSECRET&grant_type=refresh_token&refresh_token=THEREFRESHTOKEN
									Node:
									(type) c
									(layer)3
										Element:p
											You will receive a new access token and a new refresh token
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											{"access_token":"aOPV5zbBV7tM5DrmvacmBmO82uqfRUAZ3WPGPy68fug", "expires_in":3600, "token_type":"bearer", "scope":null, "refresh_token":"BEKdhP106G1L4oYB0vN3WuU4tTf7KYa2rxFrUvnF4go"}
									Node:
									(type) c
									(layer)3
										Element:p
											If you provide an expired refresh_token you will get an error message
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											{"error":"invalid_grant", "error_description":"Refresh token has expired"}
									Node:
									(type) c
									(layer)3
										Element:p
											In that case, you need to request a new token using one of the available flow.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Make some API Calls
									Node:
									(type) c
									(layer)3
										Element:p
											Now that you have an access_token, you can make API calls on the behalf of this user. Either add it to the query string
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											https://www.producteev.com/api/someendpoint?access_token=THEACCESSTOKEN
									Node:
									(type) c
									(layer)3
										Element:p
											Or simply set the
										Element:code
											Authorization
											header of your request with
										Element:code
											Bearer THEACCESSTOKEN
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								3. Errors
						Node:
						(type) c
						(layer)2
							Element:p
								Producteev use the HTTP response code to indicate success or failure of an API call.
						Node:
						(type) c
						(layer)2
							Element:p
								As a generic convention, you can assume codes in the 2XX ranges indicate success, codes in the 4XX ranges indicate an error based on the information you provided or the action you wanna do, codes in the 5XX ranges indicate something is wrong with the Producteev's API servers.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Error Code
							Element:th
								Usage
							Element:tr
							Element:td
								200 - Success
							Element:td
								The object(s) are returned in the Response Body
							Element:tr
							Element:td
								201 - Created
							Element:td
								Your object has been created (and is embedded in the Response Body)
							Element:tr
							Element:td
								204 - No Content
							Element:td
								Your request was processed but doesn't return any information/object (e.g when you delete an object)
							Element:tr
							Element:td
								400 - Bad Request
							Element:td
								A required parameter is missing or invalid.
							Element:tr
							Element:td
								401 - Unauthorized
							Element:td
								You need to provide a (valid) access token.
							Element:tr
							Element:td
								403 - Access Denied
							Element:td
								You don't have the permission to access this resource.
							Element:tr
							Element:td
								404 - Not Found
							Element:td
								The resource you try to access doesn't exist.
							Element:tr
							Element:td
								409 - Conflict
							Element:td
								Your request was valid but we could not satisfy it due to a constraints problem.
						Node:
						(type) c
						(layer)2
							Element:pre
								{ "error": "Bad Request", "error_description": "The content you sent isn't a valid JSON.", "error_code": 400 }
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								error: Generic error type
							Element:li
								error_description: A human-readable message giving more details about the error.
							Element:li
								error_code: HTTP Status Code (repeated as a convenience, will not be included on errors related to OAuth)
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								4. Producteev Objects
						Node:
						(type) c
						(layer)2
							Element:p
								Every Objects in the API Extends from a base Producteev Object class.
						Node:
						(type) c
						(layer)2
							Element:p
								They all share the same basic properties:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Property
							Element:th
								Description
							Element:tr
							Element:td
								id:
							Element:td
								Unique Identifier of the object (String)
							Element:tr
							Element:td
								created_at:
							Element:td
								Date when the object was created
							Element:tr
							Element:td
								updated_at:
							Element:td
								Date when the object was last updated
							Element:tr
							Element:td
								deleted_at:
							Element:td
								If the object is deleted, the date when it was deleted will be returned
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								5. Task Permissions
						Node:
						(type) c
						(layer)2
							Element:p
								Tasks are the main objects in Producteev. Each task object retrieved from the API has a dynamic attribute permissions. This attribute is an integer equals to the sum of all the permissions. In order to know if you can do an action you must translate this integer to its binary representation. Below is the enum we use in the iOS app. As you can see the first bit indicates if you can delete the task or not, the second if you can move this task to another project...
						Node:
						(type) c
						(layer)2
							Element:pre
								typedef enum { PDTTaskPermissionCanDelete = 1 << 0, PDTTaskPermissionCanMove = 1 << 1, PDTTaskPermissionCanEditTitle = 1 << 2, PDTTaskPermissionCanEditResponsible = 1 << 3, PDTTaskPermissionCanEditFollower = 1 << 4, PDTTaskPermissionCanPostNote = 1 << 5, PDTTaskPermissionCanEditLabel = 1 << 6, PDTTaskPermissionCanEditSubtask = 1 << 7, PDTTaskPermissionCanEditStatus = 1 << 8, PDTTaskPermissionCanEditDeadline = 1 << 9, PDTTaskPermissionCanEditPriority = 1 << 10, } PDTTaskPermissions;
						Node:
						(type) c
						(layer)2
							Element:p
								Example: if permissions = 4095, its binary representation 11111111110. You can do everything on the task except delete it.
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Introduction
							Element:ul
							Element:li
							Element:a
								Request an API Key
							Element:li
							Element:a
								Authentication
							Element:li
							Element:a
								Errors
							Element:li
							Element:a
								Producteev Objects
							Element:li
							Element:a
								Task Permissions
							Element:li
							Element:i
							Element:a
								Announcements
							Element:ul
							Element:li
							Element:a
								Find the unread announcements
							Element:li
							Element:a
								Find an announcement
							Element:li
							Element:a
								Set the last read announcement date
							Element:li
							Element:i
							Element:a
								Files
							Element:ul
							Element:li
							Element:a
								Get a Producteev file
							Element:li
							Element:a
								Delete a Producteev file
							Element:li
							Element:a
								Get a url to a Box.com view session for Producteev file id
							Element:li
							Element:a
								Upload a local file
							Element:li
							Element:a
								Upload a remote file
							Element:li
							Element:i
							Element:a
								Labels
							Element:ul
							Element:li
							Element:a
								List suggested colors
							Element:li
							Element:a
								Create a label
							Element:li
							Element:a
								Find a label
							Element:li
							Element:a
								Update a label
							Element:li
							Element:a
								Delete a label
							Element:li
							Element:i
							Element:a
								Languages
							Element:ul
							Element:li
							Element:a
								Get the supported language list
							Element:li
							Element:i
							Element:a
								NLP Suggestions
							Element:ul
							Element:li
							Element:a
								List suggestions
							Element:li
							Element:i
							Element:a
								Network Invitations
							Element:ul
							Element:li
							Element:a
								List pending invitations by user
							Element:li
							Element:a
								Invite a user to join
							Element:li
							Element:a
								Accept or refuse an invitation
							Element:li
							Element:a
								Add a restricted project
							Element:li
							Element:a
								Resend an invitation
							Element:li
							Element:i
							Element:a
								Networks
							Element:ul
							Element:li
							Element:a
								List networks by user
							Element:li
							Element:a
								Create a network
							Element:li
							Element:a
								Find network by id
							Element:li
							Element:a
								Update a network
							Element:li
							Element:a
								Delete a network
							Element:li
							Element:a
								List the network admins
							Element:li
							Element:a
								Add a network admin
							Element:li
							Element:a
								Remove a network admin
							Element:li
							Element:a
								List labels by network
							Element:li
							Element:a
								Search network for labels
							Element:li
							Element:a
								List pending invitations
							Element:li
							Element:a
								List the network projects
							Element:li
							Element:a
								Search for projects
							Element:li
							Element:a
								List the users of a network
							Element:li
							Element:a
								Find users by network
							Element:li
							Element:a
								Remove user from network
							Element:li
							Element:i
							Element:a
								Notes
							Element:ul
							Element:li
							Element:a
								Create a note
							Element:li
							Element:a
								Find a note
							Element:li
							Element:a
								Update a note
							Element:li
							Element:a
								Delete a note
							Element:li
							Element:i
							Element:a
								Notifications
							Element:ul
							Element:li
							Element:a
								List notifications by user
							Element:li
							Element:a
								Update a list of notifications
							Element:li
							Element:a
								Mark all as read
							Element:li
							Element:a
								Update a notification
							Element:li
							Element:i
							Element:a
								Premium
							Element:ul
							Element:li
							Element:a
								Get access rule for a client
							Element:li
							Element:a
								Get access rule for a feature
							Element:li
							Element:i
							Element:a
								Prices
							Element:ul
							Element:li
							Element:a
								Get the prices of a subscription
							Element:li
							Element:i
							Element:a
								Projects
							Element:ul
							Element:li
							Element:a
								Create a project
							Element:li
							Element:a
								Find a project
							Element:li
							Element:a
								Update a project
							Element:li
							Element:a
								Delete a project
							Element:li
							Element:a
								Get all the activities of a project
							Element:li
							Element:a
								List the project admins
							Element:li
							Element:a
								Add a project admin
							Element:li
							Element:a
								Remove a project admin
							Element:li
							Element:a
								List the project followers
							Element:li
							Element:a
								Add follower to project
							Element:li
							Element:a
								Remove follower from project
							Element:li
							Element:a
								List users by project
							Element:li
							Element:a
								Add user to project
							Element:li
							Element:a
								Remove user from project
							Element:li
							Element:i
							Element:a
								Tasks
							Element:ul
							Element:li
							Element:a
								Create a task
							Element:li
							Element:a
								Update a list of tasks
							Element:li
							Element:a
								Delete a list of tasks
							Element:li
							Element:a
								Export
							Element:li
							Element:a
								Add label to list of tasks
							Element:li
							Element:a
								Assign a list of tasks
							Element:li
							Element:a
								Search
							Element:li
							Element:a
								Task alias count
							Element:li
							Element:a
								Find a task
							Element:li
							Element:a
								Update a task
							Element:li
							Element:a
								Delete a task
							Element:li
							Element:a
								Get all the activities for a task
							Element:li
							Element:a
								Add follower to task
							Element:li
							Element:a
								Remove follower from task
							Element:li
							Element:a
								Add label to task
							Element:li
							Element:a
								Remove label from task
							Element:li
							Element:a
								List notes
							Element:li
							Element:a
								Assign a task
							Element:li
							Element:a
								Remove an assignee
							Element:li
							Element:a
								Create a subtask
							Element:li
							Element:a
								Update a subtask
							Element:li
							Element:a
								Delete a subtask
							Element:li
							Element:i
							Element:a
								Themes
							Element:ul
							Element:li
							Element:a
								List all themes for user
							Element:li
							Element:a
								Create a theme
							Element:li
							Element:a
								Find a theme
							Element:li
							Element:a
								Update a theme
							Element:li
							Element:a
								Delete a theme
							Element:li
							Element:a
								Upload a logo
							Element:li
							Element:a
								List the networks using a theme
							Element:li
							Element:a
								Set theme logo
							Element:li
							Element:i
							Element:a
								Timezones
							Element:ul
							Element:li
							Element:a
								List supported timezones
							Element:li
							Element:i
							Element:a
								Users
							Element:ul
							Element:li
							Element:a
								Get current user
							Element:li
							Element:a
								Update current user
							Element:li
							Element:a
								Upload an avatar
							Element:li
							Element:a
								Find the default project
							Element:li
							Element:a
								Change the default project
							Element:li
							Element:a
								Set user avatar
							Element:li
							Element:a
								Find user by email address
							Element:li
							Element:a
								Find user by id
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:a
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/announcements/unread
			Node:
			(type) h1
			(layer)1
				Element:h1
					Retrieve the user's unread announcements
					The search platform can be represented numerically :
			Node:
			(type) c
			(layer)1
				Element:br
					0: No platform,
			Node:
			(type) c
			(layer)1
				Element:br
					1: Developers,
			Node:
			(type) c
			(layer)1
				Element:br
					2: Android,
			Node:
			(type) c
			(layer)1
				Element:br
					4: Web,
			Node:
			(type) c
			(layer)1
				Element:br
					8: Mac,
			Node:
			(type) c
			(layer)1
				Element:br
					16: iOS
			Node:
			(type) c
			(layer)1
				Element:br
					In order to search an announcement for multiple platform, add the values together.
			Node:
			(type) c
			(layer)1
				Element:br
					For example : 16 + 8 = 24 => Mac+iOS
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/announcements/unread" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "announcement":{ "id":"51e83dd4fa4634180800030f", "created_at":"2013-07-18T19:11:16+0000", "updated_at":"2013-07-31T00:11:25+0000", "title":"Announcement 1", "content": "Project template is now available", "url": "http://www.producteev.com", "platform": "8" } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														platform
													Element:td
													Element:tr
													Element:td
														page
													Element:td
													Element:tr
													Element:td
														per_page
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Unread Announcements is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/announcements/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Retrieve an announcement by its id
					This method retrieve the announcement that corresponds to a specific id.
			Node:
			(type) c
			(layer)1
				Element:strong
					Attributes:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:td
					Title
				Element:td
					Title of the announcement (string)
				Element:tr
				Element:td
					Content
				Element:td
					Content of the announcement (string)
				Element:tr
				Element:td
					Url
				Element:td
					Url of the announcement (string)
				Element:tr
				Element:td
					Platform
				Element:td
					Platform of the announcement (integer)
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/announcements/51f8561ffa46343705000015" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "announcement":{ "id": "51f8561ffa46343705000015", "created_at": "2013-07-31T00:11:11+0000", "updated_at": "2013-07-31T00:11:11+0000", "title": "New features", "content": "You should try to use a project template", "url": "www.google.fr", "platform": "8" } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Announcement is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to see this Announcement
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Announcement doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														PUT
													Element:span
														/api/announcements/{id}/read
			Node:
			(type) h1
			(layer)1
				Element:h1
					Set Last Read Announcement
					This method will mark the specified announcement as read for the current user.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/announcements/51f8561ffa46343705000015/43knjn342334jn00030f" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "announcement":{ "id": "51f8561ffa46343705000015", "created_at": "2013-07-31T00:11:11+0000", "updated_at": "2013-07-31T00:11:55+0000", "title": "Title of the announcement", "content": "Content of the announcement", "url": "http://www.producteev.com", "platform": "8" } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Announcement is updated
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This announcement doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/files/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get a Producteev file by its id
					Files are usually attached to Notes. But because they remain an independant object type in the system, you need to upload the file first before being able to attach it to a note.
			Node:
			(type) c
			(layer)1
				Element:strong
					Attributes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					title
				Element:td
					Title of the file (contains the file extension)
				Element:tr
				Element:td
					content_type
				Element:td
					MIME type of the file
				Element:tr
				Element:td
					file_extension
				Element:td
					Extension of the file
				Element:tr
				Element:td
					size
				Element:td
					Size in bytes
				Element:tr
				Element:td
					creator
				Element:td
					A full User object who created the File
				Element:tr
				Element:td
					url
				Element:td
					URL where the file could be view / downloaded
			Node:
			(type) c
			(layer)1
				Element:strong
					Notice
					Creating a file is different than other objects in the API and have two dedicated methods (Upload & Remote Upload)
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/files/51ef10b7fa4634fb04000000" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "file":{ "id":"51ef10b7fa4634fb04000000", "created_at":"2013-07-23T23:24:38+0000", "updated_at":"2013-07-23T23:24:38+0000", "title":"logoBlack.png", "content_type":"image\/png", "file_extension":"png", "size":8426, "creator":User Object, "url":"https:\/\/di0skkm50b972.cloudfront.net\/files\/...\/logoBlack.png" } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, File is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to see this file
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This file doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														DELETE
													Element:span
														/api/files/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Delete a Producteev file
					Delete a file from the cloud storage.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X DELETE "https://www.producteev.com/api/files/51ef10b7fa4634fb04000000" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 204 No Content
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														204
													Element:a
													Element:td
													Element:ul
													Element:li
														No Content, File is now deleted
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to delete this file
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This file doesn't exist (or has been deleted)
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/files/{id}/view
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get a url to a Box.com view session for Producteev file id. task_id parameter is required.
			Node:
			(type) c
			(layer)1
				Element:strong
					Attributes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					url
				Element:td
					The box.com view session url
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/files/51faa109fa4634be0b000002/view?task_id=51faa109fa4634be0b000031" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 Created { "fileview": { "url": "https://view-api.box.com/1/sessions/37eb94d5ead44486bbc7de9b23a8c2c4/view" } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Box.com view session url is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to see this file
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This file doesn't exist (or has been deleted)
													Element:tr
													Element:td
													Element:a
														500
													Element:a
													Element:td
													Element:ul
													Element:li
														Box.com failed to process the file, or an unexpected error happened
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														POST
													Element:span
														/api/upload/files
			Node:
			(type) h1
			(layer)1
				Element:h1
					Upload a local file
					To create a file object from a local source you need to POST the file using the classic Multipart/form-data. The key for the uploaded data must be "file".
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
					Here we use the curl@filename, that will set automatically the correct headers.
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -F "file=@release.txt" "https://www.producteev.com/api/upload/files" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 100 Continue HTTP/1.1 201 Created { "file":{ "id":"51f2ba70fa46343c08000000", "created_at":"2013-07-26T18:05:36+0000", "updated_at":"2013-07-26T18:05:36+0000", "title":"release.txt", "content_type":"text\/plain", "file_extension":"txt", "size":23, "creator":User Object, "url":"https:\/\/di0skkm50b972.cloudfront.net\/files\/...\/release.txt" } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														201
													Element:a
													Element:td
													Element:ul
													Element:li
														Created, File uploaded
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														POST
													Element:span
														/api/upload/remotefiles
			Node:
			(type) h1
			(layer)1
				Element:h1
					Upload a remote file
					To create a file object from a remote source you need to POST a JSON object prefixed by "remoteFile" and containing the "url" and "fileName".
			Node:
			(type) c
			(layer)1
				Element:pre
					{ "remoteFile":{ "url":"https://www.producteev.com/bundles/producteevweb/images/logoBlack.png", "fileName":"logoBlack.png" } }
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X POST --data '{"remoteFile":{"url":"https://www.producteev.com/bundles/producteevweb/images/logoBlack.png","fileName":"logoBlack.png"}}' "https://www.producteev.com/api/upload/remotefiles" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 201 Created { "file":{ "id":"51ef10b7fa4634fb04000000", "created_at":"2013-07-23T23:24:38+0000", "updated_at":"2013-07-23T23:24:38+0000", "title":"logoBlack.png", "content_type":"image\/png", "file_extension":"png", "size":8426, "creator":User Object, "url":"https:\/\/di0skkm50b972.cloudfront.net\/files\/...\/logoBlack.png" } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														201
													Element:a
													Element:td
													Element:ul
													Element:li
														Created, File uploaded
													Element:a
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/label_colors
			Node:
			(type) h1
			(layer)1
				Element:h1
					Return suggested colors for labels
					Return the list of recommended colors (foreground and background) for the labels. You can create your labels with your own colors, but we strongly recommend to use colors returned by this API call to provide a consistent experience accross all Producteev apps.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/label_colors" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "label_colors":[ { "foreground_color":"#e8cdde", "background_color":"#9f3879" }, { "foreground_color":"#eccbca", "background_color":"#b0322b" }, { "foreground_color":"#3e6b46", "background_color":"#d0dad1" } ... ] }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, List is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														POST
													Element:span
														/api/labels
			Node:
			(type) h1
			(layer)1
				Element:h1
					Create a new label on the network
					To create a Label, you need to POST a JSON label object containing the "title", "foreground_color", "background_color" for creation only you also need to send the id of the network in which you wanna create the label in.
			Node:
			(type) c
			(layer)1
				Element:pre
					{ "label":{ "title": "iOS", "foreground_color": "#e8cdde", "background_color": "#9f3879", "network": { "id": "51e83db1fa46341808000063" } } }
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X POST --data '{"label":{"title":"iOS", "foreground_color":"#e8cdde", "background_color":"#9f3879", "network":{ "id":"51e83db1fa46341808000063"}}}' "https://www.producteev.com/api/labels" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 201 Created { "label":{ "id": "51f835b8fa46343805000000", "created_at": "2013-07-30T21:52:55+0000", "updated_at": "2013-07-30T21:52:55+0000", "title": "iOS", "foreground_color": "#e8cdde", "background_color": "#9f3879", "creator": {User Object} } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														201
													Element:a
													Element:td
													Element:ul
													Element:li
														Created, Label is created
													Element:tr
													Element:td
													Element:a
														400
													Element:a
													Element:td
													Element:ul
													Element:li
														Bad Request, the JSON is not valid or something is missing
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to create Label on this network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, The network doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/labels/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get the Label with the specified id
					Labels are attached to a task and are available across all your projects inside a network. This method returns a Label Object.
			Node:
			(type) c
			(layer)1
				Element:strong
					Attributes:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					title
				Element:td
					Title of the label
				Element:tr
				Element:td
					foreground_color
				Element:td
					Text Color
				Element:tr
				Element:td
					background_color
				Element:td
					Background Text Color
				Element:tr
				Element:td
					creator
				Element:td
					A full User object who created the Label
				Element:tr
				Element:td
					network
				Element:td
					A full Network object in which the label has been created (the network attribute is only used for creation and is not returned in the object @see /api/networks/labels for a way to get all labels related to a network)
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/labels/51e83dd6fa46341808000399" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "label":{ "id": "51e83dd6fa46341808000399", "created_at": "2013-07-23T23:24:38+0000", "updated_at": "2013-07-23T23:24:38+0000", "title": "Engineering", "foreground_color": "#e8cdde", "background_color": "#9f3879", "creator": {User Object} } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Label is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to see this label
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This label doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														PUT
													Element:span
														/api/labels/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Update a label
					Updating a label allows you to change its title and colors. You can send only the field you wanna update, or the full object, we will update only the field that are differents from the server. (If you wanna move it on another network, you need to create a new label and delete this one)
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT --data '{"label":{"title":"Marketing"}}' "https://www.producteev.com/api/labels/51e83dd6fa46341808000399" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "label":{ "id": "51e83dd6fa46341808000399", "created_at": "2013-07-23T23:24:38+0000", "updated_at": "2013-07-30T20:59:13+0000", "title": "Marketing", "foreground_color": "#e8cdde", "background_color": "#9f3879", "creator": {User Object} } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Label is updated
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to update this label
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This label doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														DELETE
													Element:span
														/api/labels/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Delete a label
					Delete a Label from the network.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X DELETE "https://www.producteev.com/api/labels/51e83dd6fa46341808000399" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 204 No Content
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														204
													Element:a
													Element:td
													Element:ul
													Element:li
														No Content, Label is now deleted
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to delete this label
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This label doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/languages
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get the list of the all the supported languages
					You do not need to be authenticated to get the language list
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/languages"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "languages": [ { "key": "en", "title": "English" }, { "key": "fr", "title": "French" }, ... ] }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
													Element:a
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/nlp_suggestions/{project_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Return a list of suggestions for the natural language processing
					The call will return a collection of NLP suggestion object.
			Node:
			(type) c
			(layer)1
				Element:strong
					Attributes:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					text
				Element:td
					The text to use for the NLP. Must be concatenated after the keyword. (see list of keywords below)
				Element:tr
				Element:td
					type
				Element:td
					The type of suggestions returned (user|label|priority|deadline)
				Element:tr
				Element:td
					object
				Element:td
					Full object associated currently only User|Label. (if type=user|label)
			Node:
			(type) c
			(layer)1
				Element:h2
					Keyword
					This method provide suggestions based on Keyword + Query. The keywords available are :
			Node:
			(type) c
			(layer)1
				Element:ul
					The query parameter must contains both the keyword and the text you wanna get suggestions for. e.g
				Element:li
				Element:strong
					#
					: for labels
				Element:li
				Element:strong
					@
					: for followers
				Element:li
				Element:strong
					+
					: for assignees
				Element:li
				Element:strong
					!
					: for deadline
				Element:li
				Element:strong
					*
					: for priority
			Node:
			(type) c
			(layer)1
				Element:code
					?query=@Jerome
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/nlp_suggestions/51e83dd4fa4634180800030f?query=!to" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "nlp_suggestions":[ { "text":"today", "type":"deadline" }, { "text":"tomorrow", "type":"deadline" }, { "text":"next month", "type":"deadline" } ] }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														project_id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														query
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, Returned when successful (can be an empty collection)
													Element:tr
													Element:td
													Element:a
														400
													Element:a
													Element:td
													Element:ul
													Element:li
														Bad Request, Returned when unrecognized keyword
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, Unable to found the project with {project_id} id
													Element:a
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/network_invitations
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get the list of pending invitation for the current user
					Network Invitations are used to add people in existing networks. To invite someone you can either use the targetUser attribute if you know that this person is on Producteev and know his id. Otherwise use email and we'll send an invite to this person via email.
			Node:
			(type) c
			(layer)1
				Element:strong
					Attributes of a Network Invitation Object:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					email
				Element:td
					Email of the person you want to invite
				Element:tr
				Element:td
					targetUser
				Element:td
					User Object - Person you want to invite. Use only targetUser if you don't use email
				Element:tr
				Element:td
					network
				Element:td
					Network Object - Network on which you want the person to be invited
				Element:tr
				Element:td
					type
				Element:td
					Type of Invitation (see list below)
				Element:tr
				Element:td
					status
				Element:td
					Status of Invitation (see list below)
				Element:tr
				Element:td
					projects
				Element:td
					Array of Projects - Restricted Projects attached to the invitation. The person will join them automatically (see dedicated method to add them)
				Element:tr
				Element:td
					user_password_provided
				Element:td
					Boolean: TRUE if the user provided a password or FALSE if a password has been generated for him
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Possible Values for Type
											- admin : The user will be an admin of the network - member : The user will be a member
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Possible Values for Status
											- pending - confirmed - refused - waiting_for_admin - revoked - not_authorized_by_admin
									Node:
									(type) c
									(layer)3
										Element:h2
											Basic requests
											To get the list of pending requests to join a network for the current user, set the filter
									Node:
									(type) c
									(layer)3
										Element:code
											type=requests
									Node:
									(type) c
									(layer)3
										Element:h2
											Authorization requests (If the user is an admin on one of his network)
											To get the list of requests sent by a non administrator users and waiting for an administrator approval, set the filter
									Node:
									(type) c
									(layer)3
										Element:code
											?type=authorizations
									Node:
									(type) c
									(layer)3
										Element:strong
											To approve or refused an invitation, @see PUT /api/network_invitations/{id}
									Node:
									(type) c
									(layer)3
										Element:h2
											Curl Example
									Node:
									(type) c
									(layer)3
										Element:code
											curl -v "https://www.producteev.com/api/network_invitations?type=authorizations" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "network_invitations": [ { "id": "52003c35fa4634330c000087", "created_at": "2013-08-05T23:58:45+0000", "updated_at": "2013-08-05T23:58:45+0000", "creator": User Object, "email": "f700fea46d68d913e0a6e83da742c9cc@dev.producteev.com", "network": Network Object, "projects": [], "type": "member", "status": "waiting_for_admin" }, { "id": "520044a3fa46348711000087", "created_at": "2013-08-06T00:34:43+0000", "updated_at": "2013-08-06T00:34:43+0000", "creator": User Object, "email": "daaac025f0c0af1729c38bab33d6da9d@dev.producteev.com", "network": Network Object, "projects": [], "type": "admin", "status": "waiting_for_admin" } ] }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														type
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Project is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														POST
													Element:span
														/api/network_invitations
			Node:
			(type) h1
			(layer)1
				Element:h1
					Invite a user to join the network. You can use the user id or an email address
					In order to invite a user on a network, you need to create a Network Invitation. You need to specify the targetUser (or an email address), the network and the type (@see list below).
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Possible Values for Type
											- admin : The user will be an admin of the network - member : The user will be a member
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "network_invitation":{ "email":"tb@dev.producteev.com", "type":"member", "network":{ "id":"51e83db1fa46341808000063" } } }
									Node:
									(type) c
									(layer)3
										Element:h2
											Curl Example
									Node:
									(type) c
									(layer)3
										Element:code
											curl -v -X POST --data '{"network_invitation":{"email":"tb@dev.producteev.com", "type":"member", "network":{"id":"51e83db1fa46341808000063"}}}' "https://www.producteev.com/api/network_invitations" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 201 Created { "network_invitation": { "id": "52028f14fa46346105000001", "created_at": "2013-08-07T18:16:52+0000", "updated_at": "2013-08-07T18:16:52+0000", "creator": {User Object}, "email": "tb@dev.producteev.com", "network": {Network Object}, "projects": [], "type": "member", "status": "pending", "user_password_provided": false } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														201
													Element:a
													Element:td
													Element:ul
													Element:li
														Created, Invite is created
													Element:tr
													Element:td
													Element:a
														400
													Element:a
													Element:td
													Element:ul
													Element:li
														Bad Request, the JSON is not valid or something is missing
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to invite people on this network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, The network or targetUser doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														PUT
													Element:span
														/api/network_invitations/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Accept or refuse an invitation to join a network.
					Updating an invitation is the way to accept or refuse it. To do so, you need to change the status attribute. (@see Full list below)
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Possible Values for Status
											- pending - confirmed - refused - waiting_for_admin - revoked - not_authorized_by_admin
									Node:
									(type) c
									(layer)3
										Element:h2
											As a member
											To accept the invitation, set
									Node:
									(type) c
									(layer)3
										Element:code
											network_invitation.status = 'confirmed'
											To refuse the invitation, set
									Node:
									(type) c
									(layer)3
										Element:code
											network_invitation.status = 'refused'
									Node:
									(type) c
									(layer)3
										Element:h2
											As an admin of a network
											To approve an invitation request sent by a non administrator user on a network, set
									Node:
									(type) c
									(layer)3
										Element:code
											network_invitation.status = 'pending'
											(email will be sent to the user invited and he will have to confirm / refuse the invitation). To refuse an invitation sent by a non administrator user on a network, set
									Node:
									(type) c
									(layer)3
										Element:code
											network_invitation.status = 'not_authorized_by_admin'
											To revoke an invitation, as an admin, set
									Node:
									(type) c
									(layer)3
										Element:code
											network_invitation.status = 'revoked'
									Node:
									(type) c
									(layer)3
										Element:h2
											Curl Example
									Node:
									(type) c
									(layer)3
										Element:code
											curl -v -X PUT --data '{"network_invitation":{"status":"pending"}}' "https://www.producteev.com/api/network_invitations/52003c35fa4634330c000087" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "network_invitation": { "id": "52003c35fa4634330c000087", "created_at": "2013-08-05T23:58:45+0000", "updated_at": "2013-08-05T23:58:45+0000", "creator": {User Object}, "email": "f700fea46d68d913e0a6e83da742c9cc@dev.producteev.com", "network": {Network Object}, "projects": [], "type": "member", "status": "pending" } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Network Invitation is updated
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to update this Invitation
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Invitation doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														POST
													Element:span
														/api/network_invitations/{id}/projects/{project_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Add a restricted project to a network invitation
					Add a restricted project to a network invitation so the user joining the invitation will join the restricted project automatically. This Method will return the list of restricted Projects attached to the Invitations
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X POST "https://www.producteev.com/api/network_invitations/51f835b8fa463438050000034/projects/51e83dd4fa4634180800030f" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "projects":[ ..Array of Project Object attached to the invitation.. ] }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
													Element:tr
													Element:td
														project_id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, Project is attached
													Element:tr
													Element:td
													Element:a
														400
													Element:a
													Element:td
													Element:ul
													Element:li
														Bad Request, The invitations has not the status 'pending'
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view this invitation
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This invitation or the project doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														POST
													Element:span
														/api/network_invitations/{id}/resend
			Node:
			(type) h1
			(layer)1
				Element:h1
					Re-send the email for a network invitation
					Re-send the email for a network invitation. This call works only if the invitation has the status
			Node:
			(type) c
			(layer)1
				Element:code
					network_invitation.status = 'pending'
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X POST "https://www.producteev.com/api/network_invitations/51e83dd6fa46341808000399/resend" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 204 No Content
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														204
													Element:a
													Element:td
													Element:ul
													Element:li
														No Content, Email is send
													Element:tr
													Element:td
													Element:a
														400
													Element:a
													Element:td
													Element:ul
													Element:li
														Bad Request, The invitations has not the status 'pending'
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view this invitation
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This invitation doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/networks
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get all the networks of the user
					Networks are a high-level container. It contains Users, Projects, Labels. You can use a Network to provide a place for all your employees / coworkers. (See Network creation for additional informations). This method returns the list of Networks for the current user. This call is paginated (see Filters Section). Like every paginated call in the producteev API you also have a total_hits number.
			Node:
			(type) c
			(layer)1
				Element:strong
					Network Attributes:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					title
				Element:td
					Title of the Network
				Element:tr
				Element:td
					domain_name
				Element:td
					Your company domain name (e.g: jivesoftware.com)
				Element:tr
				Element:td
					creator
				Element:td
					A full User object who created the Project
			Node:
			(type) c
			(layer)1
				Element:strong
					Sub Collections:
					(See dedicated API methods)
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					admins
				Element:td
					Collection of User objects that are allowed to administrate the network
				Element:tr
				Element:td
					users
				Element:td
					Collection of User objects that are in this network
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/networks" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "networks": [ { "id": "51e83db1fa4634180800006c", "created_at": "2013-07-18T19:10:41+0000", "updated_at": "2013-07-18T19:11:18+0000", "title": "Producteev", "domain_name": "producteev.com", "creator": User Object }, { "id": "51e83db1fa46341808000063", "created_at": "2013-07-18T19:10:41+0000", "updated_at": "2013-07-31T00:10:47+0000", "title": "Jive Software", "domain_name": "jivesoftware.com", "creator": User Object } ], "total_hits": 2 }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														page
													Element:td
													Element:tr
													Element:td
														per_page
													Element:td
													Element:tr
													Element:td
														admin_only
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Network list is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														POST
													Element:span
														/api/networks
			Node:
			(type) h1
			(layer)1
				Element:h1
					Create a network
					To create a Network, you need to POST a JSON network object containing the following attributes.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					title
				Element:td
					string
				Element:tr
				Element:td
					visible
				Element:td
					boolean (true|false)
				Element:tr
				Element:td
					auto_join
				Element:td
					boolean (true|false)
				Element:tr
				Element:td
					company_name
				Element:td
					string
				Element:tr
				Element:td
					company_size
				Element:td
					integer
				Element:small
					(1 = 1-19 | 2 = 20-49 | 3 = 50-99 | 4 = 100-149 | 5 = 500-999 | 6 = 1000-1499 | 7 = 1500-9999 | 8 = 10000+)
			Node:
			(type) c
			(layer)1
				Element:pre
					{ "network":{ "title": "My New Network", "visible": false, "auto_join": false, "company_size": 1, "company_name": "Producteev" } }
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X POST --data '{"network":{"title":"My New Network","visible":false,"auto_join":false,"company_size":1,"company_name":"Producteev"}}' "https://www.producteev.com/api/networks" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 201 Created { "network":{ "id": "520040a2fa46340b08000000", "created_at": "2013-08-06T00:17:38+0000", "updated_at": "2013-08-06T00:17:38+0000", "title": "My New Network", "creator": {User Object}, "auto_join": false } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														201
													Element:a
													Element:td
													Element:ul
													Element:li
														Created, Network is created
													Element:tr
													Element:td
													Element:a
														400
													Element:a
													Element:td
													Element:ul
													Element:li
														Bad Request, the JSON is not valid or something is missing
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/networks/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get the network by its id
					Return detailed information about a specific network. For now, same informations are returned by /api/networks and /networks/{id}, but this method could have more detailed informations in the future.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/networks/51e83db1fa4634180800006c" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "network": { "id": "51e83db1fa4634180800006c", "created_at": "2013-07-18T19:10:41+0000", "updated_at": "2013-07-18T19:11:18+0000", "title": "Producteev", "domain_name": "producteev.com", "creator": User Object } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Network is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to see this Network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Network doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														PUT
													Element:span
														/api/networks/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Update a network
					Updating a Network allows you to change the following attributes:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					title
				Element:td
					string
				Element:tr
				Element:td
					visible
				Element:td
					boolean (true|false)
				Element:tr
				Element:td
					auto_join
				Element:td
					boolean (true|false)
				Element:tr
				Element:td
					company_name
				Element:td
					string
				Element:tr
				Element:td
					company_size
				Element:td
					integer
				Element:small
					(1 = 1-19 | 2 = 20-49 | 3 = 50-99 | 4 = 100-149 | 5 = 500-999 | 6 = 1000-1499 | 7 = 1500-9999 | 8 = 10000+)
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT --data '{"network":{ "title":"Jerome\'s Network"}}' "https://www.producteev.com/api/networks/520040a2fa46340b08000000" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "network":{ "id": "520040a2fa46340b08000000", "created_at": "2013-08-06T00:17:38+0000", "updated_at": "2013-08-06T00:28:48+0000", "title": "Jerome Network", "creator": {User Object}, "auto_join": false, "theme": {Theme Object}, or null to remove the theme from network. } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Network is updated
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to update this Network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Network doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														DELETE
													Element:span
														/api/networks/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Delete a network
					This will delete all tasks, projects and labels. You must be careful when you remove a network because some restricted projects that you do not see can be inside this network. You must be an admin of the network to delete it.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X DELETE "https://www.producteev.com/api/networks/520040a2fa46340b08000000" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 204 No Content
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														204
													Element:a
													Element:td
													Element:ul
													Element:li
														No Content, network is now deleted
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to delete this network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This network doesn't exist (or has been already deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/networks/{id}/admins
			Node:
			(type) h1
			(layer)1
				Element:h1
					Retrieve the list of the network admins
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/networks/51e83db1fa4634180800006c/admins" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
					This call is paginated (see Filters Section). Like every paginated call in the producteev API you also have a total_hits number.
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "users":[ ..Array of User Objects.. ], "total_hits": 2 }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														page
													Element:td
													Element:tr
													Element:td
														per_page
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, List of admins is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view this Network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This network doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														PUT
													Element:span
														/api/networks/{id}/admins/{admin_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Add a user as an Admin of the Network
					Add a user as an Admin of the Network. The full list of admins is returned.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT "https://www.producteev.com/api/networks/51e83db1fa4634180800006c/admins/51e83dd4fa46341808000a58" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "users":[ ..Array of User Objects.. ] }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
													Element:tr
													Element:td
														admin_id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, List of Admins is returned, User has been added
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view this Network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Network doesn't exist (or has been deleted)
													Element:tr
													Element:td
													Element:a
														409
													Element:a
													Element:td
													Element:ul
													Element:li
														Conflict, This user is already an admin
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														DELETE
													Element:span
														/api/networks/{id}/admins/{admin_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Remove an admin from a Network
					Remove an admin from a network. You cannot remove an admin if it's the only admin of the network, and you need to be an admin yourself.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X DELETE "https://www.producteev.com/api/networks/51e83db1fa4634180800006c/admins/51e83dd4fa46341808000a58" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 204 No Content
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
													Element:tr
													Element:td
														admin_id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														204
													Element:a
													Element:td
													Element:ul
													Element:li
														No Content, The user has been removed from the admin list
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view/edit this Network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Network doesn't exist (or has been deleted), The User has not been found
													Element:tr
													Element:td
													Element:a
														409
													Element:a
													Element:td
													Element:ul
													Element:li
														Conflict, The User is not in the list
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/networks/{id}/labels
			Node:
			(type) h1
			(layer)1
				Element:h1
					Retrieve the list of the network labels
					This call is paginated (see Filters Section). Like every paginated call in the producteev API you also have a total_hits number.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/networks/51e83db1fa4634180800006c/labels" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "labels":[ ..Array of Label Objects.. ], "total_hits": 5 }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														page
													Element:td
													Element:tr
													Element:td
														per_page
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, List of labels is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view this Network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This network doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/networks/{id}/labels/search
			Node:
			(type) h1
			(layer)1
				Element:h1
					Search for Labels inside a network
					This call is paginated (see Filters Section). Like every paginated call in the producteev API you also have a totals_hits number.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/networks/51e83db1fa4634180800006c/labels/search?search=API" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "labels":[ ..Array of Label Objects.. (could be empty, or with a single result) ], "total_hits": 1 }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														search
													Element:td
													Element:tr
													Element:td
														page
													Element:td
													Element:tr
													Element:td
														per_page
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, List of results (labels) is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view this Network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This network doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/networks/{id}/network_invitations
			Node:
			(type) h1
			(layer)1
				Element:h1
					List pending invitations by network
					This method allows you to retrieve the list of Network Invitations for the specified Network.
			Node:
			(type) c
			(layer)1
				Element:h2
					As an administrator
					You will get all the
			Node:
			(type) c
			(layer)1
				Element:code
					network_invitation.status = 'pending|waiting_for_admin'
					of the network
			Node:
			(type) c
			(layer)1
				Element:h2
					As a member
					You will get the same thing as the administrator, but only for the invitation you sent
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/networks/51e83db1fa4634180800006c/network_invitations" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "network_invitations":[ ..Array of Network Invitations Objects.. (could be empty) ] }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, List of network invitations is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view this Network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This network doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/networks/{id}/projects
			Node:
			(type) h1
			(layer)1
				Element:h1
					Retrieve the list of the network projects
					You can specify the type of projects you want to be returned: "all", "following" or "private".
			Node:
			(type) c
			(layer)1
				Element:table
					This call is paginated (see Filters Section). Like every paginated call in the producteev API you also have a total_hits number.
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tr
				Element:td
					all
				Element:td
					list all the projects the user can see in the network. This includes all the public projects and the private projects the user have been added to.
				Element:tr
				Element:td
					following
				Element:td
					A user is automatically added as a follower of a project when creating it, when being assigned a task, when mentioned in a note, when added as a task follower, etc...
				Element:tr
				Element:td
					not_following
				Element:td
					Project that the user is not following
				Element:tr
				Element:td
					private
				Element:td
					List the private projects of the user
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/networks/51e83db1fa4634180800006c/projects" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "users":[ ..Array of Project Objects.. ], "total_hits": 2 }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														page
													Element:td
													Element:tr
													Element:td
														per_page
													Element:td
													Element:tr
													Element:td
														type
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, List of projects is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view this Network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This network doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/networks/{id}/projects/search
			Node:
			(type) h1
			(layer)1
				Element:h1
					Search for Projects inside a network
					Search for projects inside a network. This call is paginated (see Filters Section). Like every paginated call in the producteev API you also have a total_hits number.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/networks/51e83db1fa4634180800006c/projects/search?search=API" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "projects":[ ..Array of Projects Objects.. (could be empty, or with a single result) ], "total_hits": 2 }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														search
													Element:td
													Element:tr
													Element:td
														page
													Element:td
													Element:tr
													Element:td
														per_page
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, List of results (projects) is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view this Network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This network doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/networks/{id}/users
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get the users of a network
					Retrieve the list of the users of the network. This call is paginated (see Filters Section). Like every paginated call in the producteev API you also have a total_hits number.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/networks/51e83db1fa4634180800006c/users" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "users":[ ..Array of User Objects.. ], "total_hits": 2 }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														page
													Element:td
													Element:tr
													Element:td
														per_page
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, List of users is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view this Network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This network doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/networks/{id}/users/search
			Node:
			(type) h1
			(layer)1
				Element:h1
					Search for users inside a network
					Search for users inside a network. This call is paginated (see Filters Section). Like every paginated call in the producteev API you also have a total_hits number.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/networks/51e83db1fa4634180800006c/users/search?search=Jerome" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "users":[ ..Array of User Objects.. (could be empty, or with a single result) ], "total_hits": 1 }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														search
													Element:td
													Element:tr
													Element:td
														page
													Element:td
													Element:tr
													Element:td
														per_page
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, List of results (users) is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view this Network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This network doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														DELETE
													Element:span
														/api/networks/{id}/users/{user_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Remove a user from a network or leave a network
					You need to be a network admin in order to be allowed to do this action. If you're not an admin, you can use it with your own user id in order to leave the network.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X DELETE "https://www.producteev.com/api/networks/51e83db1fa4634180800006c/users/51e83dd4fa46341808000a58" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 204 No Content
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
													Element:tr
													Element:td
														user_id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														204
													Element:a
													Element:td
													Element:ul
													Element:li
														No Content, The user has been removed from the Network
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view/edit this Network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Network doesn't exist (or has been deleted), The User has not been found
													Element:tr
													Element:td
													Element:a
														409
													Element:a
													Element:td
													Element:ul
													Element:li
														Conflict, The User you specified is not in the Network
													Element:a
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														POST
													Element:span
														/api/notes
			Node:
			(type) h1
			(layer)1
				Element:h1
					Create a note
					To create a Note, you need to POST a JSON note object containing the "message" and eventually one or several File Object. For creation only you also need to send the id of the task in which you wanna create the task in. For the task object and the files, you can send the whole object or only the id field. If you wanna attach the same file to multiples notes, you can upload it only once and then just use its id when creating the note.
			Node:
			(type) c
			(layer)1
				Element:pre
					{ "note":{ "message":"Note created from the API", "files":[ { "id":"51f94ba9fa4634e807000004" } ], "task":{ "id":"51f8561efa46343705000014" } } }
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X POST --data '{"note":{"message":"Note created from the API", "files":[{"id":"51f94ba9fa4634e807000004"}], "task":{"id":"51f8561efa46343705000014"}}}' "https://www.producteev.com/api/notes" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 201 Created { "note":{ "id":"51f94baafa4634e807000005", "created_at":"2013-07-31T17:38:50+0000", "updated_at":"2013-07-31T17:38:50+0000", "message":"Note created from the API", "creator":User Object, "files":[ { "id":"51f94ba9fa4634e807000004, "title":"IMG 2013-07-31 10:38:46.jpg", "content_type":"image\/jpeg", ... } ] } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														201
													Element:a
													Element:td
													Element:ul
													Element:li
														Created, Note is created
													Element:tr
													Element:td
													Element:a
														400
													Element:a
													Element:td
													Element:ul
													Element:li
														Bad Request, the JSon is not valid or something is missing
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to create Note on this Task (check task.permissions)
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, The task doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/notes/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Retrieve a note by its id
					Notes are attached to a task, and are used to provide additional informations, or as a discussion thread inside the task. Notes can have (Producteev) files attached to them.
			Node:
			(type) c
			(layer)1
				Element:strong
					Attributes:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					message
				Element:td
					Content of the note (string)
				Element:tr
				Element:td
					creator
				Element:td
					A full User object who created the Note
				Element:tr
				Element:td
					files
				Element:td
					An array of File objects (can be empty)
				Element:tr
				Element:td
					task
				Element:td
					A full Task object in which the note has been created (the task attribute is only used for creation and is not returned in the object @see /api/tasks/{id}/notes for a way to get all notes attached to a task)
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/notes/51f8561ffa46343705000015" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "note":{ "id": "51f8561ffa46343705000015", "created_at": "2013-07-31T00:11:11+0000", "updated_at": "2013-07-31T00:11:11+0000", "message": "@Julien you should check this new API, looks really promising.", "creator": {User Object}, "files":[ ] } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Note is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to see this Note
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Note doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														PUT
													Element:span
														/api/notes/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Update an existing note
					Updating a Note allows you to change only its message attribute. You can send only the message field or the full object, only the message will be updated if different from the one on the server. You cannot attach new files to a note while updating.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT --data '{"note":{"message":"EDIT: This comment is irrelevant, I misread the documentation"}}' "https://www.producteev.com/api/notes/51f8561ffa46343705000015" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "note":{ "id": "51f8561ffa46343705000015", "created_at": "2013-07-31T00:11:11+0000", "updated_at": "2013-07-31T00:11:55+0000", "message": "EDIT: This comment is irrelevant, I misread the documentation", "creator": {User Object}, "files":[ ] } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Note is updated
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to update this note
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This note doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														DELETE
													Element:span
														/api/notes/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Delete a note
					Delete a Note from the task.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X DELETE "https://www.producteev.com/api/notes/51f8561ffa46343705000015" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 204 No Content
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														204
													Element:a
													Element:td
													Element:ul
													Element:li
														No Content, Note is now deleted
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to delete this Note
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Note doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/notifications
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get Producteev Notifications for the current user
					This method will return you the notifications for the current user. Each notification has the following
			Node:
			(type) c
			(layer)1
				Element:strong
					attributes:
			Node:
			(type) c
			(layer)1
				Element:table
					This call is paginated (see Filters Section). Like every paginated call in the producteev API you also have a total_hits number.
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					type
				Element:td
					Type of Event that created this notification ( NoteCreated | TaskDeadlineReached | TaskResponsibleSet | TaskDoneSet )
				Element:tr
				Element:td
					read
				Element:td
					Boolean value, true if the user already saw this notification
				Element:tr
				Element:td
					message_text
				Element:td
					Text to be display to the user
				Element:tr
				Element:td
					task
				Element:td
					A full Task object related to the event, may be empty for future types
				Element:tr
				Element:td
					users
				Element:td
					A list of User objects related to the event, may be empty (Deadline reached for example)
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/notifications" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "notifications":[ { "id":"51f9817cfa4634b30a000000", "created_at":"2013-07-31T21:28:28+0000", "updated_at":"2013-07-31T21:28:28+0000", "type":"TaskDeadlineReached", "users":[ [.. Array of User Objects ..] ], "task":{ [..Task Object..] }, "message_text":"The following task is due on: 8:00pm on Tuesday 9th July 2013\nBuy a computer", "read":false }, { "id":"51f9817afa46348b0a000000", "created_at":"2013-07-31T21:28:26+0000", "updated_at":"2013-07-31T21:28:26+0000", "type":"TaskDeadlineReached", "users":[ [.. Array of User Objects ..] ], "task":{ [..Task Object..] }, "message_text":"The following task is due on: 12:00am on Monday 1st July 2013\nManage pro account cell phones for the team", "read":false } ], "total_hits":2 }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														page
													Element:td
													Element:tr
													Element:td
														per_page
													Element:td
													Element:tr
													Element:td
														read
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Label is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														PUT
													Element:span
														/api/notifications
			Node:
			(type) h1
			(layer)1
				Element:h1
					Update a list of notification (i.e. set notifications as read/unread)
					Update a list of notifications (i.e. set each notification as read/unread) in one API call. You need to send an array of notification object. Each notification object must contains the id of the notification and the value of the read attribute.
			Node:
			(type) c
			(layer)1
				Element:pre
					{ "notifications":[ { "id":"51f9817cfa4634b30a000000", "read":true }, { "id":"51f9817afa46348b0a000000", "read":true } ] }
					The call will return an array of all the modified notifications.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT --data '{"notifications":[{"id":"51f9817cfa4634b30a000000", "read":true}, {"id":"51f9817afa46348b0a000000","read":true}]}' "https://www.producteev.com/api/notifications" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											{ "notifications":[ { "id":"51f9817cfa4634b30a000000", "created_at":"2013-07-31T21:28:28+0000", "updated_at":"2013-07-31T23:07:42+0000", "type":"TaskDeadlineReached", "users":[ [.. Array of User Objects ..] ], "task":{ [..Task Object..] }, "message_text":"The following task is due on: 8:00pm on Tuesday 9th July 2013\nBuy a computer", "read":true }, { "id":"51f9817afa46348b0a000000", "created_at":"2013-07-31T21:28:26+0000", "updated_at":"2013-07-31T23:07:42+0000", "type":"TaskDeadlineReached", "users":[ [.. Array of User Objects ..] ], "task":{ [..Task Object..] }, "message_text":"The following task is due on: 12:00am on Monday 1st July 2013\nManage pro account cell phones for the team", "read":true } ] }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Notifications are updated
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to update one of the notification
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, One of the notification doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														PUT
													Element:span
														/api/notifications/read_all
			Node:
			(type) h1
			(layer)1
				Element:h1
					Set all unread notifications as read
					Set all unread notifications as read for the user
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT "https://www.producteev.com/api/notifications/read_all" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 204 No Content
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														task_id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														204
													Element:a
													Element:td
													Element:ul
													Element:li
														No Content, All Notifications are now marked as read
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														PUT
													Element:span
														/api/notifications/{notification_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Update a notification (i.e. set a notification as read/unread)
					Updating a Notification allows you to change only its read attribute (true or false).
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT --data '{"notification":{"read":true}}' "https://www.producteev.com/api/notifications/51f9817cfa4634b30a000000" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "notification":{ "id":"51f9817cfa4634b30a000000", "created_at":"2013-07-31T21:28:28+0000", "updated_at":"2013-07-31T22:55:17+0000", "type":"TaskDeadlineReached", "users":[ ], "task":{ [..Task Object..] }, "message_text":"The following task is due on: 8:00pm on Tuesday 9th July 2013\nBuy a computer", "read":true } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														notification_id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Notification is updated
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to update this notification
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This notification doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/premium_access/clients/{client_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get a premium_access object for an oAuth client
			Node:
			(type) c
			(layer)1
				Element:strong
					Attributes:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					can_use
				Element:td
					Boolean, true/false
				Element:tr
				Element:td
					subscription
				Element:td
					Subscription object (if a subscription enables you to use this Producteev client)
				Element:tr
				Element:td
					trial
				Element:td
					Trial object, (if a trial enables you to use this Producteev client)
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/premium_access/clients/51ab671d532aa65a40000000" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 { "premium_access":{ "can_use": true, "subscription": null, "trial": {trial object} } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														client_id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, the premium access is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to see this client
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This client id doesn't exist (or has been deleted)
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/premium_access/features/{feature}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get a premium_access object for a feature and a network
			Node:
			(type) c
			(layer)1
				Element:strong
					Attributes:
			Node:
			(type) c
			(layer)1
				Element:table
					The list of feature is :
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					can_use
				Element:td
					Boolean, true/false
				Element:tr
				Element:td
					subscription
				Element:td
					Subscription object, if a subscription enables you to access this feature
				Element:tr
				Element:td
					trial
				Element:td
					Trial object, if a trial enables you to access this feature
			Node:
			(type) c
			(layer)1
				Element:code
					customization | support
			Node:
			(type) c
			(layer)1
				Element:p
					The "network_id" parameter is mandatory for this list of feature :
				Element:code
					customization
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 { "premium_access":{ "can_use": true, "subscription": {subscription object}, "trial": {trial object} } }
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/premium_access/features/customization?network_id=51e83db1fa4634180800006c" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 { "premium_access":{ "can_use": true, "subscription": {subscription object}, "trial": null } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														feature
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														network_id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, the premium access is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to see this network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This feature or the network doesn't exist
													Element:a
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/prices/plan
													Element:p
														Get the prices of a plan
													Element:h4
														Filters
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														type
													Element:td
													Element:tr
													Element:td
														interval
													Element:td
													Element:tr
													Element:td
														quantity
													Element:td
													Element:tr
													Element:td
														coupon
													Element:td
													Element:h4
														Try it yourself
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
													Element:a
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														POST
													Element:span
														/api/projects
			Node:
			(type) h1
			(layer)1
				Element:h1
					Create a new Project on the network
					To create a Project, you need to POST a JSON project object containing the "title", "description", "restricted" and "locked" attributes. You also need to send the id of the network in which you wanna create the label in. Only title and network are mandatory. restricted and locked will be false by default, description can be null.
			Node:
			(type) c
			(layer)1
				Element:pre
					{ "project":{ "title":"API Documentation", "description":"Official Project about API doc.", "restricted":false, "locked":"true", "network":{ "id":"51e83db1fa46341808000063" } } }
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X POST --data '{"project":{ "title":"API Documentation", "description":"Official Project about API doc.", "restricted":false, "locked":true, "network":{"id":"51e83db1fa46341808000063"}}}' "https://www.producteev.com/api/projects" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 201 Created { "project":{ "id":"51fc32c0fa46348b0b00000b", "created_at":"2013-08-02T22:29:20+0000", "updated_at":"2013-08-02T22:29:20+0000", "title":"API Documentation", "creator": User Object "network": Network Object, "admins":[ ..Array of User Object (the creator is autonatically an admin).. ], "locked":true, "description":"Official Project about API doc.", "restricted":false } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														201
													Element:a
													Element:td
													Element:ul
													Element:li
														Created, Project is created
													Element:tr
													Element:td
													Element:a
														400
													Element:a
													Element:td
													Element:ul
													Element:li
														Bad Request, the JSon is not valid or something is missing
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to create Project on this network
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, The network doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/projects/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get the Project with the specified id
					Projects are inside a network, and they contain Tasks. Project can be locked / unlocked, when locked only the creator and assignees of a task can modify it (if Unlocked everyone that has access to the project will be able to edit the tasks). Also you can make a project restricted to a certain list of users, if a project is restricted only people in the restricted_users list can see it. This method returns the Project object identified by the id parameter.
			Node:
			(type) c
			(layer)1
				Element:strong
					Base Attributes:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					title
				Element:td
					Title of the project
				Element:tr
				Element:td
					description
				Element:td
					Description of the project
				Element:tr
				Element:td
					locked
				Element:td
					Boolean, true/false
				Element:tr
				Element:td
					restricted
				Element:td
					Boolean, true/false
				Element:tr
				Element:td
					creator
				Element:td
					A full User object who created the Project
				Element:tr
				Element:td
					network
				Element:td
					A full Network object in which the Project is
			Node:
			(type) c
			(layer)1
				Element:strong
					Sub Collections:
					(See dedicated API methods)
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					admins: Collection of User objects that are allowed to admin the project (as a convenience admins list is returned with the Project object)
				Element:li
					restricted_users: Collection of User objects that are allowed to see the project when it's restricted
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/projects/51e83dd4fa4634180800030f" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "project":{ "id":"51e83dd4fa4634180800030f", "created_at":"2013-07-18T19:11:16+0000", "updated_at":"2013-07-31T00:11:25+0000", "title":"My First Project", "description":"This project is about the Producteev API documentation", "creator": {User Object}, "network": {Network Object}, "admins":[ ..Array of User Object.. ], "locked":false, "restricted":false } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Project is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to see this Project
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Project doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														PUT
													Element:span
														/api/projects/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Update a Project
					Updating a Project allows you to change its title, description, locked, restricted and even move it to another network. You can send only the field you want to update, or the full object, we will update only the field that are different from the server.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT --data '{"project":{"title":"API Private Documentation", "locked":false}}' "https://www.producteev.com/api/projects/51fc32c0fa46348b0b00000b" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "project":{ "id":"51fc32c0fa46348b0b00000b", "created_at":"2013-08-02T22:29:20+0000", "updated_at":"2013-08-02T22:44:14+0000", "title":"API Private Documentation", "creator": {User Object}, "network": {Network Object}, "admins":[ ..Array of User Object (the creator is autonatically an admin).. ], "locked":false, "description":"Official Project about API doc.", "restricted":false } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														Success, Project is updated
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to update this Project
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Project doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														DELETE
													Element:span
														/api/projects/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Delete a project
					Delete a project from the network. This will delete all the task inside the projects. You must be an admin of the project or of the network to delete it. If the project is restricted, you must be admin of the project.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X DELETE "https://www.producteev.com/api/projects/51e83dd4fa4634180800030f" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 204 No Content
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														204
													Element:a
													Element:td
													Element:ul
													Element:li
														No Content, Project is now deleted
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to delete this Project
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Project doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/projects/{id}/activities
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get the projects activities
					Get all the activities happening in a project
			Node:
			(type) c
			(layer)1
				Element:strong
					Attributes:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					text
				Element:td
					Description of the activity (string)
				Element:tr
				Element:td
					type
				Element:td
					Type of activity. (Possible values: note.created, task.responsible_set, task.done_set)
				Element:tr
				Element:td
					task
				Element:td
					Task object
				Element:tr
				Element:td
					note
				Element:td
					Note object (if type=note.created otherwise empty)
				Element:tr
				Element:td
					users
				Element:td
					List of User object related to the activity (if type=task.responsible_set otherwise empty)
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/projects/51e83db1fa46341808000075/activities" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "activities":[ { "id": "520144d8fa4634b608000000", "created_at": "2013-08-06T18:47:52+0000", "text": "<creator id="528a6d6afa46347953000048" field="firstname,lastname" /> commented on the task <task id="528a6dc5fa4634795300049d" field="title"/>", "type": "note.created", "task": Task Object, "note": Note Object, "users": [list of User], }, { ... }] }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														page
													Element:td
													Element:tr
													Element:td
														per_page
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/projects/{id}/admins
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get the admins of the project specified by id
					Retrieve the list of the admins of the project. Admins are also embedded in the Project object.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/projects/51e83dd4fa4634180800030f/admins" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "users":[ ..Array of User Objects.. ] }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, List of Admins is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view this Project
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Project doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														PUT
													Element:span
														/api/projects/{id}/admins/{admin_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Add a user as an Admin of the project
					Add a user as an Admin of the project. The full list of admins is returned.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT "https://www.producteev.com/api/projects/51e83dd4fa4634180800030f/admins/51e83dd4fa46341808000a58" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "users":[ ..Array of User Objects.. ] }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
													Element:tr
													Element:td
														admin_id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, List of Admins is returned, User has been added
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view this Project
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Project doesn't exist (or has been deleted)
													Element:tr
													Element:td
													Element:a
														409
													Element:a
													Element:td
													Element:ul
													Element:li
														Conflict, This user is already an admin
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														DELETE
													Element:span
														/api/projects/{id}/admins/{admin_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Remove an admin from a project
					Remove an admin from a project. You cannot remove an admin if it's the only admin of the project.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X DELETE "https://www.producteev.com/api/projects/51e83dd4fa4634180800030f/admins/51e83dd4fa46341808000a58" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 204 No Content
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
													Element:tr
													Element:td
														admin_id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														204
													Element:a
													Element:td
													Element:ul
													Element:li
														No Content, The user has been removed from the admin list
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view/edit this Project
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Project doesn't exist (or has been deleted), The User has not been found
													Element:tr
													Element:td
													Element:a
														409
													Element:a
													Element:td
													Element:ul
													Element:li
														Conflict, The User is not in the list
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/projects/{id}/followers
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get the followers of the project specified by id
					Retrieve the list of the followers of the project. This call is paginated (see Filters Section). Like every paginated call in the producteev API you also have a total_hits number.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/projects/51e83dd4fa4634180800030f/followers" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "users":[ ..Array of User Objects.. ] }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														page
													Element:td
													Element:tr
													Element:td
														per_page
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, List of Followers is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view this Project
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Project doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														PUT
													Element:span
														/api/projects/{id}/followers/{user_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Add a follower to the project
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT "https://www.producteev.com/api/projects/51e83dd4fa4634180800030f/followers/51e83dd4fa46341808000a58" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 204 No Content
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
													Element:tr
													Element:td
														user_id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														204
													Element:a
													Element:td
													Element:ul
													Element:li
														No Content, The user has been added to the followers list
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view this Project
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Project doesn't exist (or has been deleted)
													Element:tr
													Element:td
													Element:a
														409
													Element:a
													Element:td
													Element:ul
													Element:li
														Conflict, This user is already a follower
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														DELETE
													Element:span
														/api/projects/{id}/followers/{user_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Remove a follower from a project
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X DELETE "https://www.producteev.com/api/projects/51e83dd4fa4634180800030f/followers/51e83dd4fa46341808000a58" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 204 No Content
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
													Element:tr
													Element:td
														user_id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														204
													Element:a
													Element:td
													Element:ul
													Element:li
														No Content, The user has been removed from the followers list
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view/edit this Project
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Project doesn't exist (or has been deleted), The User has not been found
													Element:tr
													Element:td
													Element:a
														409
													Element:a
													Element:td
													Element:ul
													Element:li
														Conflict, The User is not in the list
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														GET
													Element:span
														/api/projects/{id}/restricted_users
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get the restricted users of the project specified by id
					Retrieve the list of the restricted users of the project. This method returns Users only if the project has the attribute restricted set to true.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/projects/51e83dd4fa4634180800030f/restricted_users" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "users":[ ..Array of User Objects.. ] }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, List of Restricted Users is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view this Project
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Project doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														PUT
													Element:span
														/api/projects/{id}/restricted_users/{user_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Add a restricted user to the project
					Add a restricted user to the project. The full list of restricted users is returned.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT "https://www.producteev.com/api/projects/51e83dd4fa4634180800030f/restricted_users/51e83dd4fa46341808000a58" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "users":[ ..Array of User Objects.. ] }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
													Element:tr
													Element:td
														user_id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, List of restricted users is returned, User has been added
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view this Project
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Project doesn't exist (or has been deleted)
													Element:tr
													Element:td
													Element:a
														409
													Element:a
													Element:td
													Element:ul
													Element:li
														Conflict, This user is already a restricted user
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														DELETE
													Element:span
														/api/projects/{id}/restricted_users/{user_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Remove a user from a restricted project
					Remove a user from a restricted project.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X DELETE "https://www.producteev.com/api/projects/51e83dd4fa4634180800030f/restricted_users/51e83dd4fa46341808000a58" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 204 No Content
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														id
													Element:td
													Element:tr
													Element:td
														user_id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														204
													Element:a
													Element:td
													Element:ul
													Element:li
														No Content, The user has been removed from the restricted users list
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view/edit this Project
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, This Project doesn't exist (or has been deleted), The User has not been found
													Element:tr
													Element:td
													Element:a
														409
													Element:a
													Element:td
													Element:ul
													Element:li
														Conflict, The User is not in the list
													Element:a
													Element:li
													Element:ul
													Element:li
													Element:ul
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														POST
													Element:span
														/api/tasks
			Node:
			(type) h1
			(layer)1
				Element:h1
					Create a new task
					Create a task and return the task created Only the title and the project id can be set when create. Using the NLP you can set automatically others attribute (see /api/nlp_suggestions) To create a Task, you need to POST a JSON task object containing the "title" and "project".
			Node:
			(type) c
			(layer)1
				Element:pre
					{ "task":{ "title":"Review the copy", "project": {Project Object} } }
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X POST --data '{"task":{"title":"Submit the new iOS App !tomorrow","project":{"id":"51fc32c0fa46348b0b00000b"}}}' "https://www.producteev.com/api/tasks/" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 201 Created { "task":{ "id": "520144d8fa4634b608000000", "created_at": "2013-08-06T18:47:52+0000", "updated_at": "2013-08-06T18:47:53+0000", "title": "Submit the new iOS App", "priority": 0, "status": 1, "deadline": "2013-12-07T07:00:00+0000", "deadline_timezone": "PST", "creator": {User Object}, "responsibles": [ User Object Array ], "followers": [ User Object Array ], "project": {Project Object}, "labels": [ ], "subtasks": [ ], "notes_count": 0, "allday": true, "reminder": 0, "permissions": 2047, "deadline_status": "upcoming" } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														201
													Element:a
													Element:td
													Element:ul
													Element:li
														Created, Task is created
													Element:tr
													Element:td
													Element:a
														400
													Element:a
													Element:td
													Element:ul
													Element:li
														Bad Request, the JSON is not valid or something is missing
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to create Task on this Project
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, The Project doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														PUT
													Element:span
														/api/tasks
			Node:
			(type) h1
			(layer)1
				Element:h1
					Update a list of tasks
					Update a list of tasks. This endpoint allows you to update a lot of tasks with only one API call. You need to send a tasks list in JSON (for each task you can send the full object or only the id + the fields you wanna update). You can update the same attributes as you would do in PUT /api/tasks/{id}
			Node:
			(type) c
			(layer)1
				Element:pre
					{ "tasks":[ { "id":"51e83db1fa46341808000075", "title":"Batch Updated Title" }, { "id":"520168defa46345b05000000", "status":1 } ] }
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT --data '{"tasks":[{"id":"520144d8fa4634b608000000","title":"Batch Updated Title"}, {"id":"520168defa46345b05000000", "status":1}]}' "https://www.producteev.com/api/tasks" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "tasks":[ ...Array of Updated Task Objects... ] }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, List of tasks is returned
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view those Tasks or don't have the permission to edit them
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, A Task doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														DELETE
													Element:span
														/api/tasks
			Node:
			(type) h1
			(layer)1
				Element:h1
					Delete a list of tasks
					This endpoint allows you to delete a more than one task with only one API call. You need to send a tasks list in JSON (for each task you can send the full object or only the id)
			Node:
			(type) c
			(layer)1
				Element:pre
					{ "tasks":[ { "id":"51e83db1fa46341808000075", }, { "id":"520168defa46345b05000000", } ] }
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X DELETE --data '{"tasks":[{"id":"520144d8fa4634b608000000"}, {"id":"520168defa46345b05000000"}]}' "https://www.producteev.com/api/tasks" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 204 No Content
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														204
													Element:a
													Element:td
													Element:ul
													Element:li
														No Content, Tasks are deleted
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view those Tasks or don't have the permission to delete them
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, A Task doesn't exist (or has been deleted)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														POST
													Element:span
														/api/tasks/export
			Node:
			(type) h1
			(layer)1
				Element:h1
					CSV Export
					To export a list of tasks in the CSV format. This endpoint support all the criteria supported by the /tasks/search endpoint except the pagination. All the tasks matching the query will be added in the CSV export. For the following example we're gonna export the tasks that are Done, Assigned to someone in Particular, only with a 4 or 5 star priority and updated between July 1st and July 31st.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X POST --data '{ "networks":[], "projects":[], "priorities":[4, 5], "statuses":[0], "responsibles":["51e83dd4fa46341808000a58"],"creators":[], "labels":[], "deadline":{}, "created_at":{}, "updated_at":{"from":1372636800, "to":1375315199}, "search":{}}' "https://www.producteev.com/api/tasks/export" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 302 Location : /api/files/{id}
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Filters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														sort
													Element:td
													Element:tr
													Element:td
														alias
													Element:td
													Element:tr
													Element:td
														order
													Element:td
													Element:tr
													Element:td
														include_deleted
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														302 Location: /api/files/{id} //location of the created file, ready to download
													Element:tr
													Element:td
													Element:a
														400
													Element:a
													Element:td
													Element:ul
													Element:li
														Bad Request, Invalid Parameters (see error_message)
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														PUT
													Element:span
														/api/tasks/labels/{label_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Add a label to a list of task
					This endpoint allows you to apply a label to more than one task with only one API call. Instead of specifying the task id in the URL, you need to send a tasks list in JSON (for each task you can send the full object or only the id)
			Node:
			(type) c
			(layer)1
				Element:pre
					{ "tasks":[ { "id":"51e83db1fa46341808000075" }, { "id":"520168defa46345b05000000" } ] }
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT --data '{"tasks":[{"id":"520144d8fa4634b608000000"}, {"id":"520168defa46345b05000000"}]}' "https://www.producteev.com/api/tasks/labels/51e83dd6fa46341808000399" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "tasks":[ ...Array of Task Objects... ] }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														label_id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, List of tasks is returned, Label has been added
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view those Tasks or don't have the permission to edit Labels
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, A Task doesn't exist (or has been deleted)
													Element:tr
													Element:td
													Element:a
														409
													Element:a
													Element:td
													Element:ul
													Element:li
														Conflict, This label is already set for a task
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														PUT
													Element:span
														/api/tasks/responsibles/{user_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Add a Responsible to a list of task
					This endpoint allows you to add a responsible to more than one task with only one API call. Instead of specifying the task id in the URL, you need to send a tasks list in JSON (for each task you can send the full object or only the id)
			Node:
			(type) c
			(layer)1
				Element:pre
					{ "tasks":[ { "id":"51e83db1fa46341808000075" }, { "id":"520168defa46345b05000000" } ] }
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT --data '{"tasks":[{"id":"520144d8fa4634b608000000"}, {"id":"520168defa46345b05000000"}]}' "https://www.producteev.com/api/tasks/responsibles/51e83dd4fa46341808000a58" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:pre
											HTTP/1.1 200 OK { "tasks":[ ...Array of Task Objects... ] }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Requirements
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Name
													Element:th
														Value
													Element:tbody
													Element:tr
													Element:td
														user_id
													Element:td
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Try it yourself
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														HTTP Headers
													Element:tbody
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:tr
													Element:td
													Element:td
													Element:td
													Element:i
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Status Codes
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Value
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:a
														200
													Element:a
													Element:td
													Element:ul
													Element:li
														OK, List of tasks is returned, Responsible has been added
													Element:tr
													Element:td
													Element:a
														401
													Element:a
													Element:td
													Element:ul
													Element:li
														Unauthorized, Check the access token
													Element:tr
													Element:td
													Element:a
														403
													Element:a
													Element:td
													Element:ul
													Element:li
														Access Denied, You're not allowed to view those Tasks or don't have the permission to edit Responsibles
													Element:tr
													Element:td
													Element:a
														404
													Element:a
													Element:td
													Element:ul
													Element:li
														Not Found, A Task doesn't exist (or has been deleted)
													Element:tr
													Element:td
													Element:a
														409
													Element:a
													Element:td
													Element:ul
													Element:li
														Conflict, This Responsible is already set for a task
													Element:a
													Element:li
													Element:h4
														Request URL
													Element:pre
													Element:h4
														Response Headers
													Element:small
														[
													Element:a
														Expand
														]
													Element:pre
													Element:h4
														Response Body
													Element:small
														[
													Element:a
														Raw
														]
													Element:pre
													Element:h3
													Element:span
														POST
													Element:span
														/api/tasks/search
			Node:
			(type) h1
			(layer)1
				Element:h1
					Search
					To get a list of tasks, you can either use a list of pre-defined aliases or set yourself the criterias you want. Basically, the list of aliases is the list of views offered by the officials Producteev applications.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Aliases
					You can specify an alias with the "alias" filter. The list of authorized values is :
			Node:
			(type) c
			(layer)1
				Element:code
					active|activeandcompleted|all|starred|completed|created|responsible|following|duetoday|duethisweek|late|files
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tr
				Element:td
					active
				Element:td
					list of all actives tasks
				Element:tr
				Element:td
					activeandcompleted
				Element:td
					list of all actives and completed tasks
				Element:tr
				Element:td
					all
				Element:td
					Deprecated. After adding the "activeandcompleted" alias, we renamed the alias "all" to "active"
				Element:tr
				Element:td
					starred
				Element:td
					starred and active tasks
				Element:tr
				Element:td
					completed
				Element:td
					completed tasks
				Element:tr
				Element:td
					created
				Element:td
					tasks created by the current user (and actives)
				Element:tr
				Element:td
					responsible
				Element:td
					tasks that have the current user as one of the responsibles (and actives)
				Element:tr
				Element:td
					following
				Element:td
					tasks that have the current user as one of the followers (and actives)
				Element:tr
				Element:td
					duetoday
				Element:td
					tasks that are due today, based on the deadline field. (and actives)
				Element:tr
				Element:td
					duethisweek
				Element:td
					tasks that are due this week, based on the deadline field. (and actives)
				Element:tr
				Element:td
					late
				Element:td
					tasks that are late, based on the deadline field. (and actives)
				Element:tr
				Element:td
					files
				Element:td
					tasks with a file attached (and actives)
			Node:
			(type) h1
			(layer)1
				Element:h1
					Criterias
					Set the criterias in request body by specifiying one or more parameters as in the following example:
			Node:
			(type) c
			(layer)1
				Element:pre
					{ "networks":["id1", "id2"], "projects":["id1", "id2"], "priorities":[1, 2, 3, 4, 5], "statuses":[0, 1], "responsibles":["id1", "id2"], "followers":["id1", "id2"], "creators":["id1", "id2"], "labels":["id1", "id2"], "deadline":{"from":123456789, "to":12345678910}, "created_at":{"from":123456789, "to":12345678910}, "updated_at":{"from":123456789, "to":12345678910}, "search":{"text": "foo"} }
					For the deadline filter, "from" and "to" are optional, you can set only "to" if you want all the tasks with a deadline before "to". Same thing for the "from" field. For the statuses filter, 0 = active, 1 = completed
			Node:
			(type) h1
			(layer)1
				Element:h1
					Mixing alias and criterias
					You can mix criterias with an alias. This is very useful to get, for example, all the "late" tasks from the project "1". For the following example we're gonna search for the task that are Done, Assigned to someone in Particular, only with a 4 or 5 star priority and updated between July 1st and July 31st.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X POST --data '{ "networks":[], "projects":[], "priorities":[4, 5], "statuses":[0], "responsibles":["51e83dd4fa46341808000a58"],"creators":[], "labels":[], "deadline":{}, "created_at":{}, "updated_at":{"from":1372636800, "to":1375315199}, "search":{}}' "https://www.producteev.com/api/tasks/search" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "tasks":[ ..Array of Task matching Criterias.. ] }
			Node:
			(type) c
			(layer)1
				Element:h4
					Filters
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					page
				Element:td
				Element:tr
				Element:td
					sort
				Element:td
				Element:tr
				Element:td
					alias
				Element:td
				Element:tr
				Element:td
					order
				Element:td
				Element:tr
				Element:td
					include_deleted
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					OK, Returned when successful
				Element:tr
				Element:td
				Element:a
					400
				Element:a
				Element:td
				Element:ul
				Element:li
					Bad Request, Inavlid Parameters (see error_message)
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					POST
				Element:span
					/api/tasks/search/counts
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get for each search aliases the number of tasks
					This endpoint support all the criteria supported by the /tasks/search endpoint except for the statuses.
			Node:
			(type) c
			(layer)1
				Element:br
			Node:
			(type) c
			(layer)1
				Element:br
					If you don't specify any "count_aliases" the api will return all of them For the following example we're gonna get the number of tasks active, starred, and active + completed that are assigned to someone in particular, only with a 4 or 5 star priority and updated between July 1st and July 31st.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X POST --data '{ "networks":[], "projects":[], "priorities":[4, 5], "responsibles":["51e83dd4fa46341808000a58"],"creators":[], "labels":[], "deadline":{}, "created_at":{}, "updated_at":{"from":1372636800, "to":1375315199}}' "https://www.producteev.com/api/tasks/search/count?count_aliases=active,activeandcompleted,starred" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "tasks_alias_counts":[ "active": 10, "activeandcompleted": 12, "starred": 3 ] }
			Node:
			(type) c
			(layer)1
				Element:h4
					Filters
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					count_aliases
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					OK, Returned when successful
				Element:tr
				Element:td
				Element:a
					400
				Element:a
				Element:td
				Element:ul
				Element:li
					Bad Request, Invalid Parameters (see error_message)
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					GET
				Element:span
					/api/tasks/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Find a task
					Tasks are the most important object in Producteev.
			Node:
			(type) c
			(layer)1
				Element:strong
					Attributes:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					title
				Element:td
					Title of the task
				Element:tr
				Element:td
					priority
				Element:td
					Integer from 0 to 5, 5 being the highest
				Element:tr
				Element:td
					status
				Element:td
					Integer 0 = Done, 1 = Active
				Element:tr
				Element:td
					reminder
				Element:td
					When to get notified for the deadline, Integer (see list below)
				Element:tr
				Element:td
					deadline
				Element:td
					Deadline in UTC Time
				Element:tr
				Element:td
					deadline_timezone
				Element:td
					If the deadline has been set to a specific timezone
				Element:tr
				Element:td
					deadline_recurring
				Element:td
					String, see possible values below
				Element:tr
				Element:td
					deadline_recurring_value
				Element:td
					String, value for the reccuring options
				Element:tr
				Element:td
					deadline_status
				Element:td
					String, possible values are none, late, today or upcoming
				Element:tr
				Element:td
					allday
				Element:td
					BOOL, indicates if the deadline has been set to all day or a specific hour
				Element:tr
				Element:td
					permissions
				Element:td
					Integer, Sum of permissions. See details and how to determine possible actions at the top of the documentation
				Element:tr
				Element:td
					notes_count
				Element:td
					Integer, Number of notes for this task (Notes are not embedded and need a specific call)
				Element:tr
				Element:td
					creator
				Element:td
					User Object
				Element:tr
				Element:td
					project
				Element:td
					Project Object
			Node:
			(type) c
			(layer)1
				Element:strong
					Embedded Collections:
					(See dedicated API methods for managing them)
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					responsibles
				Element:td
					Collection of User objects that are assigned on this task
				Element:tr
				Element:td
					followers
				Element:td
					Collection of User objects that are following this task
				Element:tr
				Element:td
					subtasks
				Element:td
					Collection of Subtask objects
				Element:tr
				Element:td
					labels
				Element:td
					Collection of Label objects
			Node:
			(type) c
			(layer)1
				Element:h3
					Possible Values for Reminder
			Node:
			(type) c
			(layer)1
				Element:pre
					No reminder = 0, Date of event = 1, 5mn before = 2, 15mn before = 3, 30mn before = 4, 1h before = 5, 2h before = 6, 1 day before = 7, 2 days before = 8
			Node:
			(type) c
			(layer)1
				Element:h3
					Possible Values for Deadline_Recurring
			Node:
			(type) c
			(layer)1
				Element:strong
					deadline_recurring / deadline_recurring_value
					- daily / null - periodically / X days (integer > 0) - weekly / 1-7 (monday - sunday) - monthly / 1-28 and 'L' for last day of the month - yearly / null
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/tasks/520144d8fa4634b608000000" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "task":{ "id":"520144d8fa4634b608000000", "created_at":"2013-08-06T18:47:52+0000", "updated_at":"2013-08-06T18:47:53+0000", "title":"Submit the new iOS App", "priority":0, "status":1, "deadline":"2013-08-07T07:00:00+0000", "deadline_timezone":"PST", "creator": {User Object}, "responsibles":[ User Object Array ], "followers":[ User Object Array ], "project": {Project Object}, "labels":[ ], "subtasks":[ ], "notes_count":0, "allday":true, "reminder":0, "permissions":2047, "deadline_status":"upcoming" } }
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					Success, Task is returned
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to see this Task
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found, This Task doesn't exist (or has been deleted)
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					PUT
				Element:span
					/api/tasks/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Update a task
					Updating a task allows you to change all its attributes except creator, permissions and notes_count which are readonly attributes. If you set a different project, this will move the task in the specified project. Embedded subcollections must be modified with their specific API calls. You can see GET /api/tasks/{id} for the list of attributes and possible value
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT --data '{"task":{"status":0, "title":"Submit the new iOS App in iTunes Connect"}}' "https://www.producteev.com/api/tasks/520144d8fa4634b608000000" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "task":{ "id":"520144d8fa4634b608000000", "created_at":"2013-08-06T18:47:52+0000", "updated_at":"2013-08-06T22:17:24+0000", "title":"Submit the new iOS App in iTunes Connect", "priority":0, "status":0, "deadline":"2013-08-07T07:00:00+0000", "deadline_timezone":"PST", "creator": {User Object}, "responsibles":[ User Object Array ], "followers":[ User Object Array ], "project": {Project Object}, "labels":[ ], "subtasks":[ ], "notes_count":0, "allday":true, "reminder":0, "permissions":2047, "deadline_status":"upcoming" } }
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					Success, Task is updated
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to update this task attribute (check permissions)
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found, This Task doesn't exist (or has been deleted)
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					DELETE
				Element:span
					/api/tasks/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Delete a task
					You need to have the delete permissions on this task (see Tasks Permissions).
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X DELETE "https://www.producteev.com/api/tasks/520144d8fa4634b608000000" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 204 No Content
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					204
				Element:a
				Element:td
				Element:ul
				Element:li
					No Content, Task is now deleted
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to delete this task
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found, This Task doesn't exist (or has been deleted)
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					GET
				Element:span
					/api/tasks/{id}/activities
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get the task activities
					Get all the activities happening in a task
			Node:
			(type) c
			(layer)1
				Element:strong
					Attributes:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					text
				Element:td
					Description of the activity (string)
				Element:tr
				Element:td
					detail
				Element:td
					More detail on the activity (string)
				Element:tr
				Element:td
					type
				Element:td
					Type of activity. (Possible values: note.created, task.responsible_set, task.done_set, task.deadline_set, task.deadline_reached)
				Element:tr
				Element:td
					task
				Element:td
					Task object
				Element:tr
				Element:td
					note
				Element:td
					Note object (if type=note.created otherwise empty)
				Element:tr
				Element:td
					users
				Element:td
					List of User object related to the activity (if type=task.responsible_set otherwise empty)
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/tasks/51e83db1fa46341808000082/activities" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "activities":[ { "id": "520144d8fa4634b608000000", "created_at": "2013-08-06T18:47:52+0000", "text": "<creator id="528a6d6afa46347953000048" field="firstname,lastname" /> commented on the task", "type": "note.created", "task": Task Object, "note": Note Object, "users": [list of User], }, { ... }] }
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Filters
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					page
				Element:td
				Element:tr
				Element:td
					per_page
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					PUT
				Element:span
					/api/tasks/{id}/followers/{user_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Add a user as a Follower of the task
					Add a user as a Follower. The full list of followers is returned.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT "https://www.producteev.com/api/tasks/51e83db1fa46341808000075/followers/51e83dd4fa46341808000a58" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "users":[ ..Array of User Objects.. ] }
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
				Element:tr
				Element:td
					user_id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					OK, List of Followers is returned, User has been added
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to view this Task or don't have the permission to edit followers
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found, This Task doesn't exist (or has been deleted)
				Element:tr
				Element:td
				Element:a
					409
				Element:a
				Element:td
				Element:ul
				Element:li
					Conflict, This user is already a follower
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					DELETE
				Element:span
					/api/tasks/{id}/followers/{user_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Remove a Follower of a task
					You need to have the permission to edit followers.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X DELETE "https://www.producteev.com/api/tasks/51e83db1fa46341808000075/followers/51e83dd4fa46341808000a58" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 204 No Content
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
				Element:tr
				Element:td
					user_id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					204
				Element:a
				Element:td
				Element:ul
				Element:li
					No Content, The user has been removed from the followers list
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to view/edit this Task, or you don't have the permission to edit followers
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found, This task doesn't exist (or has been deleted), The User has not been found
				Element:tr
				Element:td
				Element:a
					409
				Element:a
				Element:td
				Element:ul
				Element:li
					Conflict, The User is not a follower
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					PUT
				Element:span
					/api/tasks/{id}/labels/{label_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Add a label to a task
					Add a label to a task. The full list of labels for this task is returned.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT "https://www.producteev.com/api/tasks/51e83db1fa46341808000075/labels/51e83dd6fa46341808000399" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "labels":[ ..Array of Labels Objects.. ] }
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
				Element:tr
				Element:td
					label_id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					OK, List of Labels is returned, Label has been added
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to view this Task or don't have the permission to edit Labels
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found, This Task doesn't exist (or has been deleted)
				Element:tr
				Element:td
				Element:a
					409
				Element:a
				Element:td
				Element:ul
				Element:li
					Conflict, This label is already set for this task
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					DELETE
				Element:span
					/api/tasks/{id}/labels/{label_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Remove a Label of a task
					You need to have the permission to edit labels.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X DELETE "https://www.producteev.com/api/tasks/51e83db1fa46341808000075/labels/51e83dd6fa46341808000399" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 204 No Content
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
				Element:tr
				Element:td
					label_id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					204
				Element:a
				Element:td
				Element:ul
				Element:li
					No Content, The label has been removed
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to view/edit this Task, or you don't have the permission to edit labels
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found, This task doesn't exist (or has been deleted), The label has not been found
				Element:tr
				Element:td
				Element:a
					409
				Element:a
				Element:td
				Element:ul
				Element:li
					Conflict, The label is not attached to the task
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					GET
				Element:span
					/api/tasks/{id}/notes
			Node:
			(type) h1
			(layer)1
				Element:h1
					Retrieve the Task's Notes
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/tasks/51e83db1fa46341808000075/notes" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "notes":[ ..Array of Note Objects.. ] }
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					OK, List of Notes is returned
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to view this Task
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found, This task doesn't exist (or has been deleted)
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					PUT
				Element:span
					/api/tasks/{id}/responsibles/{user_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Add a user as a Responsible of the task
					Add a user as a Responsible. The full list of responsibles is returned.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT "https://www.producteev.com/api/tasks/51e83db1fa46341808000075/responsibles/51e83dd4fa46341808000a58" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "users":[ ..Array of User Objects.. ] }
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
				Element:tr
				Element:td
					user_id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					OK, List of Responsibles is returned, User has been added
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to view this Task or don't have the permission to edit responsibles
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found, This Task doesn't exist (or has been deleted)
				Element:tr
				Element:td
				Element:a
					409
				Element:a
				Element:td
				Element:ul
				Element:li
					Conflict, This user is already a responsible
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					DELETE
				Element:span
					/api/tasks/{id}/responsibles/{user_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Remove a Responsible of a task
					You cannot remove a responsible if it's the only responsible of the task. You need to have the permission to edit responsibles.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X DELETE "https://www.producteev.com/api/tasks/51e83db1fa46341808000075/responsibles/51e83dd4fa46341808000a58" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 204 No Content
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
				Element:tr
				Element:td
					user_id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					204
				Element:a
				Element:td
				Element:ul
				Element:li
					No Content, The user has been removed from the responsible list
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to view/edit this Task, or you don't have the permission to edit responsible
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found, This task doesn't exist (or has been deleted), The User has not been found
				Element:tr
				Element:td
				Element:a
					409
				Element:a
				Element:td
				Element:ul
				Element:li
					Conflict, The User is not a responsible
				Element:li
				Element:ul
				Element:li
				Element:ul
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					POST
				Element:span
					/api/tasks/{id}/subtasks
			Node:
			(type) h1
			(layer)1
				Element:h1
					Create a new subtask in a task
					Subtasks are a collection embedded when you retrieve a Task Object. Check the task permissions to determine if you can add subtask.
			Node:
			(type) c
			(layer)1
				Element:strong
					Attributes of a Subtask:
			Node:
			(type) c
			(layer)1
				Element:table
					To create a Subtask, you need to POST a JSON subtask object containing the "title" and "status", when creating a subtask its position will be automatically saved and returned.
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					title
				Element:td
					Title of the subtask
				Element:tr
				Element:td
					status
				Element:td
					Integer (1 or 0, 1 is active, 0 is done)
				Element:tr
				Element:td
					position
				Element:td
					Integer, We display the higher position (last subtask) as the first element of the list
				Element:tr
				Element:td
					creator
				Element:td
					A full User object who created the Subtask
			Node:
			(type) c
			(layer)1
				Element:pre
					{ "subtask":{ "title":"Review the copy", "status":1 } }
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X POST --data '{"subtask":{"title":"Review the copy","status":1}}' "https://www.producteev.com/api/tasks/51faa109fa4634be0b000002/subtasks" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 201 Created { "subtask":{ "id":"520138ccfa4634be08000000", "created_at":"2013-08-06T17:56:28+0000", "updated_at":"2013-08-06T17:56:28+0000", "title":"Review the copy", "position":1, "creator":User Object } }
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					201
				Element:a
				Element:td
				Element:ul
				Element:li
					Created, Subtask is created
				Element:tr
				Element:td
				Element:a
					400
				Element:a
				Element:td
				Element:ul
				Element:li
					Bad Request, the JSON is not valid or something is missing
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to create Subtask on this task
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found, The task doesn't exist (or has been deleted)
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					PUT
				Element:span
					/api/tasks/{id}/subtasks/{id_subtask}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Update a subtask
					Updating a subtask allows you to change its title, status and position. You can send only the field you want to update, or the full object, we will update only the field that are differents from the server. If you change the position of a subtask, all others subtasks will be automatically re-ordered in the backend.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT --data '{"subtask":{"status":0}}' "https://www.producteev.com/api/tasks/51faa109fa4634be0b000002/subtasks/520138ccfa4634be08000000" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "subtask":{ "id": "520138ccfa4634be08000000", "created_at": "2013-08-06T17:56:28+0000", "updated_at": "2013-08-06T18:11:24+0000", "title": "Review the copy", "position": 0, "creator": {User Objec}t } }
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
				Element:tr
				Element:td
					id_subtask
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					Success, subtask is updated
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to update this task or subtask (Check task.permissions)
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found, This subtask (or the task) doesn't exist (or has been deleted)
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					DELETE
				Element:span
					/api/tasks/{id}/subtasks/{id_subtask}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Delete a subtask
					Delete a Subtask. Check that you have the permissions on the task object.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X DELETE "https://www.producteev.com/api/tasks/51faa109fa4634be0b000002/subtasks/520138ccfa4634be08000000" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 204 No Content
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
				Element:tr
				Element:td
					id_subtask
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					204
				Element:a
				Element:td
				Element:ul
				Element:li
					No Content, subtask is now deleted
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to update this task or delete the subtask (Check task.permissions)
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found, This subtask (or the task) doesn't exist (or has been deleted)
				Element:a
				Element:li
				Element:ul
				Element:li
				Element:ul
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					GET
				Element:span
					/api/themes
			Node:
			(type) h1
			(layer)1
				Element:h1
					Retrieve the list of themes for user
					This call is paginated (see Filters Section). Like every paginated call in the producteev API you also have a total_hits number.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/themes" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "themes":[ ..Array of Theme Objects.. ], "total_hits": 5 }
			Node:
			(type) c
			(layer)1
				Element:h4
					Filters
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					page
				Element:td
				Element:tr
				Element:td
					per_page
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					OK, List of themes is returned
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to view this theme
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					POST
				Element:span
					/api/themes
			Node:
			(type) h1
			(layer)1
				Element:h1
					Create a new theme for user
					To create a Theme, you need to POST a JSON theme object containing the "title", "logo", "font_color", "background_color" for creation only.
			Node:
			(type) c
			(layer)1
				Element:pre
					{ "theme":{ "title": "iOS", "logo": "???" "font_color": "#e8cdde", "background_color": "#9f3879", } }
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X POST --data '{"theme":{"title":"iOS", "font_color":"#e8cdde", "background_color":"#9f3879" }}' "https://www.producteev.com/api/themes" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 201 Created { "theme":{ "id": "51f835b8fa46343805000000", "created_at": "2013-07-30T21:52:55+0000", "updated_at": "2013-07-30T21:52:55+0000", "title": "iOS", "logo_path": "https://di0skkm50b972.cloudfront.net/logos/95bfheuo45454fewd5f7e3ea73b39ce29a6d021c8/", "font_color": "#e8cdde", "background_color": "#9f3879", "creator": {User Object} } }
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					201
				Element:a
				Element:td
				Element:ul
				Element:li
					Created, Theme is created
				Element:tr
				Element:td
				Element:a
					400
				Element:a
				Element:td
				Element:ul
				Element:li
					Bad Request, the JSON is not valid or something is missing
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					GET
				Element:span
					/api/themes/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get the Theme with the specified id
					This method returns a Theme Object.
			Node:
			(type) c
			(layer)1
				Element:strong
					Attributes:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					title
				Element:td
					Title of the theme
				Element:tr
				Element:td
					logo_path
				Element:td
					Root URL of Theme Logo. To actually access the logo images you need to append logo.png
				Element:tr
				Element:td
					font_color
				Element:td
					Font Color
				Element:tr
				Element:td
					background_color
				Element:td
					Background Color
				Element:tr
				Element:td
					creator
				Element:td
					A full User object who created the Theme
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/themes/51e83dd6fa46341808000399" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "theme":{ "id": "51e83dd6fa46341808000399", "created_at": "2013-07-23T23:24:38+0000", "updated_at": "2013-07-23T23:24:38+0000", "title": "Engineering", "logo_path": "https://di0skkm50b972.cloudfront.net/logos/95bfheuo45454fewd5f7e3ea73b39ce29a6d021c8/", "font_color": "#e8cdde", "background_color": "#9f3879", "creator": {User Object} } }
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					Success, Theme is returned
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to see this theme
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found, This theme doesn't exist (or has been deleted)
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					PUT
				Element:span
					/api/themes/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Update a theme
					Updating a theme allows you to change its title and colors. You can send only the field you wanna update, or the full object, we will update only the field that are differents from the server.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT --data '{"theme":{"title":"Marketing"}}' "https://www.producteev.com/api/themes/51e83dd6fa46341808000399" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "theme":{ "id": "51e83dd6fa46341808000399", "created_at": "2013-07-23T23:24:38+0000", "updated_at": "2013-07-30T20:59:13+0000", "title": "Marketing", "logo": null,
				Element:small
					(if you want to delete the logo)
					"font_color": "#e8cdde", "background_color": "#9f3879", "creator": {User Object} } }
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					Success, Theme is updated
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to update this theme
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found, This theme doesn't exist (or has been deleted)
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					DELETE
				Element:span
					/api/themes/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Delete a theme
					Delete a Theme.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X DELETE "https://www.producteev.com/api/themes/51e83dd6fa46341808000399" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 204 No Content
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					204
				Element:a
				Element:td
				Element:ul
				Element:li
					No Content, Theme is now deleted
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to delete this theme
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found, This theme doesn't exist (or has been deleted)
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					POST
				Element:span
					/api/themes/{id}/logo
			Node:
			(type) h1
			(layer)1
				Element:h1
					Upload a new logo
					Upload a new logo for the current theme, works similar as /upload/file. You need to POST the image using the classic Multipart/form-data. The key for the uploaded data must be "logo".
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
					Here we use the curl@filename, that will set automatically the correct headers.
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -F "logo=@image.png" "https://www.producteev.com/api/themes/51e83dd6fa46341808000399/logo" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 100 Continue HTTP/1.1 200 OK { "theme":{ "id": "51e83dd6fa46341808000399", "created_at": "2013-07-30T21:52:55+0000", "updated_at": "2013-07-30T21:52:55+0000", "title": "iOS", "logo": "https://di0skkm50b972.cloudfront.net/logos/95bfheuo45454fewd5f7e3ea73b39ce29a6d021c8/", "font_color": "#e8cdde", "background_color": "#9f3879", "creator": {User Object} } }
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Filters
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					logo
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					Success, Logo is uploaded and Theme is returned
				Element:tr
				Element:td
				Element:a
					400
				Element:a
				Element:td
				Element:ul
				Element:li
					Bad Request, the file is probably invalid
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					GET
				Element:span
					/api/themes/{id}/networks
			Node:
			(type) h1
			(layer)1
				Element:h1
					Retrieve the list of the networks using a theme
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/theme/51e83db1fa4634180800006c/networks" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
					This call is paginated (see Filters Section). Like every paginated call in the producteev API you also have a total_hits number.
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "users":[ ..Array of User Objects.. ], "total_hits": 2 }
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Filters
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					page
				Element:td
				Element:tr
				Element:td
					per_page
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					OK, List of admins is returned
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You're not allowed to view this Network
				Element:tr
				Element:td
				Element:a
					404
				Element:a
				Element:td
				Element:ul
				Element:li
					Not Found, This network doesn't exist (or has been deleted)
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					POST
				Element:span
					/api/themes/{id}/remotelogo
			Node:
			(type) h1
			(layer)1
				Element:h1
					Set a remote image as the themes's logo
					Set a remote image as the theme's logo. This call works almost exactly the same way as the remote file upload (@see /api/upload). The current theme object is returned.
			Node:
			(type) c
			(layer)1
				Element:pre
					{ "remoteFile":{ "url":"https://www.producteev.com/somefolder/images/logo.png" } }
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X POST --data '{"remoteFile":{"url":"https://www.producteev.com/somefolder/images/logo.png"}}' "https://www.producteev.com/api/themes/51e83dd6fa46341808000399/remotelogo" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "theme":{ "id": "51e83dd6fa46341808000399", "created_at": "2013-07-30T21:52:55+0000", "updated_at": "2013-07-30T21:52:55+0000", "title": "iOS", "logo": "https://di0skkm50b972.cloudfront.net/logos/95bfheuo45454fewd5f7e3ea73b39ce29a6d021c8/", "font_color": "#e8cdde", "background_color": "#9f3879", "creator": {User Object} } }
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					Success, logo is uploaded and theme is returned
				Element:tr
				Element:td
				Element:a
					400
				Element:a
				Element:td
				Element:ul
				Element:li
					Bad Request, the remote file is probably invalid
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:a
				Element:li
				Element:ul
				Element:li
				Element:ul
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					GET
				Element:span
					/api/timezones
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get the supported timezones list
					Handling timezones is crucial to ensure a good experience accross different apps. You can specify the timezone of a deadline, and you can also allow your user to change their account timezone. This method will give you all the allowed and supported values for Timezone on Producteev. Each Timezone object contains a key, title and the offset with UTC time. The offset takes into account Daylight Savings. You don't need an access token to use this method.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/timezones"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "timezones":[ { "key": "Pacific/Honolulu", "title": "(GMT-10:00) Hawaii Time", "utc_offset": -36000 }, { "key": "America/Los_Angeles", "title": "(GMT-08:00) Pacific Time", "utc_offset": -25200 }, { "key": "US/Eastern", "title": "(GMT-05:00) Eastern Time - New York", "utc_offset": -14400 }, ... ] }
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					OK, List of Timezones returned
				Element:a
				Element:li
				Element:ul
				Element:li
				Element:ul
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					GET
				Element:span
					/api/users/me
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get information of the current logged in user
					This call retrieve the information of the user associated with access token.
			Node:
			(type) c
			(layer)1
				Element:strong
					Attributes:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					email
				Element:td
					string
				Element:tr
				Element:td
					firstname
				Element:td
					string
				Element:tr
				Element:td
					lastname
				Element:td
					string
				Element:tr
				Element:td
					timezone
				Element:td
					timezone (key) of the user (@see GET /api/timezones)
				Element:tr
				Element:td
					timezone_utc_offset
				Element:td
					Difference in seconds between the timezone and UTC
				Element:tr
				Element:td
					unread_notifications
				Element:td
					Number of unread notifications
				Element:tr
				Element:td
					job_title
				Element:td
					User job title (non returned if not set)
				Element:tr
				Element:td
					verified
				Element:td
					Boolean. Return if the user has a verified email address
				Element:tr
				Element:td
					lang
				Element:td
					lang (key) of the user (@see GET /api/languages)
				Element:tr
				Element:td
					last_announcement_read
				Element:td
					date
				Element:tr
				Element:td
					avatar_path
				Element:td
					Root URL of User Avatar. To actually access the avatar images you need to append small.png (24x24), medium.png (48x48) or large.png (246x246)
				Element:tr
				Element:td
					pending_invitations
				Element:td
					Number of Invitations the user needs to accept/decline
				Element:tr
				Element:td
					pending_admin_requests
				Element:td
					If the user is admin of a network, number of invitations he has to accept/decline
				Element:tr
				Element:td
					active
				Element:td
					Boolean. Is the user active in the network (false if the user has been remove from the current network or deleted its account)
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/users/me" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "user": { "id": "51e83d8bfa46341808000029", "created_at": "2013-07-18T19:10:03+0000", "updated_at": "2013-08-01T21:22:00+0000", "email": "jm@producteev.com", "active": true, "firstname": "Jerome", "lastname": "Miglino", "timezone": "America/Los_Angeles", "timezone_utc_offset": -25200, "unread_notifications": 0, "job_title":"Software Engineer" "verified": false, "lang": "en_US", "last_annoucement_read_date": "2013-08-01T21:22:00+0000", "avatar_path": "https://di0skkm50b972.cloudfront.net/avatars/95bfheuo45454fewd5f7e3ea73b39ce29a6d021c8/", "pending_invitations": 0, "pending_admin_requests": 0 } }
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					Success, User is returned
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					PUT
				Element:span
					/api/users/me
			Node:
			(type) h1
			(layer)1
				Element:h1
					Update the current logged in user
					Update the information of the current logged in user Data that you can update are :
			Node:
			(type) c
			(layer)1
				Element:pre
					{ "user": { "firstname": string, "lastname": string, "timezone": string,
				Element:small
					(@see /api/timezones for all the available timezones)
					"avatar": null,
				Element:small
					(if you want to delete the user avatar)
					"job_title": string, "last_announcement_read": date, "lang": string } }
			Node:
			(type) c
			(layer)1
				Element:strong
					Note
					: If you remove the avatar, on success a new avatar_path will be returned, this path is for the default avatar.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT --data '{"user": {"firstname": "Jerome", "lastname": "M", "avatar": null, "job_title": "iOS Engineer"}}' "https://www.producteev.com/api/users/me" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "user": { "id": "51e83d8bfa46341808000029", "created_at": "2013-07-18T19:10:03+0000", "updated_at": "2013-08-02T17:23:59+0000", "email": "jm@producteev.com", "firstname": "Jerome", "lastname": "M", "timezone": "America/Los_Angeles", "timezone_utc_offset": -25200, "unread_notifications": 0, "job_title":"iOS Engineer" "verified": false, "lang" : "en_US", "last_annoucement_read_date": "2013-08-01T21:22:00+0000", "avatar_path": "https://di0skkm50b972.cloudfront.net/avatars/48g4g4we64gew8484631184866153/", "pending_invitations": 0, "pending_admin_requests": 0 } }
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					Success, User is returned with updated information
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					POST
				Element:span
					/api/users/me/avatar
			Node:
			(type) h1
			(layer)1
				Element:h1
					Upload a new avatar
					Upload a new avatar for the current user, works similar as /upload/file. You need to POST the image using the classic Multipart/form-data. The key for the uploaded data must be "avatar".
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
					Here we use the curl@filename, that will set automatically the correct headers.
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -F "file=@image.png" "https://www.producteev.com/api/users/me/avatar" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 100 Continue HTTP/1.1 200 OK { "user": { "id": "51e83d8bfa46341808000029", "created_at": "2013-07-18T19:10:03+0000", "updated_at": "2013-08-02T17:23:59+0000", "email": "jm@producteev.com", "firstname": "Jerome", "lastname": "M", "timezone": "America/Los_Angeles", "timezone_utc_offset": -25200, "unread_notifications": 0, "job_title":"iOS Engineer" "verified": false, "avatar_path": "https://di0skkm50b972.cloudfront.net/avatars/48g4g4we64gew8484631184866153/", "pending_invitations": 0, "pending_admin_requests": 0 } }
			Node:
			(type) c
			(layer)1
				Element:h4
					Filters
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					avatar
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					Success, Avatar is uploaded and User is returned
				Element:tr
				Element:td
				Element:a
					400
				Element:a
				Element:td
				Element:ul
				Element:li
					Bad Request, the file is probably invalid
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					GET
				Element:span
					/api/users/me/default_project
			Node:
			(type) h1
			(layer)1
				Element:h1
					Retrieve the user's default project
					Retrieve the user default Project. (On Producteev, this project is identified with a Home Icon.) @see /api/projects for more information on the Project Object.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/users/me/default_project" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "project":{ "id":"51e83dd4fa4634180800030f", "created_at":"2013-07-18T19:11:16+0000", "updated_at":"2013-07-31T00:11:25+0000", "title":"My First Project", "creator": {User Object}, "network": {Network Object}, "admins":[ ..Array of User Object.. ], "locked":false, "restricted":false } }
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					Success, Default Project is returned
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					PUT
				Element:span
					/api/users/me/default_project/{project_id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Change the user default project
					You don't need to send data for this call. Just call the endpoint with the new project_id.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X PUT "https://www.producteev.com/api/users/me/default_project/52e83dd4fa46341808000120" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "project":{ "id":"52e83dd4fa46341808000120", "created_at":"2013-07-30T19:10:45+0000", "updated_at":"2013-07-30T19:10:45+0000", "title":"Another Project", "creator": {User Object}, "network": {Network Object}, "admins":[ ..Array of User Object.. ], "locked":false, "restricted":true } }
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					project_id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					204
				Element:a
				Element:td
				Element:ul
				Element:li
					Returned when successful
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:tr
				Element:td
				Element:a
					403
				Element:a
				Element:td
				Element:ul
				Element:li
					Access Denied, You don't have access to this project
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					POST
				Element:span
					/api/users/me/remoteavatar
			Node:
			(type) h1
			(layer)1
				Element:h1
					Set a remote image as the user's avatar
					Set a remote image as the user's avatar. This call works almost exactly the same way as the remote file upload (@see /api/upload). The current user object is returned.
			Node:
			(type) c
			(layer)1
				Element:pre
					{ "remoteFile":{ "url":"https://www.producteev.com/somefolder/images/avatar.png" } }
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v -X POST --data '{"remoteFile":{"url":"https://www.producteev.com/somefolder/images/avatar.png"}}' "https://www.producteev.com/api/users/me/remoteavatar" --header "Content-Type:application/json" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "user": { "id": "51e83d8bfa46341808000029", "created_at": "2013-07-18T19:10:03+0000", "updated_at": "2013-08-01T21:22:00+0000", "email": "jm@producteev.com", "firstname": "Jerome", "lastname": "Miglino", "timezone": "America/Los_Angeles", "timezone_utc_offset": -25200, "unread_notifications": 0, "job_title":"Software Engineer" "verified": false, "avatar_path": "https://di0skkm50b972.cloudfront.net/avatars/95bfheuo45454fewd5f7e3ea73b39ce29a6d021c8/", "pending_invitations": 0, "pending_admin_requests": 0 } }
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					Success, Avatar is uploaded and User is returned
				Element:tr
				Element:td
				Element:a
					400
				Element:a
				Element:td
				Element:ul
				Element:li
					Bad Request, the remote file is probably invalid
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					GET
				Element:span
					/api/users/search
			Node:
			(type) h1
			(layer)1
				Element:h1
					Search users across all your networks by email address
					Search users across all your networks by email address. This call is paginated (@see Filters Section). Like every paginated call in the producteev API you also have a total_hits number.
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/users/search?email=jr@producteev.com" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "users": [ ..List of Users objects.. ], "total_hits":1 } }
			Node:
			(type) c
			(layer)1
				Element:h4
					Filters
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					email
				Element:td
				Element:tr
				Element:td
					page
				Element:td
				Element:tr
				Element:td
					per_page
				Element:td
				Element:tr
				Element:td
					exclude_loggedin_user
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					204
				Element:a
				Element:td
				Element:ul
				Element:li
					Success, Users list (can be empty)
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Unauthorized, Check the access token
				Element:a
				Element:li
				Element:h4
					Request URL
				Element:pre
				Element:h4
					Response Headers
				Element:small
					[
				Element:a
					Expand
					]
				Element:pre
				Element:h4
					Response Body
				Element:small
					[
				Element:a
					Raw
					]
				Element:pre
				Element:h3
				Element:span
					GET
				Element:span
					/api/users/{id}
			Node:
			(type) h1
			(layer)1
				Element:h1
					Get the user by its id
					Return detailed information about a specific user.
			Node:
			(type) c
			(layer)1
				Element:strong
					Attributes:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tr
				Element:td
					email
				Element:td
					string
				Element:tr
				Element:td
					firstname
				Element:td
					string
				Element:tr
				Element:td
					lastname
				Element:td
					string
				Element:tr
				Element:td
					timezone
				Element:td
					timezone (key) of the user (@see GET /api/timezones)
				Element:tr
				Element:td
					timezone_utc_offset
				Element:td
					Difference in seconds between the timezone and UTC
				Element:tr
				Element:td
					unread_notifications
				Element:td
					Number of unread notifications
				Element:tr
				Element:td
					job_title
				Element:td
					User job title (non returned if not set)
				Element:tr
				Element:td
					verified
				Element:td
					Boolean. Return if the user has a verified email address
				Element:tr
				Element:td
					avatar_path
				Element:td
					Root URL of User Avatar. To actually access the avatar images you need to append small.png (24x24), medium.png (48x48) or large.png (246x246)
				Element:tr
				Element:td
					pending_invitations
				Element:td
					Number of Invitations the user needs to accept/decline
				Element:tr
				Element:td
					pending_admin_requests
				Element:td
					If the user is admin of a network, number of invitations he has to accept/decline
			Node:
			(type) c
			(layer)1
				Element:h2
					Curl Example
			Node:
			(type) c
			(layer)1
				Element:code
					curl -v "https://www.producteev.com/api/users/51e83d8bfa46341808000029" --header "Authorization:Bearer 5Fm-kYL08PpPU3VkYzTbCNO3-Ldzk8-COtjp3_7Xmto"
			Node:
			(type) c
			(layer)1
				Element:h3
					Response
			Node:
			(type) c
			(layer)1
				Element:pre
					HTTP/1.1 200 OK { "user": { "id": "51e83d8bfa46341808000029", "created_at": "2013-07-18T19:10:03+0000", "updated_at": "2013-08-01T21:22:00+0000", "email": "jm@producteev.com", "firstname": "Jerome", "lastname": "Miglino", "timezone": "America/Los_Angeles", "timezone_utc_offset": -25200, "unread_notifications": 0, "job_title":"Software Engineer" "verified": false, "avatar_path": "https://di0skkm50b972.cloudfront.net/avatars/95bfheuo45454fewd5f7e3ea73b39ce29a6d021c8/", "pending_invitations": 0, "pending_admin_requests": 0 } }
			Node:
			(type) c
			(layer)1
				Element:h4
					Requirements
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Value
				Element:tbody
				Element:tr
				Element:td
					id
				Element:td
			Node:
			(type) c
			(layer)1
				Element:h4
					Try it yourself
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					HTTP Headers
				Element:tbody
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:tr
				Element:td
				Element:td
				Element:td
				Element:i
			Node:
			(type) c
			(layer)1
				Element:h4
					Status Codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Value
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:a
					200
				Element:a
				Element:td
				Element:ul
				Element:li
					Returned when successful
				Element:tr
				Element:td
				Element:a
					401
				Element:a
				Element:td
				Element:ul
				Element:li
					Returned when the user is not identified (or wrong OAuth access_token)
				Element:noscript
