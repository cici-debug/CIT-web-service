Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Sendible API
			Node:
			(type) c
			(layer)1
				Element:label
					Version
					This version is in
			Node:
			(type) c
			(layer)1
				Element:strong
					Beta
					, there may be issues we're still working out.
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:aside
										Element:h3
											Documentation
										Element:h3
											API
									Node:
									(type) c
									(layer)3
										Element:article
			Node:
			(type) h1
			(layer)1
				Element:h1
					Tasks
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:hgroup
							Element:h2
								Get Tasks
							Element:a
							Element:i
								Open in API Explorer
						Node:
						(type) c
						(layer)2
							Element:span
								GET
						Node:
						(type) c
						(layer)2
							Element:code
								/v2/tasks.json
						Node:
						(type) c
						(layer)2
							Element:p
								Get a lists of tasks. Tasks are messages that have been assigned to you or that you have assigned to others for completion.
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Example Request
												Node:
												(type) c
												(layer)4
													Element:span
														Format:
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														curl
													Element:li
													Element:a
														Ruby
													Element:li
													Element:a
														Node
													Element:li
													Element:a
														Python
													Element:li
													Element:a
														PHP
													Element:li
													Element:a
														Go
												Node:
												(type) c
												(layer)4
													Element:pre
														curl --request GET \ --url 'https://api.sendible.com/api/v2/tasks.json?application_id=4b634537cc392cca820b61dab08&assigned_to=others&page=1&per_page=10&filter=Urgent%2Bmessage%2521' \ --header 'accept: application/json' \ --header 'authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l'
												Node:
												(type) c
												(layer)4
													Element:pre
														require 'uri' require 'net/http' url = URI("https://api.sendible.com/api/v2/tasks.json?application_id=4b634537cc392cca820b61dab08&assigned_to=others&page=1&per_page=10&filter=Urgent%2Bmessage%2521") http = Net::HTTP.new(url.host, url.port) http.use_ssl = true http.verify_mode = OpenSSL::SSL::VERIFY_NONE request = Net::HTTP::Get.new(url) request["accept"] = 'application/json' request["authorization"] = 'Basic QWxhZGRpbjpPcGVuU2VzYW1l' response = http.request(request) puts response.read_body
												Node:
												(type) c
												(layer)4
													Element:pre
														var http = require("https"); var options = { "method": "GET", "hostname": "api.sendible.com", "port": null, "path": "/api/v2/tasks.json?application_id=4b634537cc392cca820b61dab08&assigned_to=others&page=1&per_page=10&filter=Urgent%2Bmessage%2521", "headers": { "accept": "application/json", "authorization": "Basic QWxhZGRpbjpPcGVuU2VzYW1l" } }; var req = http.request(options, function (res) { var chunks = []; res.on("data", function (chunk) { chunks.push(chunk); }); res.on("end", function () { var body = Buffer.concat(chunks); console.log(body.toString()); }); }); req.end();
												Node:
												(type) c
												(layer)4
													Element:pre
														import http.client conn = http.client.HTTPSConnection("api.sendible.com") headers = { 'accept': "application/json", 'authorization': "Basic QWxhZGRpbjpPcGVuU2VzYW1l" } conn.request("GET", "/api/v2/tasks.json?application_id=4b634537cc392cca820b61dab08&assigned_to=others&page=1&per_page=10&filter=Urgent%2Bmessage%2521", headers=headers) res = conn.getresponse() data = res.read() print(data.decode("utf-8"))
												Node:
												(type) c
												(layer)4
													Element:pre
														<?php $curl = curl_init(); curl_setopt_array($curl, array( CURLOPT_URL => "https://api.sendible.com/api/v2/tasks.json?application_id=4b634537cc392cca820b61dab08&assigned_to=others&page=1&per_page=10&filter=Urgent%2Bmessage%2521", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => "", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => "GET", CURLOPT_HTTPHEADER => array( "accept: application/json", "authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l" ), )); $response = curl_exec($curl); $err = curl_error($curl); curl_close($curl); if ($err) { echo "cURL Error #:" . $err; } else { echo $response; }
												Node:
												(type) c
												(layer)4
													Element:pre
														package main import ( "fmt" "net/http" "io/ioutil" ) func main() { url := "https://api.sendible.com/api/v2/tasks.json?application_id=4b634537cc392cca820b61dab08&assigned_to=others&page=1&per_page=10&filter=Urgent%2Bmessage%2521" req, _ := http.NewRequest("GET", url, nil) req.Header.Add("accept", "application/json") req.Header.Add("authorization", "Basic QWxhZGRpbjpPcGVuU2VzYW1l") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := ioutil.ReadAll(res.Body) fmt.Println(res) fmt.Println(string(body)) }
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Query Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:th
														Name
													Element:th
														Type
													Element:th
														Required
													Element:th
														Description
													Element:th
														Example
													Element:tbody
													Element:tr
													Element:td
													Element:code
														application_id
													Element:td
														String
													Element:td
														Required
													Element:td
													Element:p
														Your developer application id. This was provided to you via email.
													Element:td
													Element:code
														4b634537cc392cca820b61dab08
													Element:tr
													Element:td
													Element:code
														assigned_to
													Element:td
														String
													Element:td
														Required
													Element:td
													Element:p
														The type of results to return. Possible values are
													Element:em
														me
														,
													Element:em
														other
														,
													Element:em
														completed
													Element:td
													Element:code
														others
													Element:tr
													Element:td
													Element:code
														page
													Element:td
														Number
													Element:td
														Optional
													Element:td
													Element:p
														The page number to retrieve.
													Element:td
													Element:code
														1
													Element:tr
													Element:td
													Element:code
														per_page
													Element:td
														Number
													Element:td
														Optional
													Element:td
													Element:p
														The number of results to return per page.
													Element:td
													Element:code
														10
													Element:tr
													Element:td
													Element:code
														filter
													Element:td
														String
													Element:td
														Optional
													Element:td
													Element:p
														A search term to filter results by.
													Element:td
													Element:code
														Urgent+message%21
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Responses
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tbody
							Element:tr
							Element:td
							Element:code
								default
							Element:td
							Element:strong
								Default
							Element:p
								Unknown
							Element:td
							Element:em
								(Empty Response)
							Element:td
							Element:footer
							Element:h2
								Need Some Help?
							Element:ul
							Element:li
							Element:i
							Element:a
								@sendible
							Element:a
							Element:span
								Powered by
							Element:svg
							Element:span
								Gelato.io
