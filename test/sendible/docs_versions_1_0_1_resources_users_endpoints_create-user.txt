Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Sendible API
			Node:
			(type) c
			(layer)1
				Element:label
					Version
					This version is in
			Node:
			(type) c
			(layer)1
				Element:strong
					Beta
					, there may be issues we're still working out.
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:aside
										Element:h3
											Documentation
										Element:h3
											API
									Node:
									(type) c
									(layer)3
										Element:article
			Node:
			(type) h1
			(layer)1
				Element:h1
					Users
			Node:
			(type) c
			(layer)1
				Element:a
					< Back to Overview
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:hgroup
							Element:h2
								Create User
							Element:a
							Element:i
								Open in API Explorer
						Node:
						(type) c
						(layer)2
							Element:span
								POST
						Node:
						(type) c
						(layer)2
							Element:code
								/v2/user.json
						Node:
						(type) c
						(layer)2
							Element:p
								Create a new user within the company account.
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Example Request
												Node:
												(type) c
												(layer)4
													Element:span
														Format:
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														curl
													Element:li
													Element:a
														Ruby
													Element:li
													Element:a
														Node
													Element:li
													Element:a
														Python
													Element:li
													Element:a
														PHP
													Element:li
													Element:a
														Go
												Node:
												(type) c
												(layer)4
													Element:pre
														curl --request POST \ --url 'https://api.sendible.com/api/v2/user.json?application_id=4b634537cc392cca820b61dab08&fullname=Jane%2BDoe&email=jane%2540name.com&login=janeslogin&password=apassword&timezone=-160&managed_by_id=10001&approval_from_ids=10001&permission_profile_id=10001&manager_of=100011000210003' \ --header 'accept: application/json' \ --header 'authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l' \ --header 'content-type: multipart/form-data; boundary=---011000010111000001101001'
												Node:
												(type) c
												(layer)4
													Element:pre
														require 'uri' require 'net/http' url = URI("https://api.sendible.com/api/v2/user.json?application_id=4b634537cc392cca820b61dab08&fullname=Jane%2BDoe&email=jane%2540name.com&login=janeslogin&password=apassword&timezone=-160&managed_by_id=10001&approval_from_ids=10001&permission_profile_id=10001&manager_of=100011000210003") http = Net::HTTP.new(url.host, url.port) http.use_ssl = true http.verify_mode = OpenSSL::SSL::VERIFY_NONE request = Net::HTTP::Post.new(url) request["accept"] = 'application/json' request["authorization"] = 'Basic QWxhZGRpbjpPcGVuU2VzYW1l' request["content-type"] = 'multipart/form-data; boundary=---011000010111000001101001' response = http.request(request) puts response.read_body
												Node:
												(type) c
												(layer)4
													Element:pre
														var http = require("https"); var options = { "method": "POST", "hostname": "api.sendible.com", "port": null, "path": "/api/v2/user.json?application_id=4b634537cc392cca820b61dab08&fullname=Jane%2BDoe&email=jane%2540name.com&login=janeslogin&password=apassword&timezone=-160&managed_by_id=10001&approval_from_ids=10001&permission_profile_id=10001&manager_of=100011000210003", "headers": { "accept": "application/json", "authorization": "Basic QWxhZGRpbjpPcGVuU2VzYW1l", "content-type": "multipart/form-data; boundary=---011000010111000001101001" } }; var req = http.request(options, function (res) { var chunks = []; res.on("data", function (chunk) { chunks.push(chunk); }); res.on("end", function () { var body = Buffer.concat(chunks); console.log(body.toString()); }); }); req.end();
												Node:
												(type) c
												(layer)4
													Element:pre
														import http.client conn = http.client.HTTPSConnection("api.sendible.com") payload = "" headers = { 'accept': "application/json", 'authorization': "Basic QWxhZGRpbjpPcGVuU2VzYW1l", 'content-type': "multipart/form-data; boundary=---011000010111000001101001" } conn.request("POST", "/api/v2/user.json?application_id=4b634537cc392cca820b61dab08&fullname=Jane%2BDoe&email=jane%2540name.com&login=janeslogin&password=apassword&timezone=-160&managed_by_id=10001&approval_from_ids=10001&permission_profile_id=10001&manager_of=100011000210003", payload, headers) res = conn.getresponse() data = res.read() print(data.decode("utf-8"))
												Node:
												(type) c
												(layer)4
													Element:pre
														<?php $curl = curl_init(); curl_setopt_array($curl, array( CURLOPT_URL => "https://api.sendible.com/api/v2/user.json?application_id=4b634537cc392cca820b61dab08&fullname=Jane%2BDoe&email=jane%2540name.com&login=janeslogin&password=apassword&timezone=-160&managed_by_id=10001&approval_from_ids=10001&permission_profile_id=10001&manager_of=100011000210003", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => "", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => "POST", CURLOPT_POSTFIELDS => "", CURLOPT_HTTPHEADER => array( "accept: application/json", "authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l", "content-type: multipart/form-data; boundary=---011000010111000001101001" ), )); $response = curl_exec($curl); $err = curl_error($curl); curl_close($curl); if ($err) { echo "cURL Error #:" . $err; } else { echo $response; }
												Node:
												(type) c
												(layer)4
													Element:pre
														package main import ( "fmt" "net/http" "io/ioutil" ) func main() { url := "https://api.sendible.com/api/v2/user.json?application_id=4b634537cc392cca820b61dab08&fullname=Jane%2BDoe&email=jane%2540name.com&login=janeslogin&password=apassword&timezone=-160&managed_by_id=10001&approval_from_ids=10001&permission_profile_id=10001&manager_of=100011000210003" req, _ := http.NewRequest("POST", url, nil) req.Header.Add("accept", "application/json") req.Header.Add("authorization", "Basic QWxhZGRpbjpPcGVuU2VzYW1l") req.Header.Add("content-type", "multipart/form-data; boundary=---011000010111000001101001") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := ioutil.ReadAll(res.Body) fmt.Println(res) fmt.Println(string(body)) }
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Query Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:th
														Name
													Element:th
														Type
													Element:th
														Required
													Element:th
														Description
													Element:th
														Example
													Element:tbody
													Element:tr
													Element:td
													Element:code
														application_id
													Element:td
														String
													Element:td
														Required
													Element:td
													Element:p
														Your developer application id. This was provided to you via email.
													Element:td
													Element:code
														4b634537cc392cca820b61dab08
													Element:tr
													Element:td
													Element:code
														fullname
													Element:td
														String
													Element:td
														Required
													Element:td
													Element:p
														Fullname for the new user.
													Element:td
													Element:code
														Jane+Doe
													Element:tr
													Element:td
													Element:code
														email
													Element:td
														String
													Element:td
														Required
													Element:td
													Element:p
														Email address for the user.
													Element:td
													Element:code
														jane%40name.com
													Element:tr
													Element:td
													Element:code
														login
													Element:td
														String
													Element:td
														Required
													Element:td
													Element:p
														Username for user.
													Element:td
													Element:code
														janeslogin
													Element:tr
													Element:td
													Element:code
														password
													Element:td
														String
													Element:td
														Required
													Element:td
													Element:p
														Password for new user.
													Element:td
													Element:code
														apassword
													Element:tr
													Element:td
													Element:code
														timezone
													Element:td
														Integer
													Element:td
														Optional
													Element:td
													Element:p
														The user's timezone offset from GMT in minutes. By default,the admin user's timezone will be used. In Javascript, this is the value of getTimezoneOffset.
													Element:td
													Element:code
														-160
													Element:tr
													Element:td
													Element:code
														managed_by_id
													Element:td
														Number
													Element:td
														Optional
													Element:td
													Element:p
														The user ID of the user that manages this user. By default, the user will not be managed.
													Element:td
													Element:code
														10001
													Element:tr
													Element:td
													Element:code
														approval_from_ids
													Element:td
														Number
													Element:td
														Optional
													Element:td
													Element:p
														The ID of the user that needs to approve this user's content before it is published.
													Element:td
													Element:code
														10001
													Element:tr
													Element:td
													Element:code
														permission_profile_id
													Element:td
														Number
													Element:td
														Optional
													Element:td
													Element:p
														The ID of the permission profile to assign to this user.
													Element:td
													Element:code
														10001
													Element:tr
													Element:td
													Element:code
														manager_of
													Element:td
														String
													Element:td
														Optional
													Element:td
													Element:p
														A comma-separated list of user IDs that this user can manage.
													Element:td
													Element:code
														100011000210003
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Responses
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tbody
							Element:tr
							Element:td
							Element:code
								default
							Element:td
							Element:strong
								Default
							Element:p
								Unknown
							Element:td
							Element:em
								(Empty Response)
							Element:td
							Element:footer
							Element:h2
								Need Some Help?
							Element:ul
							Element:li
							Element:i
							Element:a
								@sendible
							Element:a
							Element:span
								Powered by
							Element:svg
							Element:span
								Gelato.io
