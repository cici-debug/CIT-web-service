Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Sendible API
			Node:
			(type) c
			(layer)1
				Element:label
					Version
					This version is in
			Node:
			(type) c
			(layer)1
				Element:strong
					Beta
					, there may be issues we're still working out.
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:aside
										Element:h3
											Documentation
										Element:h3
											API
									Node:
									(type) c
									(layer)3
										Element:article
			Node:
			(type) h1
			(layer)1
				Element:h1
					Reporting
			Node:
			(type) c
			(layer)1
				Element:a
					< Back to Overview
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:hgroup
							Element:h2
								Update Custom Report Cover Page
							Element:a
							Element:i
								Open in API Explorer
						Node:
						(type) c
						(layer)2
							Element:span
								PUT
						Node:
						(type) c
						(layer)2
							Element:code
								/v2/custom_report_cover_page.json
						Node:
						(type) c
						(layer)2
							Element:p
								Update the cover page for a custom report.
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Example Request
												Node:
												(type) c
												(layer)4
													Element:span
														Format:
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
														curl
													Element:li
													Element:a
														Ruby
													Element:li
													Element:a
														Node
													Element:li
													Element:a
														Python
													Element:li
													Element:a
														PHP
													Element:li
													Element:a
														Go
												Node:
												(type) c
												(layer)4
													Element:pre
														curl --request PUT \ --url 'https://api.sendible.com/api/v2/custom_report_cover_page.json?application_id=4b634537cc392cca820b61dab08&custom_report_id=10001&report_logo_url=http%253A%252F%252Fmysite.com%252Flogo.png&report_address=1%2BTree%2BLane&make_default=1&copy_to=100110021005' \ --header 'accept: application/json' \ --header 'authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l' \ --header 'content-type: multipart/form-data; boundary=---011000010111000001101001'
												Node:
												(type) c
												(layer)4
													Element:pre
														require 'uri' require 'net/http' url = URI("https://api.sendible.com/api/v2/custom_report_cover_page.json?application_id=4b634537cc392cca820b61dab08&custom_report_id=10001&report_logo_url=http%253A%252F%252Fmysite.com%252Flogo.png&report_address=1%2BTree%2BLane&make_default=1&copy_to=100110021005") http = Net::HTTP.new(url.host, url.port) http.use_ssl = true http.verify_mode = OpenSSL::SSL::VERIFY_NONE request = Net::HTTP::Put.new(url) request["accept"] = 'application/json' request["authorization"] = 'Basic QWxhZGRpbjpPcGVuU2VzYW1l' request["content-type"] = 'multipart/form-data; boundary=---011000010111000001101001' response = http.request(request) puts response.read_body
												Node:
												(type) c
												(layer)4
													Element:pre
														var http = require("https"); var options = { "method": "PUT", "hostname": "api.sendible.com", "port": null, "path": "/api/v2/custom_report_cover_page.json?application_id=4b634537cc392cca820b61dab08&custom_report_id=10001&report_logo_url=http%253A%252F%252Fmysite.com%252Flogo.png&report_address=1%2BTree%2BLane&make_default=1&copy_to=100110021005", "headers": { "accept": "application/json", "authorization": "Basic QWxhZGRpbjpPcGVuU2VzYW1l", "content-type": "multipart/form-data; boundary=---011000010111000001101001" } }; var req = http.request(options, function (res) { var chunks = []; res.on("data", function (chunk) { chunks.push(chunk); }); res.on("end", function () { var body = Buffer.concat(chunks); console.log(body.toString()); }); }); req.end();
												Node:
												(type) c
												(layer)4
													Element:pre
														import http.client conn = http.client.HTTPSConnection("api.sendible.com") payload = "" headers = { 'accept': "application/json", 'authorization': "Basic QWxhZGRpbjpPcGVuU2VzYW1l", 'content-type': "multipart/form-data; boundary=---011000010111000001101001" } conn.request("PUT", "/api/v2/custom_report_cover_page.json?application_id=4b634537cc392cca820b61dab08&custom_report_id=10001&report_logo_url=http%253A%252F%252Fmysite.com%252Flogo.png&report_address=1%2BTree%2BLane&make_default=1&copy_to=100110021005", payload, headers) res = conn.getresponse() data = res.read() print(data.decode("utf-8"))
												Node:
												(type) c
												(layer)4
													Element:pre
														<?php $curl = curl_init(); curl_setopt_array($curl, array( CURLOPT_URL => "https://api.sendible.com/api/v2/custom_report_cover_page.json?application_id=4b634537cc392cca820b61dab08&custom_report_id=10001&report_logo_url=http%253A%252F%252Fmysite.com%252Flogo.png&report_address=1%2BTree%2BLane&make_default=1&copy_to=100110021005", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => "", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => "PUT", CURLOPT_POSTFIELDS => "", CURLOPT_HTTPHEADER => array( "accept: application/json", "authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l", "content-type: multipart/form-data; boundary=---011000010111000001101001" ), )); $response = curl_exec($curl); $err = curl_error($curl); curl_close($curl); if ($err) { echo "cURL Error #:" . $err; } else { echo $response; }
												Node:
												(type) c
												(layer)4
													Element:pre
														package main import ( "fmt" "net/http" "io/ioutil" ) func main() { url := "https://api.sendible.com/api/v2/custom_report_cover_page.json?application_id=4b634537cc392cca820b61dab08&custom_report_id=10001&report_logo_url=http%253A%252F%252Fmysite.com%252Flogo.png&report_address=1%2BTree%2BLane&make_default=1&copy_to=100110021005" req, _ := http.NewRequest("PUT", url, nil) req.Header.Add("accept", "application/json") req.Header.Add("authorization", "Basic QWxhZGRpbjpPcGVuU2VzYW1l") req.Header.Add("content-type", "multipart/form-data; boundary=---011000010111000001101001") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := ioutil.ReadAll(res.Body) fmt.Println(res) fmt.Println(string(body)) }
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Query Parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:th
														Name
													Element:th
														Type
													Element:th
														Required
													Element:th
														Description
													Element:th
														Example
													Element:tbody
													Element:tr
													Element:td
													Element:code
														application_id
													Element:td
														String
													Element:td
														Required
													Element:td
													Element:p
														Your developer application id. This was provided to you via email.
													Element:td
													Element:code
														4b634537cc392cca820b61dab08
													Element:tr
													Element:td
													Element:code
														custom_report_id
													Element:td
														Number
													Element:td
														Required
													Element:td
													Element:p
														The ID of the report to update.
													Element:td
													Element:code
														10001
													Element:tr
													Element:td
													Element:code
														report_logo_url
													Element:td
														String
													Element:td
														Optional
													Element:td
													Element:p
														The URL of the image to be used as the report logo. You can use the [media] endpoint to upload your image and receive a URL.
													Element:td
													Element:code
														http%3A%2F%2Fmysite.com%2Flogo.png
													Element:tr
													Element:td
													Element:code
														report_address
													Element:td
														String
													Element:td
														Optional
													Element:td
													Element:p
														The the address.
													Element:td
													Element:code
														1+Tree+Lane
													Element:tr
													Element:td
													Element:code
														make_default
													Element:td
														Number
													Element:td
														Optional
													Element:td
													Element:p
														Use 1 to use this cover page as the default for all reports created in future, otherwise use 0.
													Element:td
													Element:code
														1
													Element:tr
													Element:td
													Element:code
														copy_to
													Element:td
														String
													Element:td
														Optional
													Element:td
													Element:p
														A comma separated list of custom_report_ids that this cover page will be copied to.
													Element:td
													Element:code
														100110021005
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Responses
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tbody
							Element:tr
							Element:td
							Element:code
								default
							Element:td
							Element:strong
								Default
							Element:p
								Unknown
							Element:td
							Element:em
								(Empty Response)
							Element:td
							Element:footer
							Element:h2
								Need Some Help?
							Element:ul
							Element:li
							Element:i
							Element:a
								@sendible
							Element:a
							Element:span
								Powered by
							Element:svg
							Element:span
								Gelato.io
