Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Sendible API
			Node:
			(type) c
			(layer)1
				Element:label
					Version
					This version is in
			Node:
			(type) c
			(layer)1
				Element:strong
					Beta
					, there may be issues we're still working out.
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:aside
										Element:h3
											Documentation
										Element:h3
											API
									Node:
									(type) c
									(layer)3
										Element:article
										Element:a
			Node:
			(type) h1
			(layer)1
				Element:h1
					Getting Started
			Node:
			(type) c
			(layer)1
				Element:h3
				Element:a
					Hello Developers
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					The Sendible API can be used to build non-automated, authentic, high-quality apps and services that:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Help individuals share their content on social networks and blogs.
				Element:li
					Help brands understand their social media effectiveness.
				Element:li
					Help publishers curate and discover content.
			Node:
			(type) c
			(layer)1
				Element:p
					To get started,
				Element:a
					register as a developer
					. Once you've signed up, you will receive an email containing the following:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Your Sendible login details
				Element:li
					Your Application ID
				Element:li
					Your API Key
			Node:
			(type) c
			(layer)1
				Element:p
					Then,
				Element:a
					dive into the documentation
					and start building!
				Element:article
				Element:a
			Node:
			(type) h1
			(layer)1
				Element:h1
					Authentication
			Node:
			(type) c
			(layer)1
				Element:p
					The Sendible API uses a custom protocol similar to OAuth 2.0 for simple, but effective authentication and authorization. Please note that all requests to the API must be made over SSL (https:// not http://).
			Node:
			(type) c
			(layer)1
				Element:h3
				Element:a
					Do you need to authenticate?
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					The Sendible API requires authentication for almost all requests. Authenticated requests require either an access_token or an api_key. These tokens are unique to a user and should be stored securely. Access tokens are short-lived and are set to expire.
			Node:
			(type) c
			(layer)1
				Element:h3
				Element:a
					Basic Authentication
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					We support Basic Authentication using your Sendible username and API key or password. You can also include these parameters in the querystring as follows:
				Element:em
					username=[username]&api_key=[api_key]
			Node:
			(type) c
			(layer)1
				Element:p
					If you are an existing Sendible customer or you're building an application for one of our users, you can locate the Sendible api_key within
				Element:em
					Settings > Preferences > System Settings > Access Keys
					.
			Node:
			(type) c
			(layer)1
				Element:p
					If you are not yet a user, you will receive your API key and application ID after registering as a developer.
			Node:
			(type) c
			(layer)1
				Element:h3
				Element:a
					Receiving an access_token
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					In order to receive an
				Element:strong
					access_token
					, you must do the following:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Direct the user to our authorization url.
				Element:li
					The server will redirect the user in one of 3 ways that you choose:
				Element:ul
				Element:li
				Element:strong
					Server-side flow (recommended):
					We include the access_token as part of the querystring and send it back to your server.
				Element:br
				Element:li
				Element:strong
					Client-side flow:
					We include the access_token as a fragment (#) in the URL. This method is less secure, but allows applications without any server component to receive an access_token.
				Element:li
				Element:strong
					oAuth2 (Implicit) Authentication:
					We include the access_token as a fragment (#) in the URL. We will include the access_token as part of the redirect URL once a user has authenticated.
			Node:
			(type) c
			(layer)1
				Element:h3
				Element:a
					Server-side (Explicit) Flow
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					Using the server-side flow is quite easy. Simply follow these steps:
			Node:
			(type) c
			(layer)1
															Node:
															(type) c
															(layer)5
																Element:h5
																Element:a
																	Step One: Direct your user to our authorization URL
																Element:span
															Node:
															(type) c
															(layer)5
																Element:p
																Element:a
																	https://api.sendible.com/api/v2/auth?application_id=APPLICATION_ID&redirect_uri=REDIRECT_URI&source=server
															Node:
															(type) c
															(layer)5
																Element:p
																	At this point, we present the user with a login screen to Sendible.
			Node:
			(type) c
			(layer)1
															Node:
															(type) c
															(layer)5
																Element:h5
																Element:a
																	Step Two: Receive the redirect from Sendible
																Element:span
															Node:
															(type) c
															(layer)5
																Element:p
																	Once a user logs in, we issue a redirect to your redirect_uri with the access_token parameter to use in step three. We will also pass you the username of the authenticated user.
			Node:
			(type) c
			(layer)1
															Node:
															(type) c
															(layer)5
																Element:h5
																Element:a
																	Step Three: Store the access_token
																Element:span
															Node:
															(type) c
															(layer)5
																Element:p
																	Your application will receive the access_token and username of the authenticated user as querystring parameters. These should be stored so that API requests can be made on behalf of the authenticated user.
															Node:
															(type) c
															(layer)5
																Element:h3
																Element:a
																	Client-side Authentication
																Element:span
															Node:
															(type) c
															(layer)5
																Element:p
																	If you are building an app that does not have a server component (a purely javascript app, for instance), we provide the Implicit Authentication Flow.:
			Node:
			(type) c
			(layer)1
															Node:
															(type) c
															(layer)5
																Element:h5
																Element:a
																	Step One: Direct your user to our authorization URL
																Element:span
															Node:
															(type) c
															(layer)5
																Element:p
																Element:a
																	https://api.sendible.com/api/v2/auth?application_id=APPLICATION_ID&redirect_uri=REDIRECT_URI&source=client
															Node:
															(type) c
															(layer)5
																Element:p
																	At this point, we present the user with a login screen to Sendible.
			Node:
			(type) c
			(layer)1
															Node:
															(type) c
															(layer)5
																Element:h5
																Element:a
																	Step Two: Receive the redirect from Sendible
																Element:span
															Node:
															(type) c
															(layer)5
																Element:p
																	Once a user logs in, we issue a redirect to your redirect_uri with the access_token and username in the url fragment. It will look like this: http://your-redirect-uri#ACCESS_TOKEN,USERNAME
															Node:
															(type) c
															(layer)5
																Element:p
																	We append the username of the authenticated user to the last section, separated with comma.
			Node:
			(type) c
			(layer)1
															Node:
															(type) c
															(layer)5
																Element:h5
																Element:a
																	Step Three: Store the access_token
																Element:span
															Node:
															(type) c
															(layer)5
																Element:p
																	Simply grab the access_token and username off the URL fragment and youâ€™re good to go.
															Node:
															(type) c
															(layer)5
																Element:h3
																Element:a
																	oAuth2 (Implicit) Authentication
																Element:span
			Node:
			(type) c
			(layer)1
															Node:
															(type) c
															(layer)5
																Element:h5
																Element:a
																	Step One: Direct your user to our authorization URL
																Element:span
															Node:
															(type) c
															(layer)5
																Element:p
																Element:a
																	https://api.sendible.com/login?client_id=APPLICATION_ID&redirect_uri=REDIRECT_URI&state=STATE
															Node:
															(type) c
															(layer)5
																Element:ul
																Element:li
																	APPLICATION_ID: Your Sendible application ID
																Element:li
																	REDIRECT_URI: The URI that Sendible will redirect the user back to.
																Element:li
																	STATE: The state is a random value that will be passed back to your REDIRECT_URI to confirm that the response came from the correct location.
															Node:
															(type) c
															(layer)5
																Element:p
																	At this point, we present the user with a login screen to Sendible.
			Node:
			(type) c
			(layer)1
															Node:
															(type) c
															(layer)5
																Element:h5
																Element:a
																	Step Two: Receive the redirect from Sendible
																Element:span
															Node:
															(type) c
															(layer)5
																Element:p
																	Once a user logs in, we issue a redirect to your redirect_uri with the access_token and state in the url fragment. It will look like this: http://your-redirect-uri#access_token=ACCESS_TOKEN&state=STATE&token_type=Bearer
			Node:
			(type) c
			(layer)1
															Node:
															(type) c
															(layer)5
																Element:h5
																Element:a
																	Step Three: Store the access_token
																Element:span
															Node:
															(type) c
															(layer)5
						Node:
						(type) c
						(layer)2
							Element:p
								Simply grab the access_token off the URL fragment and youâ€™re good to go.
							Element:footer
							Element:h2
								Need Some Help?
							Element:ul
							Element:li
							Element:i
							Element:a
								@sendible
							Element:a
							Element:span
								Powered by
							Element:svg
							Element:span
								Gelato.io
