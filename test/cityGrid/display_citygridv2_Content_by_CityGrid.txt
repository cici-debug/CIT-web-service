Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
				Element:a
				Element:img
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Blog
				Element:li
				Element:a
					Docs
				Element:li
				Element:a
					Forum
				Element:li
				Element:a
					Dashboard
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
				Element:span
				Element:span
					Tools
				Element:ul
				Element:li
				Element:a
				Element:span
					A
				Element:u
					t
					tachments (0)
				Element:li
				Element:a
				Element:span
					Page History
				Element:li
				Element:a
				Element:span
					Restrictions
				Element:ul
				Element:li
				Element:a
				Element:span
					Page Information
				Element:li
				Element:a
				Element:span
					Link to this Pageâ€¦
				Element:li
				Element:a
				Element:span
					View in Hierarchy
				Element:li
				Element:a
				Element:span
					View Source
				Element:li
				Element:a
				Element:span
					Export to PDF
				Element:li
				Element:a
				Element:span
					Export to Word
			Node:
			(type) c
			(layer)1
				Element:a
				Element:img
			Node:
			(type) c
			(layer)1
				Element:ol
				Element:li
				Element:span
				Element:a
					CityGrid V2
				Element:li
				Element:span
				Element:a
					CityGrid APIs
			Node:
			(type) h1
			(layer)1
				Element:h1
				Element:a
					Content by CityGrid
			Node:
			(type) c
			(layer)1
				Element:fieldset
			Node:
			(type) c
			(layer)1
				Element:a
					Skip to end of metadata
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
				Element:img
				Element:span
				Element:li
					Created by
				Element:span
					, last modified on
				Element:a
					Publisher
				Element:a
					Apr 01, 2014
			Node:
			(type) c
			(layer)1
				Element:a
					Go to start of metadata
			Node:
			(type) c
			(layer)1
				Element:fieldset
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Introduction
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								is an API suite providing local content for over 18 million businesses. As a CityGrid publisher, you can easily access this information from within your applications, giving your users the ability to easily find and learn about local places.
							Element:a
								Content by CityGrid
						Node:
						(type) c
						(layer)2
							Element:p
								The suite is comprised of three Content APIs:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
								The
							Element:a
								Places API
								provides functionality for information on local businesses, including search, detail, user content submission, and predictive text.
							Element:li
								The
							Element:a
								Offers API
								provides coupons and special offers from businesses based on geography and category.
							Element:li
								The
							Element:a
								Reviews API
								provides access to customer reviews for businesses selected by id or by geography or category.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Key Concepts
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Search and Detail
									Node:
									(type) c
									(layer)3
										Element:p
											Both the Places and Offers APIs provide
										Element:strong
											search
											and
										Element:strong
											detail
											endpoints. The search endpoint allows you to query based on information such as category and geographic location, returning one or more results each with a small amount of information suitable for creating a convenient search result display. Each result contains an ID that you can use in a detail query. When the ID is passed to the detail endpoint, detailed information about the place or offer is returned.
									Node:
									(type) c
									(layer)3
										Element:p
											Search and detail endpoints can be used together in several ways. For example, an application could show a map with icons at the locations of local coffee shops by using the
										Element:strong
											Places Search
											endpoint (which returns latitudes and longitudes). When an end user clicks an icon, a
										Element:strong
											Places Detail
											query can retrieve detailed information on the selected coffee shop. In addition, a user could search for offers within a given category (e.g., movies) and a given municipality (e.g., Los Angeles) by using the
										Element:strong
											Offers Search
											endpoint. When a user selects an offer, the application queries the
										Element:strong
											Offers Detail
											endpoint to display the details of that offer, including the expiration date and redemption code.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:span
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Place IDs
									Node:
									(type) c
									(layer)3
										Element:p
											In addition to using the Place IDs returned from Places Search, you can query the Places Detail API using the ID from one of the many sources of data aggregated by CityGrid. (This functionality is not yet supported in other APIs.) When querying by ID, supply the source of the ID in the
										Element:code
											id_type
											parameter. Place IDs from the following source are supported:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
										Element:tr
										Element:th
										Element:p
											Id Type
										Element:th
										Element:p
											Name
										Element:tr
										Element:td
										Element:p
											cg
										Element:td
										Element:p
											CityGrid Public Id
										Element:tr
										Element:td
										Element:p
											cs
										Element:td
										Element:p
											Citysearch
										Element:tr
										Element:td
										Element:p
											allm
										Element:td
										Element:p
											AllMenus
										Element:tr
										Element:td
										Element:p
											dforce
										Element:td
										Element:p
											Demandforce
										Element:tr
										Element:td
										Element:p
											fdata
										Element:td
										Element:p
											Factual
										Element:tr
										Element:td
										Element:p
											fsquare
										Element:td
										Element:p
											Foursquare
										Element:tr
										Element:td
										Element:p
											mobo
										Element:td
										Element:p
											GoMobo
										Element:tr
										Element:td
										Element:p
											grub
										Element:td
										Element:p
											GrubHub
										Element:tr
										Element:td
										Element:p
											iusa
										Element:td
										Element:p
											InfoUSA
										Element:tr
										Element:td
										Element:p
											spaf
										Element:td
										Element:p
											SpaFinder
										Element:tr
										Element:td
										Element:p
											ta
										Element:td
										Element:p
											TripAdvisor
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Tags
									Node:
									(type) c
									(layer)3
										Element:p
											CityGrid helps your users find local places by assigning to each place one or more
										Element:strong
											tags
											. Some tags describe a business (such as Restaurant, Bookstore, or Auto Repair) while others identify services or products offered by the business or even generic business attributes (such as Patio Dining, Open 24 hours, Valet Parking, or American Express). Tags are preferred to a rigid, hierarchical, category-only taxonomy for places; see
										Element:a
											Clay Shirky's article on Internet Ontolgoy
											for details.
									Node:
									(type) c
									(layer)3
										Element:p
											Tags provide several benefits to publishers:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Tags allow a level of indirection between keywords and places. By mapping certain search terms to tags, it is not necessary to store, in the search index, the same (possibly large) set keywords with every one of the thousands of places that might share a tag.
										Element:li
											Tags make it easier to define sections or themes: it is easier to define sections as collections of tags than as collections of places. (Common themes that you can define with tags include "Valentine's Day," "Thanksgiving", or "Weekend Getways.")
										Element:li
											Tags provide a way for users to refine or expand search results.
										Element:li
											Tags provide a simpler means to find related places. For example, one can define relationships between tags that can link cars to, say, car insurance.
									Node:
									(type) c
									(layer)3
										Element:p
											The taxonomy is subject to change at any time; new tags may be added or removed, and parent-child relationships may be adjusted. Tags are published both in
										Element:a
											list format
											and
										Element:a
											tree format
											, and are updated on a weekly basis. Please refer to the latest files at all times to ensure your applications work as expected.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Geographies
									Node:
									(type) c
									(layer)3
										Element:p
											Places are associated to one or more geographies so that users can find businesses in a specific location. Geographies are mapped to physical area and have different types:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Neighborhood (an area within a city)
										Element:li
											5 digits zip code
										Element:li
											City
										Element:li
											Market (a DMA)
									Node:
									(type) c
									(layer)3
										Element:p
											You can find a list of our neighborhoods, cities and markets in json format
										Element:a
											here
											.
									Node:
									(type) c
									(layer)3
										Element:p
											It contains the following fields:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
										Element:tr
										Element:th
											Name
										Element:th
											Type
										Element:th
											Description
										Element:tr
										Element:td
											type
										Element:td
											String
										Element:td
										Element:p
											{city, neighborhood, market}
										Element:tr
										Element:td
											city
										Element:td
											String
										Element:td
											The city associated to this geography. Markets don't have city associated to them
										Element:tr
										Element:td
											state
										Element:td
											String
										Element:td
											2 letters State code (e.g CA, NY, TX...)
										Element:tr
										Element:td
											lat
										Element:td
											Decimal
										Element:td
											Latitude of the center of the geography
										Element:tr
										Element:td
											lon
										Element:td
											Decimal
										Element:td
											Longitude of the center of the geography
										Element:tr
										Element:td
											name
										Element:td
											String
										Element:td
										Element:p
											The name of the geography
									Node:
									(type) c
									(layer)3
										Element:p
											Note that geographies can change over time, the file linked above is updated on a weekly basis.
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											No labels
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
							Element:a
								3 Child Pages
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
							Element:span
							Element:span
								Page:
							Element:a
								Places API
						Node:
						(type) c
						(layer)2
							Element:span
							Element:span
								Page:
							Element:a
								Offers API
						Node:
						(type) c
						(layer)2
							Element:span
							Element:span
								Page:
							Element:a
								Reviews API
