Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
				Element:a
				Element:img
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Blog
				Element:li
				Element:a
					Docs
				Element:li
				Element:a
					Forum
				Element:li
				Element:a
					Dashboard
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
				Element:span
				Element:span
					Tools
				Element:ul
				Element:li
				Element:a
				Element:span
					A
				Element:u
					t
					tachments (0)
				Element:li
				Element:a
				Element:span
					Page History
				Element:li
				Element:a
				Element:span
					Restrictions
				Element:ul
				Element:li
				Element:a
				Element:span
					Page Information
				Element:li
				Element:a
				Element:span
					Link to this Pageâ€¦
				Element:li
				Element:a
				Element:span
					View in Hierarchy
				Element:li
				Element:a
				Element:span
					View Source
				Element:li
				Element:a
				Element:span
					Export to PDF
				Element:li
				Element:a
				Element:span
					Export to Word
			Node:
			(type) c
			(layer)1
				Element:a
				Element:img
			Node:
			(type) c
			(layer)1
				Element:ol
				Element:li
				Element:span
				Element:a
					CityGrid V2
				Element:li
				Element:span
				Element:a
					CityGrid APIs
				Element:li
				Element:span
				Element:a
					Ads by CityGrid
			Node:
			(type) h1
			(layer)1
				Element:h1
				Element:a
					Budget API
			Node:
			(type) c
			(layer)1
				Element:fieldset
			Node:
			(type) c
			(layer)1
				Element:a
					Skip to end of metadata
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
				Element:img
				Element:span
				Element:li
					Created by
				Element:span
					, last modified on
				Element:a
					Publisher
				Element:a
					Apr 13, 2015
			Node:
			(type) c
			(layer)1
				Element:a
					Go to start of metadata
			Node:
			(type) c
			(layer)1
				Element:fieldset
			Node:
			(type) c
			(layer)1
				Element:p
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Introduction
						Node:
						(type) c
						(layer)2
							Element:p
								The CityGrid Budget API allows publishers to discover the advertisers with budget available to them in the network and check the available remaining budget of a particular advertiser. Publishers who wish to check budgets must use this API so their quality score is unaffected by too many queries without subsequent clicks or user actions.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Contents
									Node:
									(type) c
									(layer)3
										Element:p
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Introduction
										Element:ul
										Element:li
										Element:a
											Contents
										Element:li
										Element:a
											Discovering Opportunities
										Element:ul
										Element:li
										Element:a
											HTTP Endpoint
										Element:li
										Element:a
											Request Parameter
										Element:li
										Element:a
											Response
										Element:li
										Element:a
											Header Values
										Element:li
										Element:a
											XML Output
										Element:li
										Element:a
											XML Output with parameter includeBudgetId
										Element:li
										Element:a
											Connecting to the streaming Discovery API
										Element:li
										Element:a
											Connecting
										Element:li
										Element:a
											Disconnecting
										Element:li
										Element:a
											Rate limits
										Element:li
										Element:a
											Checking Budget Available
										Element:ul
										Element:li
										Element:a
											Obtaining Budget Available by Named Geographic Region
										Element:ul
										Element:li
										Element:a
											HTTPS Endpoint
										Element:li
										Element:a
											Request Parameter
										Element:li
										Element:a
											Obtaining Budget Available by Latitude and Longitude
										Element:ul
										Element:li
										Element:a
											HTTPS Endpoint
										Element:li
										Element:a
											Request Parameter
										Element:li
										Element:a
											Obtaining Budget Available by ID
										Element:ul
										Element:li
										Element:a
											HTTPS Endpoint
										Element:li
										Element:a
											Request Parameter
										Element:li
										Element:a
											Header Values for POST Requests
										Element:li
										Element:a
											Usage Examples
										Element:li
										Element:a
											Response
										Element:li
										Element:a
											XML Output
										Element:li
										Element:a
											XML Output with parameter includeBudgetId
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Discovering Opportunities
						Node:
						(type) c
						(layer)2
							Element:p
								The budget API allows publishers to discover what advertisers have budget available at a particular moment in time by making accessible a report, generated on demand of the advertisers and budgets available.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											HTTP Endpoint
									Node:
									(type) c
									(layer)3
										Element:p
											The following endpoint is used with HTTP GET:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
										Element:tr
										Element:td
										Element:p
										Element:a
											http://stream.api.citygridmedia.com/ads/budget/v2/discover
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Request Parameter
									Node:
									(type) c
									(layer)3
										Element:p
											The following query string parameters are used with the Budget API endpoint:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
										Element:tr
										Element:th
										Element:p
										Element:span
										Element:strong
											Parameter
										Element:th
										Element:p
										Element:span
										Element:strong
											Description
										Element:th
										Element:p
										Element:span
										Element:strong
											Required
										Element:th
										Element:p
										Element:span
										Element:strong
											Valid Values
										Element:th
										Element:p
										Element:span
										Element:strong
											Examples
										Element:tr
										Element:td
										Element:p
											publisher
										Element:td
										Element:p
											The publisher code that identifies you. This parameter is required so that we can reflect the accurate budget.
										Element:td
										Element:p
											Yes
										Element:td
										Element:p
											Contact your account manager for your publisher code.
										Element:td
										Element:p
											acme
										Element:tr
										Element:td
										Element:p
											format
										Element:td
										Element:p
											The desired format for the result. Default is xml.
										Element:td
										Element:p
											No
										Element:td
										Element:p
											json, xml
										Element:td
										Element:p
											xml
										Element:tr
										Element:td
											includeBudgetId
										Element:td
											This parameter decides if a budget allocation Id would show in the result. Default is false.
										Element:td
											No
										Element:td
											true, false
										Element:td
											true
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:p
											We use streaming instead of pagination for the response given that the result could be quite large. The response is a streaming-octet content type, which is a file with the result in XML or JSON based on the format specified in the request.
									Node:
									(type) c
									(layer)3
										Element:p
											The table below describes the content of the response file. We also included an example of how to write a client to retrieve the response file using this method
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
										Element:tr
										Element:th
										Element:p
										Element:span
										Element:strong
											Element
										Element:th
										Element:p
										Element:span
										Element:strong
											Parent Element
										Element:th
										Element:p
										Element:span
										Element:strong
											Attributes
										Element:th
										Element:p
										Element:span
										Element:strong
											Description
										Element:tr
										Element:td
										Element:p
											ads
										Element:td
										Element:p
										Element:td
										Element:p
										Element:td
										Element:p
											Top level container of advertisement elements
										Element:tr
										Element:td
										Element:p
											ad
										Element:td
										Element:p
											ads
										Element:td
										Element:p
										Element:td
										Element:p
											Advertisement data
										Element:tr
										Element:td
										Element:p
											listings
										Element:td
										Element:p
											ad
										Element:td
										Element:p
										Element:td
										Element:p
											The group of businesses sharing the same budget
										Element:tr
										Element:td
										Element:p
											listing
										Element:td
										Element:p
											listings
										Element:td
										Element:p
										Element:td
										Element:p
											Data of a business location
										Element:tr
										Element:td
										Element:p
											listing_id
										Element:td
										Element:p
											listing
										Element:td
										Element:p
										Element:td
										Element:p
											The ID to uniquely identify CityGrid's businesses
										Element:tr
										Element:td
										Element:p
											listing_name
										Element:td
										Element:p
											listing
										Element:td
										Element:p
										Element:td
										Element:p
											The name of the business
										Element:tr
										Element:td
											reference_id
										Element:td
											listing
										Element:td
										Element:td
										Element:span
											The ID to uniquely identify provider to which listing belongs to
										Element:tr
										Element:td
										Element:p
											categories
										Element:td
										Element:p
											listing
										Element:td
										Element:p
										Element:td
										Element:p
											List of categories associated to this advertiser
										Element:tr
										Element:td
										Element:p
											category
										Element:td
										Element:p
											categories
										Element:td
										Element:p
											primary= true if the category is primary for this business
										Element:td
										Element:p
											Category associated to this advertiser
										Element:tr
										Element:td
										Element:p
											markets
										Element:td
										Element:p
											listing
										Element:td
										Element:p
										Element:td
										Element:p
											List of markets associated to this advertiser
										Element:tr
										Element:td
										Element:p
											market
										Element:td
										Element:p
											markets
										Element:td
										Element:p
										Element:td
										Element:p
											Market associated to this advertiser
										Element:tr
										Element:td
										Element:p
											neighborhoods
										Element:td
										Element:p
											listing
										Element:td
										Element:p
										Element:td
										Element:p
											List of neighborhoods associated to this advertiser
										Element:tr
										Element:td
										Element:p
											neighborhood
										Element:td
										Element:p
											neighborhood
										Element:td
										Element:p
										Element:td
										Element:p
											Neighborhood associated to this advertiser
										Element:tr
										Element:td
											cities
										Element:td
											listing
										Element:td
										Element:td
											List of cities associated to this advertiser
										Element:tr
										Element:td
											city
										Element:td
											cities
										Element:td
										Element:td
											City associated to this advertiser
										Element:tr
										Element:td
											postal_codes
										Element:td
											listing
										Element:td
										Element:td
											List of postal codes associated to this advertiser
										Element:tr
										Element:td
											postal_code
										Element:td
											postal_codes
										Element:td
										Element:td
											Postal code associated to this advertiser
										Element:tr
										Element:td
										Element:p
											ppe
										Element:td
										Element:p
											ad
										Element:td
										Element:p
										Element:td
										Element:p
											Price per event
										Element:tr
										Element:td
										Element:p
											remaining_budget
										Element:td
										Element:p
											ad
										Element:td
										Element:p
										Element:td
										Element:p
											Budget available
										Element:tr
										Element:td
										Element:span
											budget_allocation_id (optional)
										Element:td
											ad
										Element:td
										Element:td
										Element:span
											Budget allocation id available
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Header Values
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
										Element:tr
										Element:th
										Element:p
										Element:span
										Element:strong
											Parameter
										Element:th
										Element:p
										Element:span
										Element:strong
											Description
										Element:th
										Element:p
										Element:span
										Element:strong
											Required
										Element:th
										Element:p
										Element:span
										Element:strong
											Valid Values
										Element:tr
										Element:td
										Element:p
											Content-Type
										Element:td
										Element:p
											Return format
										Element:td
										Element:p
											Yes
										Element:td
										Element:p
											application/octet-stream
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											XML Output
									Node:
									(type) c
									(layer)3
										Element:p
											In the case of an XML, the file downloaded will look like the following:
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											XML Output with parameter includeBudgetId
									Node:
									(type) c
									(layer)3
										Element:p
											In the case of an XML, the file downloaded will look like the following:
									Node:
									(type) c
									(layer)3
										Element:p
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Connecting to the streaming Discovery API
									Node:
									(type) c
									(layer)3
										Element:p
											Accessing this API requires keeping a persistent HTTP connection open. This involves thinking about your client application differently than if you are using a REST API. In other words, use this API as a separate process independent of user requests.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Connecting
									Node:
									(type) c
									(layer)3
										Element:p
											To connect to the Discovery API, form an HTTP request and download the response file. You must keep the connection open while you are downloading the file. This may be different for every language or framework.
									Node:
									(type) c
									(layer)3
										Element:p
											We provide a simple client example to open a connection and download the response file
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Disconnecting
									Node:
									(type) c
									(layer)3
										Element:p
											We will maintain the connection open until you close it but in some cases we may close your connection:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											Too many connections are open for the same publisher code. There is no need to download the files multiple times in parallel since the result will be the same.
										Element:li
											A client stops reading data suddenly. This probably means your connection got lost so we will close it for you
										Element:li
											A server is restarted. This may happen in the case of a new release that needs system down time, but they are not frequent
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Rate limits
									Node:
									(type) c
									(layer)3
										Element:p
											We are not enforcing hard limits on this version of the API, but we ask that you donâ€™t try to connect to this API over 5 times per day.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Checking Budget Available
						Node:
						(type) c
						(layer)2
							Element:p
								The budget API also allows publishers to check what is the advertisers' budget available to them based on their traffic quality.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Obtaining Budget Available by Named Geographic Region
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														HTTPS Endpoint
												Node:
												(type) c
												(layer)4
													Element:p
														The following endpoint is used with HTTPS GET:
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:td
													Element:p
													Element:a
														https://api.citygridmedia.com/ads/budget/v2/where
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Request Parameter
												Node:
												(type) c
												(layer)4
													Element:p
														The following query string parameters are used with the Budget API endpoint:
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:th
													Element:p
													Element:span
													Element:strong
														Parameter
													Element:th
													Element:p
													Element:span
													Element:strong
														Description
													Element:th
													Element:p
													Element:span
													Element:strong
														Required
													Element:th
													Element:p
													Element:span
													Element:strong
														Valid Values
													Element:th
													Element:p
													Element:span
													Element:strong
														Examples
													Element:tr
													Element:td
													Element:p
														publisher
													Element:td
													Element:p
														The publisher code that identifies you. This parameter is required so that we can reflect the accurate budget.
													Element:td
													Element:p
														Yes
													Element:td
													Element:p
														Contact your account manager for your publisher code.
													Element:td
													Element:p
														acme
													Element:tr
													Element:td
													Element:p
														what
													Element:td
													Element:p
														What a user is searching for. For multi-word searches, simply put a space between the words.
													Element:td
													Element:p
														Yes
													Element:td
													Element:p
														A URL-Encoded string value
													Element:td
													Element:p
														pizza
													Element:br
														sporting%20goods
													Element:tr
													Element:td
													Element:p
														where
													Element:td
													Element:p
														The geographic location, generally a zip code or city-state pair.
													Element:td
													Element:p
														Yes
													Element:td
													Element:p
														A zip code, city-state pair, or street address. Spaces are optional following the comma between a city and state.
													Element:td
													Element:p
														91011
													Element:br
														Pasadena,%20CA
													Element:br
														Cambridge,MA
													Element:br
														1%20Main,Miami,FL
													Element:tr
													Element:td
													Element:p
														rpp
													Element:td
													Element:p
														The maximum number of results to return. The default value is 10. Values over 100 will be clamped to 10.
													Element:td
													Element:p
														No
													Element:td
													Element:p
														Integers in the range 1 through 100.
													Element:td
													Element:p
														3
													Element:tr
													Element:td
													Element:p
														format
													Element:td
													Element:p
														The desired format for the results. Default value xml
													Element:td
													Element:p
														No
													Element:td
													Element:p
														json, xml
													Element:td
													Element:p
														xml
													Element:tr
													Element:td
														includeBudgetId
													Element:td
													Element:span
														This parameter decides if the budget allocation Id will be displayed in the result. Default is false.
													Element:td
														No
													Element:td
														true, false
													Element:td
														true
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Obtaining Budget Available by Latitude and Longitude
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														HTTPS Endpoint
												Node:
												(type) c
												(layer)4
													Element:p
														The following endpoint is used with HTTPS GET:
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:td
													Element:p
													Element:a
														https://api.citygridmedia.com/ads/budget/v2/latlon
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Request Parameter
												Node:
												(type) c
												(layer)4
													Element:p
														The following query string parameters are used with the Budget API endpoint:
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:th
													Element:p
													Element:span
													Element:strong
														Parameter
													Element:th
													Element:p
													Element:span
													Element:strong
														Description
													Element:th
													Element:p
													Element:span
													Element:strong
														Required
													Element:th
													Element:p
													Element:span
													Element:strong
														Valid Values
													Element:th
													Element:p
													Element:span
													Element:strong
														Examples
													Element:tr
													Element:td
													Element:p
														publisher
													Element:td
													Element:p
														The publisher code that identifies you. This parameter is required so that we can reflect the accurate budget.
													Element:td
													Element:p
														Yes
													Element:td
													Element:p
														Contact your account manager for your publisher code.
													Element:td
													Element:p
														acme
													Element:tr
													Element:td
													Element:p
														lat
													Element:td
													Element:p
														Latitude of the center of a circle for a geographic search.
													Element:td
													Element:p
														Yes
													Element:td
													Element:p
														A decimal between -90 and 90.
													Element:td
													Element:p
														37.65056
													Element:tr
													Element:td
													Element:p
														lon
													Element:td
													Element:p
														Longitude of the center of a circle for a geographic search.
													Element:td
													Element:p
														Yes
													Element:td
													Element:p
														A decimal between -180 and 180.
													Element:td
													Element:p
														-119.03639
													Element:tr
													Element:td
													Element:p
														radius
													Element:td
													Element:p
														Radius of a circle search, in miles. Defaults to 5. If radius is larger than 25, it will be clamped to 25.
													Element:td
													Element:p
														No
													Element:td
													Element:p
														An integer between 1 and 25, inclusive.
													Element:td
													Element:p
														2
													Element:tr
													Element:td
													Element:p
														rpp
													Element:td
													Element:p
														The maximum number of results to return. The default value is 10. Values over 100 will be clamped to 10.
													Element:td
													Element:p
														No
													Element:td
													Element:p
														Integers in the range 1 through 100.
													Element:td
													Element:p
														8
													Element:tr
													Element:td
													Element:p
														format
													Element:td
													Element:p
														The desired format for the results. Default is xml.
													Element:td
													Element:p
														No
													Element:td
													Element:p
														json, xml
													Element:td
													Element:p
														xml
													Element:tr
													Element:td
														includeBudgetId
													Element:td
													Element:span
														This parameter decides if the budget allocation Id will be displayed in the result. Default is false.
													Element:td
														No
													Element:td
														true, false
													Element:td
														true
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Obtaining Budget Available by ID
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														HTTPS Endpoint
												Node:
												(type) c
												(layer)4
													Element:p
														The following endpoint is used with HTTPS POST or GET:
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:td
													Element:p
													Element:a
														https://api.citygridmedia.com/ads/budget/v2/detail
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Request Parameter
												Node:
												(type) c
												(layer)4
													Element:p
														The following query string parameters are used with the Budget API endpoint:
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:th
													Element:p
													Element:span
													Element:strong
														Parameter
													Element:th
													Element:p
													Element:span
													Element:strong
														Description
													Element:th
													Element:p
													Element:span
													Element:strong
														Required
													Element:th
													Element:p
													Element:span
													Element:strong
														Valid Values
													Element:th
													Element:p
													Element:span
													Element:strong
														Examples
													Element:tr
													Element:td
													Element:p
														publisher
													Element:td
													Element:p
														The publisher code that identifies you. This parameter is required so that we can reflect the accurate budget.
													Element:td
													Element:p
														Yes
													Element:td
													Element:p
														Contact your account manager for your publisher code.
													Element:td
													Element:p
														acme
													Element:tr
													Element:td
													Element:p
														ids
													Element:td
													Element:p
														A comma separated string of CityGrid listing ids
													Element:td
													Element:p
														Yes
													Element:td
													Element:p
													Element:td
													Element:p
														45654239,41783749,32636885
													Element:tr
													Element:td
													Element:p
														rpp
													Element:td
													Element:p
														The maximum number of results to return. The default value is 10. Values over 100 will be clamped to 10.
													Element:td
													Element:p
														No
													Element:td
													Element:p
														Integers in the range 1 through 100.
													Element:td
													Element:p
														3
													Element:tr
													Element:td
													Element:p
														format
													Element:td
													Element:p
														The desired format for the results. Default is xml.
													Element:td
													Element:p
														No
													Element:td
													Element:p
														json, xml
													Element:td
													Element:p
														xml
													Element:tr
													Element:td
														includeBudgetId
													Element:td
													Element:span
														This parameter decides if the budget allocation Id will be displayed in the result. Default is false.
													Element:td
														No
													Element:td
														true, false
													Element:td
														true
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Header Values for POST Requests
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tbody
													Element:tr
													Element:th
													Element:p
													Element:span
													Element:strong
														Header
													Element:th
													Element:p
													Element:span
													Element:strong
														Description
													Element:th
													Element:p
													Element:span
													Element:strong
														Required
													Element:th
													Element:p
													Element:span
													Element:strong
														Valid Values
													Element:tr
													Element:td
													Element:p
														Content-Type
													Element:td
													Element:p
														Media type of the request body, if any
													Element:td
													Element:p
														yes
													Element:td
													Element:p
														application/json
													Element:br
														application/xml
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Usage Examples
									Node:
									(type) c
									(layer)3
										Element:p
											The following table provides some examples uses of the Budget API and their corresponding URL with query parameters. Click on the links to try them out.
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
										Element:tr
										Element:th
										Element:p
										Element:span
										Element:strong
											Usage
										Element:th
										Element:p
										Element:span
										Element:strong
											URL
										Element:tr
										Element:td
										Element:p
											Return listings with budget for restaurants in 90069
										Element:td
										Element:p
										Element:span
										Element:a
											http://api.citygridmedia.com/ads/budget/v2/where?publisher=test&what=restaurants&where=90069
										Element:tr
										Element:td
										Element:p
											Return listings with budget for restaurants within 5 miles of the specified lat/lon location
										Element:td
										Element:p
										Element:span
										Element:a
											http://api.citygridmedia.com/ads/budget/v2/latlon?publisher=test&what=restaurants&lat=34.03&lon= -118.28&radius=5
										Element:tr
										Element:td
										Element:p
											Return the budget information for the specified Places
										Element:td
										Element:p
										Element:span
										Element:a
											http://api.citygridmedia.com/ads/budget/v2/detail?publisher=test&ids=45654239,41783749,32636885
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Response
									Node:
									(type) c
									(layer)3
										Element:p
											The Budget API results can be returned in both XML or JSON format.
									Node:
									(type) c
									(layer)3
										Element:p
											The following table describes the return elements:
									Node:
									(type) c
									(layer)3
										Element:table
										Element:tbody
										Element:tr
										Element:th
										Element:p
										Element:span
										Element:strong
											Element
										Element:th
										Element:p
										Element:span
										Element:strong
											Parent Element
										Element:th
										Element:p
										Element:span
										Element:strong
											Attributes
										Element:th
										Element:p
										Element:span
										Element:strong
											Description
										Element:tr
										Element:td
										Element:p
											ads
										Element:td
										Element:p
										Element:td
										Element:p
										Element:td
										Element:p
										Element:tr
										Element:td
										Element:p
											ad
										Element:td
										Element:p
											ads
										Element:td
										Element:p
										Element:td
										Element:p
											Advertisement data
										Element:tr
										Element:td
										Element:p
											listing_ids
										Element:td
										Element:p
											ad
										Element:td
										Element:p
										Element:td
										Element:p
											The group of businesses that shares the budget available
										Element:tr
										Element:td
										Element:p
											listing_id
										Element:td
										Element:p
											ad
										Element:td
										Element:p
										Element:td
										Element:p
											The ID to uniquely identify CityGrid's businesses
										Element:tr
										Element:td
											reference_id
										Element:td
											ad
										Element:td
										Element:td
										Element:span
											The ID to uniquely identify provider to which listing belongs to
										Element:tr
										Element:td
										Element:p
											ppe
										Element:td
										Element:p
											ad
										Element:td
										Element:p
										Element:td
										Element:p
											Price per event
										Element:tr
										Element:td
										Element:p
											remaining_budget
										Element:td
										Element:p
											ad
										Element:td
										Element:p
										Element:td
										Element:p
											Budget available
										Element:tr
										Element:td
										Element:span
											budget_allocation_id (optional)
										Element:td
											ad
										Element:td
										Element:td
										Element:span
											Budget allocation id available
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											XML Output
									Node:
									(type) c
									(layer)3
										Element:p
											The following is an example of an XML response:
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											XML Output with parameter includeBudgetId
									Node:
									(type) c
									(layer)3
										Element:p
											In the case of an XML, the file downloaded will look like the following:
									Node:
									(type) c
									(layer)3
										Element:p
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											No labels
