Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					{"id":"55a7aee84a33f92b00b7a150","name":"Text Analysis API | Documentation","subdomain":"text-analysis-api","versions":[{"_id":"55a7aee84a33f92b00b7a153","releaseDate":"2015-07-16T13:17:28.411Z","is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":true,"codename":"","version_clean":"1.0.0","version":"1.0"}],"doc_slug":"","current_version":{"version_clean":"1.0.0","version":"1.0"},"oauth":{"enabled":false},"api":{"name":"","url":"https://api.aylien.com/api/v1","contenttype":"form","auth":"token","explorer":true,"proxyEnabled":true,"jwt":false,"authextra":[{"_id":"55a7e7584a33f92b00b7a210","type":"header","default":"[[app:key]]","key":"X-AYLIEN-TextAPI-Application-Key"},{"_id":"55a7e7584a33f92b00b7a20f","type":"header","default":"[[app:id]]","key":"X-AYLIEN-TextAPI-Application-ID"}],"headers":[],"object_definitions":[]},"apiAlt":[],"plan_details":{"name":"Developer Hub","is_active":true,"cost":59,"versions":10000,"custom_domain":true,"custom_pages":true,"whitelabel":false,"errors":false,"password":true,"landing_page":true,"themebuilder":true,"stylesheet":true,"javascript":false,"html":true,"extra_html":false,"admins":true,"apps":true},"apps":{"enabled":false},"intercom":"avndlx2d","intercom_secure_emailonly":false,"flags":{"allow_hub2":false,"hub2":false,"migrationRun":false,"oauth":false,"swagger":false,"correctnewlines":false,"speedyRender":false,"allowXFrame":false,"jwt":false,"hideGoogleAnalytics":false,"stripe":false,"autoSslGeneration":true,"ssl":false},"asset_base_url":""}
				Element:a
					Text Analysis API | Documentation
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Support
				Element:li
				Element:a
					Get an API Key
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Announcements
				Element:li
				Element:a
					Login
				Element:li
			Node:
			(type) c
			(layer)1
				Element:pre
					{"__v":17,"_id":"5624db8f85a31117001c5428","category":{"__v":4,"_id":"5624db675a86b423009462e1","pages":["5624db8f85a31117001c5428","5624e72b06e8040d005ed6e4","5624ed3b6ff1010d009b1646","562502255473621900689514"],"project":"55a7aee84a33f92b00b7a150","version":"55a7aee84a33f92b00b7a153","sync":{"url":"","isSync":false},"reference":false,"createdAt":"2015-10-19T12:00:39.932Z","from_sync":false,"order":9999,"slug":"rapidminer-extension","title":"RapidMiner Extension"},"parentDoc":null,"project":"55a7aee84a33f92b00b7a150","user":"55a7ae50bf1be93100d89df1","version":{"__v":6,"_id":"55a7aee84a33f92b00b7a153","project":"55a7aee84a33f92b00b7a150","createdAt":"2015-07-16T13:17:28.411Z","releaseDate":"2015-07-16T13:17:28.411Z","categories":["55a7aee94a33f92b00b7a154","55a7fefa3efe0c2f0074cbdf","55a8fb10c8bd450d000dd130","55a936b1cf45e1390093f362","55abddeaa36ccd0d00fdebe1","5624db675a86b423009462e1"],"is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":true,"codename":"","version_clean":"1.0.0","version":"1.0"},"updates":[],"next":{"pages":[],"description":""},"createdAt":"2015-10-19T12:01:19.350Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":0,"body":"\"Text Analysis by AYLIEN\" is an Extension made up of different Operators that allow you to analyze and make sense of textual data from within RapidMiner. The different Operators contained in \"Text Analysis by AYLIEN\" include the following:\n\n- Sentiment Analysis\n- Entity Extraction\n- Language Detection\n- Hashtag Suggestion\n- Related Phrases\n[block:image]\n{\n \"images\": [\n {\n \"image\": [\n \"https://files.readme.io/g4JvBpAsSnGIf5O4OKY4_aylien-rapidminer-banner.png\",\n \"aylien-rapidminer-banner.png\",\n \"1200\",\n \"400\",\n \"#845d53\",\n \"\"\n ]\n }\n ]\n}\n[/block]\n\n[block:api-header]\n{\n \"type\": \"basic\",\n \"title\": \"Installation\"\n}\n[/block]\n\"Text Analysis by AYLIEN\" can be found with the rest of the Text Processing Extensions in the marketplace, which you can navigate to from the **Help > Marketplace (Updates and Extensions)** menu. Alternatively make your way to the [marketplace entry](https://marketplace.rapidminer.com/UpdateServer/faces/product_details.xhtml?productId=rmx_com.aylien.textapi.rapidminer) for the Extension on the Web and download or install it from there.\n[block:image]\n{\n \"images\": [\n {\n \"image\": [\n \"https://files.readme.io/YgcSG7qOQ92JE6f8Isky_Screen%20Shot%202015-10-13%20at%204.47.40%20PM.png\",\n \"Screen Shot 2015-10-13 at 4.47.40 PM.png\",\n \"393\",\n \"243\",\n \"#975c47\",\n \"\"\n ]\n }\n ]\n}\n[/block]\n\n[block:image]\n{\n \"images\": [\n {\n \"image\": [\n \"https://files.readme.io/z3SzXq4sTr1MKl3Jyy8Y_Screen%20Shot%202015-10-16%20at%203.41.08%20PM.png\",\n \"Screen Shot 2015-10-16 at 3.41.08 PM.png\",\n \"1524\",\n \"1044\",\n \"#c35b36\",\n \"\"\n ]\n }\n ]\n}\n[/block]\nOnce you've installed the Text Analysis extension, you can find its Operators from within RapidMiner by simply searching for AYLIEN. Here you'll see the list of Operators that were installed as part of the Text Analysis Extension:\n[block:image]\n{\n \"images\": [\n {\n \"image\": [\n \"https://files.readme.io/SsO9anoS8SFPsHgx77cS_Screen%20Shot%202015-10-14%20at%207.40.39%20PM.png\",\n \"Screen Shot 2015-10-14 at 7.40.39 PM.png\",\n \"1552\",\n \"1072\",\n \"#bf603b\",\n \"\"\n ]\n }\n ]\n}\n[/block]\n\n[block:api-header]\n{\n \"type\": \"basic\",\n \"title\": \"Credentials and Connecting\"\n}\n[/block]\nThe first thing we need to do before we can start analyzing text, is make sure we're connected to the AYLIEN API. You can configure your connections under settings and Manage Connections.\n[block:image]\n{\n \"images\": [\n {\n \"image\": [\n \"https://files.readme.io/QgqxVxxRmaeUm1TfbYsQ_Screen%20Shot%202015-10-13%20at%205.10.48%20PM.png\",\n \"Screen Shot 2015-10-13 at 5.10.48 PM.png\",\n \"313\",\n \"258\",\n \"#54638d\",\n \"\"\n ]\n }\n ]\n}\n[/block]\nTo connect to the AYLIEN API you need an App ID and API Key. If you haven't already got yours you can grab one for free [here](http://developer.aylien.com/signup?source=rapidminer).\n\nCreate a new connection of type \"Aylien Text Analysis Connection\", add your credentials (App ID and API Key) as shown below and hit \"Save all changes\".\n[block:image]\n{\n \"images\": [\n {\n \"image\": [\n \"https://files.readme.io/gh8SObk3TFWSFys4uNH4_Screen%20Shot%202015-10-13%20at%205.08.05%20PM.png\",\n \"Screen Shot 2015-10-13 at 5.08.05 PM.png\",\n \"1524\",\n \"1044\",\n \"#cc502c\",\n \"\"\n ]\n }\n ]\n}\n[/block]\n\n[block:image]\n{\n \"images\": [\n {\n \"image\": [\n \"https://files.readme.io/Z5iI8UTlRnmugfcdhnbI_Screen%20Shot%202015-10-13%20at%205.06.33%20PM.png\",\n \"Screen Shot 2015-10-13 at 5.06.33 PM.png\",\n \"1524\",\n \"1044\",\n \"#cc512e\",\n \"\"\n ]\n }\n ]\n}\n[/block]\nNow we're pretty much good to go, and can reuse the connection we just created in all Text Analysis Operators.\n[block:callout]\n{\n \"type\": \"info\",\n \"title\": \"Rate Limits\",\n \"body\": \"Depending on your [subscription plan](http://developer.aylien.com/plans), you are subject to per-minute and daily rate limits (60 calls/minute and 1,000 calls/day on the Free plan). Once you reach your per-minute limit, the Operator will wait for a few seconds before running the subsequent batches, repeating until all the rows have been analyzed. If you reach your daily limits, you'll get an alert in RapidMiner, but the already analyze documents will be gracefully returned.\"\n}\n[/block]\n\n[block:api-header]\n{\n \"type\": \"basic\",\n \"title\": \"Test your Setup\"\n}\n[/block]\nFinally, to make sure everything is working, let's walk through a basic Sentiment Analysis procedure:\n\nAs shown below the first thing we do is add an **Analyze Sentiment (Document)** Operator to our Process:\n[block:image]\n{\n \"images\": [\n {\n \"image\": [\n \"https://files.readme.io/xwS816jPSLS9TN3QNkNc_Screen%20Shot%202015-10-13%20at%205.01.47%20PM.png\",\n \"Screen Shot 2015-10-13 at 5.01.47 PM.png\",\n \"1552\",\n \"1072\",\n \"#d55f31\",\n \"\"\n ]\n }\n ]\n}\n[/block]\nIn this case, we've also added a **Create Document** Operator as shown in the screenshot below, where we'll type or paste the text we want to analyze:\n[block:image]\n{\n \"images\": [\n {\n \"image\": [\n \"https://files.readme.io/GUSk5N2MQiiCf6Ueq9wO_Screen%20Shot%202015-10-13%20at%205.05.34%20PM.png\",\n \"Screen Shot 2015-10-13 at 5.05.34 PM.png\",\n \"1552\",\n \"1072\",\n \"#d65f31\",\n \"\"\n ]\n }\n ]\n}\n[/block]\nAdd the text you want to analyze to the Document, for instance \"I love puppies\":\n[block:image]\n{\n \"images\": [\n {\n \"image\": [\n \"https://files.readme.io/g0JD4adSPCvqQ2XvRZ8A_Screen%20Shot%202015-10-13%20at%205.06.43%20PM.png\",\n \"Screen Shot 2015-10-13 at 5.06.43 PM.png\",\n \"1524\",\n \"1044\",\n \"#cc5729\",\n \"\"\n ]\n }\n ]\n}\n[/block]\nNow we've completed the bare bones of our Process to analyze the sentiment of a piece of text we've written in a Document.\n\nTo run the Process, hit Run, but before you do, make sure you connect your Operators to each other and the results ports and also select the Connection you created earlier, in the **Analyze Sentiment Operator**.\n\nYour results will be displayed in a results tab, similar to below:\n[block:image]\n{\n \"images\": [\n {\n \"image\": [\n \"https://files.readme.io/KHIkQRFlTbuEHiMGO59s_Screen%20Shot%202015-10-13%20at%205.07.16%20PM.png\",\n \"Screen Shot 2015-10-13 at 5.07.16 PM.png\",\n \"1552\",\n \"1072\",\n \"#dd604a\",\n \"\"\n ]\n }\n ]\n}\n[/block]\nNow that you've got the Extension up and running, please proceed to our more in-depth examples in the [next sections](http://docs.aylien.com/v1.0/docs/tutorial-tweet-sentiment-rapidminer).","excerpt":"","slug":"getting-started-rapidminer","type":"basic","title":"Getting Started"}
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Getting Started
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Introduction
													Element:li
													Element:a
													Element:span
														API Key
													Element:li
													Element:a
													Element:span
														Usage
													Element:li
													Element:a
													Element:span
														Rate Limits
													Element:li
													Element:a
													Element:span
														Language Support
													Element:li
													Element:a
													Element:span
														Reporting problems
													Element:li
													Element:a
													Element:span
														Frequently Asked Questions
													Element:li
													Element:a
													Element:span
														Common Scenarios & Solutions
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														SDKs
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														NodeJS SDK
													Element:li
													Element:a
													Element:span
														Python SDK
													Element:li
													Element:a
													Element:span
														PHP SDK
													Element:li
													Element:a
													Element:span
														Java SDK
													Element:li
													Element:a
													Element:span
														Ruby SDK
													Element:li
													Element:a
													Element:span
														Go SDK
													Element:li
													Element:a
													Element:span
														C# SDK
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Endpoints
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Classification
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Classification by Taxonomy
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Sentiment Analysis
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Aspect-based Sentiment Analysis
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Entity Extraction
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Concept Extraction
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Summarization
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Article Extraction
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Image Tagging
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Hashtag Suggestion
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Language Detection
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Microformat Extraction
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Related Phrases
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Semantic Labeling
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Combined Calls
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Batch Processing
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														post
													Element:span
														Submit Batch Job
													Element:li
													Element:a
													Element:span
														get
													Element:span
														Retrieve Status/Results
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Google Sheets Add-on
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Introduction
													Element:li
													Element:a
													Element:span
														Getting Started
													Element:li
													Element:a
													Element:span
														Topping Up (Credits)
													Element:li
													Element:a
													Element:span
														Sentiment Analysis
													Element:li
													Element:a
													Element:span
														Blog & News Analysis
													Element:li
													Element:a
													Element:span
														Formulas
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														RapidMiner Extension
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:a
													Element:span
														Getting Started
													Element:li
													Element:a
													Element:span
														Tutorial: Building a Twitter Sentiment Analysis Process
													Element:li
													Element:a
													Element:span
														Tutorial: Building an RSS/News Analyzer Process
													Element:li
													Element:a
													Element:span
														Sample Processes
			Node:
			(type) h1
			(layer)1
				Element:h1
					Getting Started
			Node:
			(type) c
			(layer)1
				Element:hr
					"Text Analysis by AYLIEN" is an Extension made up of different Operators that allow you to analyze and make sense of textual data from within RapidMiner. The different Operators contained in "Text Analysis by AYLIEN" include the following: - Sentiment Analysis - Entity Extraction - Language Detection - Hashtag Suggestion - Related Phrases [block:image] { "images": [ { "image": [ "https://files.readme.io/g4JvBpAsSnGIf5O4OKY4_aylien-rapidminer-banner.png", "aylien-rapidminer-banner.png", "1200", "400", "#845d53", "" ] } ] } [/block] [block:api-header] { "type": "basic", "title": "Installation" } [/block] "Text Analysis by AYLIEN" can be found with the rest of the Text Processing Extensions in the marketplace, which you can navigate to from the **Help > Marketplace (Updates and Extensions)** menu. Alternatively make your way to the [marketplace entry](https://marketplace.rapidminer.com/UpdateServer/faces/product_details.xhtml?productId=rmx_com.aylien.textapi.rapidminer) for the Extension on the Web and download or install it from there. [block:image] { "images": [ { "image": [ "https://files.readme.io/YgcSG7qOQ92JE6f8Isky_Screen%20Shot%202015-10-13%20at%204.47.40%20PM.png", "Screen Shot 2015-10-13 at 4.47.40 PM.png", "393", "243", "#975c47", "" ] } ] } [/block] [block:image] { "images": [ { "image": [ "https://files.readme.io/z3SzXq4sTr1MKl3Jyy8Y_Screen%20Shot%202015-10-16%20at%203.41.08%20PM.png", "Screen Shot 2015-10-16 at 3.41.08 PM.png", "1524", "1044", "#c35b36", "" ] } ] } [/block] Once you've installed the Text Analysis extension, you can find its Operators from within RapidMiner by simply searching for AYLIEN. Here you'll see the list of Operators that were installed as part of the Text Analysis Extension: [block:image] { "images": [ { "image": [ "https://files.readme.io/SsO9anoS8SFPsHgx77cS_Screen%20Shot%202015-10-14%20at%207.40.39%20PM.png", "Screen Shot 2015-10-14 at 7.40.39 PM.png", "1552", "1072", "#bf603b", "" ] } ] } [/block] [block:api-header] { "type": "basic", "title": "Credentials and Connecting" } [/block] The first thing we need to do before we can start analyzing text, is make sure we're connected to the AYLIEN API. You can configure your connections under settings and Manage Connections. [block:image] { "images": [ { "image": [ "https://files.readme.io/QgqxVxxRmaeUm1TfbYsQ_Screen%20Shot%202015-10-13%20at%205.10.48%20PM.png", "Screen Shot 2015-10-13 at 5.10.48 PM.png", "313", "258", "#54638d", "" ] } ] } [/block] To connect to the AYLIEN API you need an App ID and API Key. If you haven't already got yours you can grab one for free [here](http://developer.aylien.com/signup?source=rapidminer). Create a new connection of type "Aylien Text Analysis Connection", add your credentials (App ID and API Key) as shown below and hit "Save all changes". [block:image] { "images": [ { "image": [ "https://files.readme.io/gh8SObk3TFWSFys4uNH4_Screen%20Shot%202015-10-13%20at%205.08.05%20PM.png", "Screen Shot 2015-10-13 at 5.08.05 PM.png", "1524", "1044", "#cc502c", "" ] } ] } [/block] [block:image] { "images": [ { "image": [ "https://files.readme.io/Z5iI8UTlRnmugfcdhnbI_Screen%20Shot%202015-10-13%20at%205.06.33%20PM.png", "Screen Shot 2015-10-13 at 5.06.33 PM.png", "1524", "1044", "#cc512e", "" ] } ] } [/block] Now we're pretty much good to go, and can reuse the connection we just created in all Text Analysis Operators. [block:callout] { "type": "info", "title": "Rate Limits", "body": "Depending on your [subscription plan](http://developer.aylien.com/plans), you are subject to per-minute and daily rate limits (60 calls/minute and 1,000 calls/day on the Free plan). Once you reach your per-minute limit, the Operator will wait for a few seconds before running the subsequent batches, repeating until all the rows have been analyzed. If you reach your daily limits, you'll get an alert in RapidMiner, but the already analyze documents will be gracefully returned." } [/block] [block:api-header] { "type": "basic", "title": "Test your Setup" } [/block] Finally, to make sure everything is working, let's walk through a basic Sentiment Analysis procedure: As shown below the first thing we do is add an **Analyze Sentiment (Document)** Operator to our Process: [block:image] { "images": [ { "image": [ "https://files.readme.io/xwS816jPSLS9TN3QNkNc_Screen%20Shot%202015-10-13%20at%205.01.47%20PM.png", "Screen Shot 2015-10-13 at 5.01.47 PM.png", "1552", "1072", "#d55f31", "" ] } ] } [/block] In this case, we've also added a **Create Document** Operator as shown in the screenshot below, where we'll type or paste the text we want to analyze: [block:image] { "images": [ { "image": [ "https://files.readme.io/GUSk5N2MQiiCf6Ueq9wO_Screen%20Shot%202015-10-13%20at%205.05.34%20PM.png", "Screen Shot 2015-10-13 at 5.05.34 PM.png", "1552", "1072", "#d65f31", "" ] } ] } [/block] Add the text you want to analyze to the Document, for instance "I love puppies": [block:image] { "images": [ { "image": [ "https://files.readme.io/g0JD4adSPCvqQ2XvRZ8A_Screen%20Shot%202015-10-13%20at%205.06.43%20PM.png", "Screen Shot 2015-10-13 at 5.06.43 PM.png", "1524", "1044", "#cc5729", "" ] } ] } [/block] Now we've completed the bare bones of our Process to analyze the sentiment of a piece of text we've written in a Document. To run the Process, hit Run, but before you do, make sure you connect your Operators to each other and the results ports and also select the Connection you created earlier, in the **Analyze Sentiment Operator**. Your results will be displayed in a results tab, similar to below: [block:image] { "images": [ { "image": [ "https://files.readme.io/KHIkQRFlTbuEHiMGO59s_Screen%20Shot%202015-10-13%20at%205.07.16%20PM.png", "Screen Shot 2015-10-13 at 5.07.16 PM.png", "1552", "1072", "#dd604a", "" ] } ] } [/block] Now that you've got the Extension up and running, please proceed to our more in-depth examples in the [next sections](http://docs.aylien.com/v1.0/docs/tutorial-tweet-sentiment-rapidminer).
			Node:
			(type) c
			(layer)1
				Element:footer
				Element:a
					readme.io
