Node:
(type) c
(layer)0
	Element:article
						Node:
						(type) h2
						(layer)2
							Element:h2
								Typing indicators
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:p
								You can only work with typing indicators over WebSockets. They are a
							Element:a
								Signal packet
								; the
							Element:code
								body
								should contain the following fields:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Parameters:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
								Name
							Element:th
								Type
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
							Element:code
								type
							Element:td
								string
							Element:td
								Value should be
							Element:em
								typing_indicator
							Element:tr
							Element:td
							Element:code
								object
							Element:td
								object
							Element:td
								Should contain an
							Element:code
								id
								field whose value is the conversation ID in which to send the typing indicator
							Element:tr
							Element:td
							Element:code
								request_id
							Element:td
								string (optional)
							Element:td
								Arbitrary ID to recognize a response
							Element:tr
							Element:td
							Element:code
								data
							Element:td
								object
							Element:td
								Should contain an
							Element:code
								action
								key, whose value is one of
							Element:q
								“started”
								,
							Element:q
								“paused”
								, or
							Element:q
								“finished”
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Sending example:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								{
							Element:span
								"type"
								:
							Element:span
								"signal"
								,
							Element:span
								"body"
								: {
							Element:span
								"type"
								:
							Element:span
								"typing_indicator"
								,
							Element:span
								"request_id"
								:
							Element:span
								"fred.flinstone.95"
								,
							Element:span
								"object"
								: {
							Element:span
								"id"
								:
							Element:span
								"layer:///conversations/e67b5da2-95ca-40c4-bfc5-a2a8baaeb50f"
								},
							Element:span
								"data"
								: {
							Element:span
								"action"
								:
							Element:span
								"started"
								} } }
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Receiving example:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								{
							Element:span
								"type"
								:
							Element:span
								"signal"
								,
							Element:span
								"timestamp"
								:
							Element:span
								"2015-01-19T09:15:43+00:00"
								,
							Element:span
								"body"
								: {
							Element:span
								"request_id"
								:
							Element:span
								"fred.flinstone.95"
								,
							Element:span
								"type"
								:
							Element:span
								"typing_indicator"
								,
							Element:span
								"object"
								: {
							Element:span
								"type"
								:
							Element:span
								"Conversation"
								,
							Element:span
								"id"
								:
							Element:span
								"layer:///conversations/e67b5da2-95ca-40c4-bfc5-a2a8baaeb50f"
								,
							Element:span
								"url"
								:
							Element:span
								"https://api.layer.com/conversations/f3cc7b32-3c92-11e4-baad-164230d1df67"
								},
							Element:span
								"data"
								: {
							Element:span
								"sender"
								:
							Element:span
								,
							Element:a
								BasicIdentity
							Element:span
								"action"
								:
							Element:span
								"started"
								} } }
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Discussion:
						Node:
						(type) c
						(layer)2
							Element:p
								A client should update its typing indicator state every 2.5 seconds. As long as you consider the user to be actively typing, you should resend
							Element:q
								“started”
								every 2.5 seconds. After a lag of no activity,
							Element:q
								“paused”
								should be sent, and should continue to be sent every 2.5 seconds. Once
							Element:q
								“finished”
								is sent, no further typing indicators need to be sent to the server until the state has changed.
						Node:
						(type) c
						(layer)2
							Element:p
								If the server doesn’t receive a state update from the client in time, the server will automatically transition to the next state. If
							Element:q
								“started”
								is sent to the server, and then no further states are sent, the server will automatically transition to
							Element:q
								“paused”
								. If the state is
							Element:q
								“paused”
								and no states are sent by the client, it will transition to
							Element:q
								“finished”
								.
						Node:
						(type) c
						(layer)2
							Element:a
								Identities
						Node:
						(type) c
						(layer)2
							Element:a
								Push Tokens
