Node:
(type) c
(layer)0
	Element:article
						Node:
						(type) h2
						(layer)2
							Element:h2
								Real-time updates
							Element:a
								¶
						Node:
						(type) c
						(layer)2
							Element:p
								Establish a WebSocket connection will allow to receive updates for changes from the server. Changes may include creating, deleting or updating of and . You will receive all packets, but you may choose to ignore some or even most of them depending on your use case.
						Node:
						(type) c
						(layer)2
							Element:p
								Change packets have the following properties in the
							Element:code
								body
								field:
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
								Field
							Element:th
								Type
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
							Element:strong
								operation
							Element:td
								string
							Element:td
								One of
							Element:q
								“create”
							Element:q
								,
							Element:q
								“delete”
							Element:q
								or
							Element:q
								“patch”
							Element:tr
							Element:td
							Element:strong
								object
							Element:td
								object
							Element:td
								The type and identifier of the object being operated upon.
							Element:tr
							Element:td
							Element:strong
								data
							Element:td
								object
							Element:td
								Details of the change that was performed on the server.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											The
										Element:code
											object
											Field
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:p
											The
										Element:code
											object
											field is used to identify the object that the Packet relates to.
									Node:
									(type) c
									(layer)3
										Element:table
										Element:thead
										Element:tr
										Element:th
											Field
										Element:th
											Type
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:strong
											type
										Element:td
											string
										Element:td
											Type of Object:
										Element:a
											Conversation
											,
										Element:a
											Message
											,
										Element:a
											Announcement
										Element:tr
										Element:td
										Element:strong
											id
										Element:td
											string
										Element:td
											The Layer ID of the Object:
										Element:q
											layer:///conversations/uuid
										Element:tr
										Element:td
										Element:strong
											url
										Element:td
											string
										Element:td
											URL to the specified Object
									Node:
									(type) c
									(layer)3
										Element:p
											When the server is sending a Change Packet to the client, the Object will look like:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											{
										Element:span
											"object"
											: {
										Element:span
											"type"
											:
										Element:span
											"Conversation"
											,
										Element:span
											"id"
											:
										Element:span
											"layer:///conversations/f3cc7b32-3c92-11e4-baad-164230d1df67"
											,
										Element:span
											"url"
											:
										Element:span
											"https://api.layer.com/conversations/f3cc7b32-3c92-11e4-baad-164230d1df67"
											} }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Create operations
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:p
											A Change Packet containing a create operation is received whenever the server receives a new Message or Conversation. You will receive these not just for new Messages and Conversations created by others, but also by yourself. The
										Element:code
											data
											field will contain the full
										Element:a
											Conversation
											or
										Element:a
											Message
											object.
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											{
										Element:span
											"type"
											:
										Element:span
											"change"
											,
										Element:span
											"counter"
											:
										Element:span
											6
											,
										Element:span
											"timestamp"
											:
										Element:span
											"2014-09-15T04:45:00+00:00"
											,
										Element:span
											"body"
											: {
										Element:span
											"operation"
											:
										Element:span
											"create"
											,
										Element:span
											"object"
											: {
										Element:span
											"type"
											:
										Element:span
											"Conversation"
											,
										Element:span
											"id"
											:
										Element:span
											"layer:///conversations/f3cc7b32-3c92-11e4-baad-164230d1df67"
											,
										Element:span
											"url"
											:
										Element:span
											"https://api.layer.com/conversations/f3cc7b32-3c92-11e4-baad-164230d1df67"
											},
										Element:span
											"data"
											:
										Element:a
											Conversation
											} }
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											{
										Element:span
											"type"
											:
										Element:span
											"change"
											,
										Element:span
											"counter"
											:
										Element:span
											7
											,
										Element:span
											"timestamp"
											:
										Element:span
											"2014-09-15T04:45:00+00:00"
											,
										Element:span
											"body"
											: {
										Element:span
											"operation"
											:
										Element:span
											"create"
											,
										Element:span
											"object"
											: {
										Element:span
											"type"
											:
										Element:span
											"Message"
											,
										Element:span
											"id"
											:
										Element:span
											"layer:///messages/f3cc7b32-3c92-11e4-baad-164230d1df68"
											,
										Element:span
											"url"
											:
										Element:span
											"https://api.layer.com/messages/f3cc7b32-3c92-11e4-baad-164230d1df68"
											},
										Element:span
											"data"
											:
										Element:a
											Message
											} }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Delete operations
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:p
											A Change Packet containing a delete operation is received whenever the server detects that a Message, Announcement or Conversation has been deleted. You will receive these not just for objects deleted by others, but also objects deleted by yourself.
									Node:
									(type) c
									(layer)3
										Element:p
											The
										Element:code
											data
											field will contain a
										Element:code
											mode
											field indicating if the deletion is for My Devices
										Element:q
											“my_devices”
											or for All Users
										Element:q
											“all_participants”
											; See
										Element:a
											Deleting
											.
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											{
										Element:span
											"type"
											:
										Element:span
											"change"
											,
										Element:span
											"counter"
											:
										Element:span
											8
											,
										Element:span
											"timestamp"
											:
										Element:span
											"2015-01-19T09:15:43+00:00"
											,
										Element:span
											"body"
											: {
										Element:span
											"operation"
											:
										Element:span
											"delete"
											,
										Element:span
											"object"
											: {
										Element:span
											"type"
											:
										Element:span
											"Conversation"
											,
										Element:span
											"id"
											:
										Element:span
											"layer:///conversations/f3cc7b32-3c92-11e4-baad-164230d1df67"
											,
										Element:span
											"url"
											:
										Element:span
											"https://api.layer.com/conversations/f3cc7b32-3c92-11e4-baad-164230d1df67"
											},
										Element:span
											"data"
											: {
										Element:span
											"mode"
											:
										Element:span
											"all_participants"
											} } }
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											{
										Element:span
											"type"
											:
										Element:span
											"change"
											,
										Element:span
											"counter"
											:
										Element:span
											9
											,
										Element:span
											"timestamp"
											:
										Element:span
											"2015-01-19T09:15:43+00:00"
											,
										Element:span
											"body"
											: {
										Element:span
											"operation"
											:
										Element:span
											"delete"
											,
										Element:span
											"object"
											: {
										Element:span
											"type"
											:
										Element:span
											"Message"
											,
										Element:span
											"id"
											:
										Element:span
											"layer:///messages/f3cc7b32-3c92-11e4-baad-164230d1df68"
											,
										Element:span
											"url"
											:
										Element:span
											"https://api.layer.com/messages/940de862-3c96-11e4-baad-164230d1df68"
											},
										Element:span
											"data"
											: {
										Element:span
											"mode"
											:
										Element:span
											"all_participants"
											} } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Deleting
													Element:code
														from_position
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:p
														A special case of Deleting a Conversation for
													Element:q
														“my_devices”
														occurs when you do this without Leaving the Conversation (
													Element:q
														url?leave=true&mode=my_devices
														): If a new Message is sent, the Conversation will be restored, with the Message history starting at that new Message. If this Message is sent at the same time as the Conversation being deleted, then the Conversation is never deleted and simply removes its Message history up to the point of the newly arrived Message. The
													Element:code
														from_position
														property tells your app to delete all Messages whose
													Element:code
														position
														field are less than or equal to this value, and then
													Element:strong
														do not delete the Conversation
														.
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														{
													Element:span
														"type"
														:
													Element:span
														"change"
														,
													Element:span
														"counter"
														:
													Element:span
														8
														,
													Element:span
														"timestamp"
														:
													Element:span
														"2015-01-19T09:15:43+00:00"
														,
													Element:span
														"body"
														: {
													Element:span
														"operation"
														:
													Element:span
														"delete"
														,
													Element:span
														"object"
														: {
													Element:span
														"type"
														:
													Element:span
														"Conversation"
														,
													Element:span
														"id"
														:
													Element:span
														"layer:///conversations/f3cc7b32-3c92-11e4-baad-164230d1df67"
														,
													Element:span
														"url"
														:
													Element:span
														"https://api.layer.com/conversations/f3cc7b32-3c92-11e4-baad-164230d1df67"
														},
													Element:span
														"data"
														: {
													Element:span
														"mode"
														:
													Element:span
														"my_devices"
														,
													Element:span
														"from_position"
														:
													Element:span
														123456
														} } }
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Update operations
										Element:a
											¶
									Node:
									(type) c
									(layer)3
										Element:p
											A Change Packet containing an update operation is received whenever the server detects that a Message, Announcements or Conversation has been changed. You will receive these not just for objects changed by others, but also those changed by yourself.
									Node:
									(type) c
									(layer)3
										Element:p
											The
										Element:code
											data
											field will contain an array of Layer-Patch operations that specify the changes to make to the object. The operations are documented in the
										Element:a
											Layer-Patch Spec
											; that repo also contains a JavaScript library for working with Layer-Patch operations.
									Node:
									(type) c
									(layer)3
										Element:p
											The following properties can be updated via an Update Event:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:code
											Conversation.participants
											: participants can be added or removed
										Element:li
										Element:code
											Conversation.metadata
											: Metadata keys can be set or deleted
										Element:li
										Element:code
											Conversation.last_message
											: The ID for the Message is provided each time a new Message becomes the most recent Message
										Element:li
										Element:code
											Conversation.unread_message_count
											: Any time a Conversation’s unread message count changes, you will be notified
										Element:li
										Element:code
											Message.recipient_status
											: Recipient status is updated as delivery and read receipts are received
									Node:
									(type) c
									(layer)3
										Element:p
											Note that it is common to receive multiple Layer Patch Operations in a single Change Packet, resulting in multiple changes to a properties.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Change participants example:
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														{
													Element:span
														"type"
														:
													Element:span
														"change"
														,
													Element:span
														"counter"
														:
													Element:span
														10
														,
													Element:span
														"timestamp"
														:
													Element:span
														"2015-01-19T09:15:43+00:00"
														,
													Element:span
														"body"
														: {
													Element:span
														"operation"
														:
													Element:span
														"patch"
														,
													Element:span
														"object"
														: {
													Element:span
														"type"
														:
													Element:span
														"Conversation"
														,
													Element:span
														"id"
														:
													Element:span
														"layer:///conversations/f3cc7b32-3c92-11e4-baad-164230d1df67"
														,
													Element:span
														"url"
														:
													Element:span
														"https://api.layer.com/conversations/f3cc7b32-3c92-11e4-baad-164230d1df67"
														},
													Element:span
														"data"
														: [ {
													Element:span
														"operation"
														:
													Element:span
														"add"
														,
													Element:span
														"property"
														:
													Element:span
														"participants"
														,
													Element:span
														"value"
														:
													Element:span
														"4567"
														}, {
													Element:span
														"operation"
														:
													Element:span
														"remove"
														,
													Element:span
														"property"
														:
													Element:span
														"participants"
														,
													Element:span
														"value"
														:
													Element:span
														"5678"
														} ] } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Change metadata example:
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														{
													Element:span
														"type"
														:
													Element:span
														"change"
														,
													Element:span
														"counter"
														:
													Element:span
														11
														,
													Element:span
														"timestamp"
														:
													Element:span
														"2015-01-19T09:15:43+00:00"
														,
													Element:span
														"body"
														: {
													Element:span
														"operation"
														:
													Element:span
														"patch"
														,
													Element:span
														"object"
														: {
													Element:span
														"type"
														:
													Element:span
														"Conversation"
														,
													Element:span
														"id"
														:
													Element:span
														"layer:///conversations/3cc7b32-3c92-11e4-baad-164230d1df67"
														,
													Element:span
														"url"
														:
													Element:span
														"https://api.layer.com/conversations/f3cc7b32-3c92-11e4-baad-164230d1df67"
														},
													Element:span
														"data"
														: [ {
													Element:span
														"operation"
														:
													Element:span
														"delete"
														,
													Element:span
														"property"
														:
													Element:span
														"metadata.a.b.c"
														}, {
													Element:span
														"operation"
														:
													Element:span
														"set"
														,
													Element:span
														"property"
														:
													Element:span
														"metadata.a.b.name"
														,
													Element:span
														"value"
														:
													Element:span
														"foo"
														}, {
													Element:span
														"operation"
														:
													Element:span
														"set"
														,
													Element:span
														"property"
														:
													Element:span
														"metadata.a.b.count"
														,
													Element:span
														"value"
														:
													Element:span
														"42"
														} ] } }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Update read/delivery status example:
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														{
													Element:span
														"type"
														:
													Element:span
														"change"
														,
													Element:span
														"counter"
														:
													Element:span
														12
														,
													Element:span
														"timestamp"
														:
													Element:span
														"2015-01-19T09:15:43+00:00"
														,
													Element:span
														"body"
														: {
													Element:span
														"operation"
														:
													Element:span
														"patch"
														,
													Element:span
														"object"
														: {
													Element:span
														"type"
														:
													Element:span
														"Message"
														,
													Element:span
														"id"
														:
													Element:span
														"layer:///messages/f3cc7b32-3c92-11e4-baad-164230d1df67"
														,
													Element:span
														"url"
														:
													Element:span
														"https://api.layer.com/messages/940de862-3c96-11e4-baad-164230d1df67"
														},
													Element:span
														"data"
														: [ {
													Element:span
														"operation"
														:
													Element:span
														"set"
														,
													Element:span
														"property"
														:
													Element:span
														"recipient_status.fred\.flinstone"
														,
													Element:span
														"value"
														:
													Element:span
														"delivered"
														} ] } }
												Node:
												(type) c
												(layer)4
													Element:p
														Note that if the property is
													Element:code
														recipient_status.fred.flinstone
														, for example, then it will try to set:
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														{
													Element:span
														"recipient_status"
														: {
													Element:span
														"fred"
														: {
													Element:span
														"flinstone"
														:
													Element:span
														"delivered"
														} } }
												Node:
												(type) c
												(layer)4
													Element:p
														Instead, a property value of
													Element:code
														recipient_status.fred\\.flinstone
														will set:
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														{
													Element:span
														"recipient_status"
														: {
													Element:span
														"fred.flinstone"
														:
													Element:span
														"delivered"
														} }
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Update last message example:
													Element:a
														¶
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														{
													Element:span
														"type"
														:
													Element:span
														"change"
														,
													Element:span
														"counter"
														:
													Element:span
														13
														,
													Element:span
														"timestamp"
														:
													Element:span
														"2014-09-15T04:45:00+00:00"
														,
													Element:span
														"body"
														: {
													Element:span
														"operation"
														:
													Element:span
														"patch"
														,
													Element:span
														"object"
														: {
													Element:span
														"type"
														:
													Element:span
														"Conversation"
														,
													Element:span
														"id"
														:
													Element:span
														"layer:///conversations/f3cc7b32-3c92-11e4-baad-164230d1df67"
														,
													Element:span
														"url"
														:
													Element:span
														"https://api.layer.com/conversations/f3cc7b32-3c92-11e4-baad-164230d1df67"
														},
													Element:span
														"data"
														: [ {
													Element:span
														"operation"
														:
													Element:span
														"set"
														,
													Element:span
														"property"
														:
													Element:span
														"last_message"
														,
													Element:span
														"id"
														:
													Element:span
														"layer:///messages/940de862-3c96-11e4-baad-164230d1df67"
														} ] } }
												Node:
												(type) c
												(layer)4
													Element:p
														Note the use of
													Element:code
														id
														instead of
													Element:code
														value
														in this Layer Patch Operation; you may want to lookup the object and set the
													Element:code
														last_message
														property on the entire object.
												Node:
												(type) c
												(layer)4
													Element:a
														Push Tokens
												Node:
												(type) c
												(layer)4
													Element:a
														Websocket Recovery
