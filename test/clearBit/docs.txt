Node:
(type) c
(layer)0
	Element:article
			Node:
			(type) h1
			(layer)1
				Element:h1
					API Reference
			Node:
			(type) c
			(layer)1
				Element:blockquote
					Install the Ruby bindings using the
				Element:a
					.
				Element:em
					clearbit
					gem
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					# Use rubygems
				Element:span
					gem
				Element:span
					install
				Element:span
					clearbit
				Element:span
					# Or use bundler
				Element:span
					gem
				Element:span
					'clearbit'
			Node:
			(type) c
			(layer)1
				Element:blockquote
					Then require the gem.
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					require
				Element:span
					'clearbit'
			Node:
			(type) c
			(layer)1
				Element:blockquote
					Install the Node bindings using the
				Element:a
					.
				Element:em
					clearbit
					npm package
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					npm
				Element:span
					install
				Element:span
					clearbit
			Node:
			(type) c
			(layer)1
				Element:blockquote
					Then require the package.
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					clearbit
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'clearbit'
				Element:span
					);
			Node:
			(type) c
			(layer)1
				Element:blockquote
					Install the Python bindings using the
				Element:a
					.
				Element:em
					clearbit
					package
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					# Use PyPI
				Element:span
					pip
				Element:span
					install
				Element:span
					clearbit
				Element:span
					# Or use easy_install
				Element:span
					easy_install
				Element:span
					clearbit
			Node:
			(type) c
			(layer)1
				Element:blockquote
					Then import the package.
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					import
				Element:span
					clearbit
			Node:
			(type) c
			(layer)1
				Element:p
					Welcome to Clearbit’s API! You can use this API to access all our API endpoints, such as the
				Element:a
					Person API
					to look up email addresses, or the
				Element:a
					Company API
					to look up company information related to a domain name.
			Node:
			(type) c
			(layer)1
				Element:p
					The API is organized around
				Element:a
					REST
					. All requests should be made over SSL. All request and response bodies, including errors, are encoded in JSON.
			Node:
			(type) c
			(layer)1
				Element:p
					We also have some specific language bindings to make integration easier. You can switch the programming language of the examples with the tabs in the top right.
			Node:
			(type) c
			(layer)1
				Element:p
					Currently we support the following official client bindings:
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Ruby
				Element:li
				Element:a
					Node
				Element:li
				Element:a
					Python
				Element:li
				Element:a
					Go
				Element:li
				Element:a
					Java
			Node:
			(type) c
			(layer)1
				Element:p
					To play around with a few examples, we recommend a REST client called Postman. Simply tap the button below to import a pre-made collection of examples.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Authentication
			Node:
			(type) c
			(layer)1
				Element:blockquote
					Authentication using HTTP basic auth.
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					'https://person.clearbit.com/v1/people/email/alex@alexmaccaw.com'
				Element:span
					\
					-u
				Element:span
					{
					key
				Element:span
					}
					:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					require
				Element:span
					'clearbit'
				Element:span
					Clearbit
				Element:span
					.
				Element:span
					key
				Element:span
					=
				Element:span
					'{key}'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					clearbit
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'clearbit'
				Element:span
					)(
				Element:span
					'{key}'
				Element:span
					);
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					import
				Element:span
					clearbit
				Element:span
					clearbit
				Element:span
					.
				Element:span
					key
				Element:span
					=
				Element:span
					'{key}'
			Node:
			(type) c
			(layer)1
				Element:blockquote
					Alternatively pass a Bearer token in an Authorization header.
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					'https://person.clearbit.com/v1/people/email/alex@alexmaccaw.com'
				Element:span
					\
					-H
				Element:span
					'Authorization: Bearer {key}'
			Node:
			(type) c
			(layer)1
				Element:p
					Authentication is done via the API key which you can find in your
				Element:a
					account settings
					.
			Node:
			(type) c
			(layer)1
				Element:p
					Requests are authenticated using
				Element:a
					HTTP Basic Auth
					. Provide your API key as the basic auth username. You do not need to provide a password.
			Node:
			(type) c
			(layer)1
				Element:p
					Alternatively you can also pass your API key as a bearer token in an
				Element:code
					Authorization
					header.
			Node:
			(type) c
			(layer)1
				Element:p
					You can see your account’s API keys, and roll them if necessary, in the
				Element:a
					dashboard
					.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Errors
			Node:
			(type) c
			(layer)1
				Element:p
					Our API returns standard HTTP success or error status codes. For errors, we will also include extra information about what went wrong encoded in the response as JSON. The various HTTP status codes we might return are listed below.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								HTTP Status codes
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
								Code
							Element:th
								Title
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								200
							Element:td
								OK
							Element:td
								The request was successful.
							Element:tr
							Element:td
								201
							Element:td
								Created
							Element:td
								The resource was successfully created.
							Element:tr
							Element:td
								202
							Element:td
								Async created
							Element:td
								The resource was asynchronously created
							Element:tr
							Element:td
								400
							Element:td
								Bad request
							Element:td
								Bad request
							Element:tr
							Element:td
								401
							Element:td
								Unauthorized
							Element:td
								Your API key is invalid.
							Element:tr
							Element:td
								402
							Element:td
								Over quota
							Element:td
								Over plan quota on this endpoint.
							Element:tr
							Element:td
								404
							Element:td
								Not found
							Element:td
								The resource does not exist.
							Element:tr
							Element:td
								422
							Element:td
								Validation error
							Element:td
								A validation error occurred.
							Element:tr
							Element:td
								50X
							Element:td
								Internal Server Error
							Element:td
								An error occurred with our API.
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Error types
						Node:
						(type) c
						(layer)2
							Element:p
								All errors are returned in the form of JSON with a type and optional message.
						Node:
						(type) c
						(layer)2
							Element:blockquote
							Element:p
								Example error response.
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
							Element:span
							Element:span
								{
							Element:span
							Element:span
								"error"
							Element:span
								:
							Element:span
							Element:span
								{
							Element:span
							Element:span
								"type"
							Element:span
								:
							Element:span
							Element:span
								"params_invalid"
							Element:span
								,
							Element:span
							Element:span
								"message"
							Element:span
								:
							Element:span
							Element:span
								"Name is required"
							Element:span
							Element:span
								}
							Element:span
							Element:span
								}
							Element:span
						Node:
						(type) c
						(layer)2
							Element:table
							Element:thead
							Element:tr
							Element:th
								Type
							Element:th
								Description
							Element:tbody
							Element:tr
							Element:td
								params_invalid
							Element:td
								Your parameters were not valid.
							Element:tr
							Element:td
								unknown_record
							Element:td
								Record was not found.
							Element:tr
							Element:td
								unknown_route
							Element:td
								URL was not valid.
							Element:tr
							Element:td
								queued
							Element:td
								Lookup queued. Try this request again in a few minutes.
							Element:tr
							Element:td
								rate_limit
							Element:td
								The request has been rate limited.
							Element:tr
							Element:td
								api_error
							Element:td
								Internal API error.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Rate limiting
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Check to see how many requests we have left:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					$ curl -i https://person.clearbit.com HTTP/1.1 200 OK Date: Mon, 01 Jul 2014 21:20:00 GMT Status: 200 OK X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4050 X-RateLimit-Reset: 3300
			Node:
			(type) c
			(layer)1
				Element:p
					You can make 600 requests per minute to each API, unless you are using Streaming. Check the returned HTTP headers of any API request to see your current rate limit status. If you’re running into this error or think you’ll need a higher rate limit, drop us a line at
				Element:a
					support@clearbit.com
					. The Streaming version of each API is limited to 5 concurrent connections rather than being limited by the number of requests per minute.
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Example rate limit error response.
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					HTTP/1.1 400 Bad Request X-RateLimit-Limit: 500 X-RateLimit-Remaining: 0 X-RateLimit-Reset: 1402010983 Content-Type: application/json { "error": { "type": "rate_limit", "message": "Rate limit exceeded. Limit is 600 requests per minute. Rate limit will be reset in 50 seconds." } }
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Header
				Element:th
					Name
				Element:tbody
				Element:tr
				Element:td
				Element:code
					X-RateLimit-Limit
				Element:td
					The maximum number of requests that the consumer is permitted to make per minute.
				Element:tr
				Element:td
				Element:code
					X-RateLimit-Remaining
				Element:td
					The number of requests remaining in the current rate limit window.
				Element:tr
				Element:td
				Element:code
					X-RateLimit-Reset
				Element:td
					The time at which the current rate limit window resets in UTC epoch seconds.
			Node:
			(type) c
			(layer)1
				Element:p
					Once you go over the rate limit you will receive a
				Element:code
					rate_limit
					error response.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Versioning
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					You can pass a specific API version like so:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					'https://person.clearbit.com/v1/people/email/alex@clearbit.com'
				Element:span
					\
					-H
				Element:span
					'API-Version: 2016-08-31'
				Element:span
					\
					-u
				Element:span
					{
					key
				Element:span
					}
					:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					Clearbit
				Element:span
					::
				Element:span
					Person
				Element:span
					.
				Element:span
					version
				Element:span
					=
				Element:span
					'2016-08-31'
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					clearbit
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'clearbit'
				Element:span
					)(
				Element:span
					'{key}'
				Element:span
					);
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Person
				Element:span
					.
				Element:span
					setVersion
				Element:span
					(
				Element:span
					'2016-08-31'
				Element:span
					);
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					import
				Element:span
					clearbit
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Person
				Element:span
					.
				Element:span
					version
				Element:span
					=
				Element:span
					'2016-08-31'
			Node:
			(type) c
			(layer)1
				Element:p
					When we make backwards-incompatible changes to any of our APIs, we release new dated versions. Each API we provide has a separate version (listed below).
			Node:
			(type) c
			(layer)1
				Element:p
					All requests will use your
				Element:a
					account API settings
					, unless you override the API version by sending a
				Element:code
					API-Version
					header identifying the API version to use. (For libraries and bindings, this is done by setting an API version property as in the code examples.)
			Node:
			(type) c
			(layer)1
				Element:p
					Any webhooks triggered will also use a request specified version before falling back to your account’s version.
			Node:
			(type) c
			(layer)1
				Element:p
					You can visit
				Element:a
					your dashboard
					to upgrade your API version. You can also see a full API version
				Element:a
					changelog here
					.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					API
				Element:th
					Current Version
				Element:tbody
				Element:tr
				Element:td
					Person API
				Element:td
					2016-08-31
				Element:tr
				Element:td
					Company API
				Element:td
					2017-01-02
				Element:tr
				Element:td
					Watchlist API
				Element:td
					2015-11-13
			Node:
			(type) h1
			(layer)1
				Element:h1
					Webhooks
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					The incoming webhook POST request’s body is formatted as JSON, and looks like this:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"id"
				Element:span
					:
				Element:span
				Element:span
					"custom_id"
				Element:span
					,
				Element:span
				Element:span
					"status"
				Element:span
					:
				Element:span
				Element:span
					200
				Element:span
					,
				Element:span
				Element:span
					"body"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"givenName"
				Element:span
					:
				Element:span
				Element:span
					"Alex"
				Element:span
					,
				Element:span
				Element:span
					"familyName"
				Element:span
					:
				Element:span
				Element:span
					"MacCaw"
				Element:span
					,
				Element:span
				Element:span
					"fullName"
				Element:span
					:
				Element:span
				Element:span
					"Alex MacCaw"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"//"
				Element:span
					:
				Element:span
				Element:span
					"..."
				Element:span
				Element:span
					}
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:blockquote
					Here’s how you’d process a webhook request in Rails.
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					# webhook_controller.rb
				Element:span
					class
				Element:span
					WebhookController
				Element:span
					<
				Element:span
					ApplicationController
				Element:span
					def
				Element:span
					clearbit
				Element:span
					webhook
				Element:span
					=
				Element:span
					Clearbit
				Element:span
					::
				Element:span
					Webhook
				Element:span
					.
				Element:span
					new
				Element:span
					(
				Element:span
					env
				Element:span
					)
				Element:span
					case
				Element:span
					webhook
				Element:span
					.
				Element:span
					type
				Element:span
					when
				Element:span
					'person'
				Element:span
					person
				Element:span
					=
				Element:span
					Person
				Element:span
					.
				Element:span
					find
				Element:span
					(
				Element:span
					webhook
				Element:span
					.
				Element:span
					id
				Element:span
					)
				Element:span
					person
				Element:span
					.
				Element:span
					clearbit
				Element:span
					=
				Element:span
					webhook
				Element:span
					.
				Element:span
					body
				Element:span
					person
				Element:span
					.
				Element:span
					unknown
				Element:span
					=
				Element:span
					webhook
				Element:span
					.
				Element:span
					status
				Element:span
					==
				Element:span
					404
				Element:span
					person
				Element:span
					.
				Element:span
					save
				Element:span
					end
				Element:span
					head
				Element:span
					200
				Element:span
					end
				Element:span
					end
				Element:span
					# routes.rb
				Element:span
					post
				Element:span
					'webhook/clearbit'
				Element:span
					=>
				Element:span
					'webhook#clearbit'
			Node:
			(type) c
			(layer)1
				Element:blockquote
					And here’s how you’d process a webhook request in Sinatra.
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					post
				Element:span
					'/v1/webhooks/clearbit'
				Element:span
					do
				Element:span
					webhook
				Element:span
					=
				Element:span
					Clearbit
				Element:span
					::
				Element:span
					Webhook
				Element:span
					.
				Element:span
					new
				Element:span
					(
				Element:span
					env
				Element:span
					)
				Element:span
					case
				Element:span
					webhook
				Element:span
					.
				Element:span
					type
				Element:span
					when
				Element:span
					'person'
				Element:span
					person
				Element:span
					=
				Element:span
					Person
				Element:span
					[
				Element:span
					webhook
				Element:span
					.
				Element:span
					id
				Element:span
					]
				Element:span
					person
				Element:span
					.
				Element:span
					clearbit
				Element:span
					=
				Element:span
					webhook
				Element:span
					.
				Element:span
					body
				Element:span
					person
				Element:span
					.
				Element:span
					unknown
				Element:span
					=
				Element:span
					webhook
				Element:span
					.
				Element:span
					status
				Element:span
					==
				Element:span
					404
				Element:span
					person
				Element:span
					.
				Element:span
					save
				Element:span
					end
				Element:span
					200
				Element:span
					end
			Node:
			(type) c
			(layer)1
				Element:p
					Certain requests, such as looking up an email address, may have an asynchronous response (since there’s some complex background processing involved). For these requests you can either poll the endpoint, or give us a webhook URL you want to be called when the request has finished processing.
			Node:
			(type) c
			(layer)1
				Element:p
					You can set a webhook URL endpoint in your
				Element:a
					account settings
					to be used with all requests. Alternatively, you can pass along a
				Element:code
					webhook_url
					query parameter along with requests.
			Node:
			(type) c
			(layer)1
				Element:p
					To link up your requests to webhooks you can pass a
				Element:code
					webhook_id
					parameter when making these calls, containing a custom defined webhook identifier. We’ll pass this identifier back to you with the webhook request.
			Node:
			(type) c
			(layer)1
				Element:p
					If you return anything other than a
				Element:code
					HTTP 200
					status to the webhook POST then we’ll try to deliver the webhook up to 5 times with an exponential backoff.
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Response POST body
									Node:
									(type) c
									(layer)3
										Element:table
										Element:thead
										Element:tr
										Element:th
											Attribute
										Element:th
											Description
										Element:tbody
										Element:tr
										Element:td
										Element:code
											id
										Element:td
										Element:strong
											string
											Custom user-supplied webhook identifier.
										Element:tr
										Element:td
										Element:code
											type
										Element:td
										Element:strong
											string
											Either
										Element:code
											person
											,
										Element:code
											company
											,
										Element:code
											person_company
											, or
										Element:code
											candidate_match
											.
										Element:tr
										Element:td
										Element:code
											status
										Element:td
										Element:strong
											integer
											Either a
										Element:code
											200
											status code (record was found), or a
										Element:code
											404
											status code (record was not found).
										Element:tr
										Element:td
										Element:code
											body
										Element:td
										Element:strong
											hash
											Result object, either
										Element:code
											null
											or the encoded person.
									Node:
									(type) c
									(layer)3
										Element:p
											For testing webhooks, we recommend a useful service called
										Element:a
											requestb.in
											, which allows you to inspect arbitrary webhook requests.
									Node:
									(type) c
									(layer)3
										Element:h2
											Securing webhooks
									Node:
									(type) c
									(layer)3
										Element:p
											To validate a webhook came from Clearbit we suggest verifying the webhook payloads with the
										Element:code
											X-Request-Signature
											header (which we pass with every webhook). If you’re using one of our client bindings to parse webhooks, say the Ruby library, we’ll do this for you.
									Node:
									(type) c
									(layer)3
										Element:table
										Element:thead
										Element:tr
										Element:th
											Header
										Element:th
											Name
										Element:tbody
										Element:tr
										Element:td
										Element:code
											X-Request-Signature
										Element:td
											A SHA1 HMAC hexdigest computed with your API key and the raw body of the request. Make sure to strip the prefix (
										Element:code
											sk_
											,
										Element:code
											pk_
											) from the start of the key before generating the HMAC.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Streaming
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					To look up a person:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					result
				Element:span
					=
				Element:span
					Clearbit
				Element:span
					::
				Element:span
					Enrichment
				Element:span
					.
				Element:span
					find
				Element:span
					(
				Element:span
					email:
				Element:span
					'alex@alexmaccaw.com'
				Element:span
					,
				Element:span
					stream:
				Element:span
					true
				Element:span
					)
				Element:span
					if
				Element:span
					person
				Element:span
					=
				Element:span
					result
				Element:span
					.
				Element:span
					person
				Element:span
					puts
				Element:span
					"Name:
				Element:span
					#{
				Element:span
					person
				Element:span
					.
				Element:span
					name
				Element:span
					.
				Element:span
					full_name
				Element:span
					}
				Element:span
					"
				Element:span
					end
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					'https://person-stream.clearbit.com/v1/people/email/alex@alexmaccaw.com'
				Element:span
					\
					-u
				Element:span
					{
					key
				Element:span
					}
					:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					clearbit
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'clearbit'
				Element:span
					)(
				Element:span
					'{key}'
				Element:span
					);
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Person
				Element:span
					.
				Element:span
					find
				Element:span
					({
				Element:span
					email
				Element:span
					:
				Element:span
					'alex@clearbit.com'
				Element:span
					,
				Element:span
					stream
				Element:span
					:
				Element:span
					true
				Element:span
					})
				Element:span
					.
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					person
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					'Name: '
				Element:span
					,
				Element:span
					person
				Element:span
					.
				Element:span
					name
				Element:span
					.
				Element:span
					fullName
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					person
				Element:span
					=
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Person
				Element:span
					.
				Element:span
					find
				Element:span
					(
				Element:span
					email
				Element:span
					=
				Element:span
					'alex@alexmaccaw.com'
				Element:span
					,
				Element:span
					stream
				Element:span
					=
				Element:span
					True
				Element:span
					)
				Element:span
					if
				Element:span
					person
				Element:span
					!=
				Element:span
					None
				Element:span
					:
				Element:span
					print
				Element:span
					"Name: "
				Element:span
					+
				Element:span
					person
				Element:span
					[
				Element:span
					'name'
				Element:span
					][
				Element:span
					'fullName'
				Element:span
					]
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Or to look up a company:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					company
				Element:span
					=
				Element:span
					Clearbit
				Element:span
					::
				Element:span
					Company
				Element:span
					.
				Element:span
					find
				Element:span
					(
				Element:span
					domain:
				Element:span
					'stripe.com'
				Element:span
					,
				Element:span
					stream:
				Element:span
					true
				Element:span
					)
				Element:span
					if
				Element:span
					company
				Element:span
					puts
				Element:span
					"Name:
				Element:span
					#{
				Element:span
					company
				Element:span
					.
				Element:span
					name
				Element:span
					}
				Element:span
					"
				Element:span
					end
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					'https://company-stream.clearbit.com/v1/companies/domain/stripe.com'
				Element:span
					\
					-u
				Element:span
					{
					key
				Element:span
					}
					:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					clearbit
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'clearbit'
				Element:span
					)(
				Element:span
					'{key}'
				Element:span
					);
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Company
				Element:span
					.
				Element:span
					find
				Element:span
					({
				Element:span
					domain
				Element:span
					:
				Element:span
					'stripe.com'
				Element:span
					,
				Element:span
					stream
				Element:span
					:
				Element:span
					true
				Element:span
					})
				Element:span
					.
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					company
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					'Name: '
				Element:span
					,
				Element:span
					company
				Element:span
					.
				Element:span
					name
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					company
				Element:span
					=
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Company
				Element:span
					.
				Element:span
					find
				Element:span
					(
				Element:span
					domain
				Element:span
					=
				Element:span
					'stripe.com'
				Element:span
					,
				Element:span
					stream
				Element:span
					=
				Element:span
					True
				Element:span
					)
				Element:span
					if
				Element:span
					company
				Element:span
					!=
				Element:span
					None
				Element:span
					:
				Element:span
					print
				Element:span
					"Name: "
				Element:span
					+
				Element:span
					company
				Element:span
					[
				Element:span
					'name'
				Element:span
					]
			Node:
			(type) c
			(layer)1
				Element:p
					An alternative to using webhooks is our
				Element:em
					streaming API
					. This API is ideal if you don’t mind long lived requests (e.g. you’re making requests to Clearbit from a messaging queue).
			Node:
			(type) c
			(layer)1
				Element:p
					When we need to do an asynchronous lookup, say when looking up a person by email address, rather than requiring you to poll the endpoint the streaming API will simply keep the connection open until we have some data.
			Node:
			(type) c
			(layer)1
				Element:p
					Requests made to the streaming API will never return a HTTP 202 status response, and can be held open for up to a minute.
			Node:
			(type) c
			(layer)1
				Element:p
					The only difference between making calls to the normal and streaming API is the subdomain -
				Element:code
					person-stream.clearbit.com
					rather than
				Element:code
					person.clearbit.com
					.
			Node:
			(type) h1
			(layer)1
				Element:h1
					OAuth
			Node:
			(type) c
			(layer)1
				Element:blockquote
					For you Ruby coders, we have a drop-in pre-written
				Element:a
					OmniAuth integration
					.
			Node:
			(type) c
			(layer)1
				Element:p
					You can build apps on top of Clearbit’s platform and provide seamless authentication using our OAuth 2 endpoint. To get started, first request
				Element:a
					client credentials
					from us.
			Node:
			(type) c
			(layer)1
				Element:p
					The relevent endpoints are listed below:
			Node:
			(type) c
			(layer)1
				Element:h2
					Create a request token
			Node:
			(type) c
			(layer)1
				Element:p
					To create an OAuth request token, send your users to the endpoint below passing in the required query parameters. After authorization, users will be redirected back to your application. From there you access your newly generated request token as the
				Element:code
					code
					query parameter.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET https://clearbit.com/oauth/authorize
			Node:
			(type) c
			(layer)1
				Element:h3
					Query params
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Parameter
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:code
					client_id
				Element:td
				Element:strong
					string
				Element:em
					(required)
					Your application’s client ID
				Element:tr
				Element:td
				Element:code
					redirect_uri
				Element:td
				Element:strong
					string
				Element:em
					(required)
					URL to redirect users back to
			Node:
			(type) c
			(layer)1
				Element:h2
					Create an access token
				Element:blockquote
				Element:p
					A response to generate an access token looks like this:
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"access_token"
				Element:span
					:
				Element:span
				Element:span
					"sk_123"
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					Once a user has been through the OAuth flow and been redirected back to your application, you can create an access token which you can use for future authentication.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					POST https://clearbit.com/oauth/access_token
			Node:
			(type) c
			(layer)1
				Element:h3
					Query params
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Parameter
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:code
					client_id
				Element:td
				Element:strong
					string
				Element:em
					(required)
					Your application’s client ID
				Element:tr
				Element:td
				Element:code
					client_secret
				Element:td
				Element:strong
					string
				Element:em
					(required)
					Your application’s client secret
				Element:tr
				Element:td
				Element:code
					code
				Element:td
				Element:strong
					string
				Element:em
					(required)
					Your request token generated in the last step
			Node:
			(type) h1
			(layer)1
				Element:h1
					Enrichment API
			Node:
			(type) c
			(layer)1
				Element:p
					The Enrichment API lets you look up person and company data based on an email or domain. For example, you could retrieve a person’s name, location and social handles from an email. Or you could lookup a company’s location, headcount or logo based on their domain name.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					Note: You’ll only be charged once per 30 day period for each unique request, so if you didn’t store the data properly or need to re-run a series of requests for any reason, those won’t count against your allotment.
			Node:
			(type) c
			(layer)1
				Element:h2
					Combined API
				Element:blockquote
				Element:p
					To lookup both a company and person based on an email address:
				Element:pre
				Element:code
					curl
				Element:span
					'https://person-stream.clearbit.com/v2/combined/find?email=alex@alexmaccaw.com'
				Element:span
					\
					-u
				Element:span
					{
					key
				Element:span
					}
					:
				Element:pre
				Element:code
				Element:span
					response
				Element:span
					=
				Element:span
					Clearbit
				Element:span
					::
				Element:span
					Enrichment
				Element:span
					.
				Element:span
					find
				Element:span
					(
				Element:span
					email:
				Element:span
					'alex@alexmaccaw.com'
				Element:span
					,
				Element:span
					stream:
				Element:span
					true
				Element:span
					)
				Element:span
					if
				Element:span
					person
				Element:span
					=
				Element:span
					response
				Element:span
					.
				Element:span
					person
				Element:span
					puts
				Element:span
					person
				Element:span
					.
				Element:span
					name
				Element:span
					.
				Element:span
					fullName
				Element:span
					end
				Element:span
					if
				Element:span
					company
				Element:span
					=
				Element:span
					response
				Element:span
					.
				Element:span
					company
				Element:span
					puts
				Element:span
					company
				Element:span
					.
				Element:span
					name
				Element:span
					end
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					clearbit
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'clearbit'
				Element:span
					)(
				Element:span
					'{key}'
				Element:span
					);
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Enrichment
				Element:span
					.
				Element:span
					find
				Element:span
					({
				Element:span
					email
				Element:span
					:
				Element:span
					'alex@alexmaccaw.com'
				Element:span
					,
				Element:span
					stream
				Element:span
					:
				Element:span
					true
				Element:span
					})
				Element:span
					.
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					response
				Element:span
					)
				Element:span
					{
				Element:span
					var
				Element:span
					person
				Element:span
					=
				Element:span
					response
				Element:span
					.
				Element:span
					person
				Element:span
					;
				Element:span
					var
				Element:span
					company
				Element:span
					=
				Element:span
					response
				Element:span
					.
				Element:span
					company
				Element:span
					;
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					'Name: '
				Element:span
					,
				Element:span
					person
				Element:span
					&&
				Element:span
					person
				Element:span
					.
				Element:span
					name
				Element:span
					.
				Element:span
					fullName
				Element:span
					);
				Element:span
					})
				Element:span
					.
				Element:span
					catch
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					err
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					error
				Element:span
					(
				Element:span
					err
				Element:span
					);
				Element:span
					});
				Element:pre
				Element:code
				Element:span
					response
				Element:span
					=
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Enrichment
				Element:span
					.
				Element:span
					find
				Element:span
					(
				Element:span
					email
				Element:span
					=
				Element:span
					'alex@alexmaccaw.com'
				Element:span
					,
				Element:span
					stream
				Element:span
					=
				Element:span
					True
				Element:span
					)
				Element:span
					if
				Element:span
					response
				Element:span
					[
				Element:span
					'person'
				Element:span
					]
				Element:span
					is
				Element:span
					not
				Element:span
					None
				Element:span
					:
				Element:span
					print
				Element:span
					response
				Element:span
					[
				Element:span
					'person'
				Element:span
					][
				Element:span
					'name'
				Element:span
					][
				Element:span
					'fullName'
				Element:span
					]
				Element:span
					if
				Element:span
					response
				Element:span
					[
				Element:span
					'company'
				Element:span
					]
				Element:span
					is
				Element:span
					not
				Element:span
					None
				Element:span
					:
				Element:span
					print
				Element:span
					response
				Element:span
					[
				Element:span
					'company'
				Element:span
					][
				Element:span
					'name'
				Element:span
					]
				Element:blockquote
				Element:p
					The
				Element:code
					stream
					option ensures that the request blocks until Clearbit has found some data on both the person & company. For cached information this will return in the region of 300 milliseconds, for uncached requests 2-4 seconds. If speed is key, you can omit the
				Element:code
					stream
					option and try the request again later (if you receive a pending response). Alternatively you can use our
				Element:a
					webhook
					API.
				Element:pre
				Element:code
					curl
				Element:span
					'https://person.clearbit.com/v2/combined/find?email=alex@alexmaccaw.com'
				Element:span
					\
					-u
				Element:span
					{
					key
				Element:span
					}
					:
				Element:pre
				Element:code
				Element:span
					response
				Element:span
					=
				Element:span
					Clearbit
				Element:span
					::
				Element:span
					Enrichment
				Element:span
					.
				Element:span
					find
				Element:span
					(
				Element:span
					email:
				Element:span
					'alex@alexmaccaw.com'
				Element:span
					)
				Element:span
					if
				Element:span
					response
				Element:span
					.
				Element:span
					pending?
				Element:span
					# Lookup queued - try again later
				Element:span
					end
				Element:span
					if
				Element:span
					person
				Element:span
					=
				Element:span
					response
				Element:span
					.
				Element:span
					person
				Element:span
					puts
				Element:span
					person
				Element:span
					.
				Element:span
					name
				Element:span
					.
				Element:span
					fullName
				Element:span
					end
				Element:span
					if
				Element:span
					company
				Element:span
					=
				Element:span
					response
				Element:span
					.
				Element:span
					company
				Element:span
					puts
				Element:span
					company
				Element:span
					.
				Element:span
					name
				Element:span
					end
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					clearbit
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'clearbit'
				Element:span
					)(
				Element:span
					'{key}'
				Element:span
					);
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Enrichment
				Element:span
					.
				Element:span
					find
				Element:span
					({
				Element:span
					email
				Element:span
					:
				Element:span
					'alex@alexmaccaw.com'
				Element:span
					})
				Element:span
					.
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					response
				Element:span
					)
				Element:span
					{
				Element:span
					var
				Element:span
					person
				Element:span
					=
				Element:span
					response
				Element:span
					.
				Element:span
					person
				Element:span
					;
				Element:span
					var
				Element:span
					company
				Element:span
					=
				Element:span
					response
				Element:span
					.
				Element:span
					company
				Element:span
					;
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					'Name: '
				Element:span
					,
				Element:span
					person
				Element:span
					&&
				Element:span
					person
				Element:span
					.
				Element:span
					name
				Element:span
					.
				Element:span
					fullName
				Element:span
					);
				Element:span
					})
				Element:span
					.
				Element:span
					catch
				Element:span
					(
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Enrichment
				Element:span
					.
				Element:span
					QueuedError
				Element:span
					,
				Element:span
					function
				Element:span
					(
				Element:span
					err
				Element:span
					)
				Element:span
					{
				Element:span
					// Lookup is queued
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					err
				Element:span
					);
				Element:span
					})
				Element:span
					.
				Element:span
					catch
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					err
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					error
				Element:span
					(
				Element:span
					err
				Element:span
					);
				Element:span
					});
				Element:pre
				Element:code
				Element:span
					response
				Element:span
					=
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Enrichment
				Element:span
					.
				Element:span
					find
				Element:span
					(
				Element:span
					email
				Element:span
					=
				Element:span
					'alex@alexmaccaw.com'
				Element:span
					)
				Element:span
					if
				Element:span
					'pending'
				Element:span
					in
				Element:span
					response
				Element:span
					:
				Element:span
					# Lookup queued - try again later
				Element:span
					if
				Element:span
					'person'
				Element:span
					in
				Element:span
					response
				Element:span
					:
				Element:span
					print
				Element:span
					response
				Element:span
					[
				Element:span
					'person'
				Element:span
					][
				Element:span
					'name'
				Element:span
					][
				Element:span
					'fullName'
				Element:span
					]
				Element:span
					if
				Element:span
					'company'
				Element:span
					in
				Element:span
					response
				Element:span
					:
				Element:span
					print
				Element:span
					response
				Element:span
					[
				Element:span
					'company'
				Element:span
					][
				Element:span
					'name'
				Element:span
					]
			Node:
			(type) c
			(layer)1
				Element:p
					A common use-case is looking up a person and company simultaneously based on a email address. To save you making two requests to do this, we offer a combined lookup API.
			Node:
			(type) c
			(layer)1
				Element:p
					This endpoint expects an email address, and will return an object containing both the person and company (if found). A call to the combined lookup will only count as one API call.
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					The API response object looks like the following. Note that either the ‘person’ or ‘company’ attribute can be nil if not found. For a full look at the attributes returned, see either the
				Element:a
					Person
					or
				Element:a
					Company
					attribute sections.
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"person"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"id"
				Element:span
					:
				Element:span
				Element:span
					"d54c54ad-40be-4305-8a34-0ab44710b90d"
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"fullName"
				Element:span
					:
				Element:span
				Element:span
					"Alex MacCaw"
				Element:span
					,
				Element:span
				Element:span
					"givenName"
				Element:span
					:
				Element:span
				Element:span
					"Alex"
				Element:span
					,
				Element:span
				Element:span
					"familyName"
				Element:span
					:
				Element:span
				Element:span
					"MacCaw"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"email"
				Element:span
					:
				Element:span
				Element:span
					"alex@alexmaccaw.com"
				Element:span
					,
				Element:span
				Element:span
					"//"
				Element:span
					:
				Element:span
				Element:span
					"..."
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"company"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"id"
				Element:span
					:
				Element:span
				Element:span
					"c5a6a9c5-303a-455a-935c-9dffcd2ed756"
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Alex MacCaw"
				Element:span
					,
				Element:span
				Element:span
					"legalName"
				Element:span
					:
				Element:span
				Element:span
					"Alex MacCaw"
				Element:span
					,
				Element:span
				Element:span
					"domain"
				Element:span
					:
				Element:span
				Element:span
					"alexmaccaw.com"
				Element:span
					,
				Element:span
				Element:span
					"//"
				Element:span
					:
				Element:span
				Element:span
					"..."
				Element:span
				Element:span
					}
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														HTTP Request
												Node:
												(type) c
												(layer)4
													Element:p
													Element:code
														GET https://person.clearbit.com/v2/combined/find?email=:email
												Node:
												(type) c
												(layer)4
													Element:p
														(Where
													Element:code
														:email
														is the person’s email address)
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														HTTP GET params
												Node:
												(type) c
												(layer)4
													Element:p
														Alongside the email address you may also provide any additional attributes you have about the person, such as their given and family names. Including more detail will help us be more accurate when searching.
												Node:
												(type) c
												(layer)4
													Element:p
														The supported parameters are:
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														param
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														email
													Element:td
													Element:strong
														string (required)
														The email address to look up.
													Element:tr
													Element:td
														webhook_url
													Element:td
													Element:strong
														string
														A
													Element:a
														webhook URL
														that results will be sent to.
													Element:tr
													Element:td
														given_name
													Element:td
													Element:strong
														string
														First name of person.
													Element:tr
													Element:td
														family_name
													Element:td
													Element:strong
														string
														Last name of person. If you have this, passing this is strongly recommended to improve match rates.
													Element:tr
													Element:td
														ip_address
													Element:td
													Element:strong
														string
														IP address of the person. If you have this, passing this is strongly recommended to improve match rates.
													Element:tr
													Element:td
														location
													Element:td
													Element:strong
														string
														The city or country where the person resides.
													Element:tr
													Element:td
														company
													Element:td
													Element:strong
														string
														The name of the person’s employer.
													Element:tr
													Element:td
														company_domain
													Element:td
													Element:strong
														string
														The domain for the person’s employer.
													Element:tr
													Element:td
														linkedin
													Element:td
													Element:strong
														string
														The LinkedIn URL for the person.
													Element:tr
													Element:td
														twitter
													Element:td
													Element:strong
														string
														The Twitter handle for the person.
													Element:tr
													Element:td
														facebook
													Element:td
													Element:strong
														string
														The Facebook URL for the person.
													Element:tr
													Element:td
														webhook_id
													Element:td
													Element:strong
														string
														Custom identifier for the webhook request.
													Element:tr
													Element:td
														subscribe
													Element:td
													Element:strong
														boolean
														Set to
													Element:code
														true
														to subscribe to the changes to the person.
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Response Types
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Code
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														200
													Element:td
														Successful lookup, person & company encoded in the response body.
													Element:tr
													Element:td
														202
													Element:td
														Asynchronously looking up the person & company.
													Element:tr
													Element:td
														404
													Element:td
														Neither the Person or the Company were found.
												Node:
												(type) c
												(layer)4
													Element:h2
														Person API
												Node:
												(type) c
												(layer)4
													Element:p
														The Person API lets you retrieve social information associated with an email address, such as a person’s name, location and Twitter handle.
												Node:
												(type) c
												(layer)4
													Element:h3
														Attributes
												Node:
												(type) c
												(layer)4
													Element:p
														The dot notation indicates that the property is one level deep inside a hash. No attributes are guaranteed to be present, and if we can’t find data on a specific network, then we’ll return a null value for that attribute.
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														The JSON encoded response looks like this.
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														{
													Element:span
													Element:span
														"id"
													Element:span
														:
													Element:span
													Element:span
														"d54c54ad-40be-4305-8a34-0ab44710b90d"
													Element:span
														,
													Element:span
													Element:span
														"name"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"fullName"
													Element:span
														:
													Element:span
													Element:span
														"Alex MacCaw"
													Element:span
														,
													Element:span
													Element:span
														"givenName"
													Element:span
														:
													Element:span
													Element:span
														"Alex"
													Element:span
														,
													Element:span
													Element:span
														"familyName"
													Element:span
														:
													Element:span
													Element:span
														"MacCaw"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"email"
													Element:span
														:
													Element:span
													Element:span
														"alex@alexmaccaw.com"
													Element:span
														,
													Element:span
													Element:span
														"gender"
													Element:span
														:
													Element:span
													Element:span
														"male"
													Element:span
														,
													Element:span
													Element:span
														"location"
													Element:span
														:
													Element:span
													Element:span
														"San Francisco, CA, US"
													Element:span
														,
													Element:span
													Element:span
														"timeZone"
													Element:span
														:
													Element:span
													Element:span
														"America/Los_Angeles"
													Element:span
														,
													Element:span
													Element:span
														"utcOffset"
													Element:span
														:
													Element:span
													Element:span
														-8
													Element:span
														,
													Element:span
													Element:span
														"geo"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"city"
													Element:span
														:
													Element:span
													Element:span
														"San Francisco"
													Element:span
														,
													Element:span
													Element:span
														"state"
													Element:span
														:
													Element:span
													Element:span
														"California"
													Element:span
														,
													Element:span
													Element:span
														"stateCode"
													Element:span
														:
													Element:span
													Element:span
														"CA"
													Element:span
														,
													Element:span
													Element:span
														"country"
													Element:span
														:
													Element:span
													Element:span
														"United States"
													Element:span
														,
													Element:span
													Element:span
														"countryCode"
													Element:span
														:
													Element:span
													Element:span
														"US"
													Element:span
														,
													Element:span
													Element:span
														"lat"
													Element:span
														:
													Element:span
													Element:span
														37.7749295
													Element:span
														,
													Element:span
													Element:span
														"lng"
													Element:span
														:
													Element:span
													Element:span
														-122.4194155
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"bio"
													Element:span
														:
													Element:span
													Element:span
														"O'Reilly author, software engineer & traveller. Founder of https://clearbit.com"
													Element:span
														,
													Element:span
													Element:span
														"site"
													Element:span
														:
													Element:span
													Element:span
														"http://alexmaccaw.com"
													Element:span
														,
													Element:span
													Element:span
														"avatar"
													Element:span
														:
													Element:span
													Element:span
														"https://d1ts43dypk8bqh.cloudfront.net/v1/avatars/d54c54ad-40be-4305-8a34-0ab44710b90d"
													Element:span
														,
													Element:span
													Element:span
														"employment"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"domain"
													Element:span
														:
													Element:span
													Element:span
														"clearbit.com"
													Element:span
														,
													Element:span
													Element:span
														"name"
													Element:span
														:
													Element:span
													Element:span
														"Clearbit"
													Element:span
														,
													Element:span
													Element:span
														"title"
													Element:span
														:
													Element:span
													Element:span
														"Founder and CEO"
													Element:span
														,
													Element:span
													Element:span
														"role"
													Element:span
														:
													Element:span
													Element:span
														"ceo"
													Element:span
														,
													Element:span
													Element:span
														"seniority"
													Element:span
														:
													Element:span
													Element:span
														"executive"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"facebook"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"handle"
													Element:span
														:
													Element:span
													Element:span
														"amaccaw"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"github"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"handle"
													Element:span
														:
													Element:span
													Element:span
														"maccman"
													Element:span
														,
													Element:span
													Element:span
														"avatar"
													Element:span
														:
													Element:span
													Element:span
														"https://avatars.githubusercontent.com/u/2142?v=2"
													Element:span
														,
													Element:span
													Element:span
														"company"
													Element:span
														:
													Element:span
													Element:span
														"Clearbit"
													Element:span
														,
													Element:span
													Element:span
														"blog"
													Element:span
														:
													Element:span
													Element:span
														"http://alexmaccaw.com"
													Element:span
														,
													Element:span
													Element:span
														"followers"
													Element:span
														:
													Element:span
													Element:span
														2932
													Element:span
														,
													Element:span
													Element:span
														"following"
													Element:span
														:
													Element:span
													Element:span
														94
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"twitter"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"handle"
													Element:span
														:
													Element:span
													Element:span
														"maccaw"
													Element:span
														,
													Element:span
													Element:span
														"id"
													Element:span
														:
													Element:span
													Element:span
														"2006261"
													Element:span
														,
													Element:span
													Element:span
														"bio"
													Element:span
														:
													Element:span
													Element:span
														"O'Reilly author, software engineer & traveller. Founder of https://clearbit.com"
													Element:span
														,
													Element:span
													Element:span
														"followers"
													Element:span
														:
													Element:span
													Element:span
														15248
													Element:span
														,
													Element:span
													Element:span
														"following"
													Element:span
														:
													Element:span
													Element:span
														1711
													Element:span
														,
													Element:span
													Element:span
														"location"
													Element:span
														:
													Element:span
													Element:span
														"San Francisco"
													Element:span
														,
													Element:span
													Element:span
														"site"
													Element:span
														:
													Element:span
													Element:span
														"http://alexmaccaw.com"
													Element:span
														,
													Element:span
													Element:span
														"avatar"
													Element:span
														:
													Element:span
													Element:span
														"https://pbs.twimg.com/profile_images/1826201101/297606_10150904890650705_570400704_21211347_1883468370_n.jpeg"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"linkedin"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"handle"
													Element:span
														:
													Element:span
													Element:span
														"pub/alex-maccaw/78/929/ab5"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"googleplus"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"handle"
													Element:span
														:
													Element:span
													Element:span
														null
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"aboutme"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"handle"
													Element:span
														:
													Element:span
													Element:span
														"maccaw"
													Element:span
														,
													Element:span
													Element:span
														"bio"
													Element:span
														:
													Element:span
													Element:span
														"Software engineer & traveller. Walker, skier, reader, tennis player, breather, ginger beer drinker, scooterer & generally enjoying things :)"
													Element:span
														,
													Element:span
													Element:span
														"avatar"
													Element:span
														:
													Element:span
													Element:span
														"http://o.aolcdn.com/dims-global/dims/ABOUTME/5/803/408/80/http://d3mod6n032mdiz.cloudfront.net/thumb2/m/a/c/maccaw/maccaw-840x560.jpg"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"gravatar"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"handle"
													Element:span
														:
													Element:span
													Element:span
														"maccman"
													Element:span
														,
													Element:span
													Element:span
														"urls"
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"value"
													Element:span
														:
													Element:span
													Element:span
														"http://alexmaccaw.com"
													Element:span
														,
													Element:span
													Element:span
														"title"
													Element:span
														:
													Element:span
													Element:span
														"Personal Website"
													Element:span
													Element:span
														}
													Element:span
													Element:span
														],
													Element:span
													Element:span
														"avatar"
													Element:span
														:
													Element:span
													Element:span
														"http://2.gravatar.com/avatar/994909da96d3afaf4daaf54973914b64"
													Element:span
														,
													Element:span
													Element:span
														"avatars"
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"url"
													Element:span
														:
													Element:span
													Element:span
														"http://2.gravatar.com/avatar/994909da96d3afaf4daaf54973914b64"
													Element:span
														,
													Element:span
													Element:span
														"type"
													Element:span
														:
													Element:span
													Element:span
														"thumbnail"
													Element:span
													Element:span
														}
													Element:span
													Element:span
														]
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"fuzzy"
													Element:span
														:
													Element:span
													Element:span
														false
													Element:span
														,
													Element:span
													Element:span
														"emailProvider"
													Element:span
														:
													Element:span
													Element:span
														false
													Element:span
														,
													Element:span
													Element:span
														"indexedAt"
													Element:span
														:
													Element:span
													Element:span
														"2016-11-07T00:00:00.000Z"
													Element:span
													Element:span
														}
													Element:span
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Attribute
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:code
														id
													Element:td
													Element:strong
														string
														Internal ID
													Element:tr
													Element:td
													Element:code
														name.givenName
													Element:td
													Element:strong
														string
														First name of person (if found)
													Element:tr
													Element:td
													Element:code
														name.familyName
													Element:td
													Element:strong
														string
														Last name of person (if found)
													Element:tr
													Element:td
													Element:code
														name.fullName
													Element:td
													Element:strong
														string
														Full formatted name of person. Sometimes this will be present even if the givenName or familyName aren’t available
													Element:tr
													Element:td
													Element:code
														gender
													Element:td
													Element:strong
														string
													Element:code
														male
														or
													Element:code
														female
													Element:tr
													Element:td
													Element:code
														location
													Element:td
													Element:strong
														string
														The most accurate location we have
													Element:tr
													Element:td
													Element:code
														timeZone
													Element:td
													Element:strong
														string
														The timezone for the person’s location
													Element:tr
													Element:td
													Element:code
														utcOffset
													Element:td
													Element:strong
														integer
														The offset from UTC in hours in the person’s location
													Element:tr
													Element:td
													Element:code
														geo.city
													Element:td
													Element:strong
														string
														Normalized city based on location
													Element:tr
													Element:td
													Element:code
														geo.state
													Element:td
													Element:strong
														string
														Normalized state based on location
													Element:tr
													Element:td
													Element:code
														geo.country
													Element:td
													Element:strong
														string
														Normalized two letter country code based on location
													Element:tr
													Element:td
													Element:code
														geo.lat
													Element:td
													Element:strong
														float
														General latitude based on location
													Element:tr
													Element:td
													Element:code
														geo.lng
													Element:td
													Element:strong
														float
														General longitude based on location
													Element:tr
													Element:td
													Element:code
														bio
													Element:td
													Element:strong
														string
														The most accurate bio we have
													Element:tr
													Element:td
													Element:code
														site
													Element:td
													Element:strong
														string
														The person’s website
													Element:tr
													Element:td
													Element:code
														avatar
													Element:td
													Element:strong
														string
														The best avatar url we have
													Element:tr
													Element:td
													Element:code
														employment.name
													Element:td
													Element:strong
														string
														Company name
													Element:tr
													Element:td
													Element:code
														employment.title
													Element:td
													Element:strong
														string
														Title at Company
													Element:tr
													Element:td
													Element:code
														employment.role
													Element:td
													Element:strong
														string
													Element:a
														Role at Company
													Element:tr
													Element:td
													Element:code
														employment.seniority
													Element:td
													Element:strong
														string
													Element:a
														Seniority at Company
													Element:tr
													Element:td
													Element:code
														employment.domain
													Element:td
													Element:strong
														string
														Company domain
													Element:tr
													Element:td
													Element:code
														facebook.handle
													Element:td
													Element:strong
														string
														Facebook ID or screen name
													Element:tr
													Element:td
													Element:code
														github.handle
													Element:td
													Element:strong
														string
														GitHub handle
													Element:tr
													Element:td
													Element:code
														github.id
													Element:td
													Element:strong
														integer
														GitHub ID
													Element:tr
													Element:td
													Element:code
														github.avatar
													Element:td
													Element:strong
														string
														GitHub avatar
													Element:tr
													Element:td
													Element:code
														github.company
													Element:td
													Element:strong
														string
														GitHub company
													Element:tr
													Element:td
													Element:code
														github.blog
													Element:td
													Element:strong
														string
														GitHub blog url
													Element:tr
													Element:td
													Element:code
														github.followers
													Element:td
													Element:strong
														string
														Count of GitHub followers
													Element:tr
													Element:td
													Element:code
														github.following
													Element:td
													Element:strong
														string
														Count of GitHub following
													Element:tr
													Element:td
													Element:code
														twitter.handle
													Element:td
													Element:strong
														string
														Twitter screen name
													Element:tr
													Element:td
													Element:code
														twitter.id
													Element:td
													Element:strong
														integer
														Twitter ID
													Element:tr
													Element:td
													Element:code
														twitter.followers
													Element:td
													Element:strong
														integer
														Count of Twitter followers
													Element:tr
													Element:td
													Element:code
														twitter.following
													Element:td
													Element:strong
														integer
														Count of Twitter friends
													Element:tr
													Element:td
													Element:code
														twitter.location
													Element:td
													Element:strong
														string
														Twitter location
													Element:tr
													Element:td
													Element:code
														twitter.site
													Element:td
													Element:strong
														string
														Twitter site
													Element:tr
													Element:td
													Element:code
														twitter.statuses
													Element:td
													Element:strong
														integer
														Tweet count
													Element:tr
													Element:td
													Element:code
														twitter.favorites
													Element:td
													Element:strong
														integer
														Favorite count
													Element:tr
													Element:td
													Element:code
														twitter.avatar
													Element:td
													Element:strong
														string
														HTTP Twitter avatar
													Element:tr
													Element:td
													Element:code
														linkedin.handle
													Element:td
													Element:strong
														string
														LinkedIn url (i.e. /pub/alex-maccaw/78/929/ab5)
													Element:tr
													Element:td
													Element:code
														googleplus.handle
													Element:td
													Element:strong
														string
														Google Plus handle
													Element:tr
													Element:td
													Element:code
														aboutme.handle
													Element:td
													Element:strong
														string
														about.me handle
													Element:tr
													Element:td
													Element:code
														aboutme.bio
													Element:td
													Element:strong
														string
														about.me bio
													Element:tr
													Element:td
													Element:code
														aboutme.avatar
													Element:td
													Element:strong
														string
														about.me avatar URL
													Element:tr
													Element:td
													Element:code
														gravatar.handle
													Element:td
													Element:strong
														string
														Gravatar handle
													Element:tr
													Element:td
													Element:code
														gravatar.urls
													Element:td
													Element:strong
														array
														Array of URLs from Gravatar
													Element:tr
													Element:td
													Element:code
														gravatar.avatar
													Element:td
													Element:strong
														string
														Gravatar main avatar url.
													Element:tr
													Element:td
													Element:code
														gravatar.avatars
													Element:td
													Element:strong
														string
														Array of objects containing a avatar url, and a type (i.e. thumbnail)
													Element:tr
													Element:td
													Element:code
														fuzzy
													Element:td
													Element:strong
														boolean
														Indicating whether or not the lookup is a fuzzy or exact search
													Element:tr
													Element:td
													Element:code
														emailProvider
													Element:td
													Element:strong
														boolean
														is the email domain associated with a free email provider (i.e. Gmail)?
													Element:tr
													Element:td
													Element:code
														indexedAt
													Element:td
													Element:strong
														string date
														The time at which we indexed this data
												Node:
												(type) c
												(layer)4
													Element:h3
														Email lookup
												Node:
												(type) c
												(layer)4
													Element:p
														The Person API allows you to look up a person by their email address. Alongside the email address you may also provide any additional attributes you have about the person, such as their given and family names. Including more detail will help us be more accurate when searching.
												Node:
												(type) c
												(layer)4
													Element:p
														The supported parameters are:
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														param
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														email
													Element:td
													Element:strong
														string (required)
														The email address to look up.
													Element:tr
													Element:td
														webhook_url
													Element:td
													Element:strong
														string
														A
													Element:a
														webhook URL
														that results will be sent to.
													Element:tr
													Element:td
														given_name
													Element:td
													Element:strong
														string
														First name of person.
													Element:tr
													Element:td
														family_name
													Element:td
													Element:strong
														string
														Last name of person. If you have this, passing this is strongly recommended to improve match rates.
													Element:tr
													Element:td
														ip_address
													Element:td
													Element:strong
														string
														IP address of the person. If you have this, passing this is strongly recommended to improve match rates.
													Element:tr
													Element:td
														location
													Element:td
													Element:strong
														string
														The city or country where the person resides.
													Element:tr
													Element:td
														company
													Element:td
													Element:strong
														string
														The name of the person’s employer.
													Element:tr
													Element:td
														company_domain
													Element:td
													Element:strong
														string
														The domain for the person’s employer.
													Element:tr
													Element:td
														linkedin
													Element:td
													Element:strong
														string
														The LinkedIn URL for the person.
													Element:tr
													Element:td
														twitter
													Element:td
													Element:strong
														string
														The Twitter handle for the person.
													Element:tr
													Element:td
														facebook
													Element:td
													Element:strong
														string
														The Facebook URL for the person.
												Node:
												(type) c
												(layer)4
													Element:blockquote
														To look up a person by email address, run the following. The call will either return nil (in which case a person wasn’t found), a blank object that responds to ‘pending?’, in which case the lookup is queued, or the relevant person object.
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														person
													Element:span
														=
													Element:span
														Clearbit
													Element:span
														::
													Element:span
														Enrichment
													Element:span
														::
													Element:span
														Person
													Element:span
														.
													Element:span
														find
													Element:span
														(
													Element:span
														email:
													Element:span
														'alex@alexmaccaw.com'
													Element:span
														,
													Element:span
														company:
													Element:span
														'Clearbit'
													Element:span
														)
													Element:span
														if
													Element:span
														person
													Element:span
														&&
													Element:span
														!
													Element:span
														person
													Element:span
														.
													Element:span
														pending?
													Element:span
														puts
													Element:span
														"Name:
													Element:span
														#{
													Element:span
														person
													Element:span
														.
													Element:span
														name
													Element:span
														.
													Element:span
														fullName
													Element:span
														}
													Element:span
														"
													Element:span
														end
												Node:
												(type) c
												(layer)4
													Element:blockquote
														To look up a person by email address, run the following. The command will either return a 404 (in which case the person wasn’t found), a 202 indicating the lookup has been queued, or a JSON object containing the relevant person.
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														curl
													Element:span
														'https://person.clearbit.com/v2/people/find?email=alex@alexmaccaw.com&company=Clearbit'
													Element:span
														\
														-u
													Element:span
														{
														key
													Element:span
														}
														:
												Node:
												(type) c
												(layer)4
													Element:blockquote
														To look up a person by email address, run the following. Note that if the call to pending() returns true the lookup is queued—you should the lookup again later or alternatively use our webhook API.
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														var
													Element:span
														clearbit
													Element:span
														=
													Element:span
														require
													Element:span
														(
													Element:span
														'clearbit'
													Element:span
														)(
													Element:span
														'{key}'
													Element:span
														);
													Element:span
														var
													Element:span
														Person
													Element:span
														=
													Element:span
														clearbit
													Element:span
														.
													Element:span
														person
													Element:span
														;
													Element:span
														Person
													Element:span
														.
													Element:span
														find
													Element:span
														({
													Element:span
														email
													Element:span
														:
													Element:span
														'alex@alexmaccaw.com'
													Element:span
														,
													Element:span
														company
													Element:span
														:
													Element:span
														'Clearbit'
													Element:span
														})
													Element:span
														.
													Element:span
														then
													Element:span
														(
													Element:span
														function
													Element:span
														(
													Element:span
														person
													Element:span
														)
													Element:span
														{
													Element:span
														console
													Element:span
														.
													Element:span
														log
													Element:span
														(
													Element:span
														'Name: '
													Element:span
														,
													Element:span
														person
													Element:span
														.
													Element:span
														name
													Element:span
														.
													Element:span
														fullName
													Element:span
														);
													Element:span
														})
													Element:span
														.
													Element:span
														catch
													Element:span
														(
													Element:span
														Person
													Element:span
														.
													Element:span
														QueuedError
													Element:span
														,
													Element:span
														function
													Element:span
														(
													Element:span
														err
													Element:span
														)
													Element:span
														{
													Element:span
														// Lookup is queued - try again later
													Element:span
														console
													Element:span
														.
													Element:span
														log
													Element:span
														(
													Element:span
														err
													Element:span
														);
													Element:span
														})
													Element:span
														.
													Element:span
														catch
													Element:span
														(
													Element:span
														Person
													Element:span
														.
													Element:span
														NotFoundError
													Element:span
														,
													Element:span
														function
													Element:span
														(
													Element:span
														err
													Element:span
														)
													Element:span
														{
													Element:span
														// Person could not be found
													Element:span
														console
													Element:span
														.
													Element:span
														log
													Element:span
														(
													Element:span
														err
													Element:span
														);
													Element:span
														})
													Element:span
														.
													Element:span
														catch
													Element:span
														(
													Element:span
														function
													Element:span
														(
													Element:span
														err
													Element:span
														)
													Element:span
														{
													Element:span
														console
													Element:span
														.
													Element:span
														error
													Element:span
														(
													Element:span
														err
													Element:span
														);
													Element:span
														});
												Node:
												(type) c
												(layer)4
													Element:blockquote
														To look up a person by email address, run the following. The call will either return None (in which case a person wasn’t found), a dict { ‘pending’: true }, in which case the lookup is queued, or the relevant person dict.
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														person
													Element:span
														=
													Element:span
														clearbit
													Element:span
														.
													Element:span
														Person
													Element:span
														.
													Element:span
														find
													Element:span
														(
													Element:span
														email
													Element:span
														=
													Element:span
														'alex@alexmaccaw.com'
													Element:span
														,
													Element:span
														company
													Element:span
														=
													Element:span
														'Clearbit'
													Element:span
														)
													Element:span
														if
													Element:span
														person
													Element:span
														!=
													Element:span
														None
													Element:span
														and
													Element:span
														'pending'
													Element:span
														not
													Element:span
														in
													Element:span
														person
													Element:span
														:
													Element:span
														print
													Element:span
														"Name: "
													Element:span
														+
													Element:span
														person
													Element:span
														[
													Element:span
														'name'
													Element:span
														][
													Element:span
														'fullName'
													Element:span
														]
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
														If you’d rather the request blocked until we find something (up to 60 seconds for uncached emails, but usually in the order of 10 seconds), then you can use our streaming API:
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														person
													Element:span
														=
													Element:span
														Clearbit
													Element:span
														::
													Element:span
														Person
													Element:span
														.
													Element:span
														find
													Element:span
														(
													Element:span
														email:
													Element:span
														'alex@alexmaccaw.com'
													Element:span
														,
													Element:span
														company:
													Element:span
														'Clearbit'
													Element:span
														,
													Element:span
														stream:
													Element:span
														true
													Element:span
														)
													Element:span
														if
													Element:span
														person
													Element:span
														puts
													Element:span
														"Name:
													Element:span
														#{
													Element:span
														person
													Element:span
														.
													Element:span
														name
													Element:span
														.
													Element:span
														full_name
													Element:span
														}
													Element:span
														"
													Element:span
														end
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														curl
													Element:span
														'https://person-stream.clearbit.com/v2/people/find?email=alex@alexmaccaw.com'
													Element:span
														\
														-u
													Element:span
														{
														key
													Element:span
														}
														:
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														var
													Element:span
														clearbit
													Element:span
														=
													Element:span
														require
													Element:span
														(
													Element:span
														'clearbit'
													Element:span
														)(
													Element:span
														'{key}'
													Element:span
														);
													Element:span
														clearbit
													Element:span
														.
													Element:span
														Person
													Element:span
														.
													Element:span
														find
													Element:span
														({
													Element:span
														email
													Element:span
														:
													Element:span
														'stripe.com'
													Element:span
														,
													Element:span
														company
													Element:span
														:
													Element:span
														'Clearbit'
													Element:span
														,
													Element:span
														stream
													Element:span
														:
													Element:span
														true
													Element:span
														})
													Element:span
														.
													Element:span
														then
													Element:span
														(
													Element:span
														function
													Element:span
														(
													Element:span
														person
													Element:span
														)
													Element:span
														{
													Element:span
														console
													Element:span
														.
													Element:span
														log
													Element:span
														(
													Element:span
														'Name: '
													Element:span
														,
													Element:span
														person
													Element:span
														.
													Element:span
														name
													Element:span
														.
													Element:span
														fullName
													Element:span
														);
													Element:span
														});
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														person
													Element:span
														=
													Element:span
														clearbit
													Element:span
														.
													Element:span
														Person
													Element:span
														.
													Element:span
														find
													Element:span
														(
													Element:span
														email
													Element:span
														=
													Element:span
														'alex@alexmaccaw.com'
													Element:span
														,
													Element:span
														company
													Element:span
														=
													Element:span
														'Clearbit'
													Element:span
														,
													Element:span
														stream
													Element:span
														=
													Element:span
														True
													Element:span
														)
													Element:span
														if
													Element:span
														person
													Element:span
														!=
													Element:span
														None
													Element:span
														:
													Element:span
														print
													Element:span
														"Name: "
													Element:span
														+
													Element:span
														person
													Element:span
														[
													Element:span
														'name'
													Element:span
														][
													Element:span
														'fullName'
													Element:span
														]
												Node:
												(type) c
												(layer)4
													Element:p
														This endpoint retrieves a person by email address. If we can find the person we’ll return a
													Element:code
														200
														status containing the record’s attributes.
												Node:
												(type) c
												(layer)4
													Element:p
														Sometimes we’ll need to asynchronously lookup the person, in which case we’ll return an empty
													Element:code
														202
														status. Either try the same request again in a few minutes to get the full response, or register a webhook to be notified when we’ve finished searching for an email.
												Node:
												(type) c
												(layer)4
													Element:p
														If we can’t find any information associated with the email address, we’ll return a 404 status.
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														HTTP Request
												Node:
												(type) c
												(layer)4
													Element:p
													Element:code
														GET https://person.clearbit.com/v2/people/find?email=:email
												Node:
												(type) c
												(layer)4
													Element:p
														(Where
													Element:code
														:email
														is the person’s email address)
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														HTTP GET params
												Node:
												(type) c
												(layer)4
													Element:p
														You can also pass the following optional parameters along when looking up people.
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														param
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														webhook_id
													Element:td
													Element:strong
														string
														Custom identifier for the webhook request.
													Element:tr
													Element:td
														subscribe
													Element:td
													Element:strong
														boolean
														Set to
													Element:code
														true
														to subscribe to the changes.
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Response Types
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Code
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														200
													Element:td
														Successful lookup, person encoded in the response body.
													Element:tr
													Element:td
														202
													Element:td
														Asynchronously looking up the person.
													Element:tr
													Element:td
														404
													Element:td
														Person not found.
												Node:
												(type) c
												(layer)4
													Element:h3
														Subscribe
													Element:blockquote
													Element:p
														Subscribe to a person’s updates by passing the ‘subscribe’ parameter.
													Element:pre
													Element:code
														curl
													Element:span
														'https://person.clearbit.com/v2/people/find?email=alex@alexmaccaw.com&subscribe=true'
													Element:span
														\
														-u
													Element:span
														{
														key
													Element:span
														}
														:
													Element:pre
													Element:code
													Element:span
														Clearbit
													Element:span
														::
													Element:span
														Enrichment
													Element:span
														::
													Element:span
														Person
													Element:span
														.
													Element:span
														find
													Element:span
														(
													Element:span
														email:
													Element:span
														'alex@alexmaccaw.com'
													Element:span
														,
													Element:span
														subscribe:
													Element:span
														true
													Element:span
														)
													Element:pre
													Element:code
													Element:span
														var
													Element:span
														clearbit
													Element:span
														=
													Element:span
														require
													Element:span
														(
													Element:span
														'clearbit'
													Element:span
														)(
													Element:span
														'{key}'
													Element:span
														);
													Element:span
														clearbit
													Element:span
														.
													Element:span
														Person
													Element:span
														.
													Element:span
														find
													Element:span
														({
													Element:span
														email
													Element:span
														:
													Element:span
														'alex@alexmaccaw.com'
													Element:span
														,
													Element:span
														subscribe
													Element:span
														:
													Element:span
														true
													Element:span
														});
													Element:pre
													Element:code
													Element:span
														clearbit
													Element:span
														.
													Element:span
														Person
													Element:span
														.
													Element:span
														find
													Element:span
														(
													Element:span
														email
													Element:span
														=
													Element:span
														'alex@alexmaccaw.com'
													Element:span
														,
													Element:span
														subscribe
													Element:span
														=
													Element:span
														True
													Element:span
														)
												Node:
												(type) c
												(layer)4
													Element:p
														You can subscribe to changes in people’s information by passing a
													Element:code
														subscribe
														parameter when looking up people. Whenever we receive updates, we’ll post them to the webhook url associated with your account. This will count as an API call.
												Node:
												(type) c
												(layer)4
													Element:p
														You can set the webhook url associated with your account in your
													Element:a
														account’s settings
														.
												Node:
												(type) c
												(layer)4
													Element:h3
														Flagging
													Element:blockquote
													Element:p
														To flag a person’s data as incorrect
													Element:pre
													Element:code
														curl
													Element:span
														'https://person.clearbit.com/v1/people/d54c54ad-40be-4305-8a34-0ab44710b90d/flag'
													Element:span
														\
														-XPOST
													Element:span
														\
														-d
													Element:span
														'given_name=Alexander'
													Element:span
														\
														-d
													Element:span
														'employment_title=The Great'
													Element:span
														\
														-u
													Element:span
														{
														key
													Element:span
														}
														:
													Element:pre
													Element:code
													Element:span
														person
													Element:span
														=
													Element:span
														Clearbit
													Element:span
														::
													Element:span
														Enrichment
													Element:span
														::
													Element:span
														Person
													Element:span
														.
													Element:span
														find
													Element:span
														(
													Element:span
														email:
													Element:span
														'alex@alexmaccaw.com'
													Element:span
														)
													Element:span
														person
													Element:span
														.
													Element:span
														flag!
													Element:span
														(
													Element:span
														given_name:
													Element:span
														'Alexander'
													Element:span
														,
													Element:span
														employment_title:
													Element:span
														'The Great'
													Element:span
														)
													Element:pre
													Element:code
													Element:span
														var
													Element:span
														clearbit
													Element:span
														=
													Element:span
														require
													Element:span
														(
													Element:span
														'clearbit'
													Element:span
														)(
													Element:span
														'{key}'
													Element:span
														);
													Element:span
														clearbit
													Element:span
														.
													Element:span
														Person
													Element:span
														.
													Element:span
														find
													Element:span
														({
													Element:span
														email
													Element:span
														:
													Element:span
														'alex@alexmaccaw.com'
													Element:span
														})
													Element:span
														.
													Element:span
														then
													Element:span
														(
													Element:span
														function
													Element:span
														(
													Element:span
														person
													Element:span
														)
													Element:span
														{
													Element:span
														person
													Element:span
														.
													Element:span
														flag
													Element:span
														({
													Element:span
														givenName
													Element:span
														:
													Element:span
														'Alexander'
													Element:span
														,
													Element:span
														employmentTitle
													Element:span
														:
													Element:span
														'The Great'
													Element:span
														});
													Element:span
														})
													Element:pre
													Element:code
													Element:span
														person
													Element:span
														=
													Element:span
														clearbit
													Element:span
														.
													Element:span
														Person
													Element:span
														.
													Element:span
														find
													Element:span
														(
													Element:span
														email
													Element:span
														=
													Element:span
														'alex@alexmaccaw.com'
													Element:span
														)
													Element:span
														person
													Element:span
														.
													Element:span
														flag
													Element:span
														(
													Element:span
														given_name
													Element:span
														=
													Element:span
														'Alexander'
													Element:span
														,
													Element:span
														employment_title
													Element:span
														=
													Element:span
														'The Great'
													Element:span
														)
												Node:
												(type) c
												(layer)4
													Element:p
														While we do our best to always return accurate data, we’re only
													Element:strike
														lizards
														human and sometimes we make mistakes. This is especially true when the lookup is a fuzzy match rather than an exact one.
												Node:
												(type) c
												(layer)4
													Element:p
														This endpoint allows you to let us know if a person doesn’t seem quite right. You can flag a person as incorrect and also optionally pass through a correct set of attributes.
												Node:
												(type) c
												(layer)4
													Element:p
														We look into all the flagging we receive and incorporate fixes into future results.
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														HTTP Request
												Node:
												(type) c
												(layer)4
													Element:p
													Element:code
														POST https://person.clearbit.com/v1/people/:id/flag
												Node:
												(type) c
												(layer)4
													Element:p
														Where
													Element:code
														:id
														is the id of the person you’d like to flag as inaccurate.
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														HTTP POST params
												Node:
												(type) c
												(layer)4
													Element:p
														You can also optionally pass to us corrected versions of any of the person’s attributes we sent you.
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														param
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:code
														given_name
													Element:td
													Element:strong
														string
													Element:em
														(optional)
														First name of person
													Element:tr
													Element:td
													Element:code
														family_name
													Element:td
													Element:strong
														string
													Element:em
														(optional)
														Last name of person
													Element:tr
													Element:td
													Element:code
														employment_title
													Element:td
													Element:strong
														string
													Element:em
														(optional)
														Company title
													Element:tr
													Element:td
													Element:code
														facebook_handle
													Element:td
													Element:strong
														string
													Element:em
														(optional)
														Facebook ID or screen name
													Element:tr
													Element:td
													Element:code
														github_handle
													Element:td
													Element:strong
														string
													Element:em
														(optional)
														GitHub handle
													Element:tr
													Element:td
													Element:code
														twitter_handle
													Element:td
													Element:strong
														string
													Element:em
														(optional)
														Twitter screen name
													Element:tr
													Element:td
													Element:code
														linkedin_handle
													Element:td
													Element:strong
														string
													Element:em
														(optional)
														LinkedIn url (i.e. /pub/alex-maccaw/78/929/ab5)
													Element:tr
													Element:td
													Element:code
														googleplus_handle
													Element:td
													Element:strong
														string
													Element:em
														(optional)
														Google Plus handle.
													Element:tr
													Element:td
													Element:code
														aboutme_handle
													Element:td
													Element:strong
														string
													Element:em
														(optional)
														about.me handle
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Response types
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Code
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														200
													Element:td
														Successful received, we will look into the issue.
													Element:tr
													Element:td
														404
													Element:td
														Person not found.
												Node:
												(type) c
												(layer)4
													Element:h2
														Company API
												Node:
												(type) c
												(layer)4
													Element:p
														Our Company API lets you lookup company data via a domain name.
												Node:
												(type) c
												(layer)4
													Element:h3
														Attributes
													Element:blockquote
													Element:p
														The JSON encoded response looks like:
													Element:pre
													Element:code
													Element:span
														{
													Element:span
													Element:span
														"id"
													Element:span
														:
													Element:span
													Element:span
														"3f5d6a4e-c284-4f78-bfdf-7669b45af907"
													Element:span
														,
													Element:span
													Element:span
														"name"
													Element:span
														:
													Element:span
													Element:span
														"Uber"
													Element:span
														,
													Element:span
													Element:span
														"legalName"
													Element:span
														:
													Element:span
													Element:span
														"Uber Technologies, Inc."
													Element:span
														,
													Element:span
													Element:span
														"domain"
													Element:span
														:
													Element:span
													Element:span
														"uber.com"
													Element:span
														,
													Element:span
													Element:span
														"domainAliases"
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														"uber.org"
													Element:span
														,
													Element:span
													Element:span
														"ubercab.com"
													Element:span
													Element:span
														],
													Element:span
													Element:span
														"site"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"title"
													Element:span
														:
													Element:span
													Element:span
														"Uber"
													Element:span
														,
													Element:span
													Element:span
														"h1"
													Element:span
														:
													Element:span
													Element:span
														"Your Ride, On Demand"
													Element:span
														,
													Element:span
													Element:span
														"metaDescription"
													Element:span
														:
													Element:span
													Element:span
														"Get a taxi, private car or rideshare from your mobile phone. Uber connects you with a driver in minutes. Use our app in cities around the world."
													Element:span
														,
													Element:span
													Element:span
														"metaAuthor"
													Element:span
														:
													Element:span
													Element:span
														null
													Element:span
														,
													Element:span
													Element:span
														"phoneNumbers"
													Element:span
														:
													Element:span
													Element:span
														[],
													Element:span
													Element:span
														"emailAddresses"
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														"domains@uber.com"
													Element:span
													Element:span
														]
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"category"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"sector"
													Element:span
														:
													Element:span
													Element:span
														"Information Technology"
													Element:span
														,
													Element:span
													Element:span
														"industryGroup"
													Element:span
														:
													Element:span
													Element:span
														"Software & Services"
													Element:span
														,
													Element:span
													Element:span
														"industry"
													Element:span
														:
													Element:span
													Element:span
														"Internet Software & Services"
													Element:span
														,
													Element:span
													Element:span
														"subIndustry"
													Element:span
														:
													Element:span
													Element:span
														"Internet Software & Services"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"tags"
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														"Technology"
													Element:span
														,
													Element:span
													Element:span
														"Marketplace"
													Element:span
														,
													Element:span
													Element:span
														"Mobile"
													Element:span
														,
													Element:span
													Element:span
														"B2C"
													Element:span
														,
													Element:span
													Element:span
														"Ground Transportation"
													Element:span
														,
													Element:span
													Element:span
														"Transportation"
													Element:span
														,
													Element:span
													Element:span
														"Internet"
													Element:span
													Element:span
														],
													Element:span
													Element:span
														"description"
													Element:span
														:
													Element:span
													Element:span
														"Get a taxi, private car or rideshare from your mobile phone. Uber connects you with a driver in minutes. Use our app in cities around the world."
													Element:span
														,
													Element:span
													Element:span
														"foundedYear"
													Element:span
														:
													Element:span
													Element:span
														2009
													Element:span
														,
													Element:span
													Element:span
														"location"
													Element:span
														:
													Element:span
													Element:span
														"1455 Market St, San Francisco, CA 94103, USA"
													Element:span
														,
													Element:span
													Element:span
														"timeZone"
													Element:span
														:
													Element:span
													Element:span
														"America/Los_Angeles"
													Element:span
														,
													Element:span
													Element:span
														"utcOffset"
													Element:span
														:
													Element:span
													Element:span
														-7
													Element:span
														,
													Element:span
													Element:span
														"geo"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"streetNumber"
													Element:span
														:
													Element:span
													Element:span
														"1455"
													Element:span
														,
													Element:span
													Element:span
														"streetName"
													Element:span
														:
													Element:span
													Element:span
														"Market Street"
													Element:span
														,
													Element:span
													Element:span
														"subPremise"
													Element:span
														:
													Element:span
													Element:span
														null
													Element:span
														,
													Element:span
													Element:span
														"city"
													Element:span
														:
													Element:span
													Element:span
														"San Francisco"
													Element:span
														,
													Element:span
													Element:span
														"postalCode"
													Element:span
														:
													Element:span
													Element:span
														"94103"
													Element:span
														,
													Element:span
													Element:span
														"state"
													Element:span
														:
													Element:span
													Element:span
														"California"
													Element:span
														,
													Element:span
													Element:span
														"stateCode"
													Element:span
														:
													Element:span
													Element:span
														"CA"
													Element:span
														,
													Element:span
													Element:span
														"country"
													Element:span
														:
													Element:span
													Element:span
														"United States"
													Element:span
														,
													Element:span
													Element:span
														"countryCode"
													Element:span
														:
													Element:span
													Element:span
														"US"
													Element:span
														,
													Element:span
													Element:span
														"lat"
													Element:span
														:
													Element:span
													Element:span
														37.7752315
													Element:span
														,
													Element:span
													Element:span
														"lng"
													Element:span
														:
													Element:span
													Element:span
														-122.4175278
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"logo"
													Element:span
														:
													Element:span
													Element:span
														"https://logo.clearbit.com/uber.com"
													Element:span
														,
													Element:span
													Element:span
														"facebook"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"handle"
													Element:span
														:
													Element:span
													Element:span
														"uber"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"linkedin"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"handle"
													Element:span
														:
													Element:span
													Element:span
														"company/uber-com"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"twitter"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"handle"
													Element:span
														:
													Element:span
													Element:span
														"Uber"
													Element:span
														,
													Element:span
													Element:span
														"id"
													Element:span
														:
													Element:span
													Element:span
														"19103481"
													Element:span
														,
													Element:span
													Element:span
														"bio"
													Element:span
														:
													Element:span
													Element:span
														"Evolving the way the world moves by seamlessly connecting riders to drivers through our app. Question, concern, or praise? Tweet at @Uber_Support."
													Element:span
														,
													Element:span
													Element:span
														"followers"
													Element:span
														:
													Element:span
													Element:span
														570351
													Element:span
														,
													Element:span
													Element:span
														"following"
													Element:span
														:
													Element:span
													Element:span
														377
													Element:span
														,
													Element:span
													Element:span
														"location"
													Element:span
														:
													Element:span
													Element:span
														"Global"
													Element:span
														,
													Element:span
													Element:span
														"site"
													Element:span
														:
													Element:span
													Element:span
														"http://t.co/11eIV5LX3Z"
													Element:span
														,
													Element:span
													Element:span
														"avatar"
													Element:span
														:
													Element:span
													Element:span
														"https://pbs.twimg.com/profile_images/697242369154940928/p9jxYqy5_normal.png"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"crunchbase"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"handle"
													Element:span
														:
													Element:span
													Element:span
														"organization/uber"
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"emailProvider"
													Element:span
														:
													Element:span
													Element:span
														false
													Element:span
														,
													Element:span
													Element:span
														"type"
													Element:span
														:
													Element:span
													Element:span
														"private"
													Element:span
														,
													Element:span
													Element:span
														"ticker"
													Element:span
														:
													Element:span
													Element:span
														null
													Element:span
														,
													Element:span
													Element:span
														"phone"
													Element:span
														:
													Element:span
													Element:span
														null
													Element:span
														,
													Element:span
													Element:span
														"indexedAt"
													Element:span
														:
													Element:span
													Element:span
														"2016-11-07T00:00:00.000Z"
													Element:span
														,
													Element:span
													Element:span
														"metrics"
													Element:span
														:
													Element:span
													Element:span
														{
													Element:span
													Element:span
														"alexaUsRank"
													Element:span
														:
													Element:span
													Element:span
														544
													Element:span
														,
													Element:span
													Element:span
														"alexaGlobalRank"
													Element:span
														:
													Element:span
													Element:span
														943
													Element:span
														,
													Element:span
													Element:span
														"employees"
													Element:span
														:
													Element:span
													Element:span
														20313
													Element:span
														,
													Element:span
													Element:span
														"employeesRange"
													Element:span
														:
													Element:span
													Element:span
														"1000+"
													Element:span
														,
													Element:span
													Element:span
														"marketCap"
													Element:span
														:
													Element:span
													Element:span
														null
													Element:span
														,
													Element:span
													Element:span
														"raised"
													Element:span
														:
													Element:span
													Element:span
														10610000000
													Element:span
														,
													Element:span
													Element:span
														"annualRevenue"
													Element:span
														:
													Element:span
													Element:span
														null
													Element:span
													Element:span
														},
													Element:span
													Element:span
														"tech"
													Element:span
														:
													Element:span
													Element:span
														[
													Element:span
													Element:span
														"google_analytics"
													Element:span
														,
													Element:span
													Element:span
														"double_click"
													Element:span
														,
													Element:span
													Element:span
														"mixpanel"
													Element:span
														,
													Element:span
													Element:span
														"optimizely"
													Element:span
														,
													Element:span
													Element:span
														"typekit_by_adobe"
													Element:span
														,
													Element:span
													Element:span
														"android"
													Element:span
														,
													Element:span
													Element:span
														"nginx"
													Element:span
														,
													Element:span
													Element:span
														"ios"
													Element:span
														,
													Element:span
													Element:span
														"mixpanel"
													Element:span
														,
													Element:span
													Element:span
														"google_apps"
													Element:span
													Element:span
														]
													Element:span
													Element:span
														}
													Element:span
												Node:
												(type) c
												(layer)4
													Element:p
														A company object looks as follows. The dot notation indicates that the property is one level deep inside a hash. No attributes are guaranteed to be present, and if we can’t find data on a specific network (say Twitter), then we’ll return a
													Element:code
														null
														value for that attribute.
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Attribute
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:code
														id
													Element:td
													Element:strong
														string
														Internal ID
													Element:tr
													Element:td
													Element:code
														name
													Element:td
													Element:strong
														string
														Name of company
													Element:tr
													Element:td
													Element:code
														legalName
													Element:td
													Element:strong
														string
														Legal name of company
													Element:tr
													Element:td
													Element:code
														domain
													Element:td
													Element:strong
														string
														Domain of company’s website
													Element:tr
													Element:td
													Element:code
														domainAliases
													Element:td
													Element:strong
														array
														List of domains also used by the company
													Element:tr
													Element:td
													Element:code
														site.title
													Element:td
													Element:strong
														string
														HTML title contents of company’s website
													Element:tr
													Element:td
													Element:code
														site.phoneNumbers
													Element:td
													Element:strong
														array
														List of phone numbers mentioned on the company’s website
													Element:tr
													Element:td
													Element:code
														site.emailAddresses
													Element:td
													Element:strong
														array
														List of email addresses mentioned on the company’s website
													Element:tr
													Element:td
													Element:code
														tags
													Element:td
													Element:strong
														array
														List of market categories (
													Element:a
														see a complete list
														)
													Element:tr
													Element:td
													Element:code
														category.sector
													Element:td
													Element:strong
														string
														Broad sector (
													Element:a
														see a complete list
														)
													Element:tr
													Element:td
													Element:code
														category.industryGroup
													Element:td
													Element:strong
														string
														Industry group (
													Element:a
														see a complete list
														)
													Element:tr
													Element:td
													Element:code
														category.industry
													Element:td
													Element:strong
														string
														Industry (
													Element:a
														see a complete list
														)
													Element:tr
													Element:td
													Element:code
														category.subIndustry
													Element:td
													Element:strong
														string
														Sub industry (
													Element:a
														see a complete list
														)
													Element:tr
													Element:td
													Element:code
														description
													Element:td
													Element:strong
														string
														Description of the company
													Element:tr
													Element:td
													Element:code
														foundedYear
													Element:td
													Element:strong
														integer
														Year company was founded
													Element:tr
													Element:td
													Element:code
														location
													Element:td
													Element:strong
														string
														Address of company
													Element:tr
													Element:td
													Element:code
														timeZone
													Element:td
													Element:strong
														string
														The timezone for the company’s location
													Element:tr
													Element:td
													Element:code
														utcOffset
													Element:td
													Element:strong
														integer
														The offset from UTC in hours in the company’s location
													Element:tr
													Element:td
													Element:code
														geo.streetNumber
													Element:td
													Element:strong
														string
														Headquarters street number
													Element:tr
													Element:td
													Element:code
														geo.streetName
													Element:td
													Element:strong
														string
														Headquarters street name
													Element:tr
													Element:td
													Element:code
														geo.subPremise
													Element:td
													Element:strong
														string
														Headquarters suite number
													Element:tr
													Element:td
													Element:code
														geo.city
													Element:td
													Element:strong
														string
														Headquarters city name
													Element:tr
													Element:td
													Element:code
														geo.state
													Element:td
													Element:strong
														string
														Headquarters state name
													Element:tr
													Element:td
													Element:code
														geo.stateCode
													Element:td
													Element:strong
														string
														Headquarters two character state code
													Element:tr
													Element:td
													Element:code
														geo.postalCode
													Element:td
													Element:strong
														string
														Headquarters postal/zip code
													Element:tr
													Element:td
													Element:code
														geo.country
													Element:td
													Element:strong
														string
														Headquarters country name
													Element:tr
													Element:td
													Element:code
														geo.countryCode
													Element:td
													Element:strong
														string
														Headquarters two character country code
													Element:tr
													Element:td
													Element:code
														geo.lat
													Element:td
													Element:strong
														float
														Headquarters latitude
													Element:tr
													Element:td
													Element:code
														geo.lng
													Element:td
													Element:strong
														float
														Headquarters longitude
													Element:tr
													Element:td
													Element:code
														metrics.raised
													Element:td
													Element:strong
														integer
														Total amount raised
													Element:tr
													Element:td
													Element:code
														metrics.alexaUsRank
													Element:td
													Element:strong
														integer
														Alexa’s US site rank
													Element:tr
													Element:td
													Element:code
														metrics.alexaGlobalRank
													Element:td
													Element:strong
														integer
														Alexa’s global site rank
													Element:tr
													Element:td
													Element:code
														metrics.employees
													Element:td
													Element:strong
														integer
														Amount of employees
													Element:tr
													Element:td
													Element:code
														metrics.marketCap
													Element:td
													Element:strong
														integer
														Market Cap
													Element:tr
													Element:td
													Element:code
														metrics.annualRevenue
													Element:td
													Element:strong
														integer
														Annual Revenue (public companies only)
													Element:tr
													Element:td
													Element:code
														facebook.handle
													Element:td
													Element:strong
														string
														Company’s Facebook ID
													Element:tr
													Element:td
													Element:code
														linkedin.handle
													Element:td
													Element:strong
														string
														Company’s Linkedin URL
													Element:tr
													Element:td
													Element:code
														twitter.handle
													Element:td
													Element:strong
														string
														Twitter screen name
													Element:tr
													Element:td
													Element:code
														twitter.id
													Element:td
													Element:strong
														integer
														Twitter ID
													Element:tr
													Element:td
													Element:code
														twitter.bio
													Element:td
													Element:strong
														string
														Twitter Bio
													Element:tr
													Element:td
													Element:code
														twitter.followers
													Element:td
													Element:strong
														integer
														Count of Twitter followers
													Element:tr
													Element:td
													Element:code
														twitter.following
													Element:td
													Element:strong
														integer
														Count of Twitter friends
													Element:tr
													Element:td
													Element:code
														twitter.location
													Element:td
													Element:strong
														string
														Twitter location
													Element:tr
													Element:td
													Element:code
														twitter.site
													Element:td
													Element:strong
														string
														Twitter site
													Element:tr
													Element:td
													Element:code
														twitter.avatar
													Element:td
													Element:strong
														string
														HTTP Twitter avatar
													Element:tr
													Element:td
													Element:code
														crunchbase.handle
													Element:td
													Element:strong
														string
														Crunchbase handle
													Element:tr
													Element:td
													Element:code
														logo
													Element:td
													Element:strong
														string
														SRC of company logo
													Element:tr
													Element:td
													Element:code
														emailProvider
													Element:td
													Element:strong
														boolean
														is the domain associated with a free email provider (i.e. Gmail)?
													Element:tr
													Element:td
													Element:code
														type
													Element:td
													Element:strong
														string
														The company’s type, either
													Element:code
														education
														,
													Element:code
														government
														,
													Element:code
														nonprofit
														,
													Element:code
														private
														,
													Element:code
														public
														, or
													Element:code
														personal
														.
													Element:tr
													Element:td
													Element:code
														phone
													Element:td
													Element:strong
														string
														International headquarters phone number
													Element:tr
													Element:td
													Element:code
														tech
													Element:td
													Element:strong
														array
														Array of technology tags
													Element:tr
													Element:td
													Element:code
														indexedAt
													Element:td
													Element:strong
														string date
														The time at which we indexed this data
												Node:
												(type) c
												(layer)4
													Element:h3
														Domain lookup
												Node:
												(type) c
												(layer)4
													Element:p
														The Company API allows you to look up a company by their domain. Alongside the domain you may also provide any additional attributes you have about the company, such as their company name or twitter handle. Including more detail will help us be more accurate when searching.
												Node:
												(type) c
												(layer)4
													Element:p
														The supported parameters are:
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														param
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														domain
													Element:td
													Element:strong
														string (required)
														The domain to look up.
													Element:tr
													Element:td
														webhook_url
													Element:td
													Element:strong
														string
														A
													Element:a
														webhook URL
														that results will be sent to.
													Element:tr
													Element:td
														company_name
													Element:td
													Element:strong
														string
														The name of the company.
													Element:tr
													Element:td
														linkedin
													Element:td
													Element:strong
														string
														The LinkedIn URL for the company.
													Element:tr
													Element:td
														twitter
													Element:td
													Element:strong
														string
														The Twitter handle for the company.
													Element:tr
													Element:td
														facebook
													Element:td
													Element:strong
														string
														The Facebook URL for the company.
												Node:
												(type) c
												(layer)4
													Element:blockquote
														To look up a company by name name, run the following. The call will either return nil (in which case a company wasn’t found), a blank object that responds to ‘pending?’ in which case the lookup is queued, or the relevant company object.
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														company
													Element:span
														=
													Element:span
														Clearbit
													Element:span
														::
													Element:span
														Enrichment
													Element:span
														::
													Element:span
														Company
													Element:span
														.
													Element:span
														find
													Element:span
														(
													Element:span
														domain:
													Element:span
														'stripe.com'
													Element:span
														,
													Element:span
														company_name:
													Element:span
														'Stripe, Inc.'
													Element:span
														)
													Element:span
														if
													Element:span
														company
													Element:span
														&&
													Element:span
														!
													Element:span
														company
													Element:span
														.
													Element:span
														pending?
													Element:span
														puts
													Element:span
														"Name:
													Element:span
														#{
													Element:span
														company
													Element:span
														.
													Element:span
														name
													Element:span
														}
													Element:span
														"
													Element:span
														end
												Node:
												(type) c
												(layer)4
													Element:blockquote
														To look up a company by domain name, run the following. The command will either return a 404 (in which case the company wasn’t found), a 422 if the domain name is invalid (doesn’t exist, or doesn’t resolve), a 202 indicating the lookup has been queued, or a 200 returning the relevant company.
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														curl
													Element:span
														'https://company.clearbit.com/v2/companies/find?domain=stripe.com'
													Element:span
														\
														-u
													Element:span
														{
														key
													Element:span
														}
														:
												Node:
												(type) c
												(layer)4
													Element:blockquote
														To lookup a company by domain name, run the following.
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														var
													Element:span
														clearbit
													Element:span
														=
													Element:span
														require
													Element:span
														(
													Element:span
														'clearbit'
													Element:span
														)(
													Element:span
														'{key}'
													Element:span
														);
													Element:span
														clearbit
													Element:span
														.
													Element:span
														Company
													Element:span
														.
													Element:span
														find
													Element:span
														({
													Element:span
														domain
													Element:span
														:
													Element:span
														'uber.com'
													Element:span
														})
													Element:span
														.
													Element:span
														then
													Element:span
														(
													Element:span
														function
													Element:span
														(
													Element:span
														company
													Element:span
														)
													Element:span
														{
													Element:span
														console
													Element:span
														.
													Element:span
														log
													Element:span
														(
													Element:span
														'Name: '
													Element:span
														,
													Element:span
														company
													Element:span
														.
													Element:span
														name
													Element:span
														);
													Element:span
														})
													Element:span
														.
													Element:span
														catch
													Element:span
														(
													Element:span
														Company
													Element:span
														.
													Element:span
														QueuedError
													Element:span
														,
													Element:span
														function
													Element:span
														(
													Element:span
														err
													Element:span
														)
													Element:span
														{
													Element:span
														// Company lookup queued - try again later
													Element:span
														})
													Element:span
														.
													Element:span
														catch
													Element:span
														(
													Element:span
														Company
													Element:span
														.
													Element:span
														NotFoundError
													Element:span
														,
													Element:span
														function
													Element:span
														(
													Element:span
														err
													Element:span
														)
													Element:span
														{
													Element:span
														// Company could not be found
													Element:span
														console
													Element:span
														.
													Element:span
														log
													Element:span
														(
													Element:span
														err
													Element:span
														);
													Element:span
														})
													Element:span
														.
													Element:span
														catch
													Element:span
														(
													Element:span
														function
													Element:span
														(
													Element:span
														err
													Element:span
														)
													Element:span
														{
													Element:span
														console
													Element:span
														.
													Element:span
														error
													Element:span
														(
													Element:span
														err
													Element:span
														);
													Element:span
														});
												Node:
												(type) c
												(layer)4
													Element:blockquote
														To lookup a company by domain name, run the following.
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
													Element:span
														company
													Element:span
														=
													Element:span
														clearbit
													Element:span
														.
													Element:span
														Company
													Element:span
														.
													Element:span
														find
													Element:span
														(
													Element:span
														domain
													Element:span
														=
													Element:span
														'stripe.com'
													Element:span
														)
													Element:span
														if
													Element:span
														company
													Element:span
														!=
													Element:span
														None
													Element:span
														and
													Element:span
														'pending'
													Element:span
														not
													Element:span
														in
													Element:span
														company
													Element:span
														:
													Element:span
														print
													Element:span
														"Name: "
													Element:span
														+
													Element:span
														company
													Element:span
														[
													Element:span
														'name'
													Element:span
														]
												Node:
												(type) c
												(layer)4
													Element:p
														This endpoint retrieves a company by domain name. If we can find the company we’ll return a
													Element:code
														200
														status containing the record’s attributes.
												Node:
												(type) c
												(layer)4
													Element:p
														Sometimes we’ll need to asynchronously lookup the company, in which case we’ll return an empty
													Element:code
														202
														status. Either try the same request again in a few minutes to get the full response, or register a webhook to be notified when we’ve finished searching for a company.
												Node:
												(type) c
												(layer)4
													Element:p
														If we can’t find any information associated with the domain name, we’ll return a
													Element:code
														404
														status.
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														HTTP Request
												Node:
												(type) c
												(layer)4
													Element:p
													Element:code
														GET https://company.clearbit.com/v2/companies/find?domain=:domain
												Node:
												(type) c
												(layer)4
													Element:p
														Where
													Element:code
														:domain
														is the company’s domain name.
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														HTTP GET params
												Node:
												(type) c
												(layer)4
													Element:p
														You can also pass the following optional parameters along when looking up companies.
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														param
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														webhook_id
													Element:td
													Element:strong
														string
														Custom identifier for the webhook request.
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Response types
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Code
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														200
													Element:td
														Successful lookup, company encoded in the response body.
													Element:tr
													Element:td
														202
													Element:td
														Asynchronously looking up the company.
													Element:tr
													Element:td
														404
													Element:td
														Company not found.
													Element:tr
													Element:td
														422
													Element:td
														Domain name is invalid.
												Node:
												(type) c
												(layer)4
													Element:h3
														Flagging
													Element:blockquote
													Element:p
														To flag a company’s data as incorrect
													Element:pre
													Element:code
														curl
													Element:span
														'https://company.clearbit.com/v1/companies/3823d7e8-4710-4e6c-b4cf-4e7c151d1767/flag'
													Element:span
														\
														-XPOST
													Element:span
														\
														-d
													Element:span
														'name=Stripe'
													Element:span
														\
														-u
													Element:span
														{
														key
													Element:span
														}
														:
													Element:pre
													Element:code
													Element:span
														company
													Element:span
														=
													Element:span
														Clearbit
													Element:span
														::
													Element:span
														Enrichment
													Element:span
														::
													Element:span
														Company
													Element:span
														.
													Element:span
														find
													Element:span
														(
													Element:span
														domain:
													Element:span
														'stripe.com'
													Element:span
														)
													Element:span
														company
													Element:span
														.
													Element:span
														flag!
													Element:span
														(
													Element:span
														name:
													Element:span
														'Stripe'
													Element:span
														)
													Element:pre
													Element:code
													Element:span
														var
													Element:span
														clearbit
													Element:span
														=
													Element:span
														require
													Element:span
														(
													Element:span
														'clearbit'
													Element:span
														)(
													Element:span
														'{key}'
													Element:span
														);
													Element:span
														clearbit
													Element:span
														.
													Element:span
														Company
													Element:span
														.
													Element:span
														find
													Element:span
														({
													Element:span
														domain
													Element:span
														:
													Element:span
														'stripe.com'
													Element:span
														})
													Element:span
														.
													Element:span
														then
													Element:span
														(
													Element:span
														function
													Element:span
														(
													Element:span
														company
													Element:span
														)
													Element:span
														{
													Element:span
														company
													Element:span
														.
													Element:span
														flag
													Element:span
														({
													Element:span
														name
													Element:span
														:
													Element:span
														'Stripe'
													Element:span
														});
													Element:span
														})
													Element:pre
													Element:code
													Element:span
														company
													Element:span
														=
													Element:span
														clearbit
													Element:span
														.
													Element:span
														Company
													Element:span
														.
													Element:span
														find
													Element:span
														(
													Element:span
														domain
													Element:span
														=
													Element:span
														'stripe.com'
													Element:span
														)
													Element:span
														company
													Element:span
														.
													Element:span
														flag
													Element:span
														(
													Element:span
														name
													Element:span
														=
													Element:span
														'Stripe'
													Element:span
														)
												Node:
												(type) c
												(layer)4
													Element:p
														While we do our best to always return accurate data sometimes we can make mistakes. The flagging endpoint allows you to let us know if a company doesn’t seem quite right. You can flag a company as incorrect and also optionally pass through a correct set of attributes.
												Node:
												(type) c
												(layer)4
													Element:p
														We look into all the flagging we receive and incorporate fixes into future results.
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														HTTP Request
												Node:
												(type) c
												(layer)4
													Element:p
													Element:code
														POST https://company.clearbit.com/v1/companies/:id/flag
												Node:
												(type) c
												(layer)4
													Element:p
														Where
													Element:code
														:id
														is the id of the company you’d like to flag as inaccurate.
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														HTTP POST params
												Node:
												(type) c
												(layer)4
													Element:p
														You can also optionally pass to us corrected versions of any of the company’s attributes we sent you.
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														param
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
													Element:code
														name
													Element:td
													Element:strong
														string
													Element:em
														(optional)
														Name of company
													Element:tr
													Element:td
													Element:code
														tags
													Element:td
													Element:strong
														array
														List of market categories the company is involved in
													Element:tr
													Element:td
													Element:code
														description
													Element:td
													Element:strong
														string
														Description of the company
													Element:tr
													Element:td
													Element:code
														raised
													Element:td
													Element:strong
														integer
														Total amount raised
													Element:tr
													Element:td
													Element:code
														location
													Element:td
													Element:strong
														string
														Address of company
													Element:tr
													Element:td
													Element:code
														facebook_handle
													Element:td
													Element:strong
														string
													Element:em
														(optional)
														Facebook ID or screen name
													Element:tr
													Element:td
													Element:code
														twitter_handle
													Element:td
													Element:strong
														string
													Element:em
														(optional)
														Twitter screen name
													Element:tr
													Element:td
													Element:code
														linkedin_handle
													Element:td
													Element:strong
														string
													Element:em
														(optional)
														LinkedIn URL (i.e. /pub/alex-maccaw/78/929/ab5)
													Element:tr
													Element:td
													Element:code
														crunchbase_handle
													Element:td
													Element:strong
														string
														Crunchbase handle
													Element:tr
													Element:td
													Element:code
														employees
													Element:td
													Element:strong
														integer
														Amount of employees
													Element:tr
													Element:td
													Element:code
														logo
													Element:td
													Element:strong
														string
														SRC of company logo
													Element:tr
													Element:td
													Element:code
														email_provider
													Element:td
													Element:strong
														boolean
														is the domain associated with a free email provider (i.e. Gmail)?
													Element:tr
													Element:td
													Element:code
														type
													Element:td
													Element:strong
														string
														Type of company (
													Element:code
														education
														,
													Element:code
														government
														,
													Element:code
														nonprofit
														,
													Element:code
														private
														,
													Element:code
														public
														,
													Element:code
														personal
														)
			Node:
			(type) c
			(layer)1
												Node:
												(type) c
												(layer)4
													Element:h4
														Response types
												Node:
												(type) c
												(layer)4
													Element:table
													Element:thead
													Element:tr
													Element:th
														Code
													Element:th
														Description
													Element:tbody
													Element:tr
													Element:td
														200
													Element:td
														Successful received, we will look into the issue.
													Element:tr
													Element:td
														404
													Element:td
														Company not found.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Discovery API
			Node:
			(type) c
			(layer)1
				Element:p
					Our Discovery API lets you search for companies via specific criteria. For example, you could search for all companies with a specific funding, that use a certain technology, or that are similar to your existing customers.
			Node:
			(type) c
			(layer)1
				Element:h2
					Attributes
				Element:blockquote
				Element:p
					The JSON encoded response looks like this:
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"total"
				Element:span
					:
				Element:span
				Element:span
					605410
				Element:span
					,
				Element:span
				Element:span
					"page"
				Element:span
					:
				Element:span
				Element:span
					1
				Element:span
					,
				Element:span
				Element:span
					"results"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Clearbit"
				Element:span
					,
				Element:span
				Element:span
					"domain"
				Element:span
					:
				Element:span
				Element:span
					"clearbit.com"
				Element:span
					,
				Element:span
				Element:span
					"//"
				Element:span
					:
				Element:span
				Element:span
					"..."
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
				Element:span
					}
				Element:span
			Node:
			(type) c
			(layer)1
				Element:p
					Every search response includes the following three fields:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:code
					total
				Element:td
					Total amount of companies matching the search
				Element:tr
				Element:td
				Element:code
					page
				Element:td
					Page number for pagination
				Element:tr
				Element:td
				Element:code
					results
				Element:td
					Array of
				Element:a
					company responses
			Node:
			(type) c
			(layer)1
				Element:h2
					Request
				Element:blockquote
				Element:p
					Our search API lets you filter by over 30 different attributes. For example, to find all companies using Marketo that have raised over 100k run:
				Element:pre
				Element:code
				Element:span
					Clearbit
				Element:span
					::
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					query:
				Element:span
					{
				Element:span
					tech:
				Element:span
					'marketo'
				Element:span
					,
				Element:span
					raised:
				Element:span
					'100000~'
				Element:span
					},
				Element:span
					sort:
				Element:span
					'alexa_asc'
				Element:span
					)
				Element:pre
				Element:code
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					query
				Element:span
					=
				Element:span
					{
				Element:span
					'tech'
				Element:span
					:
				Element:span
					'marketo'
				Element:span
					,
				Element:span
					'raised'
				Element:span
					:
				Element:span
					'100000~'
				Element:span
					},
				Element:span
					sort
				Element:span
					=
				Element:span
					'alexa_asc'
				Element:span
					)
				Element:pre
				Element:code
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					({
				Element:span
					query
				Element:span
					:
				Element:span
					{
				Element:span
					tech
				Element:span
					:
				Element:span
					'marketo'
				Element:span
					,
				Element:span
					raised
				Element:span
					:
				Element:span
					'100000~'
				Element:span
					}})
				Element:span
					.
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					search
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					'Results:'
				Element:span
					,
				Element:span
					search
				Element:span
					.
				Element:span
					results
				Element:span
					);
				Element:span
					})
				Element:span
					.
				Element:span
					catch
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					err
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					error
				Element:span
					(
				Element:span
					err
				Element:span
					);
				Element:span
					});
				Element:pre
				Element:code
					curl
				Element:span
					'https://discovery.clearbit.com/v1/companies/search'
				Element:span
					\
					-G --data-urlencode
				Element:span
					'query=and:(tech:marketo raised:100000~)'
				Element:span
					\
					--data-urlencode
				Element:span
					'sort=alexa_asc'
				Element:span
					\
					-u
				Element:span
					{
					key
				Element:span
					}
					:
			Node:
			(type) c
			(layer)1
				Element:p
					We support over 30 different query parameters to help you filter results and find the companies you’re looking for.
			Node:
			(type) c
			(layer)1
				Element:p
					Each company returned will count towards the monthly quota.
			Node:
			(type) c
			(layer)1
				Element:h3
					URL
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET https://discovery.clearbit.com/v1/companies/search
			Node:
			(type) c
			(layer)1
				Element:h3
					Response codes
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Code
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					200
				Element:td
					Successful lookup, search response encoded in the response body.
				Element:tr
				Element:td
					422
				Element:td
					Invalid search (request has a malformed query param).
			Node:
			(type) c
			(layer)1
				Element:h3
					Params
			Node:
			(type) c
			(layer)1
				Element:p
					The
				Element:code
					query
					param is required to make search.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Param
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:code
					query
				Element:td
				Element:strong
					string
					Search query string.
			Node:
			(type) c
			(layer)1
				Element:p
					You can also pass the following optional parameters along when searching for companies.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Param
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:code
					page
				Element:td
				Element:strong
					integer
					Which results page to show (default is
				Element:code
					1
					).
				Element:tr
				Element:td
				Element:code
					page_size
				Element:td
				Element:strong
					integer
					The amount of results to return per page.
				Element:tr
				Element:td
				Element:code
					limit
				Element:td
				Element:strong
					integer
					How many paginated results to return in total.
				Element:tr
				Element:td
				Element:code
					sort
				Element:td
				Element:strong
					string
					Which order results are returned in.
			Node:
			(type) c
			(layer)1
				Element:h3
					Pagination
				Element:blockquote
				Element:p
					To retrieve an additional page pass the
				Element:code
					page
					option:
				Element:pre
				Element:code
				Element:span
					Clearbit
				Element:span
					::
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					query:
				Element:span
					{
				Element:span
					twitter_followers:
				Element:span
					'10000~'
				Element:span
					},
				Element:span
					page:
				Element:span
					2
				Element:span
					)
				Element:pre
				Element:code
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					query
				Element:span
					=
				Element:span
					{
				Element:span
					'twitter_followers'
				Element:span
					:
				Element:span
					'10000~'
				Element:span
					},
				Element:span
					page
				Element:span
					=
				Element:span
					2
				Element:span
					)
				Element:pre
				Element:code
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					({
				Element:span
					query
				Element:span
					:
				Element:span
					{
				Element:span
					twitter_followers
				Element:span
					:
				Element:span
					'10000~'
				Element:span
					},
				Element:span
					page
				Element:span
					:
				Element:span
					2
				Element:span
					})
				Element:span
					.
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					search
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					'Results:'
				Element:span
					,
				Element:span
					search
				Element:span
					.
				Element:span
					results
				Element:span
					);
				Element:span
					})
				Element:span
					.
				Element:span
					catch
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					err
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					error
				Element:span
					(
				Element:span
					err
				Element:span
					);
				Element:span
					});
				Element:pre
				Element:code
					curl
				Element:span
					'https://discovery.clearbit.com/v1/companies/search'
				Element:span
					\
					-G --data-urlencode
				Element:span
					'query=twitter_followers:10000~'
				Element:span
					\
					--data-urlencode
				Element:span
					'page=2'
				Element:span
					\
					-u
				Element:span
					{
					key
				Element:span
					}
					:
			Node:
			(type) c
			(layer)1
				Element:p
					Search requests return a maximum of
				Element:code
					10
					results per page. You can paginate through results and receive the next set by incrementing the
				Element:code
					page
					param.
			Node:
			(type) c
			(layer)1
				Element:h3
					Sorting
				Element:blockquote
				Element:p
					To sort by a specific attribute using the
				Element:code
					sort
					option.
				Element:pre
				Element:code
				Element:span
					Clearbit
				Element:span
					::
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					query:
				Element:span
					{
				Element:span
					tech:
				Element:span
					'marketo'
				Element:span
					},
				Element:span
					sort:
				Element:span
					'google_rank'
				Element:span
					)
				Element:pre
				Element:code
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					query
				Element:span
					=
				Element:span
					{
				Element:span
					'tech'
				Element:span
					:
				Element:span
					'marketo'
				Element:span
					},
				Element:span
					sort
				Element:span
					=
				Element:span
					'google_rank'
				Element:span
					)
				Element:pre
				Element:code
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					({
				Element:span
					query
				Element:span
					:
				Element:span
					{
				Element:span
					tech
				Element:span
					:
				Element:span
					'marketo'
				Element:span
					},
				Element:span
					sort
				Element:span
					:
				Element:span
					'google_rank'
				Element:span
					})
				Element:span
					.
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					search
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					'Results:'
				Element:span
					,
				Element:span
					search
				Element:span
					.
				Element:span
					results
				Element:span
					);
				Element:span
					})
				Element:span
					.
				Element:span
					catch
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					err
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					error
				Element:span
					(
				Element:span
					err
				Element:span
					);
				Element:span
					});
				Element:pre
				Element:code
					curl
				Element:span
					'https://discovery.clearbit.com/v1/companies/search'
				Element:span
					\
					-G --data-urlencode
				Element:span
					'query=tech:marketo'
				Element:span
					\
					--data-urlencode
				Element:span
					'sort=google_rank'
				Element:span
					\
					-u
				Element:span
					{
					key
				Element:span
					}
					:
				Element:blockquote
				Element:p
					To sort in a particular direction append
				Element:code
					_asc
					or
				Element:code
					_desc
					to the sort option:
				Element:pre
				Element:code
				Element:span
					Clearbit
				Element:span
					::
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					query:
				Element:span
					{
				Element:span
					tech:
				Element:span
					'marketo'
				Element:span
					},
				Element:span
					sort:
				Element:span
					'alexa_asc'
				Element:span
					)
				Element:pre
				Element:code
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					query
				Element:span
					=
				Element:span
					{
				Element:span
					'tech'
				Element:span
					:
				Element:span
					'marketo'
				Element:span
					},
				Element:span
					sort
				Element:span
					=
				Element:span
					'alexa_asc'
				Element:span
					)
				Element:pre
				Element:code
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					({
				Element:span
					query
				Element:span
					:
				Element:span
					{
				Element:span
					tech
				Element:span
					:
				Element:span
					'marketo'
				Element:span
					},
				Element:span
					sort
				Element:span
					:
				Element:span
					'alexa_asc'
				Element:span
					})
				Element:span
					.
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					search
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					'Results:'
				Element:span
					,
				Element:span
					search
				Element:span
					.
				Element:span
					results
				Element:span
					);
				Element:span
					})
				Element:span
					.
				Element:span
					catch
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					err
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					error
				Element:span
					(
				Element:span
					err
				Element:span
					);
				Element:span
					});
				Element:pre
				Element:code
					curl
				Element:span
					'https://discovery.clearbit.com/v1/companies/search'
				Element:span
					\
					-G --data-urlencode
				Element:span
					'query=tech:marketo'
				Element:span
					\
					--data-urlencode
				Element:span
					'sort=alexa_asc'
				Element:span
					\
					-u
				Element:span
					{
					key
				Element:span
					}
					:
			Node:
			(type) c
			(layer)1
				Element:p
					By default search results are sorted by the best match available. You can change this to a specific sort using the
				Element:code
					sort
					parameter and one of the values below.
			Node:
			(type) c
			(layer)1
				Element:p
					You can toggle between ascending and descending sorts by appending
				Element:code
					_asc
					and
				Element:code
					_desc
					respectively.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Sort
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:code
					score
				Element:td
					Default sort
				Element:tr
				Element:td
				Element:code
					alexa_rank
				Element:td
					Alexa ranking
				Element:tr
				Element:td
				Element:code
					employees
				Element:td
					Number of employees
				Element:tr
				Element:td
				Element:code
					google_rank
				Element:td
					Google rank
				Element:tr
				Element:td
				Element:code
					market_cap
				Element:td
					Market cap for public companies
				Element:tr
				Element:td
				Element:code
					raised
				Element:td
					Amount of funding raised
				Element:tr
				Element:td
				Element:code
					twitter_followers
				Element:td
					Number of Twitter followers
			Node:
			(type) c
			(layer)1
				Element:h2
					Queries
				Element:blockquote
				Element:p
					Queries are space separated key colon values. For example to find all companies with an Alexa rank between 1 & 1000, 30 employees or more, and based in SF the query would look like this:
				Element:pre
				Element:code
					alexa_rank:0~1000 employees:30~ city:"San Francisco"
				Element:blockquote
				Element:p
					As you can see, you can escape values by using quotes. You can also include sub queries by using parenthesis:
				Element:pre
				Element:code
					and:(tech:stripe raised:10000~)
				Element:blockquote
					Alternatively, rather than using a string search query, you can also pass an array of hashes:
				Element:pre
				Element:code
				Element:span
					Clearbit
				Element:span
					::
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					query:
				Element:span
					[{
				Element:span
					tech:
				Element:span
					'marketo'
				Element:span
					},
				Element:span
					{
				Element:span
					alexa_rank:
				Element:span
					'0~1000'
				Element:span
					}]
				Element:span
					)
				Element:blockquote
					Alternatively, rather than using a string search query, you can also pass an array of dicts:
				Element:pre
				Element:code
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					query
				Element:span
					=
				Element:span
					[{
				Element:span
					'tech'
				Element:span
					:
				Element:span
					'marketo'
				Element:span
					},
				Element:span
					{
				Element:span
					'raised'
				Element:span
					:
				Element:span
					'100000~'
				Element:span
					}]
				Element:span
					)
				Element:blockquote
					Alternatively, rather than using a string search query, you can also pass an array of objects:
				Element:pre
				Element:code
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					({
				Element:span
					query
				Element:span
					:
				Element:span
					[{
				Element:span
					tech
				Element:span
					:
				Element:span
					'marketo'
				Element:span
					},
				Element:span
					{
				Element:span
					alexa_rank
				Element:span
					:
				Element:span
					'0~1000'
				Element:span
					}]})
				Element:span
					.
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					search
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					'Results:'
				Element:span
					,
				Element:span
					search
				Element:span
					.
				Element:span
					results
				Element:span
					);
				Element:span
					})
				Element:span
					.
				Element:span
					catch
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					err
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					error
				Element:span
					(
				Element:span
					err
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:p
					Queries to the Discovery API can be as complex or as simple as you need them to be. Queries are passed along as strings in the
				Element:code
					query
					parameter using the
				Element:code
					type:value
					format. Take a look at the examples on the right.
			Node:
			(type) c
			(layer)1
				Element:h3
					Data types
			Node:
			(type) c
			(layer)1
				Element:p
					Every query option is one of the following data types:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					type
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:code
					string
				Element:td
					Letters
				Element:tr
				Element:td
				Element:code
					integer
				Element:td
					Number
				Element:tr
				Element:td
				Element:code
					range
				Element:td
					Range of numbers separated by a tilde (
				Element:code
					~
					).
				Element:br
					Omit the first or last integer to scan the full range.
			Node:
			(type) c
			(layer)1
				Element:h3
					Fields
			Node:
			(type) c
			(layer)1
				Element:p
					The following fields are supported:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Param
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:code
					domain
				Element:td
				Element:strong
					string
					Exact domain match
				Element:tr
				Element:td
				Element:code
					name
				Element:td
				Element:strong
					string
					Fuzzy name match
				Element:tr
				Element:td
				Element:code
					description
				Element:td
				Element:strong
					string
					Fuzzy description match
				Element:tr
				Element:td
				Element:code
					and
				Element:td
				Element:strong
					query
					AND query (see below)
				Element:tr
				Element:td
				Element:code
					or
				Element:td
				Element:strong
					query
					OR query (see below)
				Element:tr
				Element:td
				Element:code
					alexa_rank
				Element:td
				Element:strong
					range
					Global Alexa rank
				Element:tr
				Element:td
				Element:code
					alexa_us_rank
				Element:td
				Element:strong
					string
					US Alexa rank
				Element:tr
				Element:td
				Element:code
					google_rank
				Element:td
				Element:strong
					range
					Google Page Rank
				Element:tr
				Element:td
				Element:code
					location
				Element:td
				Element:strong
					string
					Fuzzy long form address match
				Element:tr
				Element:td
				Element:code
					state
				Element:td
				Element:strong
					string
					Two letter state code
				Element:tr
				Element:td
				Element:code
					city
				Element:td
				Element:strong
					string
					Long form city name of headquarters
				Element:tr
				Element:td
				Element:code
					country
				Element:td
				Element:strong
					string
					Two letter country code of headquarters
				Element:tr
				Element:td
				Element:code
					crunchbase
				Element:td
				Element:strong
					string
					Crunchbase handle
				Element:tr
				Element:td
				Element:code
					employees
				Element:td
				Element:strong
					range
					Headcount
				Element:tr
				Element:td
				Element:code
					facebook
				Element:td
				Element:strong
					string
					Facebook handle
				Element:tr
				Element:td
				Element:code
					linkedin
				Element:td
				Element:strong
					string
					LinkedIn handle
				Element:tr
				Element:td
				Element:code
					twitter
				Element:td
				Element:strong
					string
					Twitter handle
				Element:tr
				Element:td
				Element:code
					twitter_followers
				Element:td
				Element:strong
					range
					Number of Twitter followers
				Element:tr
				Element:td
				Element:code
					twitter_following
				Element:td
				Element:strong
					range
					Number of Twitter friends
				Element:tr
				Element:td
				Element:code
					market_cap
				Element:td
				Element:strong
					range
					Market cap
				Element:tr
				Element:td
				Element:code
					ticker
				Element:td
				Element:strong
					string
					Stock ticker symbol
				Element:tr
				Element:td
				Element:code
					raised
				Element:td
				Element:strong
					range
					Amount of funding raised
				Element:tr
				Element:td
				Element:code
					industry
				Element:td
				Element:strong
					string
					Categorization industry
				Element:tr
				Element:td
				Element:code
					sub_industry
				Element:td
				Element:strong
					string
					Categorization sub-industry (
				Element:a
					see a complete list
					)
				Element:tr
				Element:td
				Element:code
					sector
				Element:td
				Element:strong
					string
					Categorization sector (
				Element:a
					see a complete list
					)
				Element:tr
				Element:td
				Element:code
					tag
				Element:td
				Element:strong
					string
					Categorization tags (
				Element:a
					see a complete list
					)
				Element:tr
				Element:td
				Element:code
					similar
				Element:td
				Element:strong
					string
					Domain name of similar company (
				Element:a
					see below
					)
				Element:tr
				Element:td
				Element:code
					tech
				Element:td
				Element:strong
					string
					Tech used (
				Element:a
					see below
					)
				Element:tr
				Element:td
				Element:code
					type
				Element:td
				Element:strong
					string
					Company type (education/government/nonprofit/private/public/personal)
				Element:tr
				Element:td
				Element:code
					has
				Element:td
				Element:strong
					string
					Only return companies who have data for the given field. Aliased as ‘exists’
				Element:tr
				Element:td
				Element:code
					hasnt
				Element:td
				Element:strong
					string
					Only return companies who don’t have data for the given field. Aliased as ‘missing’
			Node:
			(type) c
			(layer)1
				Element:h2
					AND/OR queries
				Element:blockquote
				Element:p
					By default queries use an
				Element:em
					AND
					search - results have to satisfy all parameters. To change this behavior use the
				Element:code
					or
					query type and pass a sub-query:
				Element:pre
				Element:code
					or:(twitter_followers:10000~ type:nonprofit)
				Element:blockquote
				Element:p
					For example, to find all companies that have at least 10000 Twitter followers
				Element:em
					or
					are charities:
				Element:pre
				Element:code
				Element:span
					Clearbit
				Element:span
					::
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					query:
				Element:span
					{
				Element:span
					or:
				Element:span
					[{
				Element:span
					twitter_followers:
				Element:span
					'10000~'
				Element:span
					},
				Element:span
					{
				Element:span
					type:
				Element:span
					'nonprofit'
				Element:span
					}]}
				Element:span
					)
				Element:pre
				Element:code
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					query
				Element:span
					=
				Element:span
					{
				Element:span
					'or'
				Element:span
					:
				Element:span
					[{
				Element:span
					'twitter_followers'
				Element:span
					:
				Element:span
					'10000~'
				Element:span
					},
				Element:span
					{
				Element:span
					'type'
				Element:span
					:
				Element:span
					'nonprofit'
				Element:span
					}]}
				Element:span
					)
				Element:pre
				Element:code
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					({
				Element:span
					query
				Element:span
					:
				Element:span
					{
				Element:span
					or
				Element:span
					:
				Element:span
					[{
				Element:span
					twitter_followers
				Element:span
					:
				Element:span
					'10000~'
				Element:span
					},
				Element:span
					{
				Element:span
					type
				Element:span
					:
				Element:span
					'nonprofit'
				Element:span
					}]}})
				Element:span
					.
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					search
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					'Results:'
				Element:span
					,
				Element:span
					search
				Element:span
					.
				Element:span
					results
				Element:span
					);
				Element:span
					})
				Element:span
					.
				Element:span
					catch
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					err
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					error
				Element:span
					(
				Element:span
					err
				Element:span
					);
				Element:span
					});
				Element:pre
				Element:code
					curl
				Element:span
					'https://discovery.clearbit.com/v1/companies/search'
				Element:span
					\
					-G --data-urlencode
				Element:span
					'query=or:(twitter_followers:10000~ type:nonprofit)'
				Element:span
					\
					-u
				Element:span
					{
					key
				Element:span
					}
					:
			Node:
			(type) c
			(layer)1
				Element:p
					By default, queries are are filtered by an
				Element:em
					AND
					match. That is, if you provide multiple query options, results must match
				Element:em
					all
					of them of them. You can change this behavior to
				Element:em
					OR
					matching (where matches to all criteria are preferred, but not required) by using a
				Element:code
					OR
					query.
			Node:
			(type) c
			(layer)1
				Element:h2
					Similar queries
				Element:blockquote
				Element:p
					You can search for companies similar to other ones by domain:
				Element:pre
				Element:code
					similar:stripe.com
				Element:blockquote
				Element:p
					For example, to find any companies similar to Salesforce:
				Element:pre
				Element:code
				Element:span
					Clearbit
				Element:span
					::
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					query:
				Element:span
					{
				Element:span
					similar:
				Element:span
					'salesforce.com'
				Element:span
					})
				Element:pre
				Element:code
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					query
				Element:span
					=
				Element:span
					{
				Element:span
					'similar'
				Element:span
					:
				Element:span
					'salesforce.com'
				Element:span
					})
				Element:pre
				Element:code
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					({
				Element:span
					query
				Element:span
					:
				Element:span
					{
				Element:span
					similar
				Element:span
					:
				Element:span
					'salesforce.com'
				Element:span
					}})
				Element:span
					.
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					search
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					'Results:'
				Element:span
					,
				Element:span
					search
				Element:span
					.
				Element:span
					results
				Element:span
					);
				Element:span
					})
				Element:span
					.
				Element:span
					catch
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					err
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					error
				Element:span
					(
				Element:span
					err
				Element:span
					);
				Element:span
					});
				Element:pre
				Element:code
					curl
				Element:span
					'https://discovery.clearbit.com/v1/companies/search'
				Element:span
					\
					-G --data-urlencode
				Element:span
					'query=similar:salesforce.com'
				Element:span
					\
					-u
				Element:span
					{
					key
				Element:span
					}
					:
			Node:
			(type) c
			(layer)1
				Element:p
					To find ‘look-alike’ companies–companies that are similar to each other–you can use the
				Element:code
					similar
					query. Pass a company’s domain and we’ll try and find similar companies. This is particularly useful for taking your existing customer list and finding new leads.
			Node:
			(type) c
			(layer)1
				Element:h2
					Tech queries
				Element:blockquote
				Element:p
					To search for companies using particular front-end technologies use the
				Element:code
					tech
					query:
				Element:pre
				Element:code
					tech:stripe tech:customer_io tech:segment
				Element:blockquote
				Element:p
					For example, to find any companies that use Google Apps sorted by Alexa score:
				Element:pre
				Element:code
				Element:span
					Clearbit
				Element:span
					::
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					query:
				Element:span
					{
				Element:span
					tech:
				Element:span
					'google_apps'
				Element:span
					},
				Element:span
					sort:
				Element:span
					'alexa_asc'
				Element:span
					)
				Element:pre
				Element:code
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					query
				Element:span
					=
				Element:span
					{
				Element:span
					'tech'
				Element:span
					:
				Element:span
					'google_apps'
				Element:span
					},
				Element:span
					sort
				Element:span
					=
				Element:span
					'alexa_asc'
				Element:span
					)
				Element:pre
				Element:code
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Discovery
				Element:span
					.
				Element:span
					search
				Element:span
					({
				Element:span
					query
				Element:span
					:
				Element:span
					{
				Element:span
					tech
				Element:span
					:
				Element:span
					'google_apps'
				Element:span
					}}})
				Element:span
					.
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					search
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					'Results:'
				Element:span
					,
				Element:span
					search
				Element:span
					.
				Element:span
					results
				Element:span
					);
				Element:span
					})
				Element:span
					.
				Element:span
					catch
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					err
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					error
				Element:span
					(
				Element:span
					err
				Element:span
					);
				Element:span
					});
				Element:pre
				Element:code
					curl
				Element:span
					'https://discovery.clearbit.com/v1/companies/search'
				Element:span
					\
					-G --data-urlencode
				Element:span
					'query=tech:google_apps'
				Element:span
					\
					--data-urlencode
				Element:span
					'sort=alexa_asc'
				Element:span
					\
					-u
				Element:span
					{
					key
				Element:span
					}
					:
			Node:
			(type) c
			(layer)1
				Element:p
					Whenever we index a company’s website, we also detect any technologies they’re using such as their analytics provider, email provider, or payments provider. We then surface over 60 different technologies in our search API letting you filter by them.
			Node:
			(type) c
			(layer)1
				Element:p
					You can find a full list of technologies we
				Element:a
					index here
					.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Prospector API
			Node:
			(type) c
			(layer)1
				Element:p
					The Prospector API lets you fetch contacts and emails associated with a company, employment role, seniority, and job title.
			Node:
			(type) c
			(layer)1
				Element:h2
					Person search
				Element:blockquote
				Element:p
					To search for people by domain name, run the following.
				Element:pre
				Element:code
				Element:span
					people
				Element:span
					=
				Element:span
					Clearbit
				Element:span
					::
				Element:span
					Prospector
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					domain:
				Element:span
					'twitter.com'
				Element:span
					,
				Element:span
					role:
				Element:span
					'marketing'
				Element:span
					)
				Element:span
					people
				Element:span
					.
				Element:span
					each
				Element:span
					do
				Element:span
					|
				Element:span
					person
				Element:span
					|
				Element:span
					puts
				Element:span
					[
				Element:span
					person
				Element:span
					.
				Element:span
					name
				Element:span
					.
				Element:span
					full_name
				Element:span
					,
				Element:span
					person
				Element:span
					.
				Element:span
					title
				Element:span
					].
				Element:span
					join
				Element:span
					(
				Element:span
					' - '
				Element:span
					)
				Element:span
					end
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					clearbit
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'clearbit'
				Element:span
					)(
				Element:span
					'{key}'
				Element:span
					);
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Prospector
				Element:span
					.
				Element:span
					search
				Element:span
					({
				Element:span
					domain
				Element:span
					:
				Element:span
					'twitter.com'
				Element:span
					,
				Element:span
					role
				Element:span
					:
				Element:span
					'marketing'
				Element:span
					})
				Element:span
					.
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					people
				Element:span
					)
				Element:span
					{
				Element:span
					people
				Element:span
					.
				Element:span
					forEach
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					person
				Element:span
					){
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					person
				Element:span
					.
				Element:span
					name
				Element:span
					.
				Element:span
					fullName
				Element:span
					,
				Element:span
					person
				Element:span
					.
				Element:span
					title
				Element:span
					);
				Element:span
					});
				Element:span
					})
				Element:span
					.
				Element:span
					catch
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					err
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					error
				Element:span
					(
				Element:span
					err
				Element:span
					);
				Element:span
					});
				Element:pre
				Element:code
				Element:span
					people
				Element:span
					=
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Prospector
				Element:span
					.
				Element:span
					search
				Element:span
					(
				Element:span
					domain
				Element:span
					=
				Element:span
					'twitter.com'
				Element:span
					,
				Element:span
					role
				Element:span
					=
				Element:span
					'marketing'
				Element:span
					)
				Element:span
					for
				Element:span
					person
				Element:span
					in
				Element:span
					people
				Element:span
					:
				Element:span
					print
				Element:span
					person
				Element:span
					[
				Element:span
					'name'
				Element:span
					][
				Element:span
					'fullName'
				Element:span
					]
				Element:pre
				Element:code
					curl
				Element:span
					'https://prospector.clearbit.com/v1/people/search'
				Element:span
					\
					-G --data-urlencode
				Element:span
					'domain=twitter.com'
				Element:span
					\
					--data-urlencode
				Element:span
					'role=marketing'
				Element:span
					\
					-u
				Element:span
					{
					key
				Element:span
					}
					:
			Node:
			(type) c
			(layer)1
				Element:p
					This endpoint returns an array of people who work at a specific company.
			Node:
			(type) c
			(layer)1
				Element:h3
					HTTP Request
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET https://prospector.clearbit.com/v1/people/search
			Node:
			(type) c
			(layer)1
				Element:h3
					HTTP GET params
			Node:
			(type) c
			(layer)1
				Element:p
					You can also pass the following parameters along when searching for people.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					param
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:code
					domain
				Element:td
				Element:strong
					string
					(required) Domain of the company you want to search against.
				Element:tr
				Element:td
				Element:code
					role
				Element:td
				Element:strong
					string
					(optional) Employment Role (
				Element:a
					view list
					).
				Element:tr
				Element:td
				Element:code
					seniority
				Element:td
				Element:strong
					string
					(optional) Employment Seniority (
				Element:a
					view list
					).
				Element:tr
				Element:td
				Element:code
					title
				Element:td
				Element:strong
					string
					(optional) Job title to filter by.
				Element:tr
				Element:td
				Element:code
					titles[]
				Element:td
				Element:strong
					string
					(optional) Multiple job titles to filter by. You can specify this param multiple times to search for multiple titles.
				Element:tr
				Element:td
				Element:code
					name
				Element:td
				Element:strong
					string
					(optional) Name of an individual to filter by.
				Element:tr
				Element:td
				Element:code
					limit
				Element:td
				Element:strong
					integer
					(optional) Limit the number of maximum results returned in the response (default is 5, max is 20).
			Node:
			(type) c
			(layer)1
				Element:h3
					Response Types
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Code
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					200
				Element:td
					Successful lookup, person encoded in the response body.
				Element:tr
				Element:td
					406
				Element:td
					Validation error
			Node:
			(type) c
			(layer)1
				Element:h3
					Response body
				Element:blockquote
				Element:p
					The JSON encoded response looks like this.
				Element:pre
				Element:code
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"id"
				Element:span
					:
				Element:span
				Element:span
					"7416592A-A0D5-4AE5-ACB0-03156E444E9C"
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"givenName"
				Element:span
					:
				Element:span
				Element:span
					"Harlow"
				Element:span
					,
				Element:span
				Element:span
					"familyName"
				Element:span
					:
				Element:span
				Element:span
					"Ward"
				Element:span
					,
				Element:span
				Element:span
					"fullName"
				Element:span
					:
				Element:span
				Element:span
					"Harlow Ward"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"title"
				Element:span
					:
				Element:span
				Element:span
					"Co Founder at Clearbit"
				Element:span
					,
				Element:span
				Element:span
					"role"
				Element:span
					:
				Element:span
				Element:span
					"founder"
				Element:span
					,
				Element:span
				Element:span
					"seniority"
				Element:span
					:
				Element:span
				Element:span
					"executive"
				Element:span
					,
				Element:span
				Element:span
					"email"
				Element:span
					:
				Element:span
				Element:span
					"harlow@clearbit.com"
				Element:span
					,
				Element:span
				Element:span
					"verified"
				Element:span
					:
				Element:span
				Element:span
					true
				Element:span
					,
				Element:span
				Element:span
					"phone"
				Element:span
					:
				Element:span
				Element:span
					"+1 415-555-1212"
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:code
					id
				Element:td
				Element:strong
					string
					Internal ID
				Element:tr
				Element:td
				Element:code
					name.givenName
				Element:td
				Element:strong
					string
					First name of person
				Element:tr
				Element:td
				Element:code
					name.familyName
				Element:td
				Element:strong
					string
					Last name of person
				Element:tr
				Element:td
				Element:code
					name.fullName
				Element:td
				Element:strong
					string
					Full formatted name of person
				Element:tr
				Element:td
				Element:code
					title
				Element:td
				Element:strong
					string
					Employment title
				Element:tr
				Element:td
				Element:code
					role
				Element:td
				Element:strong
					string
					Employment role (
				Element:a
					view list
					).
				Element:tr
				Element:td
				Element:code
					seniority
				Element:td
				Element:strong
					string
					Employment seniority (
				Element:a
					view list
					).
				Element:tr
				Element:td
				Element:code
					email
				Element:td
				Element:strong
					string
					Corporate Email Address
				Element:tr
				Element:td
				Element:code
					verified
				Element:td
				Element:strong
					boolean
					Do we have an exact match on email?
				Element:tr
				Element:td
				Element:code
					phone
				Element:td
				Element:strong
					string
					Premium Feature: Direct dial phone work number (requires additional plan)
			Node:
			(type) h1
			(layer)1
				Element:h1
					Reveal API
			Node:
			(type) c
			(layer)1
				Element:p
					Our Reveal API takes an IP address, and returns the company associated with that IP. This is especially useful for de-anonymizing traffic on your website, analytics, and customizing landing pages for specific company verticals.
			Node:
			(type) c
			(layer)1
				Element:p
					Powering Reveal is a unique dataset that combines both public and proprietary sources to give you an insight into the companies visiting your website whatever their size, even if they don’t have their own public ASN block.
			Node:
			(type) c
			(layer)1
				Element:p
					The Reveal API is currently under limited release.
				Element:br
					To get access to the API, please
				Element:a
					contact us
					.
			Node:
			(type) c
			(layer)1
				Element:h2
					Lookup IP addresses
			Node:
			(type) c
			(layer)1
				Element:p
					To use the Reveal API, send us an IP address and we’ll return the company domain and information associated. If we can’t match the IP to a company, we’ll return a
				Element:code
					404
					HTTP status instead of a
				Element:code
					200
					.
			Node:
			(type) c
			(layer)1
				Element:h3
					Attributes
				Element:blockquote
				Element:p
					The JSON encoded response looks like this.
				Element:pre
				Element:code
				Element:span
					{
				Element:span
				Element:span
					"ip"
				Element:span
					:
				Element:span
				Element:span
					"183.195.251.144"
				Element:span
					,
				Element:span
				Element:span
					"fuzzy"
				Element:span
					:
				Element:span
				Element:span
					true
				Element:span
					,
				Element:span
				Element:span
					"domain"
				Element:span
					:
				Element:span
				Element:span
					"segment.com"
				Element:span
					,
				Element:span
				Element:span
					"company"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Segment"
				Element:span
					,
				Element:span
				Element:span
					"tags"
				Element:span
					:
				Element:span
				Element:span
					[
				Element:span
				Element:span
					"Software"
				Element:span
					,
				Element:span
				Element:span
					"SAAS"
				Element:span
					,
				Element:span
				Element:span
					"B2B"
				Element:span
					,
				Element:span
				Element:span
					"Information Technology & Services"
				Element:span
					,
				Element:span
				Element:span
					"Technology"
				Element:span
					,
				Element:span
				Element:span
					"Internet"
				Element:span
				Element:span
					],
				Element:span
				Element:span
					"metrics"
				Element:span
					:
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"alexaUsRank"
				Element:span
					:
				Element:span
				Element:span
					23403
				Element:span
					,
				Element:span
				Element:span
					"alexaGlobalRank"
				Element:span
					:
				Element:span
				Element:span
					26266
				Element:span
					,
				Element:span
				Element:span
					"employees"
				Element:span
					:
				Element:span
				Element:span
					95
				Element:span
					,
				Element:span
				Element:span
					"employeesRange"
				Element:span
					:
				Element:span
				Element:span
					"51-250"
				Element:span
					,
				Element:span
				Element:span
					"raised"
				Element:span
					:
				Element:span
				Element:span
					44600000
				Element:span
				Element:span
					},
				Element:span
				Element:span
					"..."
				Element:span
					:
				Element:span
				Element:span
					"..."
				Element:span
				Element:span
					}
				Element:span
				Element:span
					}
				Element:span
				Element:blockquote
				Element:p
					In the case above, ‘
				Element:code
					...
					’ represents a truncated company response. You can find the full company response under the
				Element:a
					Company Attributes
					section.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Attribute
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:code
					ip
				Element:td
				Element:strong
					string
					IP address that was looked up
				Element:tr
				Element:td
				Element:code
					fuzzy
				Element:td
				Element:strong
					boolean
					False if the company has their own dedicated ASN network, otherwise true.
				Element:tr
				Element:td
				Element:code
					domain
				Element:td
				Element:strong
					string
					The matched company domain
				Element:tr
				Element:td
				Element:code
					company
				Element:td
				Element:strong
					object
					A full
				Element:a
					company response
			Node:
			(type) c
			(layer)1
				Element:h3
					HTTP Request
				Element:blockquote
					To lookup an IP address, run the following:
				Element:pre
				Element:code
					curl https://reveal.clearbit.com/v1/companies/find?ip
				Element:span
					=
					183.195.251.144
				Element:span
					\
					-u
				Element:span
					{
					key
				Element:span
					}
					:
				Element:pre
				Element:code
				Element:span
					Clearbit
				Element:span
					::
				Element:span
					Reveal
				Element:span
					.
				Element:span
					find
				Element:span
					(
				Element:span
					ip:
				Element:span
					'183.195.251.144'
				Element:span
					)
				Element:pre
				Element:code
				Element:span
					result
				Element:span
					=
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Reveal
				Element:span
					.
				Element:span
					find
				Element:span
					(
				Element:span
					ip
				Element:span
					=
				Element:span
					'183.195.251.144'
				Element:span
					)
				Element:span
					print
				Element:span
					result
				Element:pre
				Element:code
				Element:span
					var
				Element:span
					clearbit
				Element:span
					=
				Element:span
					require
				Element:span
					(
				Element:span
					'clearbit'
				Element:span
					)(
				Element:span
					'{key}'
				Element:span
					);
				Element:span
					clearbit
				Element:span
					.
				Element:span
					Reveal
				Element:span
					.
				Element:span
					find
				Element:span
					({
				Element:span
					ip
				Element:span
					:
				Element:span
					'183.195.251.144'
				Element:span
					})
				Element:span
					.
				Element:span
					then
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					result
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					'Result'
				Element:span
					,
				Element:span
					result
				Element:span
					);
				Element:span
					})
				Element:span
					.
				Element:span
					catch
				Element:span
					(
				Element:span
					function
				Element:span
					(
				Element:span
					err
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					error
				Element:span
					(
				Element:span
					err
				Element:span
					);
				Element:span
					});
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET https://reveal.clearbit.com/v1/companies/find
			Node:
			(type) c
			(layer)1
				Element:h3
					HTTP GET parameters
			Node:
			(type) c
			(layer)1
				Element:p
					The following parameters are supported.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Parameter
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:code
					ip
				Element:td
				Element:strong
					string
				Element:em
					(required)
					IP address to lookup
			Node:
			(type) c
			(layer)1
				Element:h4
					Response types
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Code
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					200
				Element:td
					Successful lookup
				Element:tr
				Element:td
					404
				Element:td
					Company not found
				Element:tr
				Element:td
					422
				Element:td
					Invalid parameters
			Node:
			(type) c
			(layer)1
				Element:h2
					Client-side endpoint
			Node:
			(type) c
			(layer)1
				Element:p
					Sometimes you’ll want to look up an IP address directly from a users browser, say to customize the page based on the company viewing it. Our public Reveal endpoint returns data about the IP address that made the request, and can be authenticated with a publishable key.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET https://reveal.clearbit.com/v1/companies/reveal
			Node:
			(type) c
			(layer)1
				Element:h3
					HTTP GET parameters
			Node:
			(type) c
			(layer)1
				Element:p
					The following parameters are supported.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Parameter
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:code
					authorization
				Element:td
				Element:strong
					string
				Element:em
					(required)
					Your
				Element:a
					publishable key
					(starts with a
				Element:code
					pk_
					)
				Element:tr
				Element:td
				Element:code
					callback
				Element:td
				Element:strong
					string
					(optional) A JSONP callback function to be invoked
				Element:tr
				Element:td
				Element:code
					variable
				Element:td
				Element:strong
					string
					(optional) A JavaScript variable name to be set
			Node:
			(type) c
			(layer)1
				Element:h4
					Response types
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Code
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
					200
				Element:td
					Successful lookup (or a JSONP or JS var response)
				Element:tr
				Element:td
					404
				Element:td
					Company not found
			Node:
			(type) c
			(layer)1
				Element:h3
					JSONP response
				Element:pre
				Element:code
				Element:span
					<script>
				Element:span
					function
				Element:span
					myCallback
				Element:span
					(
				Element:span
					response
				Element:span
					)
				Element:span
					{
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					response
				Element:span
					&&
				Element:span
					response
				Element:span
					.
				Element:span
					company
				Element:span
					);
				Element:span
					}
				Element:span
					</script>
				Element:span
					<script
				Element:span
					src=
				Element:span
					"https://reveal.clearbit.com/v1/companies/reveal?auth=pk_test&callback=myCallback"
				Element:span
					></script>
			Node:
			(type) c
			(layer)1
				Element:p
					One of the simplest ways of using this API is via a JavaScript script tag using
				Element:a
					JSONP
					. Simply pass the name of the function you’d like to be invoked as the
				Element:code
					callback
					parameter.
			Node:
			(type) c
			(layer)1
				Element:p
					This method of calling the API has the advantage of blocking page load, so is useful for customizing the page on the fly.
			Node:
			(type) c
			(layer)1
				Element:h3
					JavaScript variable response
				Element:pre
				Element:code
				Element:span
					<script
				Element:span
					src=
				Element:span
					"https://reveal.clearbit.com/v1/companies/reveal?auth=pk_test&variable=myVariable"
				Element:span
					></script>
				Element:span
					<script>
				Element:span
					console
				Element:span
					.
				Element:span
					log
				Element:span
					(
				Element:span
					myVariable
				Element:span
					&&
				Element:span
					myVariable
				Element:span
					.
				Element:span
					company
				Element:span
					)
				Element:span
					</script>
			Node:
			(type) c
			(layer)1
				Element:p
					Similarily to the JSONP method above, you can pass in the
				Element:code
					variable
					parameter when making a request, which will indicate you want the response to be set to a global JavaScript variable. Again, this makes sense when requesting the API from a script tag.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Autocomplete API
			Node:
			(type) c
			(layer)1
				Element:p
					Company Autocomplete is a free API that lets you auto-complete company names and retreive logo and domain information.
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Send requests with paritial company name to endpoint:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					curl
				Element:span
					'https://autocomplete.clearbit.com/v1/companies/suggest?query=stripe'
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					The JSON encoded response looks like this:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					[
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"domain"
				Element:span
					:
				Element:span
				Element:span
					"stripe.com"
				Element:span
					,
				Element:span
				Element:span
					"logo"
				Element:span
					:
				Element:span
				Element:span
					"https://logo.clearbit.com/stripe.com"
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Stripe"
				Element:span
				Element:span
					},
				Element:span
				Element:span
					{
				Element:span
				Element:span
					"domain"
				Element:span
					:
				Element:span
				Element:span
					"stripesgroup.com"
				Element:span
					,
				Element:span
				Element:span
					"logo"
				Element:span
					:
				Element:span
				Element:span
					"https://logo.clearbit.com/stripesgroup.com"
				Element:span
					,
				Element:span
				Element:span
					"name"
				Element:span
					:
				Element:span
				Element:span
					"Stripes Group"
				Element:span
				Element:span
					}
				Element:span
				Element:span
					]
				Element:span
			Node:
			(type) c
			(layer)1
				Element:h3
					HTTP Request
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET https://autocomplete.clearbit.com/v1/companies/suggest?query=:name
			Node:
			(type) c
			(layer)1
				Element:p
					Where
				Element:code
					:name
					is the partial name of the company.
			Node:
			(type) c
			(layer)1
				Element:h3
					HTTP Response
			Node:
			(type) c
			(layer)1
				Element:p
					Responses will include the following three fields:
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					Name
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:code
					domain
				Element:td
					Domain name of company
				Element:tr
				Element:td
				Element:code
					logo
				Element:td
					URL to logo
				Element:tr
				Element:td
				Element:code
					name
				Element:td
					Name of the company
			Node:
			(type) h1
			(layer)1
				Element:h1
					Logo API
			Node:
			(type) c
			(layer)1
				Element:p
					If you’re only interested in a Company’s logo, and don’t need
				Element:a
					any other data
					about the company, you can use our free Logo API.
			Node:
			(type) c
			(layer)1
				Element:p
					Access to the API is unauthenticated and doesn’t require a Clearbit account. We also provide some nify options listed below. If we can’t find a logo we’ll return a
				Element:code
					404
					status.
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					You can call the API directly from an html
				Element:code
					img
					tag - images are returned inline. For example:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					<img
				Element:span
					src=
				Element:span
					"https://logo.clearbit.com/stripe.com"
				Element:span
					>
			Node:
			(type) c
			(layer)1
				Element:blockquote
				Element:p
					Return’s Stripe’s logo.
				Element:p
				Element:img
				Element:p
					To alter the size or greyscale, pass some query params:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
				Element:span
					<img
				Element:span
					src=
				Element:span
					"https://logo.clearbit.com/stripe.com?size=200&greyscale=true"
				Element:span
					>
			Node:
			(type) c
			(layer)1
				Element:h3
					HTTP Request
			Node:
			(type) c
			(layer)1
				Element:p
				Element:code
					GET https://logo.clearbit.com/:domain
			Node:
			(type) c
			(layer)1
				Element:p
					Where
				Element:code
					:domain
					is the domain of the company.
			Node:
			(type) c
			(layer)1
				Element:h3
					HTTP GET params
			Node:
			(type) c
			(layer)1
				Element:p
					You can also optionally pass us the following parameters.
			Node:
			(type) c
			(layer)1
				Element:table
				Element:thead
				Element:tr
				Element:th
					param
				Element:th
					Description
				Element:tbody
				Element:tr
				Element:td
				Element:code
					size
				Element:td
				Element:strong
					integer
				Element:em
					(optional)
					image size: length of longest side in pixels (default is
				Element:code
					128
					)
				Element:tr
				Element:td
				Element:code
					format
				Element:td
				Element:strong
					string
				Element:em
					(optional)
					image format, either
				Element:code
					"png"
					or
				Element:code
					"jpg"
					(defaults to
				Element:code
					png
					)
				Element:tr
				Element:td
				Element:code
					greyscale
				Element:td
				Element:strong
					boolean
				Element:em
					(optional)
					Desaturates image if passed (defaults to
				Element:code
					false
					)
			Node:
			(type) c
			(layer)1
				Element:h2
					Default images
			Node:
			(type) c
			(layer)1
				Element:p
					Sometimes we can’t find a logo and image requests will return with a
				Element:code
					404
					response code. Rather than having a broken image show up you can use the
				Element:code
					onerror
					event to replace the image with a default of your choosing.
			Node:
			(type) c
			(layer)1
				Element:p
					We’ve put together
				Element:a
					an example
					of how to do this with both jQuery and pure JavaScript.
			Node:
			(type) c
			(layer)1
				Element:h2
					Specifying your own logo
				Element:blockquote
				Element:p
					Specify your own logo with the
				Element:code
					og:logo
					Open Graph tag.
				Element:pre
				Element:code
				Element:span
					<meta
				Element:span
					property=
				Element:span
					"og:logo"
				Element:span
					content=
				Element:span
					"http://yourdomain.com/logo.png"
				Element:span
					/>
				Element:blockquote
				Element:p
					Or to specify different sizes add multiple
				Element:code
					meta
					tags with a
				Element:code
					size
					attribute.
				Element:pre
				Element:code
				Element:span
					<meta
				Element:span
					property=
				Element:span
					"og:logo"
				Element:span
					content=
				Element:span
					"/logo.png"
				Element:span
					size=
				Element:span
					"150x150"
				Element:span
					/>
				Element:span
					<meta
				Element:span
					property=
				Element:span
					"og:logo"
				Element:span
					content=
				Element:span
					"/logo.png"
				Element:span
					size=
				Element:span
					"250x250"
				Element:span
					/>
				Element:span
					<meta
				Element:span
					property=
				Element:span
					"og:logo"
				Element:span
					content=
				Element:span
					"/logo.png"
				Element:span
					size=
				Element:span
					"500x500"
				Element:span
					/>
			Node:
			(type) c
			(layer)1
				Element:p
					While we normally try and detect a company’s logo using signals like their Twitter or Facebook account, if you control a domain you can indicate which logo you’d like used.
			Node:
			(type) c
			(layer)1
				Element:p
					Just add a
				Element:code
					og:logo
					Open Graph meta tag to your index page under the root domain, and point its
				Element:code
					content
					attribute to your logo of choice. We support
				Element:code
					png
					and
				Element:code
					jpg
					formats.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					* Commercial use of the Logo API requires a link attribution on any page in which the logo is displayed - i.e “
				Element:a
					Logos provided by Clearbit
					”. See
				Element:a
					our terms
					for more info.
