Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Easy-peasy bots: Getting started
			Node:
			(type) c
			(layer)1
				Element:span
					By D.E. Goodman-Wilson
			Node:
			(type) c
			(layer)1
				Element:span
				Element:a
					Node.js
			Node:
			(type) c
			(layer)1
				Element:span
				Element:a
					Botkit
			Node:
			(type) c
			(layer)1
				Element:span
				Element:a
					Bots
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
				Element:p
				Element:img
				Element:em
					Photo by Jeremy Waldorph
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					You
					: Have a great idea for a Slack bot, want to share it with the world (and maybe get it listed in the
				Element:a
					Slack App Directory
					!), and have some Javascript chops. But you don't know where to start.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:em
					Me
					: Not so good at the Javascript maybe, but I know how to get the ball rolling.
			Node:
			(type) c
			(layer)1
				Element:p
					So why not let's make a bot together? 😺
			Node:
			(type) c
			(layer)1
				Element:p
					In this tutorial we'll go through prepping a very simple bot, running it on your laptop or desktop computer, and connecting it to Slack. In a future tutorial we'll cover deploying your bot to a service like Heroku so others can use it too.
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Rolling with Botkit
						Node:
						(type) c
						(layer)2
							Element:p
								We're going to use
							Element:a
								Botkit
								in this tutorial —
							Element:a
								Howdy.ai
								has done a lot (a
							Element:em
								lot
								) of the hard work for us, so why not leverage that?
						Node:
						(type) c
						(layer)2
							Element:p
								First, we need to install some things. Make sure you have
							Element:em
								node
								installed on your local machine. If not, you have
							Element:a
								several options for installing
							Element:em
								node
								.
						Node:
						(type) c
						(layer)2
							Element:p
								Begin by forking and then cloning this GitHub repository:
							Element:a
								https://github.com/slackhq/easy-peasy-bot
								. This is just the simplest possible project built around one of the Botkit example bots. It includes everything we need to not only write a bot, but set it up for distribution via the "Add to Slack" Button or even the App Directory, easy-peasy.
						Node:
						(type) c
						(layer)2
							Element:p
								This is a Node.js project, so of course once you have the repository on your local machine, you will need to run
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								npm install
						Node:
						(type) c
						(layer)2
							Element:p
								to install the various dependencies.
						Node:
						(type) c
						(layer)2
							Element:p
								Next, edit the
							Element:code
								package.json
								file to give your bot a name, and to update the GitHub URLs to reflect the location of your fork.
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Exposing your bot to the outside world
									Node:
									(type) c
									(layer)3
										Element:p
											Bots have claustrophobia — we need to give them some light and air. Also, if the bot is holed up in the basement apartment of your local machine, Slack won't be able to see it. So let's open the windows a bit. Many tools will let us open a secure HTTP connection to a service running locally, such as
										Element:a
											*ngrok
											* and
										Element:a
											Pagekite
											. But I'm going to use
										Element:a
											localtunnel
											. Just use
										Element:em
											npm
											to install:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											npm install -g localtunnel
									Node:
									(type) c
									(layer)3
										Element:p
											and run localtunnel as such:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											lt --port 8765 --subdomain myawesomebot
									Node:
									(type) c
									(layer)3
										Element:p
											Once your bot is running on local port 8765, it will be accessible at
										Element:a
											https://myawesomebot.localtunnel.me
											, but your bot will only be available for testing
										Element:em
											really
											once it is installed on Slack. (You might consider changing
										Element:code
											my-awesome-bot
											to something more... memorable. And unique.)
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Pass the good word to Slack
									Node:
									(type) c
									(layer)3
										Element:p
											Now we need to let Slack know that your bot exists. Couldn't be easier. Go to
										Element:a
											https://api.slack.com/apps/new
											and fill out the form. Don't worry too much about the support URLs. But do be clear on the redirect URL. Look to the localtunnel output: The redirect URL will be
										Element:a
											https://myawesomebot.localtunnel.me/oauth
									Node:
									(type) c
									(layer)3
										Element:p
											On the next page, you will see a more detailed form. Scroll down until you see the bot section:
									Node:
									(type) c
									(layer)3
										Element:p
										Element:img
									Node:
									(type) c
									(layer)3
										Element:p
											Click on the "Add a bot to this app" button. You'll need to provide an @-name for your bot at this point.
									Node:
									(type) c
									(layer)3
										Element:p
											Finally, you need to take note of a couple of items at the top of the page: The Client ID and the Client Secret. Have those ready for the next step.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:img
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Running your bot
									Node:
									(type) c
									(layer)3
										Element:p
											Now, the time has come to run your bot. From the directory your bot is installed in, simply run
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											CLIENT_ID=xxx.yyy CLIENT_SECRET=abc PORT=8765 npm start
									Node:
									(type) c
									(layer)3
										Element:p
											And then visit
										Element:a
											https://myawesomebot.localtunnel.me/login
											to install your bot on a team.
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Giving your bot a voice
									Node:
									(type) c
									(layer)3
										Element:p
											Of course, this bot is just plain dumb. You can do better than this silly example! In
										Element:code
											index.js
											, look for the line
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											// BEGIN EDITING HERE!
									Node:
									(type) c
									(layer)3
										Element:p
											and start editing away!
									Node:
									(type) c
									(layer)3
										Element:p
											Botkit is structured around event listeners. The most important of these is the
										Element:code
											hears
											listener, which kicks off an action when your bot hears something in one of the channels to which it belongs. Let's look at an example:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											controller.hears('hello','direct_message',function(bot,message) { bot.reply(message,'Hello!'); });
									Node:
									(type) c
									(layer)3
										Element:p
											This event handler is triggered when the bot receives a direct message from a user that contains the word "hello". The bot responds in the direct message with "Hello!".
									Node:
									(type) c
									(layer)3
										Element:p
											You can listen for many kinds of messages besides direct messages: You can filter by messages that contain an @-mention of your bot, that begin with an @-mention, or simply any message at all. You can listen for any regular expression, or a list of multiple regular expressions. Bot kit is very flexible in this way.
									Node:
									(type) c
									(layer)3
										Element:p
											To start with, let's re-write this event listener to be a bit more flexible. Perhaps we want to listen for any message directed to our bot that contains different kinds of greetings. We could write:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											controller.hears( ['hello', 'hi', 'greetings'], ['direct_mention', 'mention', 'direct_message'], function(bot,message) { bot.reply(message,'Hello!'); } );
									Node:
									(type) c
									(layer)3
										Element:p
											Now our bot will respond any time it sees "hello", "hi", or "greetings" in either a DM, or a message that @-mentions the bot. (Don't forget to restart your bot after each edit!)
									Node:
									(type) c
									(layer)3
										Element:p
											(If you're having trouble getting your regular expressions just right, I find
										Element:a
											this online regex tester
											super helpful.)
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Congratulations!
						Node:
						(type) c
						(layer)2
							Element:p
								👏 You've built your first bot in Slack, and it's not just a Hello World bot — it's a Hi World and Greetings World bot too!
						Node:
						(type) c
						(layer)2
							Element:p
								At this point you will probably want to start doing more sophisticated things, like making requests to external services, so your bot can respond with timely and useful information (depending on what your bot does, of course). There's a lot more to Botkit than this! You can learn more about Botkit's awesome features by simply perusing the
							Element:a
								Botkit documentation
								.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Next time...
						Node:
						(type) c
						(layer)2
							Element:p
								Of course, you don't want to host your bot on your laptop forever. (Or maybe you do?) Over the next articles, I will show you how easy it is to deploy your bot to hosting services like Heroku, give your bot a more permanent memory, and extend your bot's functionality with artificial intelligence services. But at this point you should be far enough along to get your core logic going, and maybe even demo it.
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Related documentation
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
											Bot Users
										Element:br
										Element:em
											Slack Platform documentation
										Element:li
										Element:a
											Building Slack apps
										Element:br
										Element:em
											Slack Platform documentation
									Node:
									(type) c
									(layer)3
										Element:footer
										Element:ul
										Element:li
											Using Slack
										Element:li
										Element:a
											Product
										Element:li
										Element:a
											Pricing
										Element:li
										Element:a
											Support
										Element:li
										Element:a
											Slack Guides
										Element:li
										Element:a
											Video Guides
										Element:li
										Element:a
											App Directory
										Element:li
										Element:a
											API
										Element:ul
										Element:li
											Slack
										Element:li
										Element:a
											Jobs
										Element:li
										Element:a
											Customers
										Element:li
										Element:a
											Developers
										Element:li
										Element:a
											Events
										Element:li
										Element:a
											Blog
										Element:li
										Element:a
											Podcast
										Element:li
										Element:a
											Slack Shop
										Element:ul
										Element:li
											Legal
										Element:li
										Element:a
											Privacy
										Element:li
										Element:a
											Security
										Element:li
										Element:a
											Terms of Service
										Element:li
										Element:a
											Policies
										Element:ul
										Element:li
											Handy Links
										Element:li
										Element:a
											Download desktop app
										Element:li
										Element:a
											Download mobile app
										Element:li
										Element:a
											Brand Guidelines
										Element:li
										Element:a
											Slack at Work
										Element:li
										Element:a
											Status
										Element:a
										Element:ul
										Element:li
										Element:a
											Contact Us
										Element:li
										Element:a
										Element:li
										Element:a
