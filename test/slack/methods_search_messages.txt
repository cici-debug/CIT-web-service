Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					search.messages
			Node:
			(type) c
			(layer)1
				Element:a
					Documentation
			Node:
			(type) c
			(layer)1
				Element:a
					Tester
			Node:
			(type) c
			(layer)1
				Element:p
					This method returns messages matching a search query.
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Arguments
						Node:
						(type) c
						(layer)2
							Element:p
								This method has the URL
							Element:code
								https://slack.com/api/search.messages
								and follows the
							Element:a
								Slack Web API calling conventions
								.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Argument
							Element:th
								Example
							Element:th
								Required
							Element:th
								Description
							Element:tr
							Element:td
							Element:code
								token
							Element:td
							Element:code
								xxxx-xxxxxxxxx-xxxx
							Element:td
								Required
							Element:td
							Element:p
								Authentication token.
							Element:br
								Requires scope:
							Element:code
								search:read
							Element:tr
							Element:td
							Element:code
								query
							Element:td
							Element:code
								pickleface
							Element:td
								Required
							Element:td
							Element:p
								Search query. May contains booleans, etc.
							Element:tr
							Element:td
							Element:code
								sort
							Element:td
							Element:code
								timestamp
							Element:td
								Optional, default=score
							Element:td
							Element:p
								Return matches sorted by either
							Element:code
								score
								or
							Element:code
								timestamp
								.
							Element:tr
							Element:td
							Element:code
								sort_dir
							Element:td
							Element:code
								asc
							Element:td
								Optional, default=desc
							Element:td
							Element:p
								Change sort direction to ascending (
							Element:code
								asc
								) or descending (
							Element:code
								desc
								).
							Element:tr
							Element:td
							Element:code
								highlight
							Element:td
							Element:code
								true
							Element:td
								Optional
							Element:td
							Element:p
								Pass a value of
							Element:code
								true
								to enable query highlight markers (see below).
							Element:tr
							Element:td
							Element:code
								count
							Element:td
							Element:code
								20
							Element:td
								Optional, default=20
							Element:td
							Element:p
								Number of items to return per page.
							Element:tr
							Element:td
							Element:code
								page
							Element:td
							Element:code
								2
							Element:td
								Optional, default=1
							Element:td
							Element:p
								Page number of results to return.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Response
						Node:
						(type) c
						(layer)2
							Element:p
								The response envelope contains paging and result information:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								{ "ok": true, "query": "test", "messages": { "total": 829, "paging": { "count": 20, "total": 829, "page": 1, "pages": 42 }, "matches": [ {...}, {...}, {...} ] } }
						Node:
						(type) c
						(layer)2
							Element:p
								The actual matches are returned as hashes containing contextual messages:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								{ "type": "message", "channel": { "id": "C2147483753", "name": "foo" }, "user": "U2147483709", "username": "johnnytest", "ts": "1359414002.000003", "text": "mention test: johnnyrodgers". "permalink": "https:\/\/example.slack.com\/channels\/foo\/p1359414002000003", "previous_2": { "user": "U2147483709", "username": "johnnytest", "text": "This was said before before", "ts": "1359413987.000000", "type": "message" }, "previous": { "user": "U2147483709", "username": "johnnytest", "text": "This was said before", "ts": "1359414001.000000", "type": "message" }, "next": { "user": "U2147483709", "username": "johnnytest", "text": "This was said after", "ts": "1359414020.000000", "type": "message" }, "next_2": { "user": "U2147483709", "username": "johnnytest", "text": "This was said after after", "ts": "1359414021.000000", "type": "message" } }
						Node:
						(type) c
						(layer)2
							Element:p
								Messages are searched primarily inside the message text themselves, with a lower priority on the messages immediately before and after. If more than one search term is provided, user and channel are also matched at a lower priority. To specifically search within a channel, group, or DM, add
							Element:code
								in:channel_name
								,
							Element:code
								in:group_name
								, or
							Element:code
								in:username
								. To search for messages from a specific speaker, add
							Element:code
								from:username
								or
							Element:code
								from:botname
								.
						Node:
						(type) c
						(layer)2
							Element:p
								For IM results, the
							Element:code
								type
								is set to
							Element:code
								"im"
								and the
							Element:code
								channel.name
								property contains the user ID of the target user. For private group results, type is set to
							Element:code
								"group"
								.
						Node:
						(type) c
						(layer)2
							Element:p
								All search methods support the
							Element:code
								highlight
								parameter. If specified, the matching query terms will be marked up in the results so that clients may replace them with appropriate highlighting markers (e.g.
							Element:code
								<span class="highlight"></span>
								). The UTF-8 markers we use are:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								start: "\xEE\x80\x80"; # U+E000 (private-use) end : "\xEE\x80\x81"; # U+E001 (private-use)
						Node:
						(type) c
						(layer)2
							Element:p
								Please note that the max
							Element:code
								count
								value is
							Element:code
								1000
								and the max
							Element:code
								page
								value is
							Element:code
								100
								.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Errors
						Node:
						(type) c
						(layer)2
							Element:p
								This table lists the expected errors that this method could return. However, other errors can be returned in the case where the service is down or other unexpected factors affect processing. Callers should
							Element:i
								always
								check the value of the
							Element:code
								ok
								params in the response.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Error
							Element:th
								Description
							Element:tr
							Element:td
							Element:code
								not_authed
							Element:td
							Element:p
								No authentication token provided.
							Element:tr
							Element:td
							Element:code
								invalid_auth
							Element:td
							Element:p
								Invalid authentication token.
							Element:tr
							Element:td
							Element:code
								account_inactive
							Element:td
							Element:p
								Authentication token is for a deleted user or team.
							Element:tr
							Element:td
							Element:code
								user_is_bot
							Element:td
							Element:p
								This method cannot be called by a bot user.
							Element:tr
							Element:td
							Element:code
								invalid_arg_name
							Element:td
							Element:p
								The method was passed an argument whose name falls outside the bounds of common decency. This includes very long names and names with non-alphanumeric characters other than
							Element:code
								_
								. If you get this error, it is typically an indication that you have made a
							Element:em
								very
								malformed API call.
							Element:tr
							Element:td
							Element:code
								invalid_array_arg
							Element:td
							Element:p
								The method was passed a PHP-style array argument (e.g. with a name like
							Element:code
								foo[7]
								). These are never valid with the Slack API.
							Element:tr
							Element:td
							Element:code
								invalid_charset
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request, but the
							Element:code
								charset
								specified in the
							Element:code
								Content-Type
								header was invalid. Valid charset names are:
							Element:code
								utf-8
							Element:code
								iso-8859-1
								.
							Element:tr
							Element:td
							Element:code
								invalid_form_data
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request with
							Element:code
								Content-Type
							Element:code
								application/x-www-form-urlencoded
								or
							Element:code
								multipart/form-data
								, but the form data was either missing or syntactically invalid.
							Element:tr
							Element:td
							Element:code
								invalid_post_type
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request, but the specified
							Element:code
								Content-Type
								was invalid. Valid types are:
							Element:code
								application/x-www-form-urlencoded
							Element:code
								multipart/form-data
							Element:code
								text/plain
								.
							Element:tr
							Element:td
							Element:code
								missing_post_type
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request and included a data payload, but the request did not include a
							Element:code
								Content-Type
								header.
							Element:tr
							Element:td
							Element:code
								request_timeout
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request, but the
							Element:code
								POST
								data was either missing or truncated.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Warnings
						Node:
						(type) c
						(layer)2
							Element:p
								This table lists the expected warnings that this method will return. However, other warnings can be returned in the case where the service is experiencing unexpected trouble.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Warning
							Element:th
								Description
							Element:tr
							Element:td
							Element:code
								missing_charset
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request, and recommended practice for the specified
							Element:code
								Content-Type
								is to include a
							Element:code
								charset
								parameter. However, no
							Element:code
								charset
								was present. Specifically, non-form-data content types (e.g.
							Element:code
								text/plain
								) are the ones for which
							Element:code
								charset
								is recommended.
							Element:tr
							Element:td
							Element:code
								superfluous_charset
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request, and the specified
							Element:code
								Content-Type
								is not defined to understand the
							Element:code
								charset
								parameter. However,
							Element:code
								charset
								was in fact present. Specifically, form-data content types (e.g.
							Element:code
								multipart/form-data
								) are the ones for which
							Element:code
								charset
								is superfluous.
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:ul
							Element:li
								Using Slack
							Element:li
							Element:a
								Product
							Element:li
							Element:a
								Pricing
							Element:li
							Element:a
								Support
							Element:li
							Element:a
								Slack Guides
							Element:li
							Element:a
								Video Guides
							Element:li
							Element:a
								App Directory
							Element:li
							Element:a
								API
							Element:ul
							Element:li
								Slack
							Element:li
							Element:a
								Jobs
							Element:li
							Element:a
								Customers
							Element:li
							Element:a
								Developers
							Element:li
							Element:a
								Events
							Element:li
							Element:a
								Blog
							Element:li
							Element:a
								Podcast
							Element:li
							Element:a
								Slack Shop
							Element:ul
							Element:li
								Legal
							Element:li
							Element:a
								Privacy
							Element:li
							Element:a
								Security
							Element:li
							Element:a
								Terms of Service
							Element:li
							Element:a
								Policies
							Element:ul
							Element:li
								Handy Links
							Element:li
							Element:a
								Download desktop app
							Element:li
							Element:a
								Download mobile app
							Element:li
							Element:a
								Brand Guidelines
							Element:li
							Element:a
								Slack at Work
							Element:li
							Element:a
								Status
							Element:a
							Element:ul
							Element:li
							Element:a
								Contact Us
							Element:li
							Element:a
							Element:li
							Element:a
