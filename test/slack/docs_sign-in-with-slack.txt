Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Sign in with Slack
			Node:
			(type) c
			(layer)1
				Element:p
					Let users sign in to your product using Slack.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:strong
					It's fast, simple, and secure
			Node:
			(type) c
			(layer)1
				Element:p
				Element:strong
					Sign in with Slack
					extends our existing
				Element:a
					OAuth 2.0
					application approval flow to simplify logging in users to your website, service, or application.
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					It's fast. Log team members in without repetitive ceremony.
				Element:li
					It's simple. Implementation is swift, and it's easy for users to understand.
				Element:li
					It's secure. Slack interfaces with SSO providers, handles two-factor authentication, and confirms email addresses, so you have less to worry about.
			Node:
			(type) c
			(layer)1
				Element:p
					Use your favorite library or build it yourself; logging users in is just a few simple HTTP requests away.
			Node:
			(type) c
			(layer)1
				Element:ol
				Element:li
				Element:a
					Set up your Slack App
				Element:li
				Element:a
					Add your
				Element:strong
					Sign in with Slack
					button
				Element:li
				Element:a
					Handle the authorization flow
				Element:li
				Element:a
					Use tokens to retrieve user and team information
			Node:
			(type) c
			(layer)1
				Element:p
				Element:img
			Node:
			(type) c
			(layer)1
				Element:hr
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Identify users and their teams
									Node:
									(type) c
									(layer)3
										Element:p
											Our new
										Element:code
											identity
											permission scopes and
										Element:a
											provide you everything needed to quickly identify team members signing in.
										Element:code
											users.identity
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Everybody can sign in except when they can't
									Node:
									(type) c
									(layer)3
										Element:p
											Slack Apps requesting
										Element:em
											only
											the
										Element:code
											identity
											family of scopes do not contribute to the maximum number of integrations that free teams may install.
									Node:
									(type) c
									(layer)3
										Element:p
											Team administrators may configure whether
										Element:strong
											Sign in with Slack
											is available to their team members, separately from any application installation restrictions already in place.
									Node:
									(type) c
									(layer)3
										Element:p
											Guest accounts can not use
										Element:strong
											Sign in with Slack
											.
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Sign in again and again
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Sign in with Slack
											is optimized for logging in. Returning users won't be distracted by unnecessary approvals, we'll send them back to your site, service, or app as fast as we can!
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
									Node:
									(type) c
									(layer)3
										Element:h3
											Already built a Slack app?
									Node:
									(type) c
									(layer)3
										Element:p
										Element:strong
											Take five minutes
											to set up your
										Element:strong
											Sign in with Slack
											button. It complements your existing
										Element:a
											Add to Slack
											button, and you can always ask for additional permissions later.
										Element:a
											Find out how the two flows differ
											.
									Node:
									(type) c
									(layer)3
										Element:a
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								Implementation Overview
						Node:
						(type) c
						(layer)2
							Element:p
								If this is your first time working with OAuth 2.0,
							Element:strong
								Sign in with Slack
								is a simple way to get acquainted.
						Node:
						(type) c
						(layer)2
							Element:p
								If you've already built an
							Element:a
								Add to Slack
								button, it should only take a few minutes to start signing users in with
							Element:strong
								Sign in with Slack
								.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
							Element:h3
								Token negotiation flow
						Node:
						(type) c
						(layer)2
							Element:ol
							Element:li
								User arrives at your site and clicks
							Element:strong
								Sign in with Slack
								button
							Element:li
								User arrives at
							Element:code
								slack.com/oauth/authorize?client_id=CLIENT_ID&scope=identity.basic
							Element:ol
							Element:li
								if user has already approved, they're redirected to your app instantly
							Element:li
								otherwise user must approve your application
							Element:li
								User arrives at your specified redirect URL with a
							Element:code
								code
								parameter
							Element:li
								Your server exchanges
							Element:code
								code
								for an access token using
							Element:code
								slack.com/api/oauth.access
							Element:li
								Your server uses the resultant access token to request user & team details with
							Element:code
								slack.com/api/users.identity?token=awarded_token
						Node:
						(type) c
						(layer)2
							Element:p
								On the user's first login, we'll ask them to approve your app to access their user and basic team information and then send them to your redirect URL to complete sign in.
						Node:
						(type) c
						(layer)2
							Element:p
								On subsequent logins, we'll skip the approval process and send the user back to your redirect as quickly as the tubes allow!
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:strong
								Already have a Slack app and redirect URL?
							Element:a
								Skip ahead
								.
							Element:li
							Element:strong
							Element:a
								Use our Sign in with Slack button generator
						Node:
						(type) c
						(layer)2
							Element:a
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								Details
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
							Element:h3
								Create your Slack app if you haven't already
						Node:
						(type) c
						(layer)2
							Element:p
								You'll need credentials to use
							Element:strong
								Sign in with Slack
								. To retrieve your Client ID and secret, you'll need to create a
							Element:a
								Slack App
								if you haven't already.
						Node:
						(type) c
						(layer)2
							Element:p
								Even if you're just implementing
							Element:strong
								Sign in with Slack
								and don't have a Slack App for teams to "install," you'll still need to create a Slack App record.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
								Create a Slack app now
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
							Element:h3
								Prepare your redirect URI
						Node:
						(type) c
						(layer)2
							Element:p
								After saving your application record, you'll find a panel detailing your Client ID, Client Secret, and Redirect URI configuration:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:img
						Node:
						(type) c
						(layer)2
							Element:p
								Save your client ID and secret in a safe, secure place. You'll need both later in this process.
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														What's a redirect URL?
												Node:
												(type) c
												(layer)4
													Element:p
														Redirect URLs are specific URLs on your site or application that handle a crucial part of the authentication flow. By registering your redirect URLs as part of your application record, you're instructing Slack the valid locations to send authorization codes.
												Node:
												(type) c
												(layer)4
													Element:p
														When a user lands on your redirect URL with an authorization code, you'll then perform server-side operations to exchange the authorization code for a bearer token, representing the user's approval of your product or application.
												Node:
												(type) c
												(layer)4
													Element:p
														As you develop, you can specify redirects on
													Element:code
														localhost
														but we recommend using a publicly available server supporting SSL once your integration is user-facing.
												Node:
												(type) c
												(layer)4
													Element:p
														Once you've decided where in your application you'll be sending users, provide it on this configuration screen and save your work.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
												Node:
												(type) c
												(layer)4
													Element:a
												Node:
												(type) c
												(layer)4
													Element:h3
														Set up your Sign in with Slack Button
												Node:
												(type) c
												(layer)4
													Element:p
														Point your buttons to
													Element:code
														https://slack.com/oauth/authorize
														and include a
													Element:code
														scope
														parameter set only to
													Element:code
														identity.basic
														(and potentially related scopes we'll discuss soon), along with your
													Element:code
														client_id
														.
												Node:
												(type) c
												(layer)4
													Element:p
														If your application record contains multiple redirect URLs, specify the one you want to use as the
													Element:code
														redirect_uri
														parameter.
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														<a href="https://slack.com/oauth/authorize?scope=identity.basic&client_id=your_client_id"><img src="https://api.slack.com/img/sign_in_with_slack.png" /></a>
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
														Use our button generator
														to make this even simpler.
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Valid parameters
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														Parameter
													Element:th
														Required?
													Element:th
														Purpose & Examples
													Element:tr
													Element:td
													Element:code
														scope
													Element:td
														Required
													Element:td
													Element:p
														A comma-separated list of permissions you're requesting the user to approve. If you're just logging users in, set this to
													Element:code
														identity.basic
														. You can't ask for
													Element:code
														identity.email
														,
													Element:code
														identity.team
														, or
													Element:code
														identity.avatar
														without also asking for
													Element:code
														identity.basic
														.
													Element:p
														Examples:
													Element:ul
													Element:li
													Element:code
														identity.basic
													Element:li
													Element:code
														identity.basic,identity.email
													Element:li
													Element:code
														identity.basic,identity.team,identity.avatar
													Element:p
													Element:strong
														Important
														: To ask for additional permission scopes, you must use the
													Element:a
														Add to Slack
														flow instead.
													Element:tr
													Element:td
													Element:code
														client_id
													Element:td
														Required
													Element:td
													Element:p
													Element:p
														Example:
													Element:ul
													Element:li
													Element:code
														1048553852.9553671552
													Element:tr
													Element:td
													Element:code
														redirect_uri
													Element:td
														Optional
													Element:td
													Element:p
														The URL the user should return to once Slack has validated their approval. Must be URL-encoded as per
													Element:a
														RFC 3986
														and correspond to a registered URL associated with your application record.
													Element:p
														Examples:
													Element:ul
														Please note that these are the URL-encoded versions of
													Element:li
													Element:code
														http%3A%2F%2Flocalhost%3A3000%2Fslack%2Fauth%2Fredirect
													Element:li
													Element:code
														https%3A%2F%2Fyourapp.com%2Fslack%2Fauth%2Fredirect
													Element:code
														http://localhost:3000/slack/auth/redirect
														and
													Element:code
														https://yourapp.com/slack/auth/redirect
													Element:tr
													Element:td
													Element:code
														state
													Element:td
														Optional
													Element:td
													Element:p
														An optional string of characters you've generated to maintain state. If specified, Slack will send this value back to your redirect URI along with the user.
													Element:p
														This value is frequently used to validate that your application initiated the login sequence. It is best to use a non-human-readable value.
													Element:p
														Examples:
													Element:ul
													Element:li
													Element:code
														aabbCCddeeFF
													Element:li
													Element:code
														resumeSignIn
												Node:
												(type) c
												(layer)4
													Element:p
														Once you have your hand-crafted button and redirect URI ready, it's time to focus on the process itself.
												Node:
												(type) c
												(layer)4
													Element:a
												Node:
												(type) c
												(layer)4
													Element:h3
														Authorization
												Node:
												(type) c
												(layer)4
													Element:p
														After a user clicks your
													Element:strong
														Sign in with Slack
														button, their web browser should arrive on Slack's servers.
												Node:
												(type) c
												(layer)4
													Element:p
														Your application will wait patiently while the user handles some business or Slack just sends them on their way back to your redirect URL.
												Node:
												(type) c
												(layer)4
													Element:p
														If the user has never signed in to your product before, they'll be prompted to approve your Slack app.
												Node:
												(type) c
												(layer)4
													Element:p
														If a user decides not to perform Sign in with Slack, they'll be redirected to your
													Element:code
														redirect_uri
														where you may also receive an
													Element:code
														error
														parameter. (See
													Element:a
														OAuth docs
														)
												Node:
												(type) c
												(layer)4
													Element:p
														If the user is simply signing in to resume an existing relationship with your Slack app, we'll send them to your redirect URL right away.
												Node:
												(type) c
												(layer)4
													Element:p
														Either way, your next steps are the same.
												Node:
												(type) c
												(layer)4
													Element:p
														The game is afoot. The user's browser has redirected them to your specified redirect URL. It's time for your application to stop waiting and
													Element:em
														do
														something again.
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Interpret parameters
												Node:
												(type) c
												(layer)4
													Element:p
														When your redirect URI was triggered, Slack includes a fresh
													Element:code
														code
														parameter, along with any
													Element:code
														state
														parameter you had affixed to your sign in URL.
												Node:
												(type) c
												(layer)4
													Element:p
														The
													Element:code
														code
														parameter is an authorization code that you will exchange for a long-lived access token. It can only be exchanged once and you only have ten minutes to exchange it.
												Node:
												(type) c
												(layer)4
													Element:p
														If you're using a
													Element:code
														state
														parameter, you'll want to verify that the state matches your expectations. If it doesn't, display an error message and do not attempt the next steps.
												Node:
												(type) c
												(layer)4
													Element:a
												Node:
												(type) c
												(layer)4
													Element:h3
														Obtain an access token
												Node:
												(type) c
												(layer)4
													Element:p
														We'll now complete the OAuth negotiation sequence by building a request to
													Element:a
														.
													Element:code
														oauth.access
												Node:
												(type) c
												(layer)4
													Element:p
														Use the
													Element:code
														code
														parameter you just received in conjunction with your secure client secret and client ID to prepare your request parameters:
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:code
														client_id
														- the client ID issued when you created your app
													Element:li
													Element:code
														client_secret
														- also issued when you created your app
													Element:li
													Element:code
														code
														- that
													Element:code
														code
														parameter we just told you about
													Element:li
													Element:code
														redirect_uri
														- only include this if you've explicitly specified it in your
													Element:strong
														Sign in with Slack
														button. When provided, it must match exactly, though properly URL-encoded.
												Node:
												(type) c
												(layer)4
													Element:p
														We'll then take those parameters and perform a HTTP GET to
													Element:code
														https://slack.com/api/oauth.access
														like:
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														GET https://slack.com/api/oauth.access?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&code=XXYYZZ
												Node:
												(type) c
												(layer)4
													Element:p
														In response, you'll receive an
													Element:code
														application/json
														payload containing your access token.
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														{ "ok": true, "access_token": "xoxp-1111827399-16111519414-20367011469-5f89a31i07", "scope": "identity.basic", "team_id": "T0G9PQBBK" }
												Node:
												(type) c
												(layer)4
													Element:p
														See the
													Element:a
														oauth.access
														documentation for details on error conditions.
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Response breakdown
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:code
														ok
														tells you whether the request completed successfully. Always look for a
													Element:code
														true
														value here before proceeding.
													Element:li
													Element:code
														access_token
														is the string you've been awarded to represent this user
													Element:li
													Element:code
														scope
														contains a comma-separated list of the scopes you've been awarded for this user. If you're using
													Element:strong
														Sign in with Slack
														for more than just sign in, the list of scopes may include other scopes you've requested and received for this user. See
													Element:a
														Appending Scopes
														for more information.
													Element:li
													Element:code
														team_id
														provides you the user's team ID.
												Node:
												(type) c
												(layer)4
													Element:p
														The values will be more useful to you when obtaining information about the user in the next step.
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Storing identity access tokens
												Node:
												(type) c
												(layer)4
													Element:p
														If you'll be saving your identity tokens for later, you'll want to securely store them adjacent to
													Element:strong
														both a user's ID and team ID
														. Consider these three pieces of information a
													Element:strong
														triad
														.
												Node:
												(type) c
												(layer)4
													Element:p
														You've authenticated a
													Element:em
														specific user
														represented by
													Element:code
														user_id
														, within a
													Element:em
														specific team
														represented by
													Element:code
														team_id
														, and that authentication is symbolized by the
													Element:code
														access_token
														you've been awarded.
												Node:
												(type) c
												(layer)4
													Element:p
														Be careful not to distribute access tokens (or your client secret) in public code repositories or other unsecured locations. Read our article on
													Element:a
														safely storing credentials
														.
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Using Sign in with Slack and Add to Slack together
												Node:
												(type) c
												(layer)4
													Element:p
														If the user logging in with
													Element:strong
														Sign in with Slack
														has previously approved your application for other scopes using
													Element:em
														Add to Slack
														, then the resultant access tokens will contain both the
													Element:code
														identity.*
														scopes you used for sign in and any scopes you asked for when using
													Element:a
														Add to Slack
														. To ask for permissions beyond
													Element:code
														identity.*
														, request them with the Add to Slack flow.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
												Node:
												(type) c
												(layer)4
													Element:a
												Node:
												(type) c
												(layer)4
													Element:h3
														Using tokens to retrieve user and team information
												Node:
												(type) c
												(layer)4
													Element:p
														Now that you've negotiated your token, use it to make requests with the API.
												Node:
												(type) c
												(layer)4
													Element:p
														Introducing the
													Element:em
														API method, available at
													Element:a
													Element:code
														users.identity
													Element:code
														https://slack.com/api/users.identity
														and requiring the
													Element:code
														identity.basic
														scope -- this method is the primary means to identify users.
												Node:
												(type) c
												(layer)4
													Element:p
														If the bearer token you received in the above step was
													Element:code
														xoxp-1111827393-16111519414-20367011469-5f89a31i07
														, you'd send your request to
													Element:code
														https://slack.com/api/users.identity?token=xoxp-1111827393-16111519414-20367011469-5f89a31i07
												Node:
												(type) c
												(layer)4
													Element:p
														The response will be in JSON and contain a few fields you'll want to look out for:
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														{ "ok": true, "user": { "name": "Sonny Whether", "id": "U0G9QF9C6" }, "team": { "id": "T0G9PQBBK" } }
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:code
														ok
														tells you whether the request completed successfully. Always look for a
													Element:code
														true
														value here before proceeding.
													Element:li
													Element:code
														user
														and
													Element:code
														user_id
														give their username and unique ID
													Element:li
													Element:code
														team
														and
													Element:code
														team_id
														give you their team name and unique ID
												Node:
												(type) c
												(layer)4
													Element:p
														To retrieve additional information about the team member, such as their email address, team name, or image avatar, you'll need to request additional scopes during the authorization phase.
												Node:
												(type) c
												(layer)4
													Element:p
														With those scopes approved, the response for
													Element:code
														users.identity
														will be modified to include the associated data, such that your response may look like:
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														{ "ok": true, "user": { "name": "Sonny Whether", "id": "U0G9QF9C6", "email": "sonny@captain-fabian.com", "image_24": "https://secure.gravatar.com/avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg?s=24&d=https%3A%2F%2Fdev.slack.com%2Fimg%2Favatars%2Fava_0010-24.v1441146555.png", "image_32": "https://secure.gravatar.com/avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg?s=32&d=https%3A%2F%2Fdev.slack.com%2Fimg%2Favatars%2Fava_0010-32.v1441146555.png", "image_48": "https://secure.gravatar.com/avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg?s=48&d=https%3A%2F%2Fdev.slack.com%2Fimg%2Favatars%2Fava_0010-48.v1441146555.png", "image_72": "https://secure.gravatar.com/avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg?s=72&d=https%3A%2F%2Fdev.slack.com%2Fimg%2Favatars%2Fava_0010-72.v1441146555.png", "image_192": "https://secure.gravatar.com/avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg?s=192&d=https%3A%2F%2Fdev.slack.com%2Fimg%2Favatars%2Fava_0010-192.v1443724322.png", "image_512": "https://secure.gravatar.com/avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg?s=512&d=https%3A%2F%2Fdev.slack.com%2Fimg%2Favatars%2Fava_0010-512.v1443724322.png" }, "team": { "id": "T0G9PQBBK", "name": "Captain Fabian's Naval Supply" } }
						Node:
						(type) c
						(layer)2
												Node:
												(type) c
												(layer)4
													Element:h4
														Identity Scopes
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
													Element:strong
														- request access to basic information about the user and use
													Element:code
														identity.basic
													Element:strong
														Sign in with Slack
														to log them in. You must request this scope in order to request any of the scopes below.
													Element:li
													Element:code
														identity.email
														- request access to the user's email address
													Element:li
													Element:code
														identity.team
														- request access to the user's team name
													Element:li
													Element:code
														identity.avatar
														- request access to the user's profile image/avatar
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Important
														: Use these scopes and
													Element:strong
														Sign in with Slack
													Element:strong
														when you're logging users into your application or site. Use the Add to Slack flow when asking teams to approve your Slack App using non-identity.* scopes.
													Element:em
														only
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
												Node:
												(type) c
												(layer)4
													Element:a
												Node:
												(type) c
												(layer)4
													Element:h3
														You're done!
												Node:
												(type) c
												(layer)4
													Element:p
														You are triumphantly victorious. The user token is yours and you've identified the user. Time for your application to do its thing.
												Node:
												(type) c
												(layer)4
													Element:a
												Node:
												(type) c
												(layer)4
													Element:h3
														Revoking tokens
												Node:
												(type) c
												(layer)4
													Element:p
													Element:strong
														Sign in with Slack
														access tokens do not automatically expire. Users can revoke tokens at any time, and so can you:
												Node:
												(type) c
												(layer)4
													Element:p
														If you're off-boarding a user or otherwise wish to revoke a token during your development process, use the new
													Element:a
														API method. The token you specify as the
													Element:code
														auth.revoke
													Element:code
														token
														URL parameter will be revoked.
												Node:
												(type) c
												(layer)4
													Element:p
														For example, issuing a HTTP POST to
													Element:code
														https://slack.com/api/auth.revoke?token=xoxp-2323827393-16111519414-20367011469-5f89a31i07
														would give you this response:
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														{ "ok": true, "revoked": true }
												Node:
												(type) c
												(layer)4
													Element:p
														After execution, the specified token will no longer be functional for API requests.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
												Node:
												(type) c
												(layer)4
													Element:a
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								Button Generator
						Node:
						(type) c
						(layer)2
							Element:p
								Use this generator to help you build your OAuth authorization URL and display the
							Element:strong
								Sign in with Slack
								button.
						Node:
						(type) c
						(layer)2
							Element:label
							Element:span
								Button HTML
							Element:span
								Sign in with Slack button HTML
						Node:
						(type) c
						(layer)2
							Element:span
								App:
						Node:
						(type) c
						(layer)2
							Element:span
								Code for app:
						Node:
						(type) c
						(layer)2
							Element:label
						Node:
						(type) c
						(layer)2
							Element:span
								Scopes:
						Node:
						(type) c
						(layer)2
							Element:span
								Scopes to include:
						Node:
						(type) c
						(layer)2
							Element:label
								identity.basic (
							Element:em
								required
								)
						Node:
						(type) c
						(layer)2
							Element:label
								identity.email
						Node:
						(type) c
						(layer)2
							Element:label
								identity.team
						Node:
						(type) c
						(layer)2
							Element:label
								identity.avatar
						Node:
						(type) c
						(layer)2
							Element:p
								Looks like you don't have any apps yet.
						Node:
						(type) c
						(layer)2
							Element:a
								Create An App
						Node:
						(type) c
						(layer)2
							Element:a
									Node:
									(type) c
									(layer)3
						Node:
						(type) c
						(layer)2
							Element:h2
								Use cases
						Node:
						(type) c
						(layer)2
							Element:p
								There are many ways to use
							Element:strong
								Sign in with Slack
								. Here are some of our favorites.
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
							Element:h3
								Binding Slack team members to service accounts
						Node:
						(type) c
						(layer)2
							Element:p
								Your Slack app may be part of a larger service, with its own notion of user accounts and identity.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:strong
								Sign in with Slack
								makes it easy to associate a team member to a specific account in your service.
						Node:
						(type) c
						(layer)2
							Element:p
								If your app is interacting with an unrecognized user via a
							Element:a
								bot user
								or
							Element:a
								slash command
								, you can send the user a message containing an authorization URL requesting identity-related scopes, or a link to a page on your site that presents a
							Element:strong
								Sign in with Slack
								button.
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
							Element:h3
								Confirming identity for internal projects
						Node:
						(type) c
						(layer)2
							Element:p
								Many teams use custom integrations or team-focused Slack apps to work with internal services and applications. Use
							Element:strong
								Sign in with Slack
								to confirm your organization's team members and log users in to your team's content.
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
							Element:h3
								Business inquiries
						Node:
						(type) c
						(layer)2
							Element:p
								Use
							Element:strong
								Sign in with Slack
								to make it easier for your potential customers to request more information about your products or services.
			Node:
			(type) h1
			(layer)1
				Element:h1
					Helpful resources
			Node:
			(type) c
			(layer)1
				Element:p
				Element:a
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
				Element:h3
					How is
				Element:strong
					Sign in with Slack
					different from
				Element:strong
					Add to Slack
					?
			Node:
			(type) c
			(layer)1
				Element:p
					If you already have a Slack app, you've been using the same
				Element:code
					/oauth/authorize
					method used by
				Element:strong
					Sign in with Slack
					to negotiate
				Element:a
					OAuth scopes
					like
				Element:code
					bot
					and
				Element:code
					incoming-webhook
					.
			Node:
			(type) c
			(layer)1
				Element:p
					After receiving a token, apps typically request the
				Element:a
					method to confirm the
				Element:code
					auth.test
				Element:em
					installing user
					.
			Node:
			(type) c
			(layer)1
				Element:p
					Tokens awarded with
				Element:strong
					Sign in with Slack
					are instead used with the
				Element:a
					method for context on the
				Element:code
					users.identity
				Element:em
					user logging in
					to a site, app, or service.
			Node:
			(type) c
			(layer)1
				Element:p
					Many apps previously used the
				Element:code
					identify
					permission scope to verify a user's identity. Some apps may have used in the
				Element:code
					users:read
					scope to retrieve extended information about users. In most cases, we recommend using this new
				Element:strong
					Sign in with Slack
					flow instead.
			Node:
			(type) c
			(layer)1
				Element:p
					The
				Element:strong
					Add to Slack
					flow is intended for users to install applications and approve them for access in interacting with or retrieving information about their team.
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
				Element:h3
					Assets
			Node:
			(type) c
			(layer)1
				Element:p
					Please use these assets when presenting team members the opportunity to use
				Element:strong
					Sign in with Slack
					.
			Node:
			(type) c
			(layer)1
				Element:p
					This HTML snippet references our CDN-hosted buttons:
			Node:
			(type) c
			(layer)1
				Element:pre
				Element:code
					<img src="https://platform.slack-edge.com/img/sign_in_with_slack.png" srcset="https://platform.slack-edge.com/img/sign_in_with_slack.png 1x, https://platform.slack-edge.com/img/sign_in_with_slack@2x.png 2x" />
			Node:
			(type) c
			(layer)1
				Element:p
					Example rendering:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:img
			Node:
			(type) c
			(layer)1
				Element:p
					If you want to host the assets yourself, please download these images:
			Node:
			(type) c
			(layer)1
				Element:p
				Element:a
				Element:i
					Download PNG (170px by 40px)
			Node:
			(type) c
			(layer)1
				Element:p
				Element:a
				Element:i
					Download PNG (Retina, 344px by 80px)
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
				Element:h3
					Libraries
			Node:
			(type) c
			(layer)1
				Element:p
					The OAuth 2.0 authorization sequence is simple enough to implement yourself but if you want to use an existing library, almost any supporting the
				Element:a
					authorization code grant
					flow should work well with
				Element:strong
					Sign in with Slack
					.
			Node:
			(type) c
			(layer)1
				Element:p
					While most existing OAuth 2.0 libraries should cooperate with
				Element:strong
					Sign in with Slack
					, some libraries built to utilize the
				Element:a
					Add to Slack button
					may need modifications to recognize these new scopes and the alternate
				Element:a
					users.identity
					method used to retrieve identification details after token negotiation.
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
					Java
				Element:ul
				Element:li
				Element:a
					scribejava
					- among the simplest OAuth 2.0 libraries available for Java.
				Element:li
					Ruby
				Element:ul
				Element:li
				Element:a
					omniauth-slack
					- easily negotiate tokens in Ruby on Rails, Sinatra and other Ruby-based applications with this plugin for
				Element:a
					OmniAuth
					.
				Element:li
					PHP
				Element:ul
				Element:li
				Element:a
					oauth2-slack
					- A Slack-specific extension to
				Element:a
					oauth2-client
					.
			Node:
			(type) c
			(layer)1
				Element:h2
					Related Articles
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					Tutorial by Slack
				Element:span
					A style guide for slash commands
				Element:li
				Element:a
					Tutorial by Manifestly (medium.com)
				Element:span
					How Manifestly implemented Sign in with Slack
			Node:
			(type) c
			(layer)1
				Element:footer
				Element:ul
				Element:li
					Using Slack
				Element:li
				Element:a
					Product
				Element:li
				Element:a
					Pricing
				Element:li
				Element:a
					Support
				Element:li
				Element:a
					Slack Guides
				Element:li
				Element:a
					Video Guides
				Element:li
				Element:a
					App Directory
				Element:li
				Element:a
					API
				Element:ul
				Element:li
					Slack
				Element:li
				Element:a
					Jobs
				Element:li
				Element:a
					Customers
				Element:li
				Element:a
					Developers
				Element:li
				Element:a
					Events
				Element:li
				Element:a
					Blog
				Element:li
				Element:a
					Podcast
				Element:li
				Element:a
					Slack Shop
				Element:ul
				Element:li
					Legal
				Element:li
				Element:a
					Privacy
				Element:li
				Element:a
					Security
				Element:li
				Element:a
					Terms of Service
				Element:li
				Element:a
					Policies
				Element:ul
				Element:li
					Handy Links
				Element:li
				Element:a
					Download desktop app
				Element:li
				Element:a
					Download mobile app
				Element:li
				Element:a
					Brand Guidelines
				Element:li
				Element:a
					Slack at Work
				Element:li
				Element:a
					Status
				Element:a
				Element:ul
				Element:li
				Element:a
					Contact Us
				Element:li
				Element:a
				Element:li
				Element:a
