Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					Developing for Enterprise Grid
			Node:
			(type) c
			(layer)1
				Element:p
					New to building on Slack? We're happy you're here. The first step is to
				Element:a
					create an app
					‚Äî it'll only take a moment.
				Element:a
					Get started
					.
			Node:
			(type) c
			(layer)1
				Element:p
				Element:a
					Slack Enterprise Grid
					allows large organizations to collaborate across many teams. While many apps, integrations, and bots will work as expected on Enterprise, there are enough new behaviors, conditions, nuances, and
				Element:em
					opportunity
					to warrant reviewing your app for full compatibility.
			Node:
			(type) c
			(layer)1
				Element:a
				Element:img
			Node:
			(type) c
			(layer)1
				Element:ul
				Element:li
				Element:a
					What is Enterprise Grid?
				Element:li
				Element:a
					What if I do nothing?
				Element:li
				Element:a
					Identifying an enterprise organization
				Element:li
				Element:a
					How do I ready my app or integration for enterprise grid?
				Element:li
				Element:a
					Channels shared between multiple teams
				Element:li
				Element:a
					Our user ID translation layer
				Element:li
				Element:a
					Building internal integrations
				Element:li
				Element:a
					Enterprise Grid development environment
				Element:li
				Element:a
					Glossary
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								What is Enterprise Grid?
						Node:
						(type) c
						(layer)2
							Element:p
								Enterprise Grid is a "network" of two or more Slack team instances. Each Slack team has its own team ID, its own directory of team members, its own channels, conversations, files, and zeitgeist. For the most part, each team behaves and acts functions as you're used to.
						Node:
						(type) c
						(layer)2
							Element:p
								The biggest delta for your app, integration, bot, or mind to handle is that some
							Element:a
								channels and conversations can be
								between multiple teams within the same Enterprise organization.
							Element:em
								shared
						Node:
						(type) c
						(layer)2
							Element:p
								As with typical Slack teams, teams on an Enterprise Grid have their very own application installations and custom integrations.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								What if I do nothing?
						Node:
						(type) c
						(layer)2
							Element:p
								A Slack team is a Slack team is a Slack team. And a team is a workspace. A place where work happens. It's all very serious.
						Node:
						(type) c
						(layer)2
							Element:p
								If your app or integration is never installed on an enterprise organization's team, you won't encounter any of the particularities detailed in this document.
						Node:
						(type) c
						(layer)2
							Element:p
								However, if you have the good fortune to be installed by one or more Enterprise Grid teams, or a team you're
							Element:em
								already
								installed on
							Element:em
								becomes
								part of one:
						Node:
						(type) c
						(layer)2
							Element:p
							Element:span
								üôÉ
								Your app might not know what to do with messages and users originating from shared channels. It's novel.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:span
								üóø
								Your app may have trouble dealing with object IDs beginning with atypical characters, like user IDs starting with
							Element:code
								W
								.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:span
								üëØ
								Your bot could blindly reply multiple times to messages, not recognizing a unique message delivery scenario introduced by
							Element:a
								shared channels
								.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:span
								üêã
								Teams on Enterprise Grid are often large and some API responses, like channel memberships, can grow immense. Your app might need to change how it digests information.
						Node:
						(type) c
						(layer)2
							Element:p
								You never know when a team on Enterprise Grid will install your app. Without making a few tweaks, your new users may notice these (and other) quirks in your app's behavior.
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Surface area
									Node:
									(type) c
									(layer)3
										Element:p
											Working with Enterprise Grid means that no matter what your app does or which APIs it uses, it's more likely to encounter an enterprise-related quirk.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:a
											Bot users
											are more likely than other integration points to require additional work for exemplary performance on Enterprise Grid teams.
									Node:
									(type) c
									(layer)3
										Element:p
											We recommend reviewing your app's current assumptions, operations, and configuration. Maybe even if you aren't planning to work with Enterprise Grid.
									Node:
									(type) c
									(layer)3
										Element:p
											Read on if:
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
											you are building
										Element:a
											custom integrations
											or
										Element:a
											Slack apps
											for your own Enterprise Grid team
										Element:li
											you're building Slack apps for other Enterprise Grid teams to collaborate with
										Element:li
											you're readying Enterprise Grid support for tools, libraries, or frameworks
									Node:
									(type) c
									(layer)3
										Element:p
											Really, if you're using any aspect of the platform at all and want to support Enterprise Grid ‚Äî this guide is for you.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Enterprise Grid containment grid
												Node:
												(type) c
												(layer)4
													Element:p
														Here's one way of looking at the kind of work involved in supporting Enterprise Grid teams.
												Node:
												(type) c
												(layer)4
													Element:blockquote
													Element:p
													Element:em
														"If there's a steady paycheck in it, I'll believe anything you say."
												Node:
												(type) c
												(layer)4
													Element:table
													Element:tr
													Element:th
														API
													Element:th
														Support strategies
													Element:tr
													Element:td
														All
													Element:a
														slack apps
														&
													Element:a
														custom integrations
													Element:td
													Element:ul
													Element:li
														Support user IDs beginning with
													Element:code
														W
													Element:li
														Support users from other teams within the same Enterprise Grid using your application features
													Element:tr
													Element:td
													Element:a
														RTM
													Element:td
													Element:ul
													Element:li
														Support events & messages containing user IDs beginning with
													Element:code
														W
													Element:li
														Support users from other teams in shared channels
													Element:li
														Support duplicate message deliveries in shared channels when installed on multiple teams
													Element:tr
													Element:td
													Element:a
														Events API
													Element:td
													Element:ul
													Element:li
														Support events & messages containing user IDs beginning with
													Element:code
														W
													Element:li
														Support users from other teams in shared channels
													Element:tr
													Element:td
													Element:a
														Web API
													Element:td
													Element:ul
													Element:li
														Support user ID fields containing user IDs beginning with
													Element:code
														W
													Element:li
														Support users from other teams in shared channels
													Element:li
														Use
													Element:a
														to retrieve additional information on cross-team user IDs not found in
													Element:code
														users.info
													Element:a
													Element:code
														users.list
													Element:tr
													Element:td
													Element:a
														Incoming webhooks
													Element:td
													Element:ul
													Element:li
														When using webhooks exclusively, no special Enterprise Grid considerations should be necessary.
													Element:tr
													Element:td
													Element:a
														Slash commands
													Element:td
													Element:ul
													Element:li
														Turn on
													Element:a
														entity resolution
														for mentioned users, allowing you to identify them by ID
													Element:li
														Support user ID fields containing user IDs beginning with
													Element:code
														W
													Element:li
														Slash commands are only invoked by users belonging to the team it is installed in
													Element:tr
													Element:td
													Element:a
														Message buttons
													Element:td
													Element:ul
													Element:li
														Handle action invocations by users from other teams
													Element:li
														Support user ID fields containing user IDs beginning with
													Element:code
														W
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
												Node:
												(type) c
												(layer)4
													Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Identifying Enterprise Grid teams
						Node:
						(type) c
						(layer)2
							Element:p
								Teams don't always start out part of an Enterprise. Thanks to mergers, acquisitions, and simple evolution a team may become part of an Enterprise Grid.
						Node:
						(type) c
						(layer)2
							Element:p
								And just as a user that's part of a team becomes part of its team's Enterprise Grid, that user who was once a duplicative singleton at team A and team B, with no way to reconcile shared identity, becomes a cross-referenced entity you can recognize consistently across teams.
						Node:
						(type) c
						(layer)2
							Element:p
								There are two ways to determine whether the team you're working with is part of an Enterprise.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Look for enterprise IDs
									Node:
									(type) c
									(layer)3
										Element:p
											The easiest way to determine whether your app is dealing with a team that's part of an enterprise organization is by observing
										Element:code
											enterprise_id
											attributes scattered through object types in Web API methods & events.
									Node:
									(type) c
									(layer)3
										Element:p
											Look for
										Element:code
											enterprise_id
											in
										Element:a
											, the most conspicuous and eternally useful location it surfaces in.
										Element:code
											auth.test
									Node:
									(type) c
									(layer)3
										Element:p
											We recommend using this method after
										Element:a
											acquiring an OAuth token
											. You'll want to poll it regularly for all teams and workspaces you service, as teams migrate
										Element:em
											to
											Enterprise Grid.
									Node:
									(type) c
									(layer)3
										Element:p
											An
										Element:code
											enterprise_id
											is constant and unique.
									Node:
									(type) c
									(layer)3
										Element:p
											Other places to find
										Element:code
											enterprise_id
											(often paired with
										Element:code
											enterprise_name
											):
									Node:
									(type) c
									(layer)3
										Element:ul
										Element:li
										Element:a
										Element:code
											team.info
										Element:li
										Element:a
										Element:code
											rtm.start
										Element:li
										Element:a
											- appears in shared channels
										Element:code
											channels.info
									Node:
									(type) c
									(layer)3
										Element:p
											If you store data, you'll want to warehouse
										Element:code
											enterprise_id
											. Just as you'd never store information about a user or their data without tying it to a team first, it's best to associate Enterprise Grid workspace data with its
										Element:code
											enterprise_id
											.
									Node:
									(type) c
									(layer)3
										Element:p
											Use
										Element:code
											enterprise_id
											prodigiously in your queries.
									Node:
									(type) c
									(layer)3
										Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Interpret other arcane signals
									Node:
									(type) c
									(layer)3
										Element:p
											If you're working with a custom integration instead of a Slack app, you may have a more difficult time understanding whether you're working with an Enterprise Grid team or not.
									Node:
									(type) c
									(layer)3
										Element:p
											Though you yourself should know whether the team you're part of and building an integration for is on Enterprise Grid, there are fewer programmatic signals to interpret and off-the-shelf code may not know how to handle certain situations like shared channels.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:a
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								How do I become Enterprise-ready?
						Node:
						(type) c
						(layer)2
							Element:p
								The first step is to recognize that you're working with an Enterprise Grid workspace. Then you just need to teach your app a few new tricks:
						Node:
						(type) c
						(layer)2
							Element:ol
							Element:li
							Element:a
								Look for
								in
							Element:code
								enterprise_id
							Element:a
								and
							Element:code
								auth.test
							Element:a
								. Consider it a strong signal you may encounter shared channels, novel IDs, and different API responses when working with this team, and it might be related to another team that has or will install your app. You'll want to store it along side other data about its teams.
							Element:code
								channels.info
							Element:li
								Prepare for your integration or bot to be used in shared channels: you'll encounter messages authored by users not belonging to the team your app is installed in. Use
							Element:a
								to look up information about user IDs belonging to a different team on the Enterprise Grid, ad hoc as needed.
							Element:code
								users.info
							Element:li
								Anticipate receiving & handling semi-duplicate messages when connected on behalf of multiple teams within the same Enterprise Grid. If your bot is installed on 3 teams in an Enterprise you're invited to a shared channel with members from all 3 teams, you'll receive a message three times, once for each team. Your bot should only respond to one of the message deliveries.
							Element:li
								If your app is part of the directory, you'll want to let us know that you've prepared for Enterprise Grid teams. We'll do some additional testing and give you feedback on anything that could be improved.
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Handling unknown users gracefully
									Node:
									(type) c
									(layer)3
										Element:p
											If your app or integration is used as part of a shared channel, it
										Element:strong
											will
											encounter users it is not aware of.
									Node:
									(type) c
									(layer)3
										Element:p
											Typically, apps build their "known universe" of users by consuming the
										Element:code
											users
											collection in
										Element:a
											or by using
										Element:code
											rtm.start
										Element:a
											. You won't find users from other teams in the payloads of these methods.
										Element:code
											users.list
									Node:
									(type) c
									(layer)3
										Element:p
											To find users from another team on an Enterprise Grid, use
										Element:a
											and query by their "foreign" user ID.
										Element:code
											users.info
									Node:
									(type) c
									(layer)3
										Element:p
											Of course, many apps need only a user's ID and don't need additional information to operate.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Messages, interactions, & slash command invocations involving unknown users
												Node:
												(type) c
												(layer)4
													Element:p
														Not only will you encounter user IDs belonging to other teams, but also the artifacts of their existence and team cross-pollination:
												Node:
												(type) c
												(layer)4
													Element:ul
													Element:li
														Messages will be authored by these users, and if they fall within your bot or app's functionality, you should respond as you normally would. Messages may also mention users on other teams.
													Element:li
														If your messages contain interactive elements, you may receive invoked actions from these users, and should handle them just as you would a "native" team user
													Element:li
														If you provide a slash command, you'll want to handle mentions of members from other team's. We strongly recommend turning on
													Element:a
														entity resolution
														so you can resolve mentioned users.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Careful with those messages, bot
												Node:
												(type) c
												(layer)4
													Element:p
														If your application is installed by multiple teams of an Enterprise Grid and
													Element:em
														then
														used in a shared channel, it's possible that your bot will receive multiple
													Element:a
														RTM events
														for the same message: one for each of the teams you're installed on.
												Node:
												(type) c
												(layer)4
													Element:p
														If your bot doesn't de-duplicate the messages by looking at the
													Element:code
														ts
														value of each message, you might interpret each one independently and reply to them, adding noise a conversation.
												Node:
												(type) c
												(layer)4
													Element:p
														Look for the
													Element:code
														source_team
														message field to identify the Enterprise team the message originates from.
												Node:
												(type) c
												(layer)4
															Node:
															(type) c
															(layer)5
																Element:h5
																	RTM considerations
															Node:
															(type) c
															(layer)5
																Element:p
																	To help you understand the different scenarios in which you'll receive multiple messages, let's imagine the following situation:
															Node:
															(type) c
															(layer)5
																Element:ul
																Element:li
																	We have 3 teams in an organization
																Element:li
																	Of the 3 teams, your app is installed on Team 1 and Team 2
																Element:li
																	Your app is not installed on Team 3
																Element:li
																	Your bot has been invited to join a shared channel that exists between users from all 3 teams.
																Element:li
																	Your app has opened websocket connections for both Team 1 and Team 2
															Node:
															(type) c
															(layer)5
																Element:table
																Element:tr
																Element:th
																	Condition
																Element:th
																	Result
																Element:tr
																Element:td
																	User from Team 1 sends message
																Element:td
																Element:ul
																Element:li
																	RTM websocket for Team 1 will receive the message as normal
																Element:li
																	RTM websocket for Team 2 will receive the same message with some additional metadata about Team's 1's user.
																Element:tr
																Element:td
																	User from Team 2 sends message
																Element:td
																Element:ul
																Element:li
																	RTM websocket for Team 2 will receive the message as normal
																Element:li
																	RTM websocket for Team 1 will receive the same message with some additional metadata about Team 2's user.
																Element:tr
																Element:td
																	User from Team 3 sends message
																Element:td
																Element:ul
																Element:li
																	RTM websocket for Team 1 will receive the message with some additional metadata.
																Element:li
																	RTM websocket for Team 2 will also receive the same message with the same additional metadata.
															Node:
															(type) c
															(layer)5
																Element:p
																	One way to handle duplicate messages is to make one of the teams in the shared channel (that your app is installed on) responsible for handling
																Element:em
																	all
																	messages coming from that shared channel.
															Node:
															(type) c
															(layer)5
																Element:p
																	To do this, you'll need to listen to the
																Element:a
																	message when your bot is added to a shared channel. The metadata included in this event will tell you which teams are part of the shared channel.
																Element:code
																	channel.join
															Node:
															(type) c
															(layer)5
																Element:p
																	Of the teams in the channel that your app is installed on, you'll want to pick one and save both the channel ID and team ID in your database. From that point on, you can look up the channel ID for every message you need to respond to and determine which team's RTM should respond. Alternatively, you can ignore all messages coming from a team that is not the same as the team your app is installed on. While simpler to implement, it will prevent users on teams that haven't installed your app from being able to interact with your bot.
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Working with direct messages
												Node:
												(type) c
												(layer)4
													Element:p
														Direct messages work much like channels: private conversations between two or more individuals spanning multiple teams within an Enterprise Grid result in RTM API streaming one message for each of your open websocket connections.
												Node:
												(type) c
												(layer)4
													Element:p
														Your app can be the target of a direct message from another team across the grid. You never know when a user might want to collaborate with your bot.
												Node:
												(type) c
												(layer)4
													Element:p
														These messages will also contain a
													Element:code
														source_team
														attribute when perspectively appropriate. The
													Element:code
														source_team
														attribute contains the team within the Enterprise Grid that the message originates from.
												Node:
												(type) c
												(layer)4
													Element:p
														As with channels, when connected to multiple websocket connections on behalf of teams in the Enterprise Grid, you can receive redundant message deliveries. They will have the same
													Element:code
														ts
														value.
												Node:
												(type) c
												(layer)4
													Element:p
													Element:a
									Node:
									(type) c
									(layer)3
												Node:
												(type) c
												(layer)4
													Element:h4
														Sweet relief delivered by the Events API
												Node:
												(type) c
												(layer)4
													Element:p
														Congratulations! If you're using the
													Element:a
														Events API
														, you do not have to worry about duplicate messages from
													Element:a
														shared channels
														. We'll only send one event regardless of how many teams within the organization your app is installed on.
												Node:
												(type) c
												(layer)4
													Element:p
														Look for the
													Element:code
														authed_teams
														node that arrives as part of the "wrapper" around delivered events. It contains a collection of team IDs within an organization that this delivery is on behalf of.
												Node:
												(type) c
												(layer)4
													Element:p
														Here's an example payload of a shared channel's message being delivered on behalf of multiple teams:
												Node:
												(type) c
												(layer)4
													Element:pre
													Element:code
														{ "token": "ecto1EZslimer", "team_id": "T3MQV36V7", "api_app_id": "A3MERH269", "event": { "type": "message", "user": "W3M73E5LM", "text": "Now _we_ are the real ghostbusters!", "team": "T3MQV36V7", "source_team": "T3MQV36V7", "user_team": "T3MQV36V7", "user_profile": { "avatar_hash": "g56821b98743", "image_72": "https://...png", "first_name": "Patty", "real_name": "Patty Tolan", "name": "patty.tolan" }, "ts": "1485371714.000002", "channel": "C3W4KDKCL", "event_ts": "1485371714.000002" }, "type": "event_callback", "authed_users": [ "W3MBP5799" ], "authed_teams": [ "T3NHPD4J0", "T3MQV36V7" ] }
												Node:
												(type) c
												(layer)4
													Element:p
														In this example, the application is installed on two teams in an Enterprise and is party to a conversation in a shared channel.
												Node:
												(type) c
												(layer)4
													Element:p
														The message originates from team
													Element:code
														T3MQV36V7
														and is delivered as a single event for both teams, including
													Element:code
														T3NHPD4J0
														.
												Node:
												(type) c
												(layer)4
													Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Shared channels
						Node:
						(type) c
						(layer)2
							Element:p
								Teams on an Enterprise Grid may contain channels shared between multiple teams in an organization. This means that it may contain members from teams your app is not installed on and that you don't have direct access to data around.
						Node:
						(type) c
						(layer)2
							Element:p
								Determine whether you're working with a shared channel by looking for the
							Element:code
								is_org_shared
								attribute and whether it is set to
							Element:code
								true
								. You'll find this field on channel objects returned by
							Element:a
								and
							Element:code
								channels.list
							Element:a
								.
							Element:code
								channels.info
						Node:
						(type) c
						(layer)2
							Element:p
								If you're only installed on one of the teams involved, all channel members belonging to the other team are "foreign" to your app.
						Node:
						(type) c
						(layer)2
							Element:p
								Use
							Element:a
								to look up user information about a remote team's shared user.
							Element:code
								users.info
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Crossing the streams
						Node:
						(type) c
						(layer)2
							Element:p
								If your app is installed on multiple teams within an enterprise organization, you may want to utilize that position effectively by grouping data by
							Element:code
								enterprise_id
								and using the new enterprise user IDs as your primary source of truth.
						Node:
						(type) c
						(layer)2
							Element:p
								This way you'll easily cross work streams between more than one team without exploding at the speed of light.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								A translation layer for the Enterprise Grid
						Node:
						(type) c
						(layer)2
							Element:p
								Giving users a new ID is a big change and we want to make sure the transition is as easy as possible for you. When the translation layer is turned on for your app, we'll use the old user ID whenever we send you events through the
							Element:a
								RTM
								and
							Element:a
								Events API
								. We'll also include a mapping between the old ID and the new one in the payload so that you can migrate over to the new IDs incrementally.
						Node:
						(type) c
						(layer)2
							Element:p
								Here's an example
							Element:a
								message event
								. Two uses are involved in the message: the user posting the message (with
							Element:em
								classic
								U-based ID
							Element:code
								U1ABCD23E
								) and the user being mentioned (classic
							Element:em
								U2EBP618A
								)
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								{ "type": "message", "channel": "C1ABCD23E", "user": "U1ABCD23E", "text": "Would you like some coffee, <@U2EBP618A|mrtulley>?", "ts": "1474663933.001266", "team": "T1ABCD23E", "user_id_mapping_old_to_new": { "U2EBP618A": "W1ABCD23E", "U1ABCD23E": "W2ES6VB5Y" }, "event": "direct_mention", "match": [ "coffee" ] }
						Node:
						(type) c
						(layer)2
							Element:p
								Ideally we'd like you to start using the new user IDs as soon as possible. For this reason, we'd suggest doing a one-time data migration by getting the new ID for every user currently existing in your database and merge any duplicate users you discover.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								User object changes
						Node:
						(type) c
						(layer)2
							Element:p
								You'll find user objects on Enterprise Grid teams now have an
							Element:code
								enterprise_user
								attribute, containing a hash of additional context about the user in the larger Enterprise Grid organization.
						Node:
						(type) c
						(layer)2
							Element:p
								You'll find:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:code
								id
								- this user's ID, which might start with
							Element:code
								U
								or
							Element:code
								W
							Element:li
							Element:code
								enterprise_id
								- the unique ID for this particular Enterprise Grid organization
							Element:li
							Element:code
								enterprise_name
								- the name of this umbrella organization
							Element:li
							Element:code
								is_admin
								- a boolean value indicating whether this user administers this Enterprise
							Element:li
							Element:code
								is_owner
								- a boolean value indicating whether this user is the owner of this Enterprise
							Element:li
							Element:code
								teams
								- an array of team IDs within the containing enterprise organization that this user belongs to
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											User IDs
									Node:
									(type) c
									(layer)3
										Element:p
											Within an Enterprise Grid, all users have an underlying cross-team ID beginning with the letter
										Element:code
											W
											. If a team existed before the team became part of an Enterprise Grid, users created before that transition also have a more local team-specific ID beginning with
										Element:code
											U
											.
									Node:
									(type) c
									(layer)3
										Element:p
											We'll automatically convert references to a user's Enterprise ID to their legacy team-specific ID. This allows your app to remain backwards compatible for users you've identified on a team before the days of Enterprise Grid.
									Node:
									(type) c
									(layer)3
										Element:p
											You'll still encounter users with IDs beginning with
										Element:code
											W
											: these users were created
										Element:em
											after
											a team became part of an Enterprise and have no legacy ID.
									Node:
									(type) c
									(layer)3
										Element:p
										Element:a
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Building internal integrations
						Node:
						(type) c
						(layer)2
							Element:p
								It's easy and secure to build
							Element:a
								Slack apps
								for your teams only. As with all Slack apps, installation and ownership of apps is on a workspace/team-basis. Internal integrations that are locked to a single team cannot be installed across an Enterprise Grid.
						Node:
						(type) c
						(layer)2
							Element:p
								Find out more in our
							Element:a
								internal integrations
								documentation.
						Node:
						(type) c
						(layer)2
							Element:p
							Element:a
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Developing
							Element:em
								for
								, but not necessarily
							Element:em
								against
								, Enterprise
						Node:
						(type) c
						(layer)2
							Element:p
								The easiest way to test your app or integration against an Enterprise Grid environment is for an Enterprise Grid team to install it.
						Node:
						(type) c
						(layer)2
							Element:p
								Of course, not every app will be installed on an Enterprise, though we hope most strive to be.
						Node:
						(type) c
						(layer)2
							Element:p
								Implement the additional logic outlined in this document to prepare your app for Enterprise Grid customers. When you've finished, indicate your readiness as part of the the
							Element:a
								Slack App Directory
								review process.
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Do you need a test instance?
									Node:
									(type) c
									(layer)3
										Element:p
											After combing through your code and database structures, you've made some tweaks here and there, and you want to test if everything actually works against Enterprise Grid. Fair enough, that's reasonable.
									Node:
									(type) c
									(layer)3
										Element:p
											We hope following the recommendations of
										Element:a
											this documentation
											makes you confident your app will work in Enterprise environments.
									Node:
									(type) c
									(layer)3
										Element:p
											We have a
										Element:em
											limited
											number of test instances available for complex apps and bots targeting Enterprise Grid teams that are concerned about the impact on a large number of users. If that sounds like you, please fill out this
										Element:a
											form
											to signal your interest to us.
									Node:
									(type) c
									(layer)3
										Element:p
											It shouldn't be necessary to use a test instance if your app makes minimal use of user data or utilizes only simple incoming webhooks.
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Glossary
						Node:
						(type) c
						(layer)2
							Element:p
								Though for the most part Enterprise Grid Slack teams are business as usual, there are enough new concepts introduced to warrant brief review:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:em
								Enterprise organization
								- An entity introduced with Enterprise Grid to house multiple Slack team workspaces. When a customer is using Enterprise Grid, all users and their direct messages are stored at the organization level.
							Element:li
							Element:em
								Enterprise organization user
								- A Enterprise Grid user. They have the same identity and profile across all team workspaces within an organization.
							Element:li
							Element:em
								Enterprise user ID
								- A user ID beginning with
							Element:code
								W
								that represents a user across one or more teams within an Enterprise.
							Element:li
							Element:em
								Legacy user ID
								- Also known as a "team user ID", these are the User IDs you've come to know and love in Slack and are unique only to a team. They begin with
							Element:code
								U
								.
							Element:li
							Element:em
								Shared channel
								- A channel shared between two or more teams within an organization.
							Element:li
							Element:em
								Translation layer
								- A translating service that transparently converts new organization-based user IDs to legacy team user IDs, allowing apps to migrate data.
							Element:li
							Element:em
								Workspace
								- Where a Slack team works, especially in context to other teams within an Enterprise Grid. Each team has a workspace. For many of you, the team
							Element:em
								is
								the workspace.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Related reading:
						Node:
						(type) c
						(layer)2
							Element:ul
							Element:li
							Element:a
								Announcement about user IDs
								- Back in August 2016, we announced that user IDs may sometimes begin with the letter
							Element:code
								W
								and that it vaguely had something to do with our upcoming enterprise product.
							Element:code
								W
								is here to stay.
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:ul
							Element:li
								Using Slack
							Element:li
							Element:a
								Product
							Element:li
							Element:a
								Pricing
							Element:li
							Element:a
								Support
							Element:li
							Element:a
								Slack Guides
							Element:li
							Element:a
								Video Guides
							Element:li
							Element:a
								App Directory
							Element:li
							Element:a
								API
							Element:ul
							Element:li
								Slack
							Element:li
							Element:a
								Jobs
							Element:li
							Element:a
								Customers
							Element:li
							Element:a
								Developers
							Element:li
							Element:a
								Events
							Element:li
							Element:a
								Blog
							Element:li
							Element:a
								Podcast
							Element:li
							Element:a
								Slack Shop
							Element:ul
							Element:li
								Legal
							Element:li
							Element:a
								Privacy
							Element:li
							Element:a
								Security
							Element:li
							Element:a
								Terms of Service
							Element:li
							Element:a
								Policies
							Element:ul
							Element:li
								Handy Links
							Element:li
							Element:a
								Download desktop app
							Element:li
							Element:a
								Download mobile app
							Element:li
							Element:a
								Brand Guidelines
							Element:li
							Element:a
								Slack at Work
							Element:li
							Element:a
								Status
							Element:a
							Element:ul
							Element:li
							Element:a
								Contact Us
							Element:li
							Element:a
							Element:li
							Element:a
