Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					chat.update
			Node:
			(type) c
			(layer)1
				Element:a
					Documentation
			Node:
			(type) c
			(layer)1
				Element:a
					Tester
			Node:
			(type) c
			(layer)1
				Element:p
					This method updates a message in a channel. Though related to
				Element:a
					, some parameters of
				Element:code
					chat.postMessage
				Element:code
					chat.update
					are handled differently.
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Arguments
						Node:
						(type) c
						(layer)2
							Element:p
								This method has the URL
							Element:code
								https://slack.com/api/chat.update
								and follows the
							Element:a
								Slack Web API calling conventions
								.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Argument
							Element:th
								Example
							Element:th
								Required
							Element:th
								Description
							Element:tr
							Element:td
							Element:code
								token
							Element:td
							Element:code
								xxxx-xxxxxxxxx-xxxx
							Element:td
								Required
							Element:td
							Element:p
								Authentication token.
							Element:br
								Requires scope:
							Element:code
								chat:write:bot
								or
							Element:code
								chat:write:user
							Element:tr
							Element:td
							Element:code
								ts
							Element:td
							Element:code
								1405894322.002768
							Element:td
								Required
							Element:td
							Element:p
								Timestamp of the message to be updated.
							Element:tr
							Element:td
							Element:code
								channel
							Element:td
							Element:code
								C1234567890
							Element:td
								Required
							Element:td
							Element:p
								Channel containing the message to be updated.
							Element:tr
							Element:td
							Element:code
								text
							Element:td
							Element:code
								Hello world
							Element:td
								Required
							Element:td
							Element:p
								New text for the message, using the
							Element:a
								default formatting rules
								.
							Element:tr
							Element:td
							Element:code
								attachments
							Element:td
							Element:code
								[{"pretext": "pre-hello", "text": "text-world"}]
							Element:td
								Optional
							Element:td
							Element:p
								Structured message attachments.
							Element:tr
							Element:td
							Element:code
								parse
							Element:td
							Element:code
								none
							Element:td
								Optional
							Element:td
							Element:p
								Change how messages are treated. Defaults to
							Element:code
								client
								, unlike
							Element:code
								chat.postMessage
								. See
							Element:a
								below
								.
							Element:tr
							Element:td
							Element:code
								link_names
							Element:td
							Element:code
								true
							Element:td
								Optional
							Element:td
							Element:p
								Find and link channel names and usernames. Defaults to
							Element:code
								none
								. This parameter should be used in conjunction with
							Element:code
								parse
								. To set
							Element:code
								link_names
								to
							Element:code
								1
								, specify a
							Element:code
								parse
								mode of
							Element:code
								full
								.
							Element:tr
							Element:td
							Element:code
								as_user
							Element:td
							Element:code
								true
							Element:td
								Optional
							Element:td
							Element:p
								Pass true to update the message as the authed user.
							Element:a
								Bot users
								in this context are considered authed users.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Formatting
						Node:
						(type) c
						(layer)2
							Element:p
								The default value for parse will attempt to discover links in text but does not support URL markup. To update messages with URL markup, you must specify
							Element:code
								parse=none
								. For more information, refer to the
							Element:a
								formatting spec
								.
						Node:
						(type) c
						(layer)2
							Element:p
								To use
							Element:code
								link_names
								, you'll need to explicitly set the
							Element:code
								parse
								parameter to
							Element:code
								full
								.
						Node:
						(type) c
						(layer)2
							Element:p
								The optional
							Element:code
								attachments
								argument should contain a JSON-encoded array of attachments. If you do not include an attachments property, a message's previous attachments will remain visible. To remove a previous attachment, include an empty
							Element:code
								attachments
								array with your request. For more information, see the
							Element:a
								attachments spec
								.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Valid message types
						Node:
						(type) c
						(layer)2
							Element:p
								Only messages posted by the authenticated user are able to be updated using this method. This includes regular chat messages, as well as messages containing the
							Element:code
								me_message
								subtype.
							Element:a
								Bot users
								may also update the messages they post.
						Node:
						(type) c
						(layer)2
							Element:p
								Attempting to update other message types will return a
							Element:code
								cant_update_message
								error.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Response
						Node:
						(type) c
						(layer)2
							Element:p
							Element:code
								{ "ok": true, "channel": "C024BE91L", "ts": "1401383885.000061", "text": "Updated Text" }
						Node:
						(type) c
						(layer)2
							Element:p
								The response includes the
							Element:code
								text
								,
							Element:code
								channel
								and
							Element:code
								timestamp
								properties of the updated message so clients can keep their local copies of the message in sync.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Bot users
						Node:
						(type) c
						(layer)2
							Element:p
								To use
							Element:code
								chat.update
								with a
							Element:a
								bot user
								token, you'll need to
							Element:em
								think of your bot user as a user
								, and pass
							Element:code
								as_user
								set to
							Element:code
								true
								while editing a message created by that same bot user.
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Interactive messages with buttons
									Node:
									(type) c
									(layer)3
										Element:p
											If you're posting
										Element:a
											message with buttons
											, you may use
										Element:code
											chat.update
											to continue updating ongoing state changes around a message. Provide the
										Element:code
											ts
											field the message you're updating and follow the bot user instructions above to update message text, remove or add attachments and actions.
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Errors
						Node:
						(type) c
						(layer)2
							Element:p
								This table lists the expected errors that this method could return. However, other errors can be returned in the case where the service is down or other unexpected factors affect processing. Callers should
							Element:i
								always
								check the value of the
							Element:code
								ok
								params in the response.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Error
							Element:th
								Description
							Element:tr
							Element:td
							Element:code
								message_not_found
							Element:td
							Element:p
								No message exists with the requested timestamp.
							Element:tr
							Element:td
							Element:code
								cant_update_message
							Element:td
							Element:p
								Authenticated user does not have permission to update this message.
							Element:tr
							Element:td
							Element:code
								channel_not_found
							Element:td
							Element:p
								Value passed for
							Element:code
								channel
								was invalid.
							Element:tr
							Element:td
							Element:code
								edit_window_closed
							Element:td
							Element:p
								The message cannot be edited due to the team message edit settings
							Element:tr
							Element:td
							Element:code
								msg_too_long
							Element:td
							Element:p
								Message text is too long
							Element:tr
							Element:td
							Element:code
								too_many_attachments
							Element:td
							Element:p
								Too many attachments were provided with this message. A maximum of 100 attachments are allowed on a message.
							Element:tr
							Element:td
							Element:code
								no_text
							Element:td
							Element:p
								No message text provided
							Element:tr
							Element:td
							Element:code
								not_authed
							Element:td
							Element:p
								No authentication token provided.
							Element:tr
							Element:td
							Element:code
								invalid_auth
							Element:td
							Element:p
								Invalid authentication token.
							Element:tr
							Element:td
							Element:code
								account_inactive
							Element:td
							Element:p
								Authentication token is for a deleted user or team.
							Element:tr
							Element:td
							Element:code
								invalid_arg_name
							Element:td
							Element:p
								The method was passed an argument whose name falls outside the bounds of common decency. This includes very long names and names with non-alphanumeric characters other than
							Element:code
								_
								. If you get this error, it is typically an indication that you have made a
							Element:em
								very
								malformed API call.
							Element:tr
							Element:td
							Element:code
								invalid_array_arg
							Element:td
							Element:p
								The method was passed a PHP-style array argument (e.g. with a name like
							Element:code
								foo[7]
								). These are never valid with the Slack API.
							Element:tr
							Element:td
							Element:code
								invalid_charset
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request, but the
							Element:code
								charset
								specified in the
							Element:code
								Content-Type
								header was invalid. Valid charset names are:
							Element:code
								utf-8
							Element:code
								iso-8859-1
								.
							Element:tr
							Element:td
							Element:code
								invalid_form_data
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request with
							Element:code
								Content-Type
							Element:code
								application/x-www-form-urlencoded
								or
							Element:code
								multipart/form-data
								, but the form data was either missing or syntactically invalid.
							Element:tr
							Element:td
							Element:code
								invalid_post_type
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request, but the specified
							Element:code
								Content-Type
								was invalid. Valid types are:
							Element:code
								application/x-www-form-urlencoded
							Element:code
								multipart/form-data
							Element:code
								text/plain
								.
							Element:tr
							Element:td
							Element:code
								missing_post_type
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request and included a data payload, but the request did not include a
							Element:code
								Content-Type
								header.
							Element:tr
							Element:td
							Element:code
								request_timeout
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request, but the
							Element:code
								POST
								data was either missing or truncated.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Warnings
						Node:
						(type) c
						(layer)2
							Element:p
								This table lists the expected warnings that this method will return. However, other warnings can be returned in the case where the service is experiencing unexpected trouble.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Warning
							Element:th
								Description
							Element:tr
							Element:td
							Element:code
								missing_charset
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request, and recommended practice for the specified
							Element:code
								Content-Type
								is to include a
							Element:code
								charset
								parameter. However, no
							Element:code
								charset
								was present. Specifically, non-form-data content types (e.g.
							Element:code
								text/plain
								) are the ones for which
							Element:code
								charset
								is recommended.
							Element:tr
							Element:td
							Element:code
								superfluous_charset
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request, and the specified
							Element:code
								Content-Type
								is not defined to understand the
							Element:code
								charset
								parameter. However,
							Element:code
								charset
								was in fact present. Specifically, form-data content types (e.g.
							Element:code
								multipart/form-data
								) are the ones for which
							Element:code
								charset
								is superfluous.
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:ul
							Element:li
								Using Slack
							Element:li
							Element:a
								Product
							Element:li
							Element:a
								Pricing
							Element:li
							Element:a
								Support
							Element:li
							Element:a
								Slack Guides
							Element:li
							Element:a
								Video Guides
							Element:li
							Element:a
								App Directory
							Element:li
							Element:a
								API
							Element:ul
							Element:li
								Slack
							Element:li
							Element:a
								Jobs
							Element:li
							Element:a
								Customers
							Element:li
							Element:a
								Developers
							Element:li
							Element:a
								Events
							Element:li
							Element:a
								Blog
							Element:li
							Element:a
								Podcast
							Element:li
							Element:a
								Slack Shop
							Element:ul
							Element:li
								Legal
							Element:li
							Element:a
								Privacy
							Element:li
							Element:a
								Security
							Element:li
							Element:a
								Terms of Service
							Element:li
							Element:a
								Policies
							Element:ul
							Element:li
								Handy Links
							Element:li
							Element:a
								Download desktop app
							Element:li
							Element:a
								Download mobile app
							Element:li
							Element:a
								Brand Guidelines
							Element:li
							Element:a
								Slack at Work
							Element:li
							Element:a
								Status
							Element:a
							Element:ul
							Element:li
							Element:a
								Contact Us
							Element:li
							Element:a
							Element:li
							Element:a
