Node:
(type) c
(layer)0
	Element:body
			Node:
			(type) h1
			(layer)1
				Element:h1
					users.identity
			Node:
			(type) c
			(layer)1
				Element:a
					Documentation
			Node:
			(type) c
			(layer)1
				Element:a
					Tester
			Node:
			(type) c
			(layer)1
				Element:p
					After your
				Element:a
					Slack app
					is awarded an identity token through
				Element:a
					Sign in with Slack
					, use this method to retrieve a user's identity.
			Node:
			(type) c
			(layer)1
				Element:p
					The returned fields depend on any additional
				Element:a
					authorization scopes
					you've requested.
			Node:
			(type) c
			(layer)1
				Element:p
					This method may only be used by tokens with the
				Element:code
					identity.basic
					scope, as provided in the
				Element:a
					Sign in with Slack
					process.
			Node:
			(type) c
			(layer)1
				Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Arguments
						Node:
						(type) c
						(layer)2
							Element:p
								This method has the URL
							Element:code
								https://slack.com/api/users.identity
								and follows the
							Element:a
								Slack Web API calling conventions
								.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Argument
							Element:th
								Example
							Element:th
								Required
							Element:th
								Description
							Element:tr
							Element:td
							Element:code
								token
							Element:td
							Element:code
								xxxx-xxxxxxxxx-xxxx
							Element:td
								Required
							Element:td
							Element:p
								Authentication token.
							Element:br
								Requires scope:
							Element:code
								identity.basic
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Response
						Node:
						(type) c
						(layer)2
							Element:p
								You will receive at a minimum the following information:
						Node:
						(type) c
						(layer)2
							Element:pre
							Element:code
								{ "ok": true, "user": { "name": "Sonny Whether", "id": "U0G9QF9C6" }, "team": { "id": "T0G9PQBBK" } }
						Node:
						(type) c
						(layer)2
							Element:p
								Notice that user IDs are not guaranteed to be globally unique across all Slack users. The combination of user ID and team ID, on the other hand, is guaranteed to be globally unique.
						Node:
						(type) c
						(layer)2
							Element:p
								See the
							Element:a
								Sign in with Slack
								docs for even more information on these responses.
						Node:
						(type) c
						(layer)2
							Element:a
						Node:
						(type) c
						(layer)2
									Node:
									(type) c
									(layer)3
										Element:h3
											Authorization scopes
									Node:
									(type) c
									(layer)3
										Element:p
											In addition, you can request access to additional profile fields by adding the following
										Element:a
											authorization scopes
											to your OAuth request:
									Node:
									(type) c
									(layer)3
										Element:p
										Element:code
											identity.email
											provides the team member's email address, if available:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											{ "ok": true, "user": { "name": "Sonny Whether", "id": "U0G9QF9C6", "email": "bobby@example.com" }, "team": { "id": "T0G9PQBBK" } }
									Node:
									(type) c
									(layer)3
										Element:p
										Element:code
											identity.avatar
											yield the team member's avatar images.
										Element:em
											Available sizes may vary in the future.
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											{ "ok": true, "user": { "name": "Sonny Whether", "id": "U0G9QF9C6", "image_24": "https://cdn.example.com/sonny_24.jpg", "image_32": "https://cdn.example.com/sonny_32.jpg", "image_48": "https://cdn.example.com/sonny_48.jpg", "image_72": "https://cdn.example.com/sonny_72.jpg", "image_192": "https://cdn.example.com/sonny_192.jpg" }, "team": { "id": "T0G9PQBBK" } }
									Node:
									(type) c
									(layer)3
										Element:p
											Use
										Element:code
											identity.team
											to retrieve the user's team name:
									Node:
									(type) c
									(layer)3
										Element:pre
										Element:code
											{ "ok": true, "user": { "name": "Sonny Whether", "id": "U0G9QF9C6" }, "team": { "name": "Captain Fabian's Naval Supply", "id": "T0G9PQBBK" } }
									Node:
									(type) c
									(layer)3
										Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Errors
						Node:
						(type) c
						(layer)2
							Element:p
								This table lists the expected errors that this method could return. However, other errors can be returned in the case where the service is down or other unexpected factors affect processing. Callers should
							Element:i
								always
								check the value of the
							Element:code
								ok
								params in the response.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Error
							Element:th
								Description
							Element:tr
							Element:td
							Element:code
								not_authed
							Element:td
							Element:p
								No authentication token provided.
							Element:tr
							Element:td
							Element:code
								invalid_auth
							Element:td
							Element:p
								Invalid authentication token.
							Element:tr
							Element:td
							Element:code
								account_inactive
							Element:td
							Element:p
								Authentication token is for a deleted user or team.
							Element:tr
							Element:td
							Element:code
								user_is_bot
							Element:td
							Element:p
								This method cannot be called by a bot user.
							Element:tr
							Element:td
							Element:code
								invalid_arg_name
							Element:td
							Element:p
								The method was passed an argument whose name falls outside the bounds of common decency. This includes very long names and names with non-alphanumeric characters other than
							Element:code
								_
								. If you get this error, it is typically an indication that you have made a
							Element:em
								very
								malformed API call.
							Element:tr
							Element:td
							Element:code
								invalid_array_arg
							Element:td
							Element:p
								The method was passed a PHP-style array argument (e.g. with a name like
							Element:code
								foo[7]
								). These are never valid with the Slack API.
							Element:tr
							Element:td
							Element:code
								invalid_charset
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request, but the
							Element:code
								charset
								specified in the
							Element:code
								Content-Type
								header was invalid. Valid charset names are:
							Element:code
								utf-8
							Element:code
								iso-8859-1
								.
							Element:tr
							Element:td
							Element:code
								invalid_form_data
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request with
							Element:code
								Content-Type
							Element:code
								application/x-www-form-urlencoded
								or
							Element:code
								multipart/form-data
								, but the form data was either missing or syntactically invalid.
							Element:tr
							Element:td
							Element:code
								invalid_post_type
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request, but the specified
							Element:code
								Content-Type
								was invalid. Valid types are:
							Element:code
								application/x-www-form-urlencoded
							Element:code
								multipart/form-data
							Element:code
								text/plain
								.
							Element:tr
							Element:td
							Element:code
								missing_post_type
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request and included a data payload, but the request did not include a
							Element:code
								Content-Type
								header.
							Element:tr
							Element:td
							Element:code
								request_timeout
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request, but the
							Element:code
								POST
								data was either missing or truncated.
						Node:
						(type) c
						(layer)2
							Element:a
			Node:
			(type) c
			(layer)1
						Node:
						(type) c
						(layer)2
							Element:h2
								Warnings
						Node:
						(type) c
						(layer)2
							Element:p
								This table lists the expected warnings that this method will return. However, other warnings can be returned in the case where the service is experiencing unexpected trouble.
						Node:
						(type) c
						(layer)2
							Element:table
							Element:tr
							Element:th
								Warning
							Element:th
								Description
							Element:tr
							Element:td
							Element:code
								missing_charset
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request, and recommended practice for the specified
							Element:code
								Content-Type
								is to include a
							Element:code
								charset
								parameter. However, no
							Element:code
								charset
								was present. Specifically, non-form-data content types (e.g.
							Element:code
								text/plain
								) are the ones for which
							Element:code
								charset
								is recommended.
							Element:tr
							Element:td
							Element:code
								superfluous_charset
							Element:td
							Element:p
								The method was called via a
							Element:code
								POST
								request, and the specified
							Element:code
								Content-Type
								is not defined to understand the
							Element:code
								charset
								parameter. However,
							Element:code
								charset
								was in fact present. Specifically, form-data content types (e.g.
							Element:code
								multipart/form-data
								) are the ones for which
							Element:code
								charset
								is superfluous.
						Node:
						(type) c
						(layer)2
							Element:footer
							Element:ul
							Element:li
								Using Slack
							Element:li
							Element:a
								Product
							Element:li
							Element:a
								Pricing
							Element:li
							Element:a
								Support
							Element:li
							Element:a
								Slack Guides
							Element:li
							Element:a
								Video Guides
							Element:li
							Element:a
								App Directory
							Element:li
							Element:a
								API
							Element:ul
							Element:li
								Slack
							Element:li
							Element:a
								Jobs
							Element:li
							Element:a
								Customers
							Element:li
							Element:a
								Developers
							Element:li
							Element:a
								Events
							Element:li
							Element:a
								Blog
							Element:li
							Element:a
								Podcast
							Element:li
							Element:a
								Slack Shop
							Element:ul
							Element:li
								Legal
							Element:li
							Element:a
								Privacy
							Element:li
							Element:a
								Security
							Element:li
							Element:a
								Terms of Service
							Element:li
							Element:a
								Policies
							Element:ul
							Element:li
								Handy Links
							Element:li
							Element:a
								Download desktop app
							Element:li
							Element:a
								Download mobile app
							Element:li
							Element:a
								Brand Guidelines
							Element:li
							Element:a
								Slack at Work
							Element:li
							Element:a
								Status
							Element:a
							Element:ul
							Element:li
							Element:a
								Contact Us
							Element:li
							Element:a
							Element:li
							Element:a
